
/*
 * Copyright 2004-2018 Cray Inc.
 * Other additional copyright holders may be indicated within.
 * 
 * The entirety of this work is licensed under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * 
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    /*

Chapel idiomatic wrappers for the LAPACK library.

.. note::

  Because of the volume of procedures provided, and because their behavior is virtually unchanged, in-depth documentation on each procedure's purpose and use is not given here.
  
  Consult the `Netlibs LAPACK <http://www.netlib.org/lapack/>`_ site, and the `Netlibs <http://www.netlib.org/lapack/explore-html/globals_func.html>`_ and `Intel <https://software.intel.com/en-us/node/520866>`_ LAPACK documents for that information.
  
  Additionally, only a small set of LAPACK procedures have been tested for correctness.

Differences from LAPACK
-----------------------

The `XYYZZZ <http://www.netlib.org/lapack/individualroutines.html>`_ naming convention for procedures has been only slightly modified with the removal of the type identifier in the procedure name,
creating a set of polymorphic procedures under the name YYZZZ.

Procedure arguments have been simplified. 
Using the original Fortran documentation, groupings of arguments pertaining to matrices and arrays were found, and encapsulated by Chapel arrays.

For example, instead of 

.. code-block:: chapel

  LAPACKE_sgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

the arguments n, nrhs, lda, and ldb can be encapsulated by properties of Chapel arrays and their domains, giving the LAPACK procedure:

.. code-block:: chapel

  gesv(matrix_order : lapack_memory_order, a : [] real(32), ipiv : [] c_int, b : [] real(32) ): c_int;

This requires that your matrices are stored in a two dimensional form.

Type Adjustments
----------------

The LAPACKE types ``lapack_int``, ``lapack_float``, ``lapack_double``, ``lapack_complex_float``, ``lapack_complex_double``, and ``lapack_logical`` are not defined at all, but rather are replaced by the types ``c_int``, ``real(32)``, ``real(64)``, ``complex(64)``, ``complex(128)``, and ``c_int`` respectively.



The :enum:`lapack_memory_order` enumeration is a replacement for the ``c_int`` constants :data:`LAPACK_ROW_MAJOR` and :data:`LAPACK_COL_MAJOR` defined by LAPACK and used by ``matrix_order`` which is an argument present in essentially all procedures.
The value of each enumeration is equivalent (both in type and value) of the LAPACK constants.
However the constants are also provided and can be used as well.

The ``LAPACK_SELECT`` types are function pointer types, whose procedures need to be declared and implemented in C, then be declared as ``extern var`` on the Chapel side. 
See the dgees test (``$CHPL_HOME/test/library/packages/LAPACK/dgees.chpl``) for a concrete example.

Compiling with LAPACK
------------------------

Using this module require that you have LAPACK (binaries and C interface) on your system, as it is not bundled with Chapel. 

You can download and build the `Netlibs LAPACK <http://www.netlib.org/lapack/>`_ , if it is not already installed, and this section will assume usage of the Netlibs LAPACK.
You must also have libgfortran installed on your system (typically installed along with gcc).

To compile with LAPACK, Chapel needs to know:

1. Where the LAPACKE header (lapacke.h) is.

2. Where the libgfortran binary is (sometimes it is not to be found by ``ld``).

3. Where the various LAPACK binaries (lapacke, lapack, and refblas) are.

Once the details are worked out, compiling is quite simple and nearly identical to how one would compile a C program to work with LAPACK.

.. code-block:: sh

  chpl -I$PATH_TO_LAPACKE_INCLUDE_DIR \
       -L$PATH_TO_LIBGFORTRAN -lgfortran \
       -L$PATH_TO_LAPACK_BINARIES -llapacke -lapack -lrefblas \
       source.chpl

As an example,

.. code-block:: sh

  chpl -I$HOME/LAPACK/lapacke/include \
       -L/usr/lib/gcc/stuff -lgfortran \
       -L$HOME/LAPACK -llapacke -lapack -lrefblas \
       source.chpl

would be the command to use if Netlibs LAPACK had been built in ``$HOME/LAPACK``, and the libgfortran binary found to be located in ``/usr/lib/gcc/stuff``

You can refer to the COMPOPTS file of the LAPACK test suit (``$CHPL_HOME/test/library/packages/LAPACK/``) for an example

Future Work
-----------

We anticipate the following additions:

1. Better documentation on each individual procedure, mostly derived from the original Fortran documentation.

2. Larger test coverage of the provided procedures.

3. Enumerated values for arguments of procedures that currently take strings to denote different options.


*/
module LAPACK {
require "lapacke.h";
use SysCTypes;

/*External function pointer type LAPACK_C_SELECT1.*/
extern type LAPACK_C_SELECT1 ;
/*External function pointer type LAPACK_Z_SELECT1.
*/
extern type LAPACK_Z_SELECT1 ;
/*External function pointer type LAPACK_C_SELECT2.*/
extern type LAPACK_C_SELECT2 ;
/*External function pointer type LAPACK_D_SELECT2.*/
extern type LAPACK_D_SELECT2 ;
/*External function pointer type LAPACK_S_SELECT2.*/
extern type LAPACK_S_SELECT2 ;
/*External function pointer type LAPACK_Z_SELECT2.*/
extern type LAPACK_Z_SELECT2 ;
/*External function pointer type LAPACK_S_SELECT3.*/
extern type LAPACK_S_SELECT3 ;
/*External function pointer type LAPACK_D_SELECT3.*/
extern type LAPACK_D_SELECT3 ;


/*External const LAPACK_ROW_MAJOR.*/
extern const LAPACK_ROW_MAJOR : c_int ;
/*External const LAPACK_COL_MAJOR.*/
extern const LAPACK_COL_MAJOR : c_int ;
/*External const LAPACK_WORK_MEMORY_ERROR.*/
extern const LAPACK_WORK_MEMORY_ERROR : c_int ;
/*External const LAPACK_TRANSPOSE_MEMORY_ERROR.*/
extern const LAPACK_TRANSPOSE_MEMORY_ERROR : c_int ;


/* Mirrors the :data:`LAPACK_ROW_MAJOR` and :data:`LAPACK_COL_MAJOR` consts defined by LAPACK.

The enum values values are the same as the const value such that ``lapack_memory_order.row_major == LAPACK_ROW_MAJOR`` and ``lapack_memory_order.column_major == LAPACK_COL_MAJOR``, allowing the enum to be used with pure LAPACK procedures.
 */
enum lapack_memory_order{row_major = 101 : c_int, column_major = 102 : c_int};


pragma "no doc"
/*
 
*/
module ClassicLAPACK {
require "lapacke.h";
use SysCTypes;

pragma "no doc"
extern proc lapack_make_complex_float(re : c_float, im : c_float) : complex(64);

pragma "no doc"
extern proc lapack_make_complex_double(re : c_double, im : c_double) : complex(128);

pragma "no doc"
extern proc LAPACK_lsame(ref ca : c_char, ref cb : c_char, lca : c_int, lcb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sbdsdc(matrix_order : lapack_memory_order, uplo : c_char, compq : c_char, n : c_int, d : [] c_float, e : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, q : [] c_float, iq : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sbdsdc(matrix_order : lapack_memory_order, uplo : string, compq : string, n : c_int, d : [] c_float, e : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, q : [] c_float, iq : [] c_int) : c_int{
  return LAPACKE_sbdsdc(matrix_order, ascii(uplo) : c_char, ascii(compq) : c_char, n, d, e, u, ldu, vt, ldvt, q, iq);
}

pragma "no doc"
extern proc LAPACKE_dbdsdc(matrix_order : lapack_memory_order, uplo : c_char, compq : c_char, n : c_int, d : [] c_double, e : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, q : [] c_double, iq : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dbdsdc(matrix_order : lapack_memory_order, uplo : string, compq : string, n : c_int, d : [] c_double, e : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, q : [] c_double, iq : [] c_int) : c_int{
  return LAPACKE_dbdsdc(matrix_order, ascii(uplo) : c_char, ascii(compq) : c_char, n, d, e, u, ldu, vt, ldvt, q, iq);
}

pragma "no doc"
extern proc LAPACKE_sbdsqr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] c_float, ldvt : c_int, u : [] c_float, ldu : c_int, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sbdsqr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] c_float, ldvt : c_int, u : [] c_float, ldu : c_int, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sbdsqr(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dbdsqr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] c_double, ldvt : c_int, u : [] c_double, ldu : c_int, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dbdsqr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] c_double, ldvt : c_int, u : [] c_double, ldu : c_int, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dbdsqr(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cbdsqr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] complex(64), ldvt : c_int, u : [] complex(64), ldu : c_int, c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cbdsqr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] complex(64), ldvt : c_int, u : [] complex(64), ldu : c_int, c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cbdsqr(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zbdsqr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] complex(128), ldvt : c_int, u : [] complex(128), ldu : c_int, c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zbdsqr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] complex(128), ldvt : c_int, u : [] complex(128), ldu : c_int, c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zbdsqr(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sdisna(job : c_char, m : c_int, n : c_int, d : [] c_float, sep : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sdisna(job : string, m : c_int, n : c_int, d : [] c_float, sep : [] c_float) : c_int{
  return LAPACKE_sdisna(ascii(job) : c_char, m, n, d, sep);
}

pragma "no doc"
extern proc LAPACKE_ddisna(job : c_char, m : c_int, n : c_int, d : [] c_double, sep : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ddisna(job : string, m : c_int, n : c_int, d : [] c_double, sep : [] c_double) : c_int{
  return LAPACKE_ddisna(ascii(job) : c_char, m, n, d, sep);
}

pragma "no doc"
extern proc LAPACKE_sgbbrd(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int, pt : [] c_float, ldpt : c_int, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbbrd(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int, pt : [] c_float, ldpt : c_int, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sgbbrd(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dgbbrd(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int, pt : [] c_double, ldpt : c_int, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbbrd(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int, pt : [] c_double, ldpt : c_int, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dgbbrd(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cgbbrd(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int, pt : [] complex(64), ldpt : c_int, c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbbrd(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int, pt : [] complex(64), ldpt : c_int, c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cgbbrd(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zgbbrd(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int, pt : [] complex(128), ldpt : c_int, c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbbrd(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int, pt : [] complex(128), ldpt : c_int, c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zgbbrd(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sgbcon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_sgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dgbcon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cgbcon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zgbcon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_sgbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dgbrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cgbrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zgbrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sgbrfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_sgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dgbrfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_cgbrfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zgbrfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_sgbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int{
  return LAPACKE_sgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_dgbsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int{
  return LAPACKE_dgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_cgbsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int{
  return LAPACKE_cgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_zgbsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int{
  return LAPACKE_zgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_sgbsvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_sgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dgbsvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_cgbsvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zgbsvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_sgbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbtrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgbtrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgbtrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgbtrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sgebak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgebak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int{
  return LAPACKE_sgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_dgebak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgebak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int{
  return LAPACKE_dgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_cgebak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgebak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int{
  return LAPACKE_cgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_zgebak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgebak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int{
  return LAPACKE_zgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_sgebal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_float, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgebal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_float, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int{
  return LAPACKE_sgebal(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_dgebal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_double, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgebal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_double, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int{
  return LAPACKE_dgebal(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_cgebal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(64), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgebal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(64), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int{
  return LAPACKE_cgebal(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_zgebal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(128), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgebal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(128), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int{
  return LAPACKE_zgebal(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_sgebrd(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, d : [] c_float, e : [] c_float, tauq : [] c_float, taup : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgebrd(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, d : [] c_double, e : [] c_double, tauq : [] c_double, taup : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgebrd(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, d : [] c_float, e : [] c_float, tauq : [] complex(64), taup : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgebrd(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, d : [] c_double, e : [] c_double, tauq : [] complex(128), taup : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgecon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgecon(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_sgecon(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dgecon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgecon(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dgecon(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cgecon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgecon(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cgecon(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zgecon(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgecon(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zgecon(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_sgeequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgees(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_S_SELECT2, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_S_SELECT2, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int) : c_int{
  return LAPACKE_sgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, wr, wi, vs, ldvs);
}

pragma "no doc"
extern proc LAPACKE_dgees(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_D_SELECT2, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_D_SELECT2, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int) : c_int{
  return LAPACKE_dgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, wr, wi, vs, ldvs);
}

pragma "no doc"
extern proc LAPACKE_cgees(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_C_SELECT1, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_C_SELECT1, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int) : c_int{
  return LAPACKE_cgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, w, vs, ldvs);
}

pragma "no doc"
extern proc LAPACKE_zgees(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_Z_SELECT1, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_Z_SELECT1, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int) : c_int{
  return LAPACKE_zgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, w, vs, ldvs);
}

pragma "no doc"
extern proc LAPACKE_sgeesx(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_S_SELECT2, sense : c_char, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int, ref rconde : c_float, ref rcondv : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgeesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_S_SELECT2, sense : string, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int, ref rconde : c_float, ref rcondv : c_float) : c_int{
  return LAPACKE_sgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, wr, wi, vs, ldvs, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_dgeesx(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_D_SELECT2, sense : c_char, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int, ref rconde : c_double, ref rcondv : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgeesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_D_SELECT2, sense : string, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int, ref rconde : c_double, ref rcondv : c_double) : c_int{
  return LAPACKE_dgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, wr, wi, vs, ldvs, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_cgeesx(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_C_SELECT1, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int, ref rconde : c_float, ref rcondv : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgeesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_C_SELECT1, sense : string, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int, ref rconde : c_float, ref rcondv : c_float) : c_int{
  return LAPACKE_cgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, w, vs, ldvs, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_zgeesx(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_Z_SELECT1, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int, ref rconde : c_double, ref rcondv : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgeesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_Z_SELECT1, sense : string, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int, ref rconde : c_double, ref rcondv : c_double) : c_int{
  return LAPACKE_zgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, w, vs, ldvs, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_sgeev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgeev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int) : c_int{
  return LAPACKE_sgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_dgeev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgeev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int) : c_int{
  return LAPACKE_dgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_cgeev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgeev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int) : c_int{
  return LAPACKE_cgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_zgeev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgeev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int) : c_int{
  return LAPACKE_zgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_sgeevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgeevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int{
  return LAPACKE_sgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_dgeevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgeevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int{
  return LAPACKE_dgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_cgeevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgeevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int{
  return LAPACKE_cgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_zgeevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgeevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int{
  return LAPACKE_zgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_sgehrd(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgehrd(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgehrd(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgehrd(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgejsv(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, jobr : c_char, jobt : c_char, jobp : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, stat : [] c_float, istat : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgejsv(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, jobr : string, jobt : string, jobp : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, stat : [] c_float, istat : [] c_int) : c_int{
  return LAPACKE_sgejsv(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobr) : c_char, ascii(jobt) : c_char, ascii(jobp) : c_char, m, n, a, lda, sva, u, ldu, v, ldv, stat, istat);
}

pragma "no doc"
extern proc LAPACKE_dgejsv(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, jobr : c_char, jobt : c_char, jobp : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, stat : [] c_double, istat : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgejsv(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, jobr : string, jobt : string, jobp : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, stat : [] c_double, istat : [] c_int) : c_int{
  return LAPACKE_dgejsv(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobr) : c_char, ascii(jobt) : c_char, ascii(jobp) : c_char, m, n, a, lda, sva, u, ldu, v, ldv, stat, istat);
}

pragma "no doc"
extern proc LAPACKE_sgelq2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelq2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelq2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelq2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgelqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgels(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgels(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgels(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgels(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgels(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgels(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgels(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgels(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgels(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgels(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgels(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgels(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sgelsd(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelsd(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelsd(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelsd(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgelss(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelss(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelss(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelss(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgelsy(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, jpvt : [] c_int, rcond : c_float, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelsy(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, jpvt : [] c_int, rcond : c_double, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelsy(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, jpvt : [] c_int, rcond : c_float, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelsy(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, jpvt : [] c_int, rcond : c_double, ref rank : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqlf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqlf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqlf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqlf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqp3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, jpvt : [] c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqp3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, jpvt : [] c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqp3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, jpvt : [] c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqp3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, jpvt : [] c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqpf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, jpvt : [] c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqpf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, jpvt : [] c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqpf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, jpvt : [] c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqpf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, jpvt : [] c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqr2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqr2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqr2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqr2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrfp(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrfp(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrfp(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrfp(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgerfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgerfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sgerfs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dgerfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgerfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dgerfs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cgerfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgerfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cgerfs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zgerfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgerfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zgerfs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sgerfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_sgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dgerfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_cgerfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zgerfsx(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_sgerqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgerqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgerqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgerqf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgesdd(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesdd(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int) : c_int{
  return LAPACKE_sgesdd(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt);
}

pragma "no doc"
extern proc LAPACKE_dgesdd(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesdd(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int) : c_int{
  return LAPACKE_dgesdd(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt);
}

pragma "no doc"
extern proc LAPACKE_cgesdd(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesdd(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int) : c_int{
  return LAPACKE_cgesdd(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt);
}

pragma "no doc"
extern proc LAPACKE_zgesdd(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesdd(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int) : c_int{
  return LAPACKE_zgesdd(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt);
}

pragma "no doc"
extern proc LAPACKE_sgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dsgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zcgesv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgesvd(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, superb : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, superb : [] c_float) : c_int{
  return LAPACKE_sgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, superb);
}

pragma "no doc"
extern proc LAPACKE_dgesvd(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, superb : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, superb : [] c_double) : c_int{
  return LAPACKE_dgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, superb);
}

pragma "no doc"
extern proc LAPACKE_cgesvd(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int, superb : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int, superb : [] c_float) : c_int{
  return LAPACKE_cgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, superb);
}

pragma "no doc"
extern proc LAPACKE_zgesvd(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int, superb : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int, superb : [] c_double) : c_int{
  return LAPACKE_zgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, superb);
}

pragma "no doc"
extern proc LAPACKE_sgesvj(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, mv : c_int, v : [] c_float, ldv : c_int, stat : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvj(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, mv : c_int, v : [] c_float, ldv : c_int, stat : [] c_float) : c_int{
  return LAPACKE_sgesvj(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, m, n, a, lda, sva, mv, v, ldv, stat);
}

pragma "no doc"
extern proc LAPACKE_dgesvj(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, mv : c_int, v : [] c_double, ldv : c_int, stat : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvj(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, mv : c_int, v : [] c_double, ldv : c_int, stat : [] c_double) : c_int{
  return LAPACKE_dgesvj(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, m, n, a, lda, sva, mv, v, ldv, stat);
}

pragma "no doc"
extern proc LAPACKE_sgesvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int{
  return LAPACKE_sgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_dgesvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int{
  return LAPACKE_dgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_cgesvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, rpivot : [] c_float) : c_int{
  return LAPACKE_cgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_zgesvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, rpivot : [] c_double) : c_int{
  return LAPACKE_zgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, rpivot);
}

pragma "no doc"
extern proc LAPACKE_sgesvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_sgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dgesvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_cgesvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zgesvxx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_sgetf2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgetf2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgetf2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgetf2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgetrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgetrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgetrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgetrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgetri(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgetri(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgetri(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgetri(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgetrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgetrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgetrs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgetrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgetrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgetrs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgetrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgetrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgetrs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgetrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgetrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgetrs(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sggbak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggbak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int{
  return LAPACKE_sggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_dggbak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggbak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int{
  return LAPACKE_dggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_cggbak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggbak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int{
  return LAPACKE_cggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_zggbak(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggbak(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int{
  return LAPACKE_zggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_sggbal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sggbal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float) : c_int{
  return LAPACKE_sggbal(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale);
}

pragma "no doc"
extern proc LAPACKE_dggbal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dggbal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double) : c_int{
  return LAPACKE_dggbal(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale);
}

pragma "no doc"
extern proc LAPACKE_cggbal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cggbal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float) : c_int{
  return LAPACKE_cggbal(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale);
}

pragma "no doc"
extern proc LAPACKE_zggbal(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zggbal(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double) : c_int{
  return LAPACKE_zggbal(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale);
}

pragma "no doc"
extern proc LAPACKE_sgges(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_S_SELECT3, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_S_SELECT3, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int) : c_int{
  return LAPACKE_sgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr);
}

pragma "no doc"
extern proc LAPACKE_dgges(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_D_SELECT3, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_D_SELECT3, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int) : c_int{
  return LAPACKE_dgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr);
}

pragma "no doc"
extern proc LAPACKE_cgges(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_C_SELECT2, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_C_SELECT2, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int) : c_int{
  return LAPACKE_cgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr);
}

pragma "no doc"
extern proc LAPACKE_zgges(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_Z_SELECT2, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_Z_SELECT2, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int) : c_int{
  return LAPACKE_zgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr);
}

pragma "no doc"
extern proc LAPACKE_sggesx(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_S_SELECT3, sense : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_S_SELECT3, sense : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float) : c_int{
  return LAPACKE_sggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_dggesx(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_D_SELECT3, sense : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_D_SELECT3, sense : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double) : c_int{
  return LAPACKE_dggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_cggesx(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_C_SELECT2, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_C_SELECT2, sense : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float) : c_int{
  return LAPACKE_cggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_zggesx(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_Z_SELECT2, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_Z_SELECT2, sense : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double) : c_int{
  return LAPACKE_zggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_sggev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int) : c_int{
  return LAPACKE_sggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_dggev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int) : c_int{
  return LAPACKE_dggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_cggev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int) : c_int{
  return LAPACKE_cggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_zggev(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int) : c_int{
  return LAPACKE_zggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr);
}

pragma "no doc"
extern proc LAPACKE_sggevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int{
  return LAPACKE_sggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_dggevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int{
  return LAPACKE_dggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_cggevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float) : c_int{
  return LAPACKE_cggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_zggevx(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double) : c_int{
  return LAPACKE_zggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

pragma "no doc"
extern proc LAPACKE_sggglm(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, d : [] c_float, x : [] c_float, y : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dggglm(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, d : [] c_double, x : [] c_double, y : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cggglm(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, d : [] complex(64), x : [] complex(64), y : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zggglm(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, d : [] complex(128), x : [] complex(128), y : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgghrd(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgghrd(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dgghrd(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgghrd(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_cgghrd(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgghrd(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_cgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zgghrd(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgghrd(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sgglse(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, d : [] c_float, x : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgglse(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, d : [] c_double, x : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgglse(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), d : [] complex(64), x : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgglse(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), d : [] complex(128), x : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sggqrf(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_float, lda : c_int, taua : [] c_float, b : [] c_float, ldb : c_int, taub : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dggqrf(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_double, lda : c_int, taua : [] c_double, b : [] c_double, ldb : c_int, taub : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cggqrf(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(64), lda : c_int, taua : [] complex(64), b : [] complex(64), ldb : c_int, taub : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zggqrf(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(128), lda : c_int, taua : [] complex(128), b : [] complex(128), ldb : c_int, taub : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sggrqf(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] c_float, lda : c_int, taua : [] c_float, b : [] c_float, ldb : c_int, taub : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dggrqf(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] c_double, lda : c_int, taua : [] c_double, b : [] c_double, ldb : c_int, taub : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cggrqf(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] complex(64), lda : c_int, taua : [] complex(64), b : [] complex(64), ldb : c_int, taub : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zggrqf(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] complex(128), lda : c_int, taua : [] complex(128), b : [] complex(128), ldb : c_int, taub : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sggsvd(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_sggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, iwork);
}

pragma "no doc"
extern proc LAPACKE_dggsvd(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, iwork);
}

pragma "no doc"
extern proc LAPACKE_cggsvd(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_cggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, iwork);
}

pragma "no doc"
extern proc LAPACKE_zggsvd(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_zggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, iwork);
}

pragma "no doc"
extern proc LAPACKE_sggsvp(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int) : c_int{
  return LAPACKE_sggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_dggsvp(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int) : c_int{
  return LAPACKE_dggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_cggsvp(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int) : c_int{
  return LAPACKE_cggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_zggsvp(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int) : c_int{
  return LAPACKE_zggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_sgtcon(norm : c_char, n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgtcon(norm : string, n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_sgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dgtcon(norm : c_char, n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgtcon(norm : string, n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cgtcon(norm : c_char, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgtcon(norm : string, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zgtcon(norm : c_char, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgtcon(norm : string, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_sgtrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sgtrfs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dgtrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dgtrfs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cgtrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cgtrfs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zgtrfs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zgtrfs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sgtsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgtsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgtsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgtsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgtsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dgtsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cgtsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zgtsvx(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sgttrf(n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgttrf(n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgttrf(n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgttrf(n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgttrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgttrs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgttrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgttrs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgttrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgttrs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgttrs(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgttrs(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chbev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhbev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chbevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhbevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chbevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhbevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_chbgst(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, x : [] complex(64), ldx : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, x : [] complex(64), ldx : c_int) : c_int{
  return LAPACKE_chbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx);
}

pragma "no doc"
extern proc LAPACKE_zhbgst(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, x : [] complex(128), ldx : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, x : [] complex(128), ldx : c_int) : c_int{
  return LAPACKE_zhbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx);
}

pragma "no doc"
extern proc LAPACKE_chbgv(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhbgv(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chbgvd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhbgvd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chbgvx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhbgvx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_chbtrd(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int) : c_int{
  return LAPACKE_chbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_zhbtrd(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int) : c_int{
  return LAPACKE_zhbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_checon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_checon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_checon(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zhecon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhecon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zhecon(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cheequb(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cheequb(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_cheequb(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_zheequb(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zheequb(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_zheequb(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_cheev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cheev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float) : c_int{
  return LAPACKE_cheev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_zheev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zheev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double) : c_int{
  return LAPACKE_zheev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_cheevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cheevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float) : c_int{
  return LAPACKE_cheevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_zheevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zheevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double) : c_int{
  return LAPACKE_zheevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_cheevr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_cheevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_zheevr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_zheevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_cheevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_cheevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_zheevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zheevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_chegst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chegst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chegst(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhegst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhegst(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chegv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chegv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float) : c_int{
  return LAPACKE_chegv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_zhegv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double) : c_int{
  return LAPACKE_zhegv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_chegvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chegvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float) : c_int{
  return LAPACKE_chegvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_zhegvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double) : c_int{
  return LAPACKE_zhegvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_chegvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chegvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chegvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhegvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhegvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_cherfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cherfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cherfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zherfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zherfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zherfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cherfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cherfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cherfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zherfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zherfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zherfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_chesv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chesv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chesv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhesv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhesv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhesv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chesvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chesvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_chesvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zhesvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhesvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zhesvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_chesvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chesvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_chesvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zhesvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhesvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zhesvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_chetrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, d : [] c_float, e : [] c_float, tau : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, d : [] c_float, e : [] c_float, tau : [] complex(64)) : c_int{
  return LAPACKE_chetrd(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_zhetrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, d : [] c_double, e : [] c_double, tau : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, d : [] c_double, e : [] c_double, tau : [] complex(128)) : c_int{
  return LAPACKE_zhetrd(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_chetrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_chetrf(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zhetrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zhetrf(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_chetri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_chetri(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zhetri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zhetri(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_chetrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chetrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhetrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhetrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chfrk(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_float, a : [] complex(64), lda : c_int, beta : c_float, c : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_float, a : [] complex(64), lda : c_int, beta : c_float, c : [] complex(64)) : c_int{
  return LAPACKE_chfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_zhfrk(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_double, a : [] complex(128), lda : c_int, beta : c_double, c : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_double, a : [] complex(128), lda : c_int, beta : c_double, c : [] complex(128)) : c_int{
  return LAPACKE_zhfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_shgeqz(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, t : [] c_float, ldt : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_shgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, t : [] c_float, ldt : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_shgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alphar, alphai, beta, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dhgeqz(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, t : [] c_double, ldt : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dhgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, t : [] c_double, ldt : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dhgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alphar, alphai, beta, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chgeqz(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, t : [] complex(64), ldt : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, t : [] complex(64), ldt : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alpha, beta, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhgeqz(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, t : [] complex(128), ldt : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, t : [] complex(128), ldt : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alpha, beta, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chpcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chpcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_chpcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zhpcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zhpcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_chpev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chpev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhpev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhpev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chpevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chpevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhpevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhpevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chpevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chpevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhpevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhpevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_chpgst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64)) : c_int{
  return LAPACKE_chpgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_zhpgst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128)) : c_int{
  return LAPACKE_zhpgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_chpgv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chpgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhpgv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhpgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chpgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chpgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhpgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhpgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chpgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chpgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhpgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhpgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_chprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_chprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zhprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zhprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_chpsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chpsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhpsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhpsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chpsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chpsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_chpsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zhpsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zhpsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_chptrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), d : [] c_float, e : [] c_float, tau : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), d : [] c_float, e : [] c_float, tau : [] complex(64)) : c_int{
  return LAPACKE_chptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_zhptrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), d : [] c_double, e : [] c_double, tau : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), d : [] c_double, e : [] c_double, tau : [] complex(128)) : c_int{
  return LAPACKE_zhptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_chptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int{
  return LAPACKE_chptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zhptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int{
  return LAPACKE_zhptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_chptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int{
  return LAPACKE_chptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zhptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int{
  return LAPACKE_zhptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_chptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_shsein(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_shsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_shsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, wr, wi, vl, ldvl, vr, ldvr, mm, m, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_dhsein(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dhsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_dhsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, wr, wi, vl, ldvl, vr, ldvr, mm, m, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_chsein(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_chsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, w, vl, ldvl, vr, ldvr, mm, m, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_zhsein(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_zhsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, w, vl, ldvl, vr, ldvr, mm, m, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_shseqr(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_shseqr(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_shseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, wr, wi, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dhseqr(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dhseqr(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dhseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, wr, wi, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_chseqr(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chseqr(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_chseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zhseqr(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhseqr(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zhseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_clacgv(n : c_int, x : [] complex(64), incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlacgv(n : c_int, x : [] complex(128), incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slacn2(n : c_int, v : [] c_float, x : [] c_float, isgn : [] c_int, ref est : c_float, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlacn2(n : c_int, v : [] c_double, x : [] c_double, isgn : [] c_int, ref est : c_double, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clacn2(n : c_int, v : [] complex(64), x : [] complex(64), ref est : c_float, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlacn2(n : c_int, v : [] complex(128), x : [] complex(128), ref est : c_double, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slacpy(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slacpy(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_slacpy(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dlacpy(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlacpy(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dlacpy(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_clacpy(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clacpy(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_clacpy(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zlacpy(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlacpy(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zlacpy(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_clacp2(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clacp2(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_clacp2(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zlacp2(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlacp2(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zlacp2(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zlag2c(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, sa : [] complex(64), ldsa : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slag2d(matrix_order : lapack_memory_order, m : c_int, n : c_int, sa : [] c_float, ldsa : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlag2s(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, sa : [] c_float, ldsa : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clag2z(matrix_order : lapack_memory_order, m : c_int, n : c_int, sa : [] complex(64), ldsa : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slagge(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_float, a : [] c_float, lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlagge(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_double, a : [] c_double, lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clagge(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_float, a : [] complex(64), lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlagge(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_double, a : [] complex(128), lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slamch(cmach : c_char) : c_float;

pragma "no doc"
inline proc LAPACKE_slamch(cmach : string) : c_float{
  return LAPACKE_slamch(ascii(cmach) : c_char);
}

pragma "no doc"
extern proc LAPACKE_dlamch(cmach : c_char) : c_double;

pragma "no doc"
inline proc LAPACKE_dlamch(cmach : string) : c_double{
  return LAPACKE_dlamch(ascii(cmach) : c_char);
}

pragma "no doc"
extern proc LAPACKE_slange(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_slange(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] c_float, lda : c_int) : c_float{
  return LAPACKE_slange(matrix_order, ascii(norm) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlange(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_dlange(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] c_double, lda : c_int) : c_double{
  return LAPACKE_dlange(matrix_order, ascii(norm) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clange(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_clange(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int) : c_float{
  return LAPACKE_clange(matrix_order, ascii(norm) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlange(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_zlange(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int) : c_double{
  return LAPACKE_zlange(matrix_order, ascii(norm) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clanhe(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_clanhe(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_float{
  return LAPACKE_clanhe(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlanhe(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_zlanhe(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_double{
  return LAPACKE_zlanhe(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_slansy(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_slansy(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_float{
  return LAPACKE_slansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlansy(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_dlansy(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_double{
  return LAPACKE_dlansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clansy(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_clansy(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_float{
  return LAPACKE_clansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlansy(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_zlansy(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_double{
  return LAPACKE_zlansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_slantr(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_slantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] c_float, lda : c_int) : c_float{
  return LAPACKE_slantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlantr(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_dlantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] c_double, lda : c_int) : c_double{
  return LAPACKE_dlantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clantr(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int) : c_float;

pragma "no doc"
inline proc LAPACKE_clantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int) : c_float{
  return LAPACKE_clantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlantr(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int) : c_double;

pragma "no doc"
inline proc LAPACKE_zlantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int) : c_double{
  return LAPACKE_zlantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_slarfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slarfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_slarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dlarfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlarfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dlarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_clarfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clarfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_clarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zlarfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlarfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zlarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_slarfg(n : c_int, ref alpha : c_float, x : [] c_float, incx : c_int, ref tau : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlarfg(n : c_int, ref alpha : c_double, x : [] c_double, incx : c_int, ref tau : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_clarfg(n : c_int, ref alpha : complex(64), x : [] complex(64), incx : c_int, ref tau : complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlarfg(n : c_int, ref alpha : complex(128), x : [] complex(128), incx : c_int, ref tau : complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_slarft(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] c_float, ldv : c_int, tau : [] c_float, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slarft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] c_float, ldv : c_int, tau : [] c_float, t : [] c_float, ldt : c_int) : c_int{
  return LAPACKE_slarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_dlarft(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] c_double, ldv : c_int, tau : [] c_double, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlarft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] c_double, ldv : c_int, tau : [] c_double, t : [] c_double, ldt : c_int) : c_int{
  return LAPACKE_dlarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_clarft(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, tau : [] complex(64), t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clarft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, tau : [] complex(64), t : [] complex(64), ldt : c_int) : c_int{
  return LAPACKE_clarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_zlarft(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, tau : [] complex(128), t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlarft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, tau : [] complex(128), t : [] complex(128), ldt : c_int) : c_int{
  return LAPACKE_zlarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_slarfx(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] c_float, tau : c_float, c : [] c_float, ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_slarfx(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] c_float, tau : c_float, c : [] c_float, ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_slarfx(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_dlarfx(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] c_double, tau : c_double, c : [] c_double, ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dlarfx(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] c_double, tau : c_double, c : [] c_double, ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_dlarfx(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_clarfx(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] complex(64), tau : complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_clarfx(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] complex(64), tau : complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_clarfx(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_zlarfx(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] complex(128), tau : complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zlarfx(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] complex(128), tau : complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zlarfx(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_slarnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlarnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_clarnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlarnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_slaset(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : c_float, beta : c_float, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slaset(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : c_float, beta : c_float, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_slaset(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlaset(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : c_double, beta : c_double, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlaset(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : c_double, beta : c_double, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dlaset(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_claset(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : complex(64), beta : complex(64), a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_claset(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : complex(64), beta : complex(64), a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_claset(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlaset(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : complex(128), beta : complex(128), a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlaset(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : complex(128), beta : complex(128), a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zlaset(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_slasrt(id : c_char, n : c_int, d : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_slasrt(id : string, n : c_int, d : [] c_float) : c_int{
  return LAPACKE_slasrt(ascii(id) : c_char, n, d);
}

pragma "no doc"
extern proc LAPACKE_dlasrt(id : c_char, n : c_int, d : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dlasrt(id : string, n : c_int, d : [] c_double) : c_int{
  return LAPACKE_dlasrt(ascii(id) : c_char, n, d);
}

pragma "no doc"
extern proc LAPACKE_slaswp(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlaswp(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_claswp(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlaswp(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : c_char, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : string, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_slatms(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : c_char, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : string, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dlatms(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : c_char, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : string, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_clatms(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : c_char, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlatms(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : string, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zlatms(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda);
}

pragma "no doc"
extern proc LAPACKE_slauum(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_slauum(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlauum(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dlauum(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clauum(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_clauum(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlauum(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zlauum(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_sopgtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, tau : [] c_float, q : [] c_float, ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sopgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, tau : [] c_float, q : [] c_float, ldq : c_int) : c_int{
  return LAPACKE_sopgtr(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_dopgtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, tau : [] c_double, q : [] c_double, ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dopgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, tau : [] c_double, q : [] c_double, ldq : c_int) : c_int{
  return LAPACKE_dopgtr(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_sopmtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] c_float, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sopmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] c_float, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sopmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dopmtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] c_double, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dopmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] c_double, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dopmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sorgbr(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sorgbr(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int{
  return LAPACKE_sorgbr(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_dorgbr(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dorgbr(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int{
  return LAPACKE_dorgbr(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_sorghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dorghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sorglq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dorglq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgql(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dorgql(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgqr(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dorgqr(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgrq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dorgrq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sorgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int{
  return LAPACKE_sorgtr(matrix_order, ascii(uplo) : c_char, n, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_dorgtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dorgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int{
  return LAPACKE_dorgtr(matrix_order, ascii(uplo) : c_char, n, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_sormbr(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormbr(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormhr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormhr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormhr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormhr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormlq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormlq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormlq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormlq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormql(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormql(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormql(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormql(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormqr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormqr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormqr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormqr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormrq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormrq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormrq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormrq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormrz(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormrz(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormrz(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormrz(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sormtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sormtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dormtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dormtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_spbcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_spbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dpbcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dpbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cpbcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cpbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zpbcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zpbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_spbequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_spbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_dpbequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_dpbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_cpbequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_cpbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_zpbequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_zpbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_spbrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_spbrfs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dpbrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dpbrfs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cpbrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cpbrfs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zpbrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zpbrfs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_spbstf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] c_float, ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] c_float, ldbb : c_int) : c_int{
  return LAPACKE_spbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_dpbstf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] c_double, ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] c_double, ldbb : c_int) : c_int{
  return LAPACKE_dpbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_cpbstf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] complex(64), ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] complex(64), ldbb : c_int) : c_int{
  return LAPACKE_cpbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_zpbstf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] complex(128), ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] complex(128), ldbb : c_int) : c_int{
  return LAPACKE_zpbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_spbsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spbsv(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpbsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpbsv(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpbsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpbsv(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpbsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpbsv(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spbsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_spbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dpbsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dpbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cpbsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cpbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zpbsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zpbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_spbtrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int) : c_int{
  return LAPACKE_spbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_dpbtrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int) : c_int{
  return LAPACKE_dpbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_cpbtrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int) : c_int{
  return LAPACKE_cpbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_zpbtrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int) : c_int{
  return LAPACKE_zpbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_spbtrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spbtrs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpbtrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpbtrs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpbtrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpbtrs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpbtrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpbtrs(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spftrf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_float) : c_int{
  return LAPACKE_spftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_dpftrf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_double) : c_int{
  return LAPACKE_dpftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_cpftrf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(64)) : c_int{
  return LAPACKE_cpftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_zpftrf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(128)) : c_int{
  return LAPACKE_zpftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_spftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spftri(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_float) : c_int{
  return LAPACKE_spftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_dpftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpftri(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_double) : c_int{
  return LAPACKE_dpftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_cpftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpftri(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(64)) : c_int{
  return LAPACKE_cpftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_zpftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpftri(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(128)) : c_int{
  return LAPACKE_zpftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_spftrs(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpftrs(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpftrs(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpftrs(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spocon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spocon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_spocon(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dpocon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpocon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dpocon(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cpocon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpocon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cpocon(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zpocon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpocon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zpocon(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_spoequ(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dpoequ(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cpoequ(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zpoequ(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_spoequb(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dpoequb(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cpoequb(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zpoequb(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sporfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sporfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sporfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dporfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dporfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dporfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cporfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cporfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cporfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zporfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zporfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zporfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sporfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sporfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_sporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dporfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dporfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_cporfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cporfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zporfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zporfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_sposv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sposv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sposv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dposv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dposv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dposv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cposv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cposv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cposv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zposv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zposv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zposv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsposv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsposv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref chlapack_iter : c_int) : c_int{
  return LAPACKE_dsposv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, chlapack_iter);
}

pragma "no doc"
extern proc LAPACKE_zcposv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zcposv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref chlapack_iter : c_int) : c_int{
  return LAPACKE_zcposv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, chlapack_iter);
}

pragma "no doc"
extern proc LAPACKE_sposvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sposvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dposvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dposvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cposvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cposvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zposvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zposvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sposvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sposvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_sposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dposvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dposvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_cposvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cposvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_cposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zposvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zposvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_spotrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spotrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_spotrf(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dpotrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpotrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dpotrf(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_cpotrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpotrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_cpotrf(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zpotrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpotrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zpotrf(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_spotri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spotri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_spotri(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dpotri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpotri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dpotri(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_cpotri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpotri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_cpotri(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zpotri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpotri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zpotri(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_spotrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spotrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spotrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpotrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpotrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpotrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpotrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpotrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpotrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpotrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpotrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpotrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sppcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_sppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dppcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cppcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zppcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_sppequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_sppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_dppequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_dppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_cppequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_cppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_zppequ(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_zppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_spprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_spprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dpprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dpprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cpprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cpprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zpprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zpprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sppsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sppsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dppsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dppsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cppsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cppsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zppsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zppsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sppsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dppsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cppsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zppsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_spptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float) : c_int{
  return LAPACKE_spptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_dpptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dpptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_cpptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_cpptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_zpptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_zpptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_spptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float) : c_int{
  return LAPACKE_spptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_dpptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dpptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_cpptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_cpptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_zpptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_zpptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_spptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spstrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spstrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float) : c_int{
  return LAPACKE_spstrf(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol);
}

pragma "no doc"
extern proc LAPACKE_dpstrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpstrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double) : c_int{
  return LAPACKE_dpstrf(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol);
}

pragma "no doc"
extern proc LAPACKE_cpstrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpstrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float) : c_int{
  return LAPACKE_cpstrf(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol);
}

pragma "no doc"
extern proc LAPACKE_zpstrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpstrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double) : c_int{
  return LAPACKE_zpstrf(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol);
}

pragma "no doc"
extern proc LAPACKE_sptcon(n : c_int, d : [] c_float, e : [] c_float, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dptcon(n : c_int, d : [] c_double, e : [] c_double, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cptcon(n : c_int, d : [] c_float, e : [] complex(64), anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zptcon(n : c_int, d : [] c_double, e : [] complex(128), anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_spteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_spteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dpteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dpteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_cpteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_cpteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zpteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zpteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sptrfs(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dptrfs(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cptrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cptrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cptrfs(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zptrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zptrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zptrfs(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sptsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dptsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cptsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zptsv(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sptsvx(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sptsvx(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dptsvx(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dptsvx(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cptsvx(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cptsvx(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zptsvx(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zptsvx(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_spttrf(n : c_int, d : [] c_float, e : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dpttrf(n : c_int, d : [] c_double, e : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cpttrf(n : c_int, d : [] c_float, e : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zpttrf(n : c_int, d : [] c_double, e : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_spttrs(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dpttrs(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cpttrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpttrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpttrs(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpttrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpttrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpttrs(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ssbev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_ssbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dsbev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dsbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_ssbevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_ssbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dsbevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dsbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_ssbevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsbevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssbgst(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, x : [] c_float, ldx : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, x : [] c_float, ldx : c_int) : c_int{
  return LAPACKE_ssbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx);
}

pragma "no doc"
extern proc LAPACKE_dsbgst(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, x : [] c_double, ldx : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, x : [] c_double, ldx : c_int) : c_int{
  return LAPACKE_dsbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx);
}

pragma "no doc"
extern proc LAPACKE_ssbgv(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_ssbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dsbgv(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dsbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_ssbgvd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_ssbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dsbgvd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dsbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_ssbgvx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsbgvx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssbtrd(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int) : c_int{
  return LAPACKE_ssbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_dsbtrd(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int) : c_int{
  return LAPACKE_dsbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_ssfrk(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_float, a : [] c_float, lda : c_int, beta : c_float, c : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_float, a : [] c_float, lda : c_int, beta : c_float, c : [] c_float) : c_int{
  return LAPACKE_ssfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_dsfrk(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_double, a : [] c_double, lda : c_int, beta : c_double, c : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_double, a : [] c_double, lda : c_int, beta : c_double, c : [] c_double) : c_int{
  return LAPACKE_dsfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_sspcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sspcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_sspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dspcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dspcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_cspcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cspcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_cspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zspcon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zspcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_sspev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sspev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dspev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dspev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sspevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sspevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dspevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dspevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sspevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_sspevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dspevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dspevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_sspgst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float) : c_int{
  return LAPACKE_sspgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_dspgst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double) : c_int{
  return LAPACKE_dspgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_sspgv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sspgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dspgv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dspgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sspgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sspgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dspgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dspgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sspgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_sspgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dspgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dspgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_ssprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dsprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dsprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_csprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_csprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zsprfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zsprfs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_sspsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sspsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dspsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dspsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cspsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cspsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cspsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zspsv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zspsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zspsv(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sspsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sspsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_sspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dspsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dspsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_cspsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cspsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_cspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zspsvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zspsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ssptrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, d : [] c_float, e : [] c_float, tau : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, d : [] c_float, e : [] c_float, tau : [] c_float) : c_int{
  return LAPACKE_ssptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_dsptrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, d : [] c_double, e : [] c_double, tau : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, d : [] c_double, e : [] c_double, tau : [] c_double) : c_int{
  return LAPACKE_dsptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_ssptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, ipiv : [] c_int) : c_int{
  return LAPACKE_ssptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, ipiv : [] c_int) : c_int{
  return LAPACKE_dsptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int{
  return LAPACKE_csptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsptrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int{
  return LAPACKE_zsptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, ipiv : [] c_int) : c_int{
  return LAPACKE_ssptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, ipiv : [] c_int) : c_int{
  return LAPACKE_dsptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int{
  return LAPACKE_csptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsptri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int{
  return LAPACKE_zsptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsptrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsptrs(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sstebz(range : c_char, order : c_char, n : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, d : [] c_float, e : [] c_float, ref m : c_int, ref nsplit : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstebz(range : string, order : string, n : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, d : [] c_float, e : [] c_float, ref m : c_int, ref nsplit : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int) : c_int{
  return LAPACKE_sstebz(ascii(range) : c_char, ascii(order) : c_char, n, vl, vu, il, iu, abstol, d, e, m, nsplit, w, iblock, isplit);
}

pragma "no doc"
extern proc LAPACKE_dstebz(range : c_char, order : c_char, n : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, d : [] c_double, e : [] c_double, ref m : c_int, ref nsplit : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstebz(range : string, order : string, n : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, d : [] c_double, e : [] c_double, ref m : c_int, ref nsplit : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int) : c_int{
  return LAPACKE_dstebz(ascii(range) : c_char, ascii(order) : c_char, n, vl, vu, il, iu, abstol, d, e, m, nsplit, w, iblock, isplit);
}

pragma "no doc"
extern proc LAPACKE_sstedc(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dstedc(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_cstedc(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cstedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_cstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zstedc(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zstedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sstegr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_sstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_dstegr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_dstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_cstegr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cstegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_cstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_zstegr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zstegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_zstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_sstein(matrix_order : lapack_memory_order, n : c_int, d : [] c_float, e : [] c_float, m : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, z : [] c_float, ldz : c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dstein(matrix_order : lapack_memory_order, n : c_int, d : [] c_double, e : [] c_double, m : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, z : [] c_double, ldz : c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cstein(matrix_order : lapack_memory_order, n : c_int, d : [] c_float, e : [] c_float, m : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, z : [] complex(64), ldz : c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zstein(matrix_order : lapack_memory_order, n : c_int, d : [] c_double, e : [] c_double, m : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, z : [] complex(128), ldz : c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sstemr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int{
  return LAPACKE_sstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac);
}

pragma "no doc"
extern proc LAPACKE_dstemr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int{
  return LAPACKE_dstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac);
}

pragma "no doc"
extern proc LAPACKE_cstemr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cstemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int{
  return LAPACKE_cstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac);
}

pragma "no doc"
extern proc LAPACKE_zstemr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zstemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int) : c_int{
  return LAPACKE_zstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac);
}

pragma "no doc"
extern proc LAPACKE_ssteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_ssteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dsteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dsteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_csteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_csteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zsteqr(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zsteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_ssterf(n : c_int, d : [] c_float, e : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dsterf(n : c_int, d : [] c_double, e : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sstev(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstev(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sstev(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dstev(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstev(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dstev(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sstevd(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstevd(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sstevd(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dstevd(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstevd(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dstevd(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sstevr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstevr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_sstevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_dstevr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstevr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_dstevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_sstevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstevx(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_sstevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dstevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstevx(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dstevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssycon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssycon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_ssycon(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_dsycon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsycon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dsycon(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_csycon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csycon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float) : c_int{
  return LAPACKE_csycon(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_zsycon(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsycon(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double) : c_int{
  return LAPACKE_zsycon(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond);
}

pragma "no doc"
extern proc LAPACKE_ssyequb(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyequb(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_ssyequb(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_dsyequb(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyequb(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_dsyequb(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_csyequb(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csyequb(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_csyequb(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_zsyequb(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyequb(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_zsyequb(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_ssyev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, w : [] c_float) : c_int{
  return LAPACKE_ssyev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_dsyev(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, w : [] c_double) : c_int{
  return LAPACKE_dsyev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_ssyevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, w : [] c_float) : c_int{
  return LAPACKE_ssyevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_dsyevd(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, w : [] c_double) : c_int{
  return LAPACKE_dsyevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w);
}

pragma "no doc"
extern proc LAPACKE_ssyevr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_ssyevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_dsyevr(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int) : c_int{
  return LAPACKE_dsyevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz);
}

pragma "no doc"
extern proc LAPACKE_ssyevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssyevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsyevx(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsyevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssygst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssygst(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsygst(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsygst(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ssygv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float) : c_int{
  return LAPACKE_ssygv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_dsygv(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double) : c_int{
  return LAPACKE_dsygv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_ssygvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float) : c_int{
  return LAPACKE_ssygvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_dsygvd(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double) : c_int{
  return LAPACKE_dsygvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w);
}

pragma "no doc"
extern proc LAPACKE_ssygvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssygvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsygvx(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsygvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssyrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_ssyrfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dsyrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dsyrfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_csyrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csyrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_csyrfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zsyrfs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zsyrfs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ssyrfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_ssyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dsyrfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dsyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_csyrfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csyrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_csyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zsyrfsx(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zsyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_ssysv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssysv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsysv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsysv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csysv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csysv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csysv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsysv(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysv(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsysv(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ssysvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_ssysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dsysvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dsysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_csysvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_csysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_zsysvx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_zsysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ssysvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_ssysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_dsysvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_dsysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_csysvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float) : c_int{
  return LAPACKE_csysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_zsysvxx(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double) : c_int{
  return LAPACKE_zsysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

pragma "no doc"
extern proc LAPACKE_ssytrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, d : [] c_float, e : [] c_float, tau : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, d : [] c_float, e : [] c_float, tau : [] c_float) : c_int{
  return LAPACKE_ssytrd(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_dsytrd(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, d : [] c_double, e : [] c_double, tau : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, d : [] c_double, e : [] c_double, tau : [] c_double) : c_int{
  return LAPACKE_dsytrd(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_ssytrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_ssytrf(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsytrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_dsytrf(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csytrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_csytrf(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsytrf(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zsytrf(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssytri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_ssytri(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsytri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_dsytri(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csytri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_csytri(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsytri(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytri(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zsytri(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssytrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssytrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsytrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsytrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csytrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csytrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsytrs(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsytrs(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stbcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, ref rcond : c_float) : c_int{
  return LAPACKE_stbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond);
}

pragma "no doc"
extern proc LAPACKE_dtbcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, ref rcond : c_double) : c_int{
  return LAPACKE_dtbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond);
}

pragma "no doc"
extern proc LAPACKE_ctbcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, ref rcond : c_float) : c_int{
  return LAPACKE_ctbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond);
}

pragma "no doc"
extern proc LAPACKE_ztbcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, ref rcond : c_double) : c_int{
  return LAPACKE_ztbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond);
}

pragma "no doc"
extern proc LAPACKE_stbrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_stbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dtbrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dtbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ctbrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_ctbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ztbrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_ztbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_stbtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtbtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctbtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztbtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stfsm(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : c_float, a : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : c_float, a : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtfsm(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : c_double, a : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : c_double, a : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctfsm(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : complex(64), a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : complex(64), a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztfsm(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : complex(128), a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : complex(128), a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] c_float) : c_int{
  return LAPACKE_stftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_dtftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] c_double) : c_int{
  return LAPACKE_dtftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_ctftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] complex(64)) : c_int{
  return LAPACKE_ctftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_ztftri(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] complex(128)) : c_int{
  return LAPACKE_ztftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_stfttp(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_float, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_float, ap : [] c_float) : c_int{
  return LAPACKE_stfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_dtfttp(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_double, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_double, ap : [] c_double) : c_int{
  return LAPACKE_dtfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_ctfttp(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(64), ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(64), ap : [] complex(64)) : c_int{
  return LAPACKE_ctfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_ztfttp(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(128), ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(128), ap : [] complex(128)) : c_int{
  return LAPACKE_ztfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_stfttr(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_float, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_float, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_stfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dtfttr(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_double, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_double, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dtfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ctfttr(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(64), a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(64), a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_ctfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ztfttr(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(128), a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(128), a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_ztfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_stgevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] c_float, lds : c_int, p : [] c_float, ldp : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] c_float, lds : c_int, p : [] c_float, ldp : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_stgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_dtgevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] c_double, lds : c_int, p : [] c_double, ldp : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] c_double, lds : c_int, p : [] c_double, ldp : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_dtgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ctgevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] complex(64), lds : c_int, p : [] complex(64), ldp : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] complex(64), lds : c_int, p : [] complex(64), ldp : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ctgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ztgevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] complex(128), lds : c_int, p : [] complex(128), ldp : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] complex(128), lds : c_int, p : [] complex(128), ldp : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ztgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_stgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int, ref ifst : c_int, ref ilst : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dtgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int, ref ifst : c_int, ref ilst : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int, ref m : c_int, ref pl : c_float, ref pr : c_float, dif : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dtgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int, ref m : c_int, ref pl : c_double, ref pr : c_double, dif : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_ctgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int, ref m : c_int, ref pl : c_float, ref pr : c_float, dif : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_ztgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int, ref m : c_int, ref pl : c_double, ref pr : c_double, dif : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_stgsja(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, ref ncycle : c_int) : c_int{
  return LAPACKE_stgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, ncycle);
}

pragma "no doc"
extern proc LAPACKE_dtgsja(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, ref ncycle : c_int) : c_int{
  return LAPACKE_dtgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, ncycle);
}

pragma "no doc"
extern proc LAPACKE_ctgsja(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, ref ncycle : c_int) : c_int{
  return LAPACKE_ctgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, ncycle);
}

pragma "no doc"
extern proc LAPACKE_ztgsja(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, ref ncycle : c_int) : c_int{
  return LAPACKE_ztgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, ncycle);
}

pragma "no doc"
extern proc LAPACKE_stgsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_stgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m);
}

pragma "no doc"
extern proc LAPACKE_dtgsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_dtgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ctgsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ctgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ztgsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ztgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m);
}

pragma "no doc"
extern proc LAPACKE_stgsyl(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, d : [] c_float, ldd : c_int, e : [] c_float, lde : c_int, f : [] c_float, ldf : c_int, ref scale : c_float, ref dif : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, d : [] c_float, ldd : c_int, e : [] c_float, lde : c_int, f : [] c_float, ldf : c_int, ref scale : c_float, ref dif : c_float) : c_int{
  return LAPACKE_stgsyl(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif);
}

pragma "no doc"
extern proc LAPACKE_dtgsyl(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, d : [] c_double, ldd : c_int, e : [] c_double, lde : c_int, f : [] c_double, ldf : c_int, ref scale : c_double, ref dif : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, d : [] c_double, ldd : c_int, e : [] c_double, lde : c_int, f : [] c_double, ldf : c_int, ref scale : c_double, ref dif : c_double) : c_int{
  return LAPACKE_dtgsyl(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif);
}

pragma "no doc"
extern proc LAPACKE_ctgsyl(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, d : [] complex(64), ldd : c_int, e : [] complex(64), lde : c_int, f : [] complex(64), ldf : c_int, ref scale : c_float, ref dif : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, d : [] complex(64), ldd : c_int, e : [] complex(64), lde : c_int, f : [] complex(64), ldf : c_int, ref scale : c_float, ref dif : c_float) : c_int{
  return LAPACKE_ctgsyl(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif);
}

pragma "no doc"
extern proc LAPACKE_ztgsyl(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, d : [] complex(128), ldd : c_int, e : [] complex(128), lde : c_int, f : [] complex(128), ldf : c_int, ref scale : c_double, ref dif : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, d : [] complex(128), ldd : c_int, e : [] complex(128), lde : c_int, f : [] complex(128), ldf : c_int, ref scale : c_double, ref dif : c_double) : c_int{
  return LAPACKE_ztgsyl(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif);
}

pragma "no doc"
extern proc LAPACKE_stpcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] c_float, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] c_float, ref rcond : c_float) : c_int{
  return LAPACKE_stpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

pragma "no doc"
extern proc LAPACKE_dtpcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] c_double, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] c_double, ref rcond : c_double) : c_int{
  return LAPACKE_dtpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

pragma "no doc"
extern proc LAPACKE_ctpcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(64), ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] complex(64), ref rcond : c_float) : c_int{
  return LAPACKE_ctpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

pragma "no doc"
extern proc LAPACKE_ztpcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(128), ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] complex(128), ref rcond : c_double) : c_int{
  return LAPACKE_ztpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

pragma "no doc"
extern proc LAPACKE_stprfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_stprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dtprfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dtprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ctprfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_ctprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ztprfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_ztprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_stptri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] c_float) : c_int{
  return LAPACKE_stptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_dtptri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dtptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_ctptri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_ctptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_ztptri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_ztptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_stptrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtptrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctptrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztptrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stpttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] c_float, arf : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] c_float, arf : [] c_float) : c_int{
  return LAPACKE_stpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_dtpttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] c_double, arf : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] c_double, arf : [] c_double) : c_int{
  return LAPACKE_dtpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_ctpttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] complex(64), arf : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] complex(64), arf : [] complex(64)) : c_int{
  return LAPACKE_ctpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_ztpttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] complex(128), arf : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] complex(128), arf : [] complex(128)) : c_int{
  return LAPACKE_ztpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_stpttr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stpttr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_stpttr(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dtpttr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpttr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dtpttr(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ctpttr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpttr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_ctpttr(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ztpttr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpttr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_ztpttr(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_strcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_float, lda : c_int, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] c_float, lda : c_int, ref rcond : c_float) : c_int{
  return LAPACKE_strcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond);
}

pragma "no doc"
extern proc LAPACKE_dtrcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_double, lda : c_int, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] c_double, lda : c_int, ref rcond : c_double) : c_int{
  return LAPACKE_dtrcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond);
}

pragma "no doc"
extern proc LAPACKE_ctrcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(64), lda : c_int, ref rcond : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] complex(64), lda : c_int, ref rcond : c_float) : c_int{
  return LAPACKE_ctrcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond);
}

pragma "no doc"
extern proc LAPACKE_ztrcon(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(128), lda : c_int, ref rcond : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] complex(128), lda : c_int, ref rcond : c_double) : c_int{
  return LAPACKE_ztrcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond);
}

pragma "no doc"
extern proc LAPACKE_strevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_strevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_dtrevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_dtrevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ctrevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ctrevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ztrevc(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ztrevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m);
}

pragma "no doc"
extern proc LAPACKE_strexc(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, ref ifst : c_int, ref ilst : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strexc(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, ref ifst : c_int, ref ilst : c_int) : c_int{
  return LAPACKE_strexc(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst);
}

pragma "no doc"
extern proc LAPACKE_dtrexc(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, ref ifst : c_int, ref ilst : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrexc(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, ref ifst : c_int, ref ilst : c_int) : c_int{
  return LAPACKE_dtrexc(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst);
}

pragma "no doc"
extern proc LAPACKE_ctrexc(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrexc(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, ifst : c_int, ilst : c_int) : c_int{
  return LAPACKE_ctrexc(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst);
}

pragma "no doc"
extern proc LAPACKE_ztrexc(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrexc(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, ifst : c_int, ilst : c_int) : c_int{
  return LAPACKE_ztrexc(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst);
}

pragma "no doc"
extern proc LAPACKE_strrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_strrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_dtrrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_dtrrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ctrrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float) : c_int{
  return LAPACKE_ctrrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_ztrrfs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double) : c_int{
  return LAPACKE_ztrrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr);
}

pragma "no doc"
extern proc LAPACKE_strsen(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, wr : [] c_float, wi : [] c_float, ref m : c_int, ref s : c_float, ref sep : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, wr : [] c_float, wi : [] c_float, ref m : c_int, ref s : c_float, ref sep : c_float) : c_int{
  return LAPACKE_strsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, wr, wi, m, s, sep);
}

pragma "no doc"
extern proc LAPACKE_dtrsen(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, wr : [] c_double, wi : [] c_double, ref m : c_int, ref s : c_double, ref sep : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, wr : [] c_double, wi : [] c_double, ref m : c_int, ref s : c_double, ref sep : c_double) : c_int{
  return LAPACKE_dtrsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, wr, wi, m, s, sep);
}

pragma "no doc"
extern proc LAPACKE_ctrsen(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, w : [] complex(64), ref m : c_int, ref s : c_float, ref sep : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, w : [] complex(64), ref m : c_int, ref s : c_float, ref sep : c_float) : c_int{
  return LAPACKE_ctrsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, w, m, s, sep);
}

pragma "no doc"
extern proc LAPACKE_ztrsen(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, w : [] complex(128), ref m : c_int, ref s : c_double, ref sep : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, w : [] complex(128), ref m : c_int, ref s : c_double, ref sep : c_double) : c_int{
  return LAPACKE_ztrsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, w, m, s, sep);
}

pragma "no doc"
extern proc LAPACKE_strsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_strsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m);
}

pragma "no doc"
extern proc LAPACKE_dtrsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_dtrsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ctrsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ctrsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m);
}

pragma "no doc"
extern proc LAPACKE_ztrsna(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int) : c_int{
  return LAPACKE_ztrsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m);
}

pragma "no doc"
extern proc LAPACKE_strsyl(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, ref scale : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, ref scale : c_float) : c_int{
  return LAPACKE_strsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_dtrsyl(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, ref scale : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, ref scale : c_double) : c_int{
  return LAPACKE_dtrsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_ctrsyl(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, ref scale : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, ref scale : c_float) : c_int{
  return LAPACKE_ctrsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_ztrsyl(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, ref scale : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, ref scale : c_double) : c_int{
  return LAPACKE_ztrsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_strtri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strtri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_strtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dtrtri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrtri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dtrtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ctrtri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrtri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_ctrtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ztrtri(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrtri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_ztrtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_strtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_strtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtrtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtrtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctrtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctrtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztrtrs(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztrtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_strttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, arf : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, arf : [] c_float) : c_int{
  return LAPACKE_strttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_dtrttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, arf : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, arf : [] c_double) : c_int{
  return LAPACKE_dtrttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_ctrttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, arf : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, arf : [] complex(64)) : c_int{
  return LAPACKE_ctrttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_ztrttf(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, arf : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, arf : [] complex(128)) : c_int{
  return LAPACKE_ztrttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_strttp(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strttp(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ap : [] c_float) : c_int{
  return LAPACKE_strttp(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_dtrttp(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrttp(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dtrttp(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_ctrttp(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrttp(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_ctrttp(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_ztrttp(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrttp(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_ztrttp(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_stzrzf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dtzrzf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_ctzrzf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_ztzrzf(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_cungbr(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cungbr(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int{
  return LAPACKE_cungbr(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_zungbr(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zungbr(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int{
  return LAPACKE_zungbr(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_cunghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zunghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_cunglq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zunglq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_cungql(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zungql(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_cungqr(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zungqr(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_cungrq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zungrq(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_cungtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cungtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64)) : c_int{
  return LAPACKE_cungtr(matrix_order, ascii(uplo) : c_char, n, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_zungtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zungtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128)) : c_int{
  return LAPACKE_zungtr(matrix_order, ascii(uplo) : c_char, n, a, lda, tau);
}

pragma "no doc"
extern proc LAPACKE_cunmbr(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmbr(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmhr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmhr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmhr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmhr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmlq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmlq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmlq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmlq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmql(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmql(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmql(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmql(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmqr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmqr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmqr(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmqr(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmrq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmrq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmrq(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmrq(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmrz(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmrz(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmrz(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmrz(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cunmtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cunmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zunmtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zunmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cupgtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), tau : [] complex(64), q : [] complex(64), ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cupgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), tau : [] complex(64), q : [] complex(64), ldq : c_int) : c_int{
  return LAPACKE_cupgtr(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_zupgtr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), tau : [] complex(128), q : [] complex(128), ldq : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zupgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), tau : [] complex(128), q : [] complex(128), ldq : c_int) : c_int{
  return LAPACKE_zupgtr(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq);
}

pragma "no doc"
extern proc LAPACKE_cupmtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] complex(64), tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cupmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] complex(64), tau : [] complex(64), c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cupmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zupmtr(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] complex(128), tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zupmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] complex(128), tau : [] complex(128), c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zupmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sbdsdc_work(matrix_order : lapack_memory_order, uplo : c_char, compq : c_char, n : c_int, d : [] c_float, e : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, q : [] c_float, iq : [] c_int, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sbdsdc_work(matrix_order : lapack_memory_order, uplo : string, compq : string, n : c_int, d : [] c_float, e : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, q : [] c_float, iq : [] c_int, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sbdsdc_work(matrix_order, ascii(uplo) : c_char, ascii(compq) : c_char, n, d, e, u, ldu, vt, ldvt, q, iq, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dbdsdc_work(matrix_order : lapack_memory_order, uplo : c_char, compq : c_char, n : c_int, d : [] c_double, e : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, q : [] c_double, iq : [] c_int, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dbdsdc_work(matrix_order : lapack_memory_order, uplo : string, compq : string, n : c_int, d : [] c_double, e : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, q : [] c_double, iq : [] c_int, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dbdsdc_work(matrix_order, ascii(uplo) : c_char, ascii(compq) : c_char, n, d, e, u, ldu, vt, ldvt, q, iq, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_sbdsqr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] c_float, ldvt : c_int, u : [] c_float, ldu : c_int, c : [] c_float, ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sbdsqr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] c_float, ldvt : c_int, u : [] c_float, ldu : c_int, c : [] c_float, ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_sbdsqr_work(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_dbdsqr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] c_double, ldvt : c_int, u : [] c_double, ldu : c_int, c : [] c_double, ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dbdsqr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] c_double, ldvt : c_int, u : [] c_double, ldu : c_int, c : [] c_double, ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_dbdsqr_work(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_cbdsqr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] complex(64), ldvt : c_int, u : [] complex(64), ldu : c_int, c : [] complex(64), ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cbdsqr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_float, e : [] c_float, vt : [] complex(64), ldvt : c_int, u : [] complex(64), ldu : c_int, c : [] complex(64), ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_cbdsqr_work(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_zbdsqr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] complex(128), ldvt : c_int, u : [] complex(128), ldu : c_int, c : [] complex(128), ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zbdsqr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ncvt : c_int, nru : c_int, ncc : c_int, d : [] c_double, e : [] c_double, vt : [] complex(128), ldvt : c_int, u : [] complex(128), ldu : c_int, c : [] complex(128), ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_zbdsqr_work(matrix_order, ascii(uplo) : c_char, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_sdisna_work(job : c_char, m : c_int, n : c_int, d : [] c_float, sep : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sdisna_work(job : string, m : c_int, n : c_int, d : [] c_float, sep : [] c_float) : c_int{
  return LAPACKE_sdisna_work(ascii(job) : c_char, m, n, d, sep);
}

pragma "no doc"
extern proc LAPACKE_ddisna_work(job : c_char, m : c_int, n : c_int, d : [] c_double, sep : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ddisna_work(job : string, m : c_int, n : c_int, d : [] c_double, sep : [] c_double) : c_int{
  return LAPACKE_ddisna_work(ascii(job) : c_char, m, n, d, sep);
}

pragma "no doc"
extern proc LAPACKE_sgbbrd_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int, pt : [] c_float, ldpt : c_int, c : [] c_float, ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbbrd_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int, pt : [] c_float, ldpt : c_int, c : [] c_float, ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_sgbbrd_work(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_dgbbrd_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int, pt : [] c_double, ldpt : c_int, c : [] c_double, ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbbrd_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int, pt : [] c_double, ldpt : c_int, c : [] c_double, ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_dgbbrd_work(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_cgbbrd_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int, pt : [] complex(64), ldpt : c_int, c : [] complex(64), ldc : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbbrd_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int, pt : [] complex(64), ldpt : c_int, c : [] complex(64), ldc : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgbbrd_work(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgbbrd_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int, pt : [] complex(128), ldpt : c_int, c : [] complex(128), ldc : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbbrd_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, ncc : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int, pt : [] complex(128), ldpt : c_int, c : [] complex(128), ldc : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgbbrd_work(matrix_order, ascii(vect) : c_char, m, n, ncc, kl, ku, ab, ldab, d, e, q, ldq, pt, ldpt, c, ldc, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgbcon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbcon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgbcon_work(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgbcon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbcon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgbcon_work(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgbcon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbcon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgbcon_work(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgbcon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbcon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgbcon_work(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, ldab, ipiv, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgbequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgbrfs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgbrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgbrfs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgbrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgbrfs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgbrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgbrfs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgbrfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbrfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgbrfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgbrfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbrfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgbrfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgbrfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbrfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgbrfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgbrfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbrfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgbrfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgbsv_work(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbsv_work(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbsv_work(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbsv_work(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgbsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgbsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgbsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgbsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgbsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgbsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgbsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgbsvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbsvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgbsvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgbsvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbsvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgbsvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgbsvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbsvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgbsvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgbsvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbsvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgbsvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, afb, ldafb, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgbtrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgbtrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgbtrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgbtrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgbtrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgbtrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgbtrs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgbtrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgbtrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgbtrs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgbtrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgbtrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgbtrs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgbtrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgbtrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgbtrs_work(matrix_order, ascii(trans) : c_char, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sgebak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgebak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int{
  return LAPACKE_sgebak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_dgebak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgebak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int{
  return LAPACKE_dgebak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_cgebak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgebak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int{
  return LAPACKE_cgebak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_zgebak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgebak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, scale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int{
  return LAPACKE_zgebak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, scale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_sgebal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_float, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgebal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_float, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int{
  return LAPACKE_sgebal_work(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_dgebal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_double, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgebal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_double, lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int{
  return LAPACKE_dgebal_work(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_cgebal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(64), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgebal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(64), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float) : c_int{
  return LAPACKE_cgebal_work(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_zgebal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(128), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgebal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(128), lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double) : c_int{
  return LAPACKE_zgebal_work(matrix_order, ascii(job) : c_char, n, a, lda, ilo, ihi, scale);
}

pragma "no doc"
extern proc LAPACKE_sgebrd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, d : [] c_float, e : [] c_float, tauq : [] c_float, taup : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgebrd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, d : [] c_double, e : [] c_double, tauq : [] c_double, taup : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgebrd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, d : [] c_float, e : [] c_float, tauq : [] complex(64), taup : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgebrd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, d : [] c_double, e : [] c_double, tauq : [] complex(128), taup : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgecon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgecon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgecon_work(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgecon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgecon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgecon_work(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgecon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgecon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgecon_work(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgecon_work(matrix_order : lapack_memory_order, norm : c_char, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgecon_work(matrix_order : lapack_memory_order, norm : string, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgecon_work(matrix_order, ascii(norm) : c_char, n, a, lda, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgeequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeequ_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeequb_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgees_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_S_SELECT2, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int, work : [] c_float, lwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgees_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_S_SELECT2, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int, work : [] c_float, lwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_sgees_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, wr, wi, vs, ldvs, work, lwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_dgees_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_D_SELECT2, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int, work : [] c_double, lwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgees_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_D_SELECT2, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int, work : [] c_double, lwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_dgees_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, wr, wi, vs, ldvs, work, lwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_cgees_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_C_SELECT1, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgees_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_C_SELECT1, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, bwork : [] c_int) : c_int{
  return LAPACKE_cgees_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, w, vs, ldvs, work, lwork, rwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_zgees_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_Z_SELECT1, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgees_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_Z_SELECT1, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, bwork : [] c_int) : c_int{
  return LAPACKE_zgees_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, n, a, lda, sdim, w, vs, ldvs, work, lwork, rwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_sgeesx_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_S_SELECT2, sense : c_char, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int, ref rconde : c_float, ref rcondv : c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgeesx_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_S_SELECT2, sense : string, n : c_int, a : [] c_float, lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ldvs : c_int, ref rconde : c_float, ref rcondv : c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_sgeesx_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, wr, wi, vs, ldvs, rconde, rcondv, work, lwork, iwork, liwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_dgeesx_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_D_SELECT2, sense : c_char, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int, ref rconde : c_double, ref rcondv : c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgeesx_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_D_SELECT2, sense : string, n : c_int, a : [] c_double, lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ldvs : c_int, ref rconde : c_double, ref rcondv : c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_dgeesx_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, wr, wi, vs, ldvs, rconde, rcondv, work, lwork, iwork, liwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_cgeesx_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_C_SELECT1, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int, ref rconde : c_float, ref rcondv : c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgeesx_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_C_SELECT1, sense : string, n : c_int, a : [] complex(64), lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ldvs : c_int, ref rconde : c_float, ref rcondv : c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, bwork : [] c_int) : c_int{
  return LAPACKE_cgeesx_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, w, vs, ldvs, rconde, rcondv, work, lwork, rwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_zgeesx_work(matrix_order : lapack_memory_order, jobvs : c_char, sort : c_char, chlapack_select : LAPACK_Z_SELECT1, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int, ref rconde : c_double, ref rcondv : c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgeesx_work(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_Z_SELECT1, sense : string, n : c_int, a : [] complex(128), lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ldvs : c_int, ref rconde : c_double, ref rcondv : c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, bwork : [] c_int) : c_int{
  return LAPACKE_zgeesx_work(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, n, a, lda, sdim, w, vs, ldvs, rconde, rcondv, work, lwork, rwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_sgeev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgeev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sgeev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dgeev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgeev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dgeev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cgeev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgeev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_cgeev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgeev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgeev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zgeev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgeevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgeevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_float, lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_sgeevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgeevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgeevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_double, lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dgeevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgeevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgeevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(64), lda : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_cgeevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgeevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgeevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(128), lda : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zgeevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, w, vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde, rcondv, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgehrd_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgehrd_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgehrd_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgehrd_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgejsv_work(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, jobr : c_char, jobt : c_char, jobp : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgejsv_work(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, jobr : string, jobt : string, jobp : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_sgejsv_work(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobr) : c_char, ascii(jobt) : c_char, ascii(jobp) : c_char, m, n, a, lda, sva, u, ldu, v, ldv, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgejsv_work(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, jobr : c_char, jobt : c_char, jobp : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgejsv_work(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, jobr : string, jobt : string, jobp : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dgejsv_work(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobr) : c_char, ascii(jobt) : c_char, ascii(jobp) : c_char, m, n, a, lda, sva, u, ldu, v, ldv, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_sgelq2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelq2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelq2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelq2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgelqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgels_work(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgels_work(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sgels_work(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dgels_work(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgels_work(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dgels_work(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cgels_work(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgels_work(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cgels_work(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zgels_work(matrix_order : lapack_memory_order, trans : c_char, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgels_work(matrix_order : lapack_memory_order, trans : string, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zgels_work(matrix_order, ascii(trans) : c_char, m, n, nrhs, a, lda, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sgelsd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelsd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelsd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelsd_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgelss_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelss_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelss_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, s : [] c_float, rcond : c_float, ref rank : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelss_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, s : [] c_double, rcond : c_double, ref rank : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgelsy_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, jpvt : [] c_int, rcond : c_float, ref rank : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgelsy_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, jpvt : [] c_int, rcond : c_double, ref rank : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgelsy_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, jpvt : [] c_int, rcond : c_float, ref rank : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgelsy_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, jpvt : [] c_int, rcond : c_double, ref rank : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqlf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqlf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqlf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqlf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqp3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, jpvt : [] c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqp3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, jpvt : [] c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqp3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, jpvt : [] c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqp3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, jpvt : [] c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqpf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, jpvt : [] c_int, tau : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqpf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, jpvt : [] c_int, tau : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqpf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, jpvt : [] c_int, tau : [] complex(64), work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqpf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, jpvt : [] c_int, tau : [] complex(128), work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqr2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqr2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqr2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqr2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrfp_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrfp_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrfp_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrfp_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgerfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgerfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgerfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgerfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgerfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgerfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgerfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgerfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgerfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgerfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgerfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgerfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgerfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgerfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgerfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgerfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgerfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgerfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgerfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgerfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgerfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgerfsx_work(matrix_order : lapack_memory_order, trans : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgerfsx_work(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgerfsx_work(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, r, c, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgerqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgerqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgerqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgerqf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgesdd_work(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesdd_work(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_sgesdd_work(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgesdd_work(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesdd_work(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dgesdd_work(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgesdd_work(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesdd_work(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_cgesdd_work(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork, rwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_zgesdd_work(matrix_order : lapack_memory_order, jobz : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesdd_work(matrix_order : lapack_memory_order, jobz : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_zgesdd_work(matrix_order, ascii(jobz) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork, rwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_sgesv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgesv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgesv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgesv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dsgesv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, work : [] c_double, swork : [] c_float, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zcgesv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, work : [] complex(128), swork : [] complex(64), rwork : [] c_double, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgesvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvd_work(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, u : [] c_float, ldu : c_int, vt : [] c_float, ldvt : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sgesvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dgesvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvd_work(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, u : [] c_double, ldu : c_int, vt : [] c_double, ldvt : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dgesvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cgesvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesvd_work(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, u : [] complex(64), ldu : c_int, vt : [] complex(64), ldvt : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_cgesvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgesvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobvt : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesvd_work(matrix_order : lapack_memory_order, jobu : string, jobvt : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, u : [] complex(128), ldu : c_int, vt : [] complex(128), ldvt : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zgesvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgesvj_work(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, mv : c_int, v : [] c_float, ldv : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvj_work(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, sva : [] c_float, mv : c_int, v : [] c_float, ldv : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sgesvj_work(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, m, n, a, lda, sva, mv, v, ldv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dgesvj_work(matrix_order : lapack_memory_order, joba : c_char, jobu : c_char, jobv : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, mv : c_int, v : [] c_double, ldv : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvj_work(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, sva : [] c_double, mv : c_int, v : [] c_double, ldv : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dgesvj_work(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, m, n, a, lda, sva, mv, v, ldv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sgesvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgesvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgesvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgesvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgesvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgesvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgesvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgesvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgesvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgesvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgesvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgesvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgesvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgesvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgesvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgesvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_float, c : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgesvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgesvxx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgesvxx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, r : [] c_double, c : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgesvxx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, r, c, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgetf2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgetf2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgetf2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgetf2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgetrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgetrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgetrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgetrf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgetri_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgetri_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgetri_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgetri_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgetrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgetrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgetrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgetrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgetrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgetrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgetrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgetrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgetrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgetrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgetrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgetrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sggbak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggbak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] c_float, ldv : c_int) : c_int{
  return LAPACKE_sggbak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_dggbak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggbak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] c_double, ldv : c_int) : c_int{
  return LAPACKE_dggbak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_cggbak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggbak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_float, rscale : [] c_float, m : c_int, v : [] complex(64), ldv : c_int) : c_int{
  return LAPACKE_cggbak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_zggbak_work(matrix_order : lapack_memory_order, job : c_char, side : c_char, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggbak_work(matrix_order : lapack_memory_order, job : string, side : string, n : c_int, ilo : c_int, ihi : c_int, lscale : [] c_double, rscale : [] c_double, m : c_int, v : [] complex(128), ldv : c_int) : c_int{
  return LAPACKE_zggbak_work(matrix_order, ascii(job) : c_char, ascii(side) : c_char, n, ilo, ihi, lscale, rscale, m, v, ldv);
}

pragma "no doc"
extern proc LAPACKE_sggbal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sggbal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, work : [] c_float) : c_int{
  return LAPACKE_sggbal_work(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale, work);
}

pragma "no doc"
extern proc LAPACKE_dggbal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dggbal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, work : [] c_double) : c_int{
  return LAPACKE_dggbal_work(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale, work);
}

pragma "no doc"
extern proc LAPACKE_cggbal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cggbal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, work : [] c_float) : c_int{
  return LAPACKE_cggbal_work(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale, work);
}

pragma "no doc"
extern proc LAPACKE_zggbal_work(matrix_order : lapack_memory_order, job : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zggbal_work(matrix_order : lapack_memory_order, job : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, work : [] c_double) : c_int{
  return LAPACKE_zggbal_work(matrix_order, ascii(job) : c_char, n, a, lda, b, ldb, ilo, ihi, lscale, rscale, work);
}

pragma "no doc"
extern proc LAPACKE_sgges_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_S_SELECT3, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int, work : [] c_float, lwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgges_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_S_SELECT3, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int, work : [] c_float, lwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_sgges_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr, work, lwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_dgges_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_D_SELECT3, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int, work : [] c_double, lwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgges_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_D_SELECT3, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int, work : [] c_double, lwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_dgges_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr, work, lwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_cgges_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_C_SELECT2, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgges_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_C_SELECT2, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, bwork : [] c_int) : c_int{
  return LAPACKE_cgges_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr, work, lwork, rwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_zgges_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_Z_SELECT2, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgges_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_Z_SELECT2, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, bwork : [] c_int) : c_int{
  return LAPACKE_zgges_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr, work, lwork, rwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_sggesx_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_S_SELECT3, sense : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggesx_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_S_SELECT3, sense : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ldvsl : c_int, vsr : [] c_float, ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_sggesx_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv, work, lwork, iwork, liwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_dggesx_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_D_SELECT3, sense : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggesx_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_D_SELECT3, sense : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ldvsl : c_int, vsr : [] c_double, ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_dggesx_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alphar, alphai, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv, work, lwork, iwork, liwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_cggesx_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_C_SELECT2, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggesx_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_C_SELECT2, sense : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ldvsl : c_int, vsr : [] complex(64), ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_cggesx_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv, work, lwork, rwork, iwork, liwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_zggesx_work(matrix_order : lapack_memory_order, jobvsl : c_char, jobvsr : c_char, sort : c_char, selctg : LAPACK_Z_SELECT2, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggesx_work(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_Z_SELECT2, sense : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ldvsl : c_int, vsr : [] complex(128), ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, liwork : c_int, bwork : [] c_int) : c_int{
  return LAPACKE_zggesx_work(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, n, a, lda, b, ldb, sdim, alpha, beta, vsl, ldvsl, vsr, ldvsr, rconde, rcondv, work, lwork, rwork, iwork, liwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_sggev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sggev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dggev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dggev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cggev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cggev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_cggev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zggev_work(matrix_order : lapack_memory_order, jobvl : c_char, jobvr : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zggev_work(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zggev_work(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_sggevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, bwork : [] c_int) : c_int{
  return LAPACKE_sggevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv, work, lwork, iwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_dggevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, bwork : [] c_int) : c_int{
  return LAPACKE_dggevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alphar, alphai, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv, work, lwork, iwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_cggevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, bwork : [] c_int) : c_int{
  return LAPACKE_cggevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv, work, lwork, rwork, iwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_zggevx_work(matrix_order : lapack_memory_order, balanc : c_char, jobvl : c_char, jobvr : c_char, sense : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, bwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggevx_work(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, bwork : [] c_int) : c_int{
  return LAPACKE_zggevx_work(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, n, a, lda, b, ldb, alpha, beta, vl, ldvl, vr, ldvr, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv, work, lwork, rwork, iwork, bwork);
}

pragma "no doc"
extern proc LAPACKE_sggglm_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, d : [] c_float, x : [] c_float, y : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dggglm_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, d : [] c_double, x : [] c_double, y : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cggglm_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, d : [] complex(64), x : [] complex(64), y : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zggglm_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, d : [] complex(128), x : [] complex(128), y : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgghrd_work(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgghrd_work(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int) : c_int{
  return LAPACKE_sgghrd_work(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_dgghrd_work(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgghrd_work(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int) : c_int{
  return LAPACKE_dgghrd_work(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_cgghrd_work(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgghrd_work(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int) : c_int{
  return LAPACKE_cgghrd_work(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_zgghrd_work(matrix_order : lapack_memory_order, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgghrd_work(matrix_order : lapack_memory_order, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int) : c_int{
  return LAPACKE_zgghrd_work(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, a, lda, b, ldb, q, ldq, z, ldz);
}

pragma "no doc"
extern proc LAPACKE_sgglse_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, d : [] c_float, x : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgglse_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, d : [] c_double, x : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgglse_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), d : [] complex(64), x : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgglse_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, p : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), d : [] complex(128), x : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sggqrf_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_float, lda : c_int, taua : [] c_float, b : [] c_float, ldb : c_int, taub : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dggqrf_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] c_double, lda : c_int, taua : [] c_double, b : [] c_double, ldb : c_int, taub : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cggqrf_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(64), lda : c_int, taua : [] complex(64), b : [] complex(64), ldb : c_int, taub : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zggqrf_work(matrix_order : lapack_memory_order, n : c_int, m : c_int, p : c_int, a : [] complex(128), lda : c_int, taua : [] complex(128), b : [] complex(128), ldb : c_int, taub : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sggrqf_work(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] c_float, lda : c_int, taua : [] c_float, b : [] c_float, ldb : c_int, taub : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dggrqf_work(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] c_double, lda : c_int, taua : [] c_double, b : [] c_double, ldb : c_int, taub : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cggrqf_work(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] complex(64), lda : c_int, taua : [] complex(64), b : [] complex(64), ldb : c_int, taub : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zggrqf_work(matrix_order : lapack_memory_order, m : c_int, p : c_int, n : c_int, a : [] complex(128), lda : c_int, taua : [] complex(128), b : [] complex(128), ldb : c_int, taub : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sggsvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sggsvd_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sggsvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dggsvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dggsvd_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dggsvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cggsvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cggsvd_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_cggsvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work, rwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_zggsvd_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zggsvd_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, n : c_int, p : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_zggsvd_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, n, p, k, l, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work, rwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_sggsvp_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, iwork : [] c_int, tau : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sggsvp_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, iwork : [] c_int, tau : [] c_float, work : [] c_float) : c_int{
  return LAPACKE_sggsvp_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq, iwork, tau, work);
}

pragma "no doc"
extern proc LAPACKE_dggsvp_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, iwork : [] c_int, tau : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dggsvp_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, iwork : [] c_int, tau : [] c_double, work : [] c_double) : c_int{
  return LAPACKE_dggsvp_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq, iwork, tau, work);
}

pragma "no doc"
extern proc LAPACKE_cggsvp_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, iwork : [] c_int, rwork : [] c_float, tau : [] complex(64), work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cggsvp_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, ref k : c_int, ref l : c_int, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, iwork : [] c_int, rwork : [] c_float, tau : [] complex(64), work : [] complex(64)) : c_int{
  return LAPACKE_cggsvp_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq, iwork, rwork, tau, work);
}

pragma "no doc"
extern proc LAPACKE_zggsvp_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, iwork : [] c_int, rwork : [] c_double, tau : [] complex(128), work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zggsvp_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, ref k : c_int, ref l : c_int, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, iwork : [] c_int, rwork : [] c_double, tau : [] complex(128), work : [] complex(128)) : c_int{
  return LAPACKE_zggsvp_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, a, lda, b, ldb, tola, tolb, k, l, u, ldu, v, ldv, q, ldq, iwork, rwork, tau, work);
}

pragma "no doc"
extern proc LAPACKE_sgtcon_work(norm : c_char, n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgtcon_work(norm : string, n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgtcon_work(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgtcon_work(norm : c_char, n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgtcon_work(norm : string, n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgtcon_work(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgtcon_work(norm : c_char, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cgtcon_work(norm : string, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_cgtcon_work(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_zgtcon_work(norm : c_char, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zgtcon_work(norm : string, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zgtcon_work(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_sgtrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgtrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgtrfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgtrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgtrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgtrfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgtrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgtrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgtrfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgtrfs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgtrfs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgtrfs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgtsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgtsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgtsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgtsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgtsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgtsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sgtsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dgtsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgtsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dgtsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cgtsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cgtsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cgtsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zgtsvx_work(matrix_order : lapack_memory_order, fact : c_char, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zgtsvx_work(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zgtsvx_work(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, nrhs, dl, d, du, dlf, df, duf, du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sgttrf_work(n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgttrf_work(n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgttrf_work(n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgttrf_work(n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgttrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgttrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sgttrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dgttrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgttrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dgttrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cgttrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgttrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cgttrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zgttrs_work(matrix_order : lapack_memory_order, trans : c_char, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgttrs_work(matrix_order : lapack_memory_order, trans : string, n : c_int, nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zgttrs_work(matrix_order, ascii(trans) : c_char, n, nrhs, dl, d, du, du2, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chbev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chbev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chbev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhbev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhbev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chbevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_chbevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zhbevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zhbevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_chbevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chbevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhbevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhbevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_chbgst_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, x : [] complex(64), ldx : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgst_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, x : [] complex(64), ldx : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chbgst_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhbgst_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, x : [] complex(128), ldx : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgst_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, x : [] complex(128), ldx : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhbgst_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chbgv_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgv_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chbgv_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhbgv_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgv_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhbgv_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chbgvd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgvd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_chbgvd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zhbgvd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgvd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zhbgvd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_chbgvx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chbgvx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), ldab : c_int, bb : [] complex(64), ldbb : c_int, q : [] complex(64), ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chbgvx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhbgvx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbgvx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), ldab : c_int, bb : [] complex(128), ldbb : c_int, q : [] complex(128), ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhbgvx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_chbtrd_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chbtrd_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ldq : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_chbtrd_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_zhbtrd_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhbtrd_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ldq : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zhbtrd_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_checon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_checon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_checon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_zhecon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhecon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zhecon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_cheequb_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cheequb_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_cheequb_work(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax, work);
}

pragma "no doc"
extern proc LAPACKE_zheequb_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zheequb_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zheequb_work(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax, work);
}

pragma "no doc"
extern proc LAPACKE_cheev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cheev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_cheev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zheev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zheev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zheev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_cheevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_cheevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zheevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zheevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_cheevr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheevr_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_cheevr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zheevr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheevr_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zheevr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_cheevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_cheevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_zheevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zheevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_chegst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chegst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chegst_work(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhegst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhegst_work(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chegv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chegv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_chegv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhegv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zhegv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_chegvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chegvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, w : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_chegvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zhegvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, w : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zhegvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_chegvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chegvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chegvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhegvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhegvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhegvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_cherfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cherfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cherfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zherfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zherfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zherfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_cherfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cherfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cherfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zherfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zherfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zherfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chesv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chesv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_chesv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zhesv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhesv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zhesv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_chesvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chesvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_chesvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhesvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhesvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zhesvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_chesvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chesvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chesvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhesvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhesvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhesvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chetrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, d : [] c_float, e : [] c_float, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, d : [] c_float, e : [] c_float, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_chetrd_work(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zhetrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, d : [] c_double, e : [] c_double, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, d : [] c_double, e : [] c_double, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zhetrd_work(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_chetrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_chetrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zhetrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zhetrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_chetri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chetri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64)) : c_int{
  return LAPACKE_chetri_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_zhetri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zhetri_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_chetrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chetrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhetrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhetrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chfrk_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_float, a : [] complex(64), lda : c_int, beta : c_float, c : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chfrk_work(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_float, a : [] complex(64), lda : c_int, beta : c_float, c : [] complex(64)) : c_int{
  return LAPACKE_chfrk_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_zhfrk_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_double, a : [] complex(128), lda : c_int, beta : c_double, c : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhfrk_work(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_double, a : [] complex(128), lda : c_int, beta : c_double, c : [] complex(128)) : c_int{
  return LAPACKE_zhfrk_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_shgeqz_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, t : [] c_float, ldt : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_shgeqz_work(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, t : [] c_float, ldt : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_shgeqz_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alphar, alphai, beta, q, ldq, z, ldz, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dhgeqz_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, t : [] c_double, ldt : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dhgeqz_work(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, t : [] c_double, ldt : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dhgeqz_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alphar, alphai, beta, q, ldq, z, ldz, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_chgeqz_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, t : [] complex(64), ldt : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chgeqz_work(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, t : [] complex(64), ldt : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_chgeqz_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alpha, beta, q, ldq, z, ldz, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhgeqz_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, t : [] complex(128), ldt : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhgeqz_work(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, t : [] complex(128), ldt : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zhgeqz_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, t, ldt, alpha, beta, q, ldq, z, ldz, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_chpcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chpcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_chpcon_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_zhpcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zhpcon_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_chpev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chpev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chpev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhpev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhpev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chpevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_chpevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zhpevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zhpevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_chpevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chpevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhpevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhpevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_chpgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64)) : c_int{
  return LAPACKE_chpgst_work(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_zhpgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128)) : c_int{
  return LAPACKE_zhpgst_work(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_chpgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chpgv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhpgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhpgv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chpgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_chpgvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zhpgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zhpgvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_chpgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(64), bp : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_chpgvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_zhpgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] complex(128), bp : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_zhpgvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, work, rwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_chprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chpsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chpsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chpsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhpsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhpsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chpsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_chpsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_chpsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zhpsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zhpsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zhpsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_chptrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), d : [] c_float, e : [] c_float, tau : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chptrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), d : [] c_float, e : [] c_float, tau : [] complex(64)) : c_int{
  return LAPACKE_chptrd_work(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_zhptrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), d : [] c_double, e : [] c_double, tau : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), d : [] c_double, e : [] c_double, tau : [] complex(128)) : c_int{
  return LAPACKE_zhptrd_work(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_chptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int{
  return LAPACKE_chptrf_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zhptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int{
  return LAPACKE_zhptrf_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_chptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, work : [] complex(64)) : c_int{
  return LAPACKE_chptri_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_zhptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zhptri_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_chptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_shsein_work(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_float, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_shsein_work(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_float, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_shsein_work(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, wr, wi, vl, ldvl, vr, ldvr, mm, m, work, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_dhsein_work(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_double, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dhsein_work(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_double, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_dhsein_work(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, wr, wi, vl, ldvl, vr, ldvr, mm, m, work, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_chsein_work(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chsein_work(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_chsein_work(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, w, vl, ldvl, vr, ldvr, mm, m, work, rwork, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_zhsein_work(matrix_order : lapack_memory_order, job : c_char, eigsrc : c_char, initv : c_char, chlapack_select : [] c_int, n : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double, ifaill : [] c_int, ifailr : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhsein_work(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, n : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double, ifaill : [] c_int, ifailr : [] c_int) : c_int{
  return LAPACKE_zhsein_work(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, n, h, ldh, w, vl, ldvl, vr, ldvr, mm, m, work, rwork, ifaill, ifailr);
}

pragma "no doc"
extern proc LAPACKE_shseqr_work(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_shseqr_work(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_float, ldh : c_int, wr : [] c_float, wi : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_shseqr_work(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, wr, wi, z, ldz, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dhseqr_work(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dhseqr_work(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] c_double, ldh : c_int, wr : [] c_double, wi : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dhseqr_work(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, wr, wi, z, ldz, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_chseqr_work(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chseqr_work(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(64), ldh : c_int, w : [] complex(64), z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_chseqr_work(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, w, z, ldz, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zhseqr_work(matrix_order : lapack_memory_order, job : c_char, compz : c_char, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhseqr_work(matrix_order : lapack_memory_order, job : string, compz : string, n : c_int, ilo : c_int, ihi : c_int, h : [] complex(128), ldh : c_int, w : [] complex(128), z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zhseqr_work(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, n, ilo, ihi, h, ldh, w, z, ldz, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_clacgv_work(n : c_int, x : [] complex(64), incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlacgv_work(n : c_int, x : [] complex(128), incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slacn2_work(n : c_int, v : [] c_float, x : [] c_float, isgn : [] c_int, ref est : c_float, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlacn2_work(n : c_int, v : [] c_double, x : [] c_double, isgn : [] c_int, ref est : c_double, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clacn2_work(n : c_int, v : [] complex(64), x : [] complex(64), ref est : c_float, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlacn2_work(n : c_int, v : [] complex(128), x : [] complex(128), ref est : c_double, ref kase : c_int, isave : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slacpy_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slacpy_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_slacpy_work(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dlacpy_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlacpy_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dlacpy_work(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_clacpy_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clacpy_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_clacpy_work(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zlacpy_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlacpy_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zlacpy_work(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_clacp2_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clacp2_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_clacp2_work(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zlacp2_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlacp2_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zlacp2_work(matrix_order, ascii(uplo) : c_char, m, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zlag2c_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, sa : [] complex(64), ldsa : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slag2d_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, sa : [] c_float, ldsa : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlag2s_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, sa : [] c_float, ldsa : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clag2z_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, sa : [] complex(64), ldsa : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slagge_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_float, a : [] c_float, lda : c_int, iseed : [] c_int, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlagge_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_double, a : [] c_double, lda : c_int, iseed : [] c_int, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_clagge_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_float, a : [] complex(64), lda : c_int, iseed : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlagge_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, d : [] c_double, a : [] complex(128), lda : c_int, iseed : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_claghe_work(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_float, a : [] complex(64), lda : c_int, iseed : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlaghe_work(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_double, a : [] complex(128), lda : c_int, iseed : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_slagsy_work(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_float, a : [] c_float, lda : c_int, iseed : [] c_int, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlagsy_work(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_double, a : [] c_double, lda : c_int, iseed : [] c_int, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_clagsy_work(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_float, a : [] complex(64), lda : c_int, iseed : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlagsy_work(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_double, a : [] complex(128), lda : c_int, iseed : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_slapmr_work(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] c_float, ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlapmr_work(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] c_double, ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clapmr_work(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] complex(64), ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlapmr_work(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] complex(128), ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slartgp_work(f : c_float, g : c_float, ref cs : c_float, ref sn : c_float, ref r : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlartgp_work(f : c_double, g : c_double, ref cs : c_double, ref sn : c_double, ref r : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_slartgs_work(x : c_float, y : c_float, sigma : c_float, ref cs : c_float, ref sn : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlartgs_work(x : c_double, y : c_double, sigma : c_double, ref cs : c_double, ref sn : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_slapy2_work(x : c_float, y : c_float) : c_float;

pragma "no doc"
extern proc LAPACKE_dlapy2_work(x : c_double, y : c_double) : c_double;

pragma "no doc"
extern proc LAPACKE_slapy3_work(x : c_float, y : c_float, z : c_float) : c_float;

pragma "no doc"
extern proc LAPACKE_dlapy3_work(x : c_double, y : c_double, z : c_double) : c_double;

pragma "no doc"
extern proc LAPACKE_slamch_work(cmach : c_char) : c_float;

pragma "no doc"
inline proc LAPACKE_slamch_work(cmach : string) : c_float{
  return LAPACKE_slamch_work(ascii(cmach) : c_char);
}

pragma "no doc"
extern proc LAPACKE_dlamch_work(cmach : c_char) : c_double;

pragma "no doc"
inline proc LAPACKE_dlamch_work(cmach : string) : c_double{
  return LAPACKE_dlamch_work(ascii(cmach) : c_char);
}

pragma "no doc"
extern proc LAPACKE_slange_work(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_slange_work(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_slange_work(matrix_order, ascii(norm) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_dlange_work(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_dlange_work(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_dlange_work(matrix_order, ascii(norm) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_clange_work(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_clange_work(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_clange_work(matrix_order, ascii(norm) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_zlange_work(matrix_order : lapack_memory_order, norm : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_zlange_work(matrix_order : lapack_memory_order, norm : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_zlange_work(matrix_order, ascii(norm) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_clanhe_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_clanhe_work(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_clanhe_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_zlanhe_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_zlanhe_work(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_zlanhe_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_slansy_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_slansy_work(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_slansy_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_dlansy_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_dlansy_work(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_dlansy_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_clansy_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_clansy_work(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_clansy_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_zlansy_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_zlansy_work(matrix_order : lapack_memory_order, norm : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_zlansy_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_slantr_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_slantr_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_slantr_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_dlantr_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_dlantr_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_dlantr_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_clantr_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
inline proc LAPACKE_clantr_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, work : [] c_float) : c_float{
  return LAPACKE_clantr_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_zlantr_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
inline proc LAPACKE_zlantr_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, work : [] c_double) : c_double{
  return LAPACKE_zlantr_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, m, n, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_slarfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int, work : [] c_float, ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slarfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int, work : [] c_float, ldwork : c_int) : c_int{
  return LAPACKE_slarfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_dlarfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int, work : [] c_double, ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlarfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int, work : [] c_double, ldwork : c_int) : c_int{
  return LAPACKE_dlarfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_clarfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int, work : [] complex(64), ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clarfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int, work : [] complex(64), ldwork : c_int) : c_int{
  return LAPACKE_clarfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_zlarfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int, work : [] complex(128), ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlarfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int, work : [] complex(128), ldwork : c_int) : c_int{
  return LAPACKE_zlarfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, v, ldv, t, ldt, c, ldc, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_slarfg_work(n : c_int, ref alpha : c_float, x : [] c_float, incx : c_int, ref tau : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlarfg_work(n : c_int, ref alpha : c_double, x : [] c_double, incx : c_int, ref tau : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_clarfg_work(n : c_int, ref alpha : complex(64), x : [] complex(64), incx : c_int, ref tau : complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlarfg_work(n : c_int, ref alpha : complex(128), x : [] complex(128), incx : c_int, ref tau : complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_slarft_work(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] c_float, ldv : c_int, tau : [] c_float, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slarft_work(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] c_float, ldv : c_int, tau : [] c_float, t : [] c_float, ldt : c_int) : c_int{
  return LAPACKE_slarft_work(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_dlarft_work(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] c_double, ldv : c_int, tau : [] c_double, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlarft_work(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] c_double, ldv : c_int, tau : [] c_double, t : [] c_double, ldt : c_int) : c_int{
  return LAPACKE_dlarft_work(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_clarft_work(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, tau : [] complex(64), t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clarft_work(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] complex(64), ldv : c_int, tau : [] complex(64), t : [] complex(64), ldt : c_int) : c_int{
  return LAPACKE_clarft_work(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_zlarft_work(matrix_order : lapack_memory_order, direct : c_char, storev : c_char, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, tau : [] complex(128), t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlarft_work(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] complex(128), ldv : c_int, tau : [] complex(128), t : [] complex(128), ldt : c_int) : c_int{
  return LAPACKE_zlarft_work(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, ldv, tau, t, ldt);
}

pragma "no doc"
extern proc LAPACKE_slarfx_work(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] c_float, tau : c_float, c : [] c_float, ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_slarfx_work(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] c_float, tau : c_float, c : [] c_float, ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_slarfx_work(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_dlarfx_work(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] c_double, tau : c_double, c : [] c_double, ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dlarfx_work(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] c_double, tau : c_double, c : [] c_double, ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_dlarfx_work(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_clarfx_work(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] complex(64), tau : complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_clarfx_work(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] complex(64), tau : complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_clarfx_work(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_zlarfx_work(matrix_order : lapack_memory_order, side : c_char, m : c_int, n : c_int, v : [] complex(128), tau : complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zlarfx_work(matrix_order : lapack_memory_order, side : string, m : c_int, n : c_int, v : [] complex(128), tau : complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zlarfx_work(matrix_order, ascii(side) : c_char, m, n, v, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_slarnv_work(idist : c_int, iseed : [] c_int, n : c_int, x : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlarnv_work(idist : c_int, iseed : [] c_int, n : c_int, x : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_clarnv_work(idist : c_int, iseed : [] c_int, n : c_int, x : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zlarnv_work(idist : c_int, iseed : [] c_int, n : c_int, x : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_slaset_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : c_float, beta : c_float, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slaset_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : c_float, beta : c_float, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_slaset_work(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlaset_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : c_double, beta : c_double, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlaset_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : c_double, beta : c_double, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dlaset_work(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_claset_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : complex(64), beta : complex(64), a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_claset_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : complex(64), beta : complex(64), a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_claset_work(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlaset_work(matrix_order : lapack_memory_order, uplo : c_char, m : c_int, n : c_int, alpha : complex(128), beta : complex(128), a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlaset_work(matrix_order : lapack_memory_order, uplo : string, m : c_int, n : c_int, alpha : complex(128), beta : complex(128), a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zlaset_work(matrix_order, ascii(uplo) : c_char, m, n, alpha, beta, a, lda);
}

pragma "no doc"
extern proc LAPACKE_slasrt_work(id : c_char, n : c_int, d : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_slasrt_work(id : string, n : c_int, d : [] c_float) : c_int{
  return LAPACKE_slasrt_work(ascii(id) : c_char, n, d);
}

pragma "no doc"
extern proc LAPACKE_dlasrt_work(id : c_char, n : c_int, d : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dlasrt_work(id : string, n : c_int, d : [] c_double) : c_int{
  return LAPACKE_dlasrt_work(ascii(id) : c_char, n, d);
}

pragma "no doc"
extern proc LAPACKE_slaswp_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlaswp_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_claswp_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlaswp_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : c_char, a : [] c_float, lda : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_slatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : string, a : [] c_float, lda : c_int, work : [] c_float) : c_int{
  return LAPACKE_slatms_work(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_dlatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : c_char, a : [] c_double, lda : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dlatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : string, a : [] c_double, lda : c_int, work : [] c_double) : c_int{
  return LAPACKE_dlatms_work(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_clatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : c_char, a : [] complex(64), lda : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_clatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_float, mode : c_int, cond : c_float, dmax : c_float, kl : c_int, ku : c_int, pack : string, a : [] complex(64), lda : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_clatms_work(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_zlatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : c_char, iseed : [] c_int, sym : c_char, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : c_char, a : [] complex(128), lda : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zlatms_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, dist : string, iseed : [] c_int, sym : string, d : [] c_double, mode : c_int, cond : c_double, dmax : c_double, kl : c_int, ku : c_int, pack : string, a : [] complex(128), lda : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zlatms_work(matrix_order, m, n, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, lda, work);
}

pragma "no doc"
extern proc LAPACKE_slauum_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_slauum_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_slauum_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dlauum_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dlauum_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dlauum_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_clauum_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_clauum_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_clauum_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zlauum_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zlauum_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zlauum_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_sopgtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, tau : [] c_float, q : [] c_float, ldq : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sopgtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, tau : [] c_float, q : [] c_float, ldq : c_int, work : [] c_float) : c_int{
  return LAPACKE_sopgtr_work(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_dopgtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, tau : [] c_double, q : [] c_double, ldq : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dopgtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, tau : [] c_double, q : [] c_double, ldq : c_int, work : [] c_double) : c_int{
  return LAPACKE_dopgtr_work(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_sopmtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] c_float, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sopmtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] c_float, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_sopmtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_dopmtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] c_double, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dopmtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] c_double, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_dopmtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_sorgbr_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sorgbr_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sorgbr_work(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dorgbr_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dorgbr_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dorgbr_work(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sorghr_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dorghr_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sorglq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dorglq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgql_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dorgql_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgqr_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dorgqr_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgrq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dorgrq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sorgtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sorgtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sorgtr_work(matrix_order, ascii(uplo) : c_char, n, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dorgtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dorgtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dorgtr_work(matrix_order, ascii(uplo) : c_char, n, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormbr_work(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormbr_work(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormbr_work(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormbr_work(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormbr_work(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormbr_work(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormhr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormhr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormhr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormhr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormhr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormhr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormlq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormlq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormlq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormlq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormlq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormlq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormql_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormql_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormql_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormql_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormql_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormql_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormqr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormqr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormqr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormqr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormqr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormqr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormrq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormrq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormrq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormrq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormrq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormrq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormrz_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormrz_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormrz_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormrz_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormrz_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormrz_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sormtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sormtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, c : [] c_float, ldc : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sormtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dormtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dormtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, c : [] c_double, ldc : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dormtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_spbcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_spbcon_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dpbcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dpbcon_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cpbcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cpbcon_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zpbcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zpbcon_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spbequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spbequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_spbequ_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_dpbequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_dpbequ_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_cpbequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_cpbequ_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_zpbequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_zpbequ_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_spbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_spbrfs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dpbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dpbrfs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cpbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cpbrfs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zpbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zpbrfs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spbstf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] c_float, ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbstf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] c_float, ldbb : c_int) : c_int{
  return LAPACKE_spbstf_work(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_dpbstf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] c_double, ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbstf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] c_double, ldbb : c_int) : c_int{
  return LAPACKE_dpbstf_work(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_cpbstf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] complex(64), ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbstf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] complex(64), ldbb : c_int) : c_int{
  return LAPACKE_cpbstf_work(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_zpbstf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kb : c_int, bb : [] complex(128), ldbb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbstf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] complex(128), ldbb : c_int) : c_int{
  return LAPACKE_zpbstf_work(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

pragma "no doc"
extern proc LAPACKE_spbsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spbsv_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpbsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpbsv_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpbsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpbsv_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpbsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpbsv_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spbsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, afb : [] c_float, ldafb : c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_spbsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dpbsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, afb : [] c_double, ldafb : c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dpbsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cpbsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, afb : [] complex(64), ldafb : c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cpbsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zpbsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, afb : [] complex(128), ldafb : c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zpbsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, afb, ldafb, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spbtrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbtrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int) : c_int{
  return LAPACKE_spbtrf_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_dpbtrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbtrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int) : c_int{
  return LAPACKE_dpbtrf_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_cpbtrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbtrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int) : c_int{
  return LAPACKE_cpbtrf_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_zpbtrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbtrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int) : c_int{
  return LAPACKE_zpbtrf_work(matrix_order, ascii(uplo) : c_char, n, kd, ab, ldab);
}

pragma "no doc"
extern proc LAPACKE_spbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spbtrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spbtrs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpbtrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpbtrs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpbtrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpbtrs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpbtrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpbtrs_work(matrix_order, ascii(uplo) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spftrf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spftrf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_float) : c_int{
  return LAPACKE_spftrf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_dpftrf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpftrf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_double) : c_int{
  return LAPACKE_dpftrf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_cpftrf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpftrf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(64)) : c_int{
  return LAPACKE_cpftrf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_zpftrf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpftrf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(128)) : c_int{
  return LAPACKE_zpftrf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_spftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_float) : c_int{
  return LAPACKE_spftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_dpftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_double) : c_int{
  return LAPACKE_dpftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_cpftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(64)) : c_int{
  return LAPACKE_cpftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_zpftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(128)) : c_int{
  return LAPACKE_zpftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_spftrs_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spftrs_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spftrs_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpftrs_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpftrs_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpftrs_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpftrs_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpftrs_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpftrs_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpftrs_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpftrs_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpftrs_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, nrhs, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spocon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spocon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_spocon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dpocon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpocon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dpocon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cpocon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpocon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cpocon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zpocon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpocon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zpocon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spoequ_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dpoequ_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cpoequ_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zpoequ_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_spoequb_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dpoequb_work(matrix_order : lapack_memory_order, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cpoequb_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zpoequb_work(matrix_order : lapack_memory_order, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sporfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sporfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sporfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dporfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dporfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dporfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cporfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cporfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cporfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zporfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zporfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zporfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sporfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sporfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sporfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dporfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dporfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dporfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cporfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cporfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cporfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zporfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zporfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zporfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sposv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sposv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sposv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dposv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dposv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dposv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cposv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cposv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cposv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zposv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zposv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zposv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsposv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, work : [] c_double, swork : [] c_float, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsposv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, work : [] c_double, swork : [] c_float, ref chlapack_iter : c_int) : c_int{
  return LAPACKE_dsposv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, work, swork, chlapack_iter);
}

pragma "no doc"
extern proc LAPACKE_zcposv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, work : [] complex(128), swork : [] complex(64), rwork : [] c_double, ref chlapack_iter : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zcposv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, work : [] complex(128), swork : [] complex(64), rwork : [] c_double, ref chlapack_iter : c_int) : c_int{
  return LAPACKE_zcposv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, work, swork, rwork, chlapack_iter);
}

pragma "no doc"
extern proc LAPACKE_sposvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sposvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sposvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dposvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dposvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dposvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cposvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cposvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cposvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zposvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zposvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zposvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sposvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sposvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sposvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dposvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dposvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dposvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cposvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cposvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cposvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zposvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zposvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zposvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spotrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spotrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_spotrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dpotrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpotrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dpotrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_cpotrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpotrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_cpotrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zpotrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpotrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zpotrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_spotri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spotri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_spotri_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dpotri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpotri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dpotri_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_cpotri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpotri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_cpotri_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zpotri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpotri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zpotri_work(matrix_order, ascii(uplo) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_spotrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spotrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spotrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpotrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpotrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpotrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpotrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpotrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpotrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpotrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpotrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpotrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sppcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sppcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sppcon_work(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dppcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dppcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dppcon_work(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cppcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cppcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cppcon_work(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zppcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zppcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zppcon_work(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sppequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sppequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_sppequ_work(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_dppequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dppequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_dppequ_work(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_cppequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cppequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), s : [] c_float, ref scond : c_float, ref amax : c_float) : c_int{
  return LAPACKE_cppequ_work(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_zppequ_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zppequ_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), s : [] c_double, ref scond : c_double, ref amax : c_double) : c_int{
  return LAPACKE_zppequ_work(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

pragma "no doc"
extern proc LAPACKE_spprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_spprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dpprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dpprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cpprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cpprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zpprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zpprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sppsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sppsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sppsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dppsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dppsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dppsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cppsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cppsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cppsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zppsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zppsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zppsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sppsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sppsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sppsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dppsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dppsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dppsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cppsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cppsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cppsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zppsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zppsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zppsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float) : c_int{
  return LAPACKE_spptrf_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_dpptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dpptrf_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_cpptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_cpptrf_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_zpptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_zpptrf_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_spptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float) : c_int{
  return LAPACKE_spptri_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_dpptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dpptri_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_cpptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cpptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_cpptri_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_zpptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zpptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_zpptri_work(matrix_order, ascii(uplo) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_spptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_spptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_spptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dpptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dpptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dpptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cpptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_spstrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spstrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float, work : [] c_float) : c_int{
  return LAPACKE_spstrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol, work);
}

pragma "no doc"
extern proc LAPACKE_dpstrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpstrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double, work : [] c_double) : c_int{
  return LAPACKE_dpstrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol, work);
}

pragma "no doc"
extern proc LAPACKE_cpstrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpstrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_float, work : [] c_float) : c_int{
  return LAPACKE_cpstrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol, work);
}

pragma "no doc"
extern proc LAPACKE_zpstrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpstrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, piv : [] c_int, ref rank : c_int, tol : c_double, work : [] c_double) : c_int{
  return LAPACKE_zpstrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, piv, rank, tol, work);
}

pragma "no doc"
extern proc LAPACKE_sptcon_work(n : c_int, d : [] c_float, e : [] c_float, anorm : c_float, ref rcond : c_float, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dptcon_work(n : c_int, d : [] c_double, e : [] c_double, anorm : c_double, ref rcond : c_double, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cptcon_work(n : c_int, d : [] c_float, e : [] complex(64), anorm : c_float, ref rcond : c_float, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_zptcon_work(n : c_int, d : [] c_double, e : [] complex(128), anorm : c_double, ref rcond : c_double, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_spteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_spteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_spteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dpteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dpteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dpteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_cpteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cpteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_cpteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_zpteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zpteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_zpteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_sptrfs_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dptrfs_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cptrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cptrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cptrfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zptrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zptrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zptrfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sptsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dptsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cptsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zptsv_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sptsvx_work(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sptsvx_work(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float) : c_int{
  return LAPACKE_sptsvx_work(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr, work);
}

pragma "no doc"
extern proc LAPACKE_dptsvx_work(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dptsvx_work(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double) : c_int{
  return LAPACKE_dptsvx_work(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr, work);
}

pragma "no doc"
extern proc LAPACKE_cptsvx_work(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cptsvx_work(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cptsvx_work(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zptsvx_work(matrix_order : lapack_memory_order, fact : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zptsvx_work(matrix_order : lapack_memory_order, fact : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zptsvx_work(matrix_order, ascii(fact) : c_char, n, nrhs, d, e, df, ef, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_spttrf_work(n : c_int, d : [] c_float, e : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dpttrf_work(n : c_int, d : [] c_double, e : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cpttrf_work(n : c_int, d : [] c_float, e : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zpttrf_work(n : c_int, d : [] c_double, e : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_spttrs_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_float, e : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dpttrs_work(matrix_order : lapack_memory_order, n : c_int, nrhs : c_int, d : [] c_double, e : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cpttrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cpttrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cpttrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zpttrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zpttrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zpttrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, d, e, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ssbev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_ssbev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dsbev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dsbev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_ssbevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_ssbevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dsbevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dsbevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ssbevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssbevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsbevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsbevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssbgst_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, x : [] c_float, ldx : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgst_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, x : [] c_float, ldx : c_int, work : [] c_float) : c_int{
  return LAPACKE_ssbgst_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx, work);
}

pragma "no doc"
extern proc LAPACKE_dsbgst_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, x : [] c_double, ldx : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgst_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, x : [] c_double, ldx : c_int, work : [] c_double) : c_int{
  return LAPACKE_dsbgst_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, x, ldx, work);
}

pragma "no doc"
extern proc LAPACKE_ssbgv_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgv_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_ssbgv_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dsbgv_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgv_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dsbgv_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_ssbgvd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgvd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_ssbgvd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dsbgvd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgvd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dsbgvd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ssbgvx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbgvx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_float, ldab : c_int, bb : [] c_float, ldbb : c_int, q : [] c_float, ldq : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssbgvx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsbgvx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbgvx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] c_double, ldab : c_int, bb : [] c_double, ldbb : c_int, q : [] c_double, ldq : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsbgvx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, ldab, bb, ldbb, q, ldq, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssbtrd_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssbtrd_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ldq : c_int, work : [] c_float) : c_int{
  return LAPACKE_ssbtrd_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_dsbtrd_work(matrix_order : lapack_memory_order, vect : c_char, uplo : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsbtrd_work(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ldq : c_int, work : [] c_double) : c_int{
  return LAPACKE_dsbtrd_work(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, ldab, d, e, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_ssfrk_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_float, a : [] c_float, lda : c_int, beta : c_float, c : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssfrk_work(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_float, a : [] c_float, lda : c_int, beta : c_float, c : [] c_float) : c_int{
  return LAPACKE_ssfrk_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_dsfrk_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, trans : c_char, n : c_int, k : c_int, alpha : c_double, a : [] c_double, lda : c_int, beta : c_double, c : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsfrk_work(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, n : c_int, k : c_int, alpha : c_double, a : [] c_double, lda : c_int, beta : c_double, c : [] c_double) : c_int{
  return LAPACKE_dsfrk_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, n, k, alpha, a, lda, beta, c);
}

pragma "no doc"
extern proc LAPACKE_sspcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sspcon_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dspcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dspcon_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cspcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cspcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_cspcon_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_zspcon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zspcon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zspcon_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_sspev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sspev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_sspev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dspev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dspev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dspev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_sspevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sspevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dspevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dspevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_sspevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_sspevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dspevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dspevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_sspgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float) : c_int{
  return LAPACKE_sspgst_work(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_dspgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double) : c_int{
  return LAPACKE_dspgst_work(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

pragma "no doc"
extern proc LAPACKE_sspgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_sspgv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dspgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dspgv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_sspgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sspgvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dspgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dspgvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_sspgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_float, bp : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_float, bp : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_sspgvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dspgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, ap : [] c_double, bp : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspgvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] c_double, bp : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dspgvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_ssprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dsprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_csprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_csprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zsprfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsprfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zsprfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_sspsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_sspsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dspsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dspsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_cspsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cspsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_cspsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zspsv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zspsv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zspsv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sspsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sspsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sspsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dspsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dspsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dspsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_cspsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cspsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_cspsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zspsvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zspsvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zspsvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ssptrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, d : [] c_float, e : [] c_float, tau : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, d : [] c_float, e : [] c_float, tau : [] c_float) : c_int{
  return LAPACKE_ssptrd_work(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_dsptrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, d : [] c_double, e : [] c_double, tau : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, d : [] c_double, e : [] c_double, tau : [] c_double) : c_int{
  return LAPACKE_dsptrd_work(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

pragma "no doc"
extern proc LAPACKE_ssptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, ipiv : [] c_int) : c_int{
  return LAPACKE_ssptrf_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, ipiv : [] c_int) : c_int{
  return LAPACKE_dsptrf_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int) : c_int{
  return LAPACKE_csptrf_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsptrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsptrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int) : c_int{
  return LAPACKE_zsptrf_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, ipiv : [] c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, ipiv : [] c_int, work : [] c_float) : c_int{
  return LAPACKE_ssptri_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_dsptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, ipiv : [] c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, ipiv : [] c_int, work : [] c_double) : c_int{
  return LAPACKE_dsptri_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_csptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), ipiv : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_csptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, work : [] complex(64)) : c_int{
  return LAPACKE_csptri_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_zsptri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), ipiv : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zsptri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zsptri_work(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_ssptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsptrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsptrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsptrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, ap, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sstebz_work(range : c_char, order : c_char, n : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, d : [] c_float, e : [] c_float, ref m : c_int, ref nsplit : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstebz_work(range : string, order : string, n : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, d : [] c_float, e : [] c_float, ref m : c_int, ref nsplit : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_sstebz_work(ascii(range) : c_char, ascii(order) : c_char, n, vl, vu, il, iu, abstol, d, e, m, nsplit, w, iblock, isplit, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dstebz_work(range : c_char, order : c_char, n : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, d : [] c_double, e : [] c_double, ref m : c_int, ref nsplit : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstebz_work(range : string, order : string, n : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, d : [] c_double, e : [] c_double, ref m : c_int, ref nsplit : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dstebz_work(ascii(range) : c_char, ascii(order) : c_char, n, vl, vu, il, iu, abstol, d, e, m, nsplit, w, iblock, isplit, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_sstedc_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstedc_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sstedc_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dstedc_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstedc_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dstedc_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_cstedc_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cstedc_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_cstedc_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zstedc_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zstedc_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zstedc_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work, lwork, rwork, lrwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_sstegr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstegr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sstegr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dstegr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstegr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dstegr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_cstegr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cstegr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_cstegr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zstegr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zstegr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zstegr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_sstein_work(matrix_order : lapack_memory_order, n : c_int, d : [] c_float, e : [] c_float, m : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dstein_work(matrix_order : lapack_memory_order, n : c_int, d : [] c_double, e : [] c_double, m : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cstein_work(matrix_order : lapack_memory_order, n : c_int, d : [] c_float, e : [] c_float, m : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, z : [] complex(64), ldz : c_int, work : [] c_float, iwork : [] c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zstein_work(matrix_order : lapack_memory_order, n : c_int, d : [] c_double, e : [] c_double, m : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, z : [] complex(128), ldz : c_int, work : [] c_double, iwork : [] c_int, ifailv : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sstemr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstemr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sstemr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dstemr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstemr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dstemr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_cstemr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cstemr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, ref m : c_int, w : [] c_float, z : [] complex(64), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_cstemr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_zstemr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zstemr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, ref m : c_int, w : [] c_double, z : [] complex(128), ldz : c_int, nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_zstemr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, isuppz, tryrac, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ssteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_ssteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dsteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dsteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_csteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_csteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_zsteqr_work(matrix_order : lapack_memory_order, compz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsteqr_work(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_zsteqr_work(matrix_order, ascii(compz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_ssterf_work(n : c_int, d : [] c_float, e : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dsterf_work(n : c_int, d : [] c_double, e : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_sstev_work(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sstev_work(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float) : c_int{
  return LAPACKE_sstev_work(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_dstev_work(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dstev_work(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double) : c_int{
  return LAPACKE_dstev_work(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz, work);
}

pragma "no doc"
extern proc LAPACKE_sstevd_work(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstevd_work(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sstevd_work(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dstevd_work(matrix_order : lapack_memory_order, jobz : c_char, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstevd_work(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dstevd_work(matrix_order, ascii(jobz) : c_char, n, d, e, z, ldz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_sstevr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstevr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_sstevr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dstevr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstevr_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dstevr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_sstevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sstevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_float, e : [] c_float, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_sstevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dstevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dstevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] c_double, e : [] c_double, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dstevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, ldz, work, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssycon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssycon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_ssycon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsycon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsycon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dsycon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_csycon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_csycon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, anorm : c_float, ref rcond : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_csycon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_zsycon_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zsycon_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, anorm : c_double, ref rcond : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zsycon_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, anorm, rcond, work);
}

pragma "no doc"
extern proc LAPACKE_ssyequb_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyequb_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] c_float) : c_int{
  return LAPACKE_ssyequb_work(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax, work);
}

pragma "no doc"
extern proc LAPACKE_dsyequb_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyequb_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] c_double) : c_int{
  return LAPACKE_dsyequb_work(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax, work);
}

pragma "no doc"
extern proc LAPACKE_csyequb_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_csyequb_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] complex(64)) : c_int{
  return LAPACKE_csyequb_work(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax, work);
}

pragma "no doc"
extern proc LAPACKE_zsyequb_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyequb_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] complex(128)) : c_int{
  return LAPACKE_zsyequb_work(matrix_order, ascii(uplo) : c_char, n, a, lda, s, scond, amax, work);
}

pragma "no doc"
extern proc LAPACKE_ssyev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, w : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, w : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_ssyev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsyev_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, w : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyev_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, w : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dsyev_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssyevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, w : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, w : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_ssyevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dsyevd_work(matrix_order : lapack_memory_order, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, w : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyevd_work(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, w : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dsyevd_work(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, w, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ssyevr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyevr_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, isuppz : [] c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_ssyevr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dsyevr_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyevr_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, isuppz : [] c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dsyevr_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, isuppz, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ssyevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssyevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsyevx_work(matrix_order : lapack_memory_order, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyevx_work(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsyevx_work(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssygst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssygst_work(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsygst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygst_work(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsygst_work(matrix_order, itype, ascii(uplo) : c_char, n, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ssygv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_ssygv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsygv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygv_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dsygv_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssygvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, w : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_ssygvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dsygvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygvd_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, w : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dsygvd_work(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, w, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ssygvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssygvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : c_float, vu : c_float, il : c_int, iu : c_int, abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ldz : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_ssygvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_dsygvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : c_char, range : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsygvx_work(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : c_double, vu : c_double, il : c_int, iu : c_int, abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ldz : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int, ifail : [] c_int) : c_int{
  return LAPACKE_dsygvx_work(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, lda, b, ldb, vl, vu, il, iu, abstol, m, w, z, ldz, work, lwork, iwork, ifail);
}

pragma "no doc"
extern proc LAPACKE_ssyrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_ssyrfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsyrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dsyrfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_csyrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csyrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_csyrfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zsyrfs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyrfs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zsyrfs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ssyrfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyrfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_ssyrfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsyrfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyrfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dsyrfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_csyrfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csyrfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_csyrfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zsyrfsx_work(matrix_order : lapack_memory_order, uplo : c_char, equed : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyrfsx_work(matrix_order : lapack_memory_order, uplo : string, equed : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zsyrfsx_work(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, s, b, ldb, x, ldx, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ssysv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_ssysv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsysv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dsysv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_csysv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csysv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_csysv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zsysv_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysv_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zsysv_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssysv_rook_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysv_rook_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_ssysv_rook_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsysv_rook_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysv_rook_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dsysv_rook_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_csysv_rook_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csysv_rook_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_csysv_rook_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zsysv_rook_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysv_rook_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zsysv_rook_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssysvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_ssysvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsysvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dsysvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_csysvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csysvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), lwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_csysvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_zsysvx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysvx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), lwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_zsysvx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, x, ldx, rcond, ferr, berr, work, lwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_ssysvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, af : [] c_float, ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_ssysvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsysvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, af : [] c_double, ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dsysvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_csysvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_csysvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, af : [] complex(64), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_float, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_csysvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_zsysvxx_work(matrix_order : lapack_memory_order, fact : c_char, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysvxx_work(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, af : [] complex(128), ldaf : c_int, ipiv : [] c_int, ref equed : string, s : [] c_double, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_zsysvxx_work(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, nrhs, a, lda, af, ldaf, ipiv, ascii(equed) : c_char, s, b, ldb, x, ldx, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ssytrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, d : [] c_float, e : [] c_float, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, d : [] c_float, e : [] c_float, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_ssytrd_work(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsytrd_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, d : [] c_double, e : [] c_double, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrd_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, d : [] c_double, e : [] c_double, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dsytrd_work(matrix_order, ascii(uplo) : c_char, n, a, lda, d, e, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssytrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_ssytrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsytrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dsytrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_csytrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_csytrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zsytrf_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytrf_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zsytrf_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssytri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float) : c_int{
  return LAPACKE_ssytri_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_dsytri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double) : c_int{
  return LAPACKE_dsytri_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_csytri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_csytri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64)) : c_int{
  return LAPACKE_csytri_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_zsytri_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytri_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zsytri_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_ssytrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssytrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsytrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsytrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csytrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csytrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsytrs_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytrs_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsytrs_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stbcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stbcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] c_float, ldab : c_int, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_stbcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtbcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtbcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] c_double, ldab : c_int, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dtbcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctbcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctbcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] complex(64), ldab : c_int, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctbcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztbcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztbcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] complex(128), ldab : c_int, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztbcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, ldab, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_stbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stbrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_stbrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtbrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dtbrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctbrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctbrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztbrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztbrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztbrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_stbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stbtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_float, ldab : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stbtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtbtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] c_double, ldab : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtbtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctbtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(64), ldab : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctbtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztbtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztbtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, nrhs : c_int, ab : [] complex(128), ldab : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztbtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, nrhs, ab, ldab, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stfsm_work(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : c_float, a : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stfsm_work(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : c_float, a : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stfsm_work(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtfsm_work(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : c_double, a : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtfsm_work(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : c_double, a : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtfsm_work(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctfsm_work(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : complex(64), a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctfsm_work(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : complex(64), a : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctfsm_work(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztfsm_work(matrix_order : lapack_memory_order, transr : c_char, side : c_char, uplo : c_char, trans : c_char, diag : c_char, m : c_int, n : c_int, alpha : complex(128), a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztfsm_work(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, m : c_int, n : c_int, alpha : complex(128), a : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztfsm_work(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, m, n, alpha, a, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] c_float) : c_int{
  return LAPACKE_stftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_dtftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] c_double) : c_int{
  return LAPACKE_dtftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_ctftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] complex(64)) : c_int{
  return LAPACKE_ctftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_ztftri_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztftri_work(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, n : c_int, a : [] complex(128)) : c_int{
  return LAPACKE_ztftri_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a);
}

pragma "no doc"
extern proc LAPACKE_stfttp_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_float, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stfttp_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_float, ap : [] c_float) : c_int{
  return LAPACKE_stfttp_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_dtfttp_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_double, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtfttp_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_double, ap : [] c_double) : c_int{
  return LAPACKE_dtfttp_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_ctfttp_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(64), ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctfttp_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(64), ap : [] complex(64)) : c_int{
  return LAPACKE_ctfttp_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_ztfttp_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(128), ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztfttp_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(128), ap : [] complex(128)) : c_int{
  return LAPACKE_ztfttp_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

pragma "no doc"
extern proc LAPACKE_stfttr_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_float, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stfttr_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_float, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_stfttr_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dtfttr_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] c_double, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtfttr_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] c_double, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dtfttr_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ctfttr_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(64), a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctfttr_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(64), a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_ctfttr_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ztfttr_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, arf : [] complex(128), a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztfttr_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(128), a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_ztfttr_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, a, lda);
}

pragma "no doc"
extern proc LAPACKE_stgevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] c_float, lds : c_int, p : [] c_float, ldp : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stgevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] c_float, lds : c_int, p : [] c_float, ldp : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_float) : c_int{
  return LAPACKE_stgevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m, work);
}

pragma "no doc"
extern proc LAPACKE_dtgevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] c_double, lds : c_int, p : [] c_double, ldp : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] c_double, lds : c_int, p : [] c_double, ldp : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_double) : c_int{
  return LAPACKE_dtgevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m, work);
}

pragma "no doc"
extern proc LAPACKE_ctgevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] complex(64), lds : c_int, p : [] complex(64), ldp : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] complex(64), lds : c_int, p : [] complex(64), ldp : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctgevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztgevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, s : [] complex(128), lds : c_int, p : [] complex(128), ldp : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, s : [] complex(128), lds : c_int, p : [] complex(128), ldp : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztgevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, s, lds, p, ldp, vl, ldvl, vr, ldvr, mm, m, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_stgexc_work(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dtgexc_work(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctgexc_work(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztgexc_work(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stgsen_work(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ldq : c_int, z : [] c_float, ldz : c_int, ref m : c_int, ref pl : c_float, ref pr : c_float, dif : [] c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dtgsen_work(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ldq : c_int, z : [] c_double, ldz : c_int, ref m : c_int, ref pl : c_double, ref pr : c_double, dif : [] c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctgsen_work(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ldq : c_int, z : [] complex(64), ldz : c_int, ref m : c_int, ref pl : c_float, ref pr : c_float, dif : [] c_float, work : [] complex(64), lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztgsen_work(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ldq : c_int, z : [] complex(128), ldz : c_int, ref m : c_int, ref pl : c_double, ref pr : c_double, dif : [] c_double, work : [] complex(128), lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stgsja_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, work : [] c_float, ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stgsja_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] c_float, ldu : c_int, v : [] c_float, ldv : c_int, q : [] c_float, ldq : c_int, work : [] c_float, ref ncycle : c_int) : c_int{
  return LAPACKE_stgsja_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, work, ncycle);
}

pragma "no doc"
extern proc LAPACKE_dtgsja_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, work : [] c_double, ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgsja_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] c_double, ldu : c_int, v : [] c_double, ldv : c_int, q : [] c_double, ldq : c_int, work : [] c_double, ref ncycle : c_int) : c_int{
  return LAPACKE_dtgsja_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, work, ncycle);
}

pragma "no doc"
extern proc LAPACKE_ctgsja_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, work : [] complex(64), ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgsja_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, tola : c_float, tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ldu : c_int, v : [] complex(64), ldv : c_int, q : [] complex(64), ldq : c_int, work : [] complex(64), ref ncycle : c_int) : c_int{
  return LAPACKE_ctgsja_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, work, ncycle);
}

pragma "no doc"
extern proc LAPACKE_ztgsja_work(matrix_order : lapack_memory_order, jobu : c_char, jobv : c_char, jobq : c_char, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, work : [] complex(128), ref ncycle : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgsja_work(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, m : c_int, p : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, tola : c_double, tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ldu : c_int, v : [] complex(128), ldv : c_int, q : [] complex(128), ldq : c_int, work : [] complex(128), ref ncycle : c_int) : c_int{
  return LAPACKE_ztgsja_work(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, work, ncycle);
}

pragma "no doc"
extern proc LAPACKE_stgsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stgsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_stgsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtgsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dtgsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctgsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int, work : [] complex(64), lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, dif : [] c_float, mm : c_int, ref m : c_int, work : [] complex(64), lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_ctgsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_ztgsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int, work : [] complex(128), lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, dif : [] c_double, mm : c_int, ref m : c_int, work : [] complex(128), lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_ztgsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, lda, b, ldb, vl, ldvl, vr, ldvr, s, dif, mm, m, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_stgsyl_work(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, d : [] c_float, ldd : c_int, e : [] c_float, lde : c_int, f : [] c_float, ldf : c_int, ref scale : c_float, ref dif : c_float, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stgsyl_work(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, d : [] c_float, ldd : c_int, e : [] c_float, lde : c_int, f : [] c_float, ldf : c_int, ref scale : c_float, ref dif : c_float, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_stgsyl_work(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtgsyl_work(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, d : [] c_double, ldd : c_int, e : [] c_double, lde : c_int, f : [] c_double, ldf : c_int, ref scale : c_double, ref dif : c_double, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtgsyl_work(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, d : [] c_double, ldd : c_int, e : [] c_double, lde : c_int, f : [] c_double, ldf : c_int, ref scale : c_double, ref dif : c_double, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dtgsyl_work(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctgsyl_work(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, d : [] complex(64), ldd : c_int, e : [] complex(64), lde : c_int, f : [] complex(64), ldf : c_int, ref scale : c_float, ref dif : c_float, work : [] complex(64), lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctgsyl_work(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, d : [] complex(64), ldd : c_int, e : [] complex(64), lde : c_int, f : [] complex(64), ldf : c_int, ref scale : c_float, ref dif : c_float, work : [] complex(64), lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_ctgsyl_work(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_ztgsyl_work(matrix_order : lapack_memory_order, trans : c_char, ijob : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, d : [] complex(128), ldd : c_int, e : [] complex(128), lde : c_int, f : [] complex(128), ldf : c_int, ref scale : c_double, ref dif : c_double, work : [] complex(128), lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztgsyl_work(matrix_order : lapack_memory_order, trans : string, ijob : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, d : [] complex(128), ldd : c_int, e : [] complex(128), lde : c_int, f : [] complex(128), ldf : c_int, ref scale : c_double, ref dif : c_double, work : [] complex(128), lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_ztgsyl_work(matrix_order, ascii(trans) : c_char, ijob, m, n, a, lda, b, ldb, c, ldc, d, ldd, e, lde, f, ldf, scale, dif, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_stpcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stpcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_stpcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtpcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dtpcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctpcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(64), ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] complex(64), ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctpcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztpcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(128), ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] complex(128), ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztpcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_stprfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stprfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_stprfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtprfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtprfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dtprfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctprfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctprfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctprfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztprfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztprfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztprfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_stptri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stptri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] c_float) : c_int{
  return LAPACKE_stptri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_dtptri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtptri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dtptri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_ctptri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctptri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_ctptri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_ztptri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztptri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_ztptri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

pragma "no doc"
extern proc LAPACKE_stptrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stptrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_float, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stptrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtptrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtptrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] c_double, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtptrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctptrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctptrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(64), b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctptrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztptrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztptrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, ap : [] complex(128), b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztptrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, ap, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_stpttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] c_float, arf : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stpttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] c_float, arf : [] c_float) : c_int{
  return LAPACKE_stpttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_dtpttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] c_double, arf : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] c_double, arf : [] c_double) : c_int{
  return LAPACKE_dtpttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_ctpttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] complex(64), arf : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] complex(64), arf : [] complex(64)) : c_int{
  return LAPACKE_ctpttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_ztpttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, ap : [] complex(128), arf : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] complex(128), arf : [] complex(128)) : c_int{
  return LAPACKE_ztpttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

pragma "no doc"
extern proc LAPACKE_stpttr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_float, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stpttr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_float, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_stpttr_work(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dtpttr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] c_double, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpttr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] c_double, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dtpttr_work(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ctpttr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpttr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_ctpttr_work(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ztpttr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpttr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_ztpttr_work(matrix_order, ascii(uplo) : c_char, n, ap, a, lda);
}

pragma "no doc"
extern proc LAPACKE_strcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_float, lda : c_int, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] c_float, lda : c_int, ref rcond : c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_strcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtrcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] c_double, lda : c_int, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] c_double, lda : c_int, ref rcond : c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dtrcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctrcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(64), lda : c_int, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] complex(64), lda : c_int, ref rcond : c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctrcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztrcon_work(matrix_order : lapack_memory_order, norm : c_char, uplo : c_char, diag : c_char, n : c_int, a : [] complex(128), lda : c_int, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrcon_work(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, a : [] complex(128), lda : c_int, ref rcond : c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztrcon_work(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda, rcond, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_strevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_float) : c_int{
  return LAPACKE_strevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m, work);
}

pragma "no doc"
extern proc LAPACKE_dtrevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, mm : c_int, ref m : c_int, work : [] c_double) : c_int{
  return LAPACKE_dtrevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m, work);
}

pragma "no doc"
extern proc LAPACKE_ctrevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctrevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztrevc_work(matrix_order : lapack_memory_order, side : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrevc_work(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztrevc_work(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, mm, m, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_strexc_work(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strexc_work(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_float) : c_int{
  return LAPACKE_strexc_work(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst, work);
}

pragma "no doc"
extern proc LAPACKE_dtrexc_work(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrexc_work(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_double) : c_int{
  return LAPACKE_dtrexc_work(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst, work);
}

pragma "no doc"
extern proc LAPACKE_ctrexc_work(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrexc_work(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, ifst : c_int, ilst : c_int) : c_int{
  return LAPACKE_ctrexc_work(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst);
}

pragma "no doc"
extern proc LAPACKE_ztrexc_work(matrix_order : lapack_memory_order, compq : c_char, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, ifst : c_int, ilst : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrexc_work(matrix_order : lapack_memory_order, compq : string, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, ifst : c_int, ilst : c_int) : c_int{
  return LAPACKE_ztrexc_work(matrix_order, ascii(compq) : c_char, n, t, ldt, q, ldq, ifst, ilst);
}

pragma "no doc"
extern proc LAPACKE_strrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, x : [] c_float, ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int) : c_int{
  return LAPACKE_strrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtrrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, x : [] c_double, ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int) : c_int{
  return LAPACKE_dtrrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr, work, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctrrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, x : [] complex(64), ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float) : c_int{
  return LAPACKE_ctrrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztrrfs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrrfs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, x : [] complex(128), ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double) : c_int{
  return LAPACKE_ztrrfs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb, x, ldx, ferr, berr, work, rwork);
}

pragma "no doc"
extern proc LAPACKE_strsen_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, wr : [] c_float, wi : [] c_float, ref m : c_int, ref s : c_float, ref sep : c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strsen_work(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, q : [] c_float, ldq : c_int, wr : [] c_float, wi : [] c_float, ref m : c_int, ref s : c_float, ref sep : c_float, work : [] c_float, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_strsen_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, wr, wi, m, s, sep, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_dtrsen_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, wr : [] c_double, wi : [] c_double, ref m : c_int, ref s : c_double, ref sep : c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrsen_work(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, q : [] c_double, ldq : c_int, wr : [] c_double, wi : [] c_double, ref m : c_int, ref s : c_double, ref sep : c_double, work : [] c_double, lwork : c_int, iwork : [] c_int, liwork : c_int) : c_int{
  return LAPACKE_dtrsen_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, wr, wi, m, s, sep, work, lwork, iwork, liwork);
}

pragma "no doc"
extern proc LAPACKE_ctrsen_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, w : [] complex(64), ref m : c_int, ref s : c_float, ref sep : c_float, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrsen_work(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, q : [] complex(64), ldq : c_int, w : [] complex(64), ref m : c_int, ref s : c_float, ref sep : c_float, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_ctrsen_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, w, m, s, sep, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ztrsen_work(matrix_order : lapack_memory_order, job : c_char, compq : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, w : [] complex(128), ref m : c_int, ref s : c_double, ref sep : c_double, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrsen_work(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, q : [] complex(128), ldq : c_int, w : [] complex(128), ref m : c_int, ref s : c_double, ref sep : c_double, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_ztrsen_work(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, n, t, ldt, q, ldq, w, m, s, sep, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_strsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int, work : [] c_float, ldwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_float, ldt : c_int, vl : [] c_float, ldvl : c_int, vr : [] c_float, ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int, work : [] c_float, ldwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_strsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m, work, ldwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dtrsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int, work : [] c_double, ldwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] c_double, ldt : c_int, vl : [] c_double, ldvl : c_int, vr : [] c_double, ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int, work : [] c_double, ldwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dtrsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m, work, ldwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_ctrsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int, work : [] complex(64), ldwork : c_int, rwork : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(64), ldt : c_int, vl : [] complex(64), ldvl : c_int, vr : [] complex(64), ldvr : c_int, s : [] c_float, sep : [] c_float, mm : c_int, ref m : c_int, work : [] complex(64), ldwork : c_int, rwork : [] c_float) : c_int{
  return LAPACKE_ctrsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m, work, ldwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_ztrsna_work(matrix_order : lapack_memory_order, job : c_char, howmny : c_char, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int, work : [] complex(128), ldwork : c_int, rwork : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrsna_work(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, t : [] complex(128), ldt : c_int, vl : [] complex(128), ldvl : c_int, vr : [] complex(128), ldvr : c_int, s : [] c_double, sep : [] c_double, mm : c_int, ref m : c_int, work : [] complex(128), ldwork : c_int, rwork : [] c_double) : c_int{
  return LAPACKE_ztrsna_work(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, t, ldt, vl, ldvl, vr, ldvr, s, sep, mm, m, work, ldwork, rwork);
}

pragma "no doc"
extern proc LAPACKE_strsyl_work(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, ref scale : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strsyl_work(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, c : [] c_float, ldc : c_int, ref scale : c_float) : c_int{
  return LAPACKE_strsyl_work(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_dtrsyl_work(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, ref scale : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrsyl_work(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, c : [] c_double, ldc : c_int, ref scale : c_double) : c_int{
  return LAPACKE_dtrsyl_work(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_ctrsyl_work(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, ref scale : c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrsyl_work(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, c : [] complex(64), ldc : c_int, ref scale : c_float) : c_int{
  return LAPACKE_ctrsyl_work(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_ztrsyl_work(matrix_order : lapack_memory_order, trana : c_char, tranb : c_char, isgn : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, ref scale : c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrsyl_work(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, m : c_int, n : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, c : [] complex(128), ldc : c_int, ref scale : c_double) : c_int{
  return LAPACKE_ztrsyl_work(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, m, n, a, lda, b, ldb, c, ldc, scale);
}

pragma "no doc"
extern proc LAPACKE_strtri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] c_float, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strtri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] c_float, lda : c_int) : c_int{
  return LAPACKE_strtri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_dtrtri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] c_double, lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrtri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] c_double, lda : c_int) : c_int{
  return LAPACKE_dtrtri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ctrtri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrtri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_ctrtri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ztrtri_work(matrix_order : lapack_memory_order, uplo : c_char, diag : c_char, n : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrtri_work(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_ztrtri_work(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, a, lda);
}

pragma "no doc"
extern proc LAPACKE_strtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_strtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_strtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtrtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtrtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctrtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctrtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztrtrs_work(matrix_order : lapack_memory_order, uplo : c_char, trans : c_char, diag : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrtrs_work(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztrtrs_work(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, nrhs, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_strttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, arf : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_float, lda : c_int, arf : [] c_float) : c_int{
  return LAPACKE_strttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_dtrttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, arf : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] c_double, lda : c_int, arf : [] c_double) : c_int{
  return LAPACKE_dtrttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_ctrttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, arf : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(64), lda : c_int, arf : [] complex(64)) : c_int{
  return LAPACKE_ctrttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_ztrttf_work(matrix_order : lapack_memory_order, transr : c_char, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, arf : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrttf_work(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, a : [] complex(128), lda : c_int, arf : [] complex(128)) : c_int{
  return LAPACKE_ztrttf_work(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, a, lda, arf);
}

pragma "no doc"
extern proc LAPACKE_strttp_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ap : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_strttp_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ap : [] c_float) : c_int{
  return LAPACKE_strttp_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_dtrttp_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ap : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtrttp_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ap : [] c_double) : c_int{
  return LAPACKE_dtrttp_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_ctrttp_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ap : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctrttp_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ap : [] complex(64)) : c_int{
  return LAPACKE_ctrttp_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_ztrttp_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ap : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztrttp_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ap : [] complex(128)) : c_int{
  return LAPACKE_ztrttp_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ap);
}

pragma "no doc"
extern proc LAPACKE_stzrzf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, tau : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dtzrzf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, tau : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctzrzf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztzrzf_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cungbr_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cungbr_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cungbr_work(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zungbr_work(matrix_order : lapack_memory_order, vect : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zungbr_work(matrix_order : lapack_memory_order, vect : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zungbr_work(matrix_order, ascii(vect) : c_char, m, n, k, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunghr_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zunghr_work(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cunglq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zunglq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cungql_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zungql_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cungqr_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zungqr_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cungrq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zungrq_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cungtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cungtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cungtr_work(matrix_order, ascii(uplo) : c_char, n, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zungtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zungtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zungtr_work(matrix_order, ascii(uplo) : c_char, n, a, lda, tau, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmbr_work(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmbr_work(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmbr_work(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmbr_work(matrix_order : lapack_memory_order, vect : c_char, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmbr_work(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmbr_work(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmhr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmhr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmhr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmhr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmhr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmhr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, ilo, ihi, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmlq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmlq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmlq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmlq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmlq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmlq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmql_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmql_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmql_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmql_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmql_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmql_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmqr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmqr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmqr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmqr_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmqr_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmqr_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmrq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmrq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmrq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmrq_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmrq_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmrq_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmrz_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmrz_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmrz_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmrz_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmrz_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmrz_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cunmtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunmtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] complex(64), lda : c_int, tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunmtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zunmtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunmtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, a : [] complex(128), lda : c_int, tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunmtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, a, lda, tau, c, ldc, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cupgtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(64), tau : [] complex(64), q : [] complex(64), ldq : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cupgtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), tau : [] complex(64), q : [] complex(64), ldq : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_cupgtr_work(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_zupgtr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, ap : [] complex(128), tau : [] complex(128), q : [] complex(128), ldq : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zupgtr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), tau : [] complex(128), q : [] complex(128), ldq : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zupgtr_work(matrix_order, ascii(uplo) : c_char, n, ap, tau, q, ldq, work);
}

pragma "no doc"
extern proc LAPACKE_cupmtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] complex(64), tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cupmtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] complex(64), tau : [] complex(64), c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_cupmtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_zupmtr_work(matrix_order : lapack_memory_order, side : c_char, uplo : c_char, trans : c_char, m : c_int, n : c_int, ap : [] complex(128), tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zupmtr_work(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, m : c_int, n : c_int, ap : [] complex(128), tau : [] complex(128), c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zupmtr_work(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, m, n, ap, tau, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_claghe(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_float, a : [] complex(64), lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlaghe(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_double, a : [] complex(128), lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slagsy(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_float, a : [] c_float, lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlagsy(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_double, a : [] c_double, lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clagsy(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_float, a : [] complex(64), lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlagsy(matrix_order : lapack_memory_order, n : c_int, k : c_int, d : [] c_double, a : [] complex(128), lda : c_int, iseed : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slapmr(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] c_float, ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dlapmr(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] c_double, ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_clapmr(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] complex(64), ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zlapmr(matrix_order : lapack_memory_order, forwrd : c_int, m : c_int, n : c_int, x : [] complex(128), ldx : c_int, k : [] c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_slapy2(x : c_float, y : c_float) : c_float;

pragma "no doc"
extern proc LAPACKE_dlapy2(x : c_double, y : c_double) : c_double;

pragma "no doc"
extern proc LAPACKE_slapy3(x : c_float, y : c_float, z : c_float) : c_float;

pragma "no doc"
extern proc LAPACKE_dlapy3(x : c_double, y : c_double, z : c_double) : c_double;

pragma "no doc"
extern proc LAPACKE_slartgp(f : c_float, g : c_float, ref cs : c_float, ref sn : c_float, ref r : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlartgp(f : c_double, g : c_double, ref cs : c_double, ref sn : c_double, ref r : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_slartgs(x : c_float, y : c_float, sigma : c_float, ref cs : c_float, ref sn : c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dlartgs(x : c_double, y : c_double, sigma : c_double, ref cs : c_double, ref sn : c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cbbcsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_cbbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float) : c_int{
  return LAPACKE_cbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

pragma "no doc"
extern proc LAPACKE_cbbcsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float, rwork : [] c_float, lrwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cbbcsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float, rwork : [] c_float, lrwork : c_int) : c_int{
  return LAPACKE_cbbcsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e, rwork, lrwork);
}

pragma "no doc"
extern proc LAPACKE_cheswapr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheswapr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_cheswapr(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_cheswapr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cheswapr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_cheswapr_work(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_chetri2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetri2(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_chetri2(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_chetri2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetri2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_chetri2_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_chetri2x(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetri2x(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int{
  return LAPACKE_chetri2x(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, nb);
}

pragma "no doc"
extern proc LAPACKE_chetri2x_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetri2x_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), nb : c_int) : c_int{
  return LAPACKE_chetri2x_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, nb);
}

pragma "no doc"
extern proc LAPACKE_chetrs2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrs2(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_chetrs2(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_chetrs2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_chetrs2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_chetrs2_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_csyconv(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csyconv(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_csyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csyconv_work(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_csyconv_work(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64)) : c_int{
  return LAPACKE_csyconv_work(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_csyswapr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csyswapr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_csyswapr(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_csyswapr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csyswapr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_csyswapr_work(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_csytri2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytri2(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_csytri2(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_csytri2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytri2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_csytri2_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_csytri2x(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytri2x(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int{
  return LAPACKE_csytri2x(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, nb);
}

pragma "no doc"
extern proc LAPACKE_csytri2x_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytri2x_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, work : [] complex(64), nb : c_int) : c_int{
  return LAPACKE_csytri2x_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, nb);
}

pragma "no doc"
extern proc LAPACKE_csytrs2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csytrs2(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csytrs2(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csytrs2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_csytrs2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_csytrs2_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_cunbdb(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] complex(64), taup2 : [] complex(64), tauq1 : [] complex(64), tauq2 : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cunbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] complex(64), taup2 : [] complex(64), tauq1 : [] complex(64), tauq2 : [] complex(64)) : c_int{
  return LAPACKE_cunbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2);
}

pragma "no doc"
extern proc LAPACKE_cunbdb_work(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] complex(64), taup2 : [] complex(64), tauq1 : [] complex(64), tauq2 : [] complex(64), work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cunbdb_work(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] complex(64), taup2 : [] complex(64), tauq1 : [] complex(64), tauq2 : [] complex(64), work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_cunbdb_work(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_cuncsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cuncsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int) : c_int{
  return LAPACKE_cuncsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t);
}

pragma "no doc"
extern proc LAPACKE_cuncsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cuncsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(64), ldx11 : c_int, x12 : [] complex(64), ldx12 : c_int, x21 : [] complex(64), ldx21 : c_int, x22 : [] complex(64), ldx22 : c_int, theta : [] c_float, u1 : [] complex(64), ldu1 : c_int, u2 : [] complex(64), ldu2 : c_int, v1t : [] complex(64), ldv1t : c_int, v2t : [] complex(64), ldv2t : c_int, work : [] complex(64), lwork : c_int, rwork : [] c_float, lrwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_cuncsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, work, lwork, rwork, lrwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dbbcsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dbbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double) : c_int{
  return LAPACKE_dbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

pragma "no doc"
extern proc LAPACKE_dbbcsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dbbcsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dbbcsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dorbdb(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] c_double, taup2 : [] c_double, tauq1 : [] c_double, tauq2 : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dorbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] c_double, taup2 : [] c_double, tauq1 : [] c_double, tauq2 : [] c_double) : c_int{
  return LAPACKE_dorbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2);
}

pragma "no doc"
extern proc LAPACKE_dorbdb_work(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] c_double, taup2 : [] c_double, tauq1 : [] c_double, tauq2 : [] c_double, work : [] c_double, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dorbdb_work(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] c_double, taup2 : [] c_double, tauq1 : [] c_double, tauq2 : [] c_double, work : [] c_double, lwork : c_int) : c_int{
  return LAPACKE_dorbdb_work(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dorcsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dorcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int) : c_int{
  return LAPACKE_dorcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t);
}

pragma "no doc"
extern proc LAPACKE_dorcsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dorcsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_double, ldx11 : c_int, x12 : [] c_double, ldx12 : c_int, x21 : [] c_double, ldx21 : c_int, x22 : [] c_double, ldx22 : c_int, theta : [] c_double, u1 : [] c_double, ldu1 : c_int, u2 : [] c_double, ldu2 : c_int, v1t : [] c_double, ldv1t : c_int, v2t : [] c_double, ldv2t : c_int, work : [] c_double, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_dorcsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_dsyconv(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyconv(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_dsyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsyconv_work(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyconv_work(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double) : c_int{
  return LAPACKE_dsyconv_work(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_dsyswapr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyswapr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_dsyswapr(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_dsyswapr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsyswapr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_dsyswapr_work(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_dsytri2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytri2(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_dsytri2(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_dsytri2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytri2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_dsytri2_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_dsytri2x(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytri2x(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, nb : c_int) : c_int{
  return LAPACKE_dsytri2x(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, nb);
}

pragma "no doc"
extern proc LAPACKE_dsytri2x_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytri2x_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, work : [] c_double, nb : c_int) : c_int{
  return LAPACKE_dsytri2x_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, nb);
}

pragma "no doc"
extern proc LAPACKE_dsytrs2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrs2(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsytrs2(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsytrs2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dsytrs2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int, work : [] c_double) : c_int{
  return LAPACKE_dsytrs2_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_sbbcsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sbbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float) : c_int{
  return LAPACKE_sbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

pragma "no doc"
extern proc LAPACKE_sbbcsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sbbcsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sbbcsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sorbdb(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] c_float, taup2 : [] c_float, tauq1 : [] c_float, tauq2 : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sorbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] c_float, taup2 : [] c_float, tauq1 : [] c_float, tauq2 : [] c_float) : c_int{
  return LAPACKE_sorbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2);
}

pragma "no doc"
extern proc LAPACKE_sorbdb_work(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] c_float, taup2 : [] c_float, tauq1 : [] c_float, tauq2 : [] c_float, work : [] c_float, lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sorbdb_work(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] c_float, taup2 : [] c_float, tauq1 : [] c_float, tauq2 : [] c_float, work : [] c_float, lwork : c_int) : c_int{
  return LAPACKE_sorbdb_work(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_sorcsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sorcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int) : c_int{
  return LAPACKE_sorcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t);
}

pragma "no doc"
extern proc LAPACKE_sorcsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sorcsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] c_float, ldx11 : c_int, x12 : [] c_float, ldx12 : c_int, x21 : [] c_float, ldx21 : c_int, x22 : [] c_float, ldx22 : c_int, theta : [] c_float, u1 : [] c_float, ldu1 : c_int, u2 : [] c_float, ldu2 : c_int, v1t : [] c_float, ldv1t : c_int, v2t : [] c_float, ldv2t : c_int, work : [] c_float, lwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_sorcsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, work, lwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_ssyconv(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyconv(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_ssyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssyconv_work(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyconv_work(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float) : c_int{
  return LAPACKE_ssyconv_work(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_ssyswapr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyswapr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_ssyswapr(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_ssyswapr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssyswapr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_ssyswapr_work(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_ssytri2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytri2(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_ssytri2(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_ssytri2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytri2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] complex(64), lwork : c_int) : c_int{
  return LAPACKE_ssytri2_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_ssytri2x(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytri2x(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, nb : c_int) : c_int{
  return LAPACKE_ssytri2x(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, nb);
}

pragma "no doc"
extern proc LAPACKE_ssytri2x_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytri2x_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, work : [] c_float, nb : c_int) : c_int{
  return LAPACKE_ssytri2x_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, nb);
}

pragma "no doc"
extern proc LAPACKE_ssytrs2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrs2(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssytrs2(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ssytrs2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_ssytrs2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int, work : [] c_float) : c_int{
  return LAPACKE_ssytrs2_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_zbbcsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_zbbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double) : c_int{
  return LAPACKE_zbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

pragma "no doc"
extern proc LAPACKE_zbbcsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double, rwork : [] c_double, lrwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zbbcsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, p : c_int, q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double, rwork : [] c_double, lrwork : c_int) : c_int{
  return LAPACKE_zbbcsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, p, q, theta, phi, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e, rwork, lrwork);
}

pragma "no doc"
extern proc LAPACKE_zheswapr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheswapr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_zheswapr(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_zheswapr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zheswapr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_zheswapr_work(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_zhetri2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetri2(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zhetri2(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zhetri2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetri2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zhetri2_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zhetri2x(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetri2x(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int{
  return LAPACKE_zhetri2x(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, nb);
}

pragma "no doc"
extern proc LAPACKE_zhetri2x_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetri2x_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), nb : c_int) : c_int{
  return LAPACKE_zhetri2x_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, nb);
}

pragma "no doc"
extern proc LAPACKE_zhetrs2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrs2(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zhetrs2(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zhetrs2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zhetrs2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zhetrs2_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_zsyconv(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyconv(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zsyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsyconv_work(matrix_order : lapack_memory_order, uplo : c_char, way : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyconv_work(matrix_order : lapack_memory_order, uplo : string, way : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zsyconv_work(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, n, a, lda, ipiv, work);
}

pragma "no doc"
extern proc LAPACKE_zsyswapr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyswapr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_zsyswapr(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_zsyswapr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyswapr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), i1 : c_int, i2 : c_int) : c_int{
  return LAPACKE_zsyswapr_work(matrix_order, ascii(uplo) : c_char, n, a, i1, i2);
}

pragma "no doc"
extern proc LAPACKE_zsytri2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytri2(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int) : c_int{
  return LAPACKE_zsytri2(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv);
}

pragma "no doc"
extern proc LAPACKE_zsytri2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytri2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zsytri2_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zsytri2x(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytri2x(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, nb : c_int) : c_int{
  return LAPACKE_zsytri2x(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, nb);
}

pragma "no doc"
extern proc LAPACKE_zsytri2x_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), nb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytri2x_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, work : [] complex(128), nb : c_int) : c_int{
  return LAPACKE_zsytri2x_work(matrix_order, ascii(uplo) : c_char, n, a, lda, ipiv, work, nb);
}

pragma "no doc"
extern proc LAPACKE_zsytrs2(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytrs2(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsytrs2(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsytrs2_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zsytrs2_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zsytrs2_work(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_zunbdb(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] complex(128), taup2 : [] complex(128), tauq1 : [] complex(128), tauq2 : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zunbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] complex(128), taup2 : [] complex(128), tauq1 : [] complex(128), tauq2 : [] complex(128)) : c_int{
  return LAPACKE_zunbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2);
}

pragma "no doc"
extern proc LAPACKE_zunbdb_work(matrix_order : lapack_memory_order, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] complex(128), taup2 : [] complex(128), tauq1 : [] complex(128), tauq2 : [] complex(128), work : [] complex(128), lwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zunbdb_work(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] complex(128), taup2 : [] complex(128), tauq1 : [] complex(128), tauq2 : [] complex(128), work : [] complex(128), lwork : c_int) : c_int{
  return LAPACKE_zunbdb_work(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, phi, taup1, taup2, tauq1, tauq2, work, lwork);
}

pragma "no doc"
extern proc LAPACKE_zuncsd(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zuncsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int) : c_int{
  return LAPACKE_zuncsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t);
}

pragma "no doc"
extern proc LAPACKE_zuncsd_work(matrix_order : lapack_memory_order, jobu1 : c_char, jobu2 : c_char, jobv1t : c_char, jobv2t : c_char, trans : c_char, signs : c_char, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zuncsd_work(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, p : c_int, q : c_int, x11 : [] complex(128), ldx11 : c_int, x12 : [] complex(128), ldx12 : c_int, x21 : [] complex(128), ldx21 : c_int, x22 : [] complex(128), ldx22 : c_int, theta : [] c_double, u1 : [] complex(128), ldu1 : c_int, u2 : [] complex(128), ldu2 : c_int, v1t : [] complex(128), ldv1t : c_int, v2t : [] complex(128), ldv2t : c_int, work : [] complex(128), lwork : c_int, rwork : [] c_double, lrwork : c_int, iwork : [] c_int) : c_int{
  return LAPACKE_zuncsd_work(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, p, q, x11, ldx11, x12, ldx12, x21, ldx21, x22, ldx22, theta, u1, ldu1, u2, ldu2, v1t, ldv1t, v2t, ldv2t, work, lwork, rwork, lrwork, iwork);
}

pragma "no doc"
extern proc LAPACKE_sgemqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_sgemqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int) : c_int{
  return LAPACKE_sgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_dgemqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dgemqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int) : c_int{
  return LAPACKE_dgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_cgemqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_cgemqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int) : c_int{
  return LAPACKE_cgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_zgemqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zgemqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int) : c_int{
  return LAPACKE_zgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc);
}

pragma "no doc"
extern proc LAPACKE_sgeqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] c_float, lda : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] c_double, lda : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] complex(64), lda : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] complex(128), lda : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrt3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrt3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrt3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrt3(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stpmqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtpmqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctpmqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztpmqrt(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtpqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, nb : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctpqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, nb : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztpqrt(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, nb : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stpqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dtpqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctpqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztpqrt2(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stprfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_stprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dtprfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dtprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ctprfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_ctprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_ztprfb(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_ztprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_sgemqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_sgemqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, c : [] c_float, ldc : c_int, work : [] c_float) : c_int{
  return LAPACKE_sgemqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_dgemqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dgemqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, c : [] c_double, ldc : c_int, work : [] c_double) : c_int{
  return LAPACKE_dgemqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_cgemqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_cgemqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, c : [] complex(64), ldc : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_cgemqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_zgemqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_zgemqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, c : [] complex(128), ldc : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_zgemqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, nb, v, ldv, t, ldt, c, ldc, work);
}

pragma "no doc"
extern proc LAPACKE_sgeqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] c_float, lda : c_int, t : [] c_float, ldt : c_int, work : [] c_float) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] c_double, lda : c_int, t : [] c_double, ldt : c_int, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] complex(64), lda : c_int, t : [] complex(64), ldt : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, nb : c_int, a : [] complex(128), lda : c_int, t : [] complex(128), ldt : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_sgeqrt3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_float, lda : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dgeqrt3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] c_double, lda : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_cgeqrt3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(64), lda : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_zgeqrt3_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, a : [] complex(128), lda : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stpmqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, work : [] c_float) : c_int;

pragma "no doc"
inline proc LAPACKE_stpmqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, work : [] c_float) : c_int{
  return LAPACKE_stpmqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_dtpmqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, work : [] c_double) : c_int;

pragma "no doc"
inline proc LAPACKE_dtpmqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, work : [] c_double) : c_int{
  return LAPACKE_dtpmqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_ctpmqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
inline proc LAPACKE_ctpmqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, work : [] complex(64)) : c_int{
  return LAPACKE_ctpmqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_ztpmqrt_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
inline proc LAPACKE_ztpmqrt_work(matrix_order : lapack_memory_order, side : string, trans : string, m : c_int, n : c_int, k : c_int, l : c_int, nb : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, work : [] complex(128)) : c_int{
  return LAPACKE_ztpmqrt_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, m, n, k, l, nb, v, ldv, t, ldt, a, lda, b, ldb, work);
}

pragma "no doc"
extern proc LAPACKE_dtpqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, nb : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, t : [] c_double, ldt : c_int, work : [] c_double) : c_int;

pragma "no doc"
extern proc LAPACKE_ctpqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, nb : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, t : [] complex(64), ldt : c_int, work : [] complex(64)) : c_int;

pragma "no doc"
extern proc LAPACKE_ztpqrt_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, nb : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, t : [] complex(128), ldt : c_int, work : [] complex(128)) : c_int;

pragma "no doc"
extern proc LAPACKE_stpqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, t : [] c_float, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_dtpqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, t : [] c_double, ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ctpqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, t : [] complex(64), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_ztpqrt2_work(matrix_order : lapack_memory_order, m : c_int, n : c_int, l : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, t : [] complex(128), ldt : c_int) : c_int;

pragma "no doc"
extern proc LAPACKE_stprfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, work : [] c_float, ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_stprfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_float, ldv : c_int, t : [] c_float, ldt : c_int, a : [] c_float, lda : c_int, b : [] c_float, ldb : c_int, work : [] c_float, ldwork : c_int) : c_int{
  return LAPACKE_stprfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_dtprfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, work : [] c_double, ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dtprfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] c_double, ldv : c_int, t : [] c_double, ldt : c_int, a : [] c_double, lda : c_int, b : [] c_double, ldb : c_int, work : [] c_double, ldwork : c_int) : c_int{
  return LAPACKE_dtprfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_ctprfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, work : [] c_float, ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ctprfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(64), ldv : c_int, t : [] complex(64), ldt : c_int, a : [] complex(64), lda : c_int, b : [] complex(64), ldb : c_int, work : [] c_float, ldwork : c_int) : c_int{
  return LAPACKE_ctprfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_ztprfb_work(matrix_order : lapack_memory_order, side : c_char, trans : c_char, direct : c_char, storev : c_char, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, work : [] c_double, ldwork : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ztprfb_work(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, m : c_int, n : c_int, k : c_int, l : c_int, v : [] complex(128), ldv : c_int, t : [] complex(128), ldt : c_int, a : [] complex(128), lda : c_int, b : [] complex(128), ldb : c_int, work : [] c_double, ldwork : c_int) : c_int{
  return LAPACKE_ztprfb_work(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, m, n, k, l, v, ldv, t, ldt, a, lda, b, ldb, work, ldwork);
}

pragma "no doc"
extern proc LAPACKE_ssysv_rook(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_ssysv_rook(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_float, lda : c_int, ipiv : [] c_int, b : [] c_float, ldb : c_int) : c_int{
  return LAPACKE_ssysv_rook(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_dsysv_rook(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_dsysv_rook(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] c_double, lda : c_int, ipiv : [] c_int, b : [] c_double, ldb : c_int) : c_int{
  return LAPACKE_dsysv_rook(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csysv_rook(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csysv_rook(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(64), lda : c_int, ipiv : [] c_int, b : [] complex(64), ldb : c_int) : c_int{
  return LAPACKE_csysv_rook(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_zsysv_rook(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsysv_rook(matrix_order : lapack_memory_order, uplo : string, n : c_int, nrhs : c_int, a : [] complex(128), lda : c_int, ipiv : [] c_int, b : [] complex(128), ldb : c_int) : c_int{
  return LAPACKE_zsysv_rook(matrix_order, ascii(uplo) : c_char, n, nrhs, a, lda, ipiv, b, ldb);
}

pragma "no doc"
extern proc LAPACKE_csyr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, alpha : complex(64), x : [] complex(64), incx : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csyr(matrix_order : lapack_memory_order, uplo : string, n : c_int, alpha : complex(64), x : [] complex(64), incx : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_csyr(matrix_order, ascii(uplo) : c_char, n, alpha, x, incx, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zsyr(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, alpha : complex(128), x : [] complex(128), incx : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyr(matrix_order : lapack_memory_order, uplo : string, n : c_int, alpha : complex(128), x : [] complex(128), incx : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zsyr(matrix_order, ascii(uplo) : c_char, n, alpha, x, incx, a, lda);
}

pragma "no doc"
extern proc LAPACKE_csyr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, alpha : complex(64), x : [] complex(64), incx : c_int, a : [] complex(64), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_csyr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, alpha : complex(64), x : [] complex(64), incx : c_int, a : [] complex(64), lda : c_int) : c_int{
  return LAPACKE_csyr_work(matrix_order, ascii(uplo) : c_char, n, alpha, x, incx, a, lda);
}

pragma "no doc"
extern proc LAPACKE_zsyr_work(matrix_order : lapack_memory_order, uplo : c_char, n : c_int, alpha : complex(128), x : [] complex(128), incx : c_int, a : [] complex(128), lda : c_int) : c_int;

pragma "no doc"
inline proc LAPACKE_zsyr_work(matrix_order : lapack_memory_order, uplo : string, n : c_int, alpha : complex(128), x : [] complex(128), incx : c_int, a : [] complex(128), lda : c_int) : c_int{
  return LAPACKE_zsyr_work(matrix_order, ascii(uplo) : c_char, n, alpha, x, incx, a, lda);
}

pragma "no doc"
extern proc LAPACKE_ilaver(ref vers_major : c_int, ref vers_minor : c_int, ref vers_patch : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgetrf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgetrf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgetrf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgetrf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbtrf(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_float, ref ldab : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbtrf(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_double, ref ldab : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbtrf(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(64), ref ldab : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbtrf(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(128), ref ldab : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgttrf(ref n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgttrf(ref n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgttrf(ref n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgttrf(ref n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spotrf(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpotrf(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpotrf(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpotrf(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpstrf(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, piv : [] c_int, ref rank : c_int, ref tol : c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spstrf(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, piv : [] c_int, ref rank : c_int, ref tol : c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpstrf(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, piv : [] c_int, ref rank : c_int, ref tol : c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpstrf(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, piv : [] c_int, ref rank : c_int, ref tol : c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpftrf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spftrf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpftrf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpftrf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spptrf(ref uplo : c_char, ref n : c_int, ap : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpptrf(ref uplo : c_char, ref n : c_int, ap : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpptrf(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpptrf(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbtrf(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbtrf(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbtrf(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbtrf(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spttrf(ref n : c_int, d : [] c_float, e : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpttrf(ref n : c_int, d : [] c_double, e : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpttrf(ref n : c_int, d : [] c_float, e : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpttrf(ref n : c_int, d : [] c_double, e : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytrf(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytrf(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csytrf(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsytrf(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetrf(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetrf(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssptrf(ref uplo : c_char, ref n : c_int, ap : [] c_float, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsptrf(ref uplo : c_char, ref n : c_int, ap : [] c_double, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csptrf(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsptrf(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chptrf(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhptrf(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgetrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgetrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgetrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgetrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbtrs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbtrs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbtrs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbtrs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgttrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgttrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgttrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgttrs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spotrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpotrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpotrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpotrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpftrs(ref transr : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spftrs(ref transr : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpftrs(ref transr : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpftrs(ref transr : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbtrs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbtrs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbtrs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbtrs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spttrs(ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpttrs(ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpttrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpttrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csytrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsytrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhptrs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stptrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtptrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctptrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztptrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stbtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtbtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctbtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztbtrs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgecon(ref norm : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgecon(ref norm : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgecon(ref norm : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgecon(ref norm : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbcon(ref norm : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_float, ref ldab : c_int, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbcon(ref norm : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_double, ref ldab : c_int, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbcon(ref norm : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(64), ref ldab : c_int, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbcon(ref norm : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(128), ref ldab : c_int, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgtcon(ref norm : c_char, ref n : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, du2 : [] c_float, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgtcon(ref norm : c_char, ref n : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, du2 : [] c_double, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgtcon(ref norm : c_char, ref n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgtcon(ref norm : c_char, ref n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spocon(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpocon(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpocon(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpocon(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sppcon(ref uplo : c_char, ref n : c_int, ap : [] c_float, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dppcon(ref uplo : c_char, ref n : c_int, ap : [] c_double, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cppcon(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ref anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zppcon(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ref anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbcon(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbcon(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbcon(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbcon(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sptcon(ref n : c_int, d : [] c_float, e : [] c_float, ref anorm : c_float, ref rcond : c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dptcon(ref n : c_int, d : [] c_double, e : [] c_double, ref anorm : c_double, ref rcond : c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cptcon(ref n : c_int, d : [] c_float, e : [] complex(64), ref anorm : c_float, ref rcond : c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zptcon(ref n : c_int, d : [] c_double, e : [] complex(128), ref anorm : c_double, ref rcond : c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssycon(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsycon(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csycon(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsycon(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_checon(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhecon(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspcon(ref uplo : c_char, ref n : c_int, ap : [] c_float, ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspcon(ref uplo : c_char, ref n : c_int, ap : [] c_double, ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cspcon(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zspcon(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpcon(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ipiv : [] c_int, ref anorm : c_float, ref rcond : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpcon(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ipiv : [] c_int, ref anorm : c_double, ref rcond : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stpcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] c_float, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtpcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] c_double, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctpcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] complex(64), ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztpcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] complex(128), ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stbcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, ref rcond : c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtbcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, ref rcond : c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctbcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, ref rcond : c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztbcon(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, ref rcond : c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgerfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgerfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgerfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgerfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgerfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgerfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgerfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgerfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbrfs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, afb : [] c_float, ref ldafb : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbrfs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, afb : [] c_double, ref ldafb : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbrfs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, afb : [] complex(64), ref ldafb : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbrfs(ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, afb : [] complex(128), ref ldafb : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbrfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, afb : [] c_double, ref ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbrfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, afb : [] c_float, ref ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbrfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, afb : [] complex(128), ref ldafb : c_int, ipiv : [] c_int, r : [] c_double, c : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbrfsx(ref trans : c_char, ref equed : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, afb : [] complex(64), ref ldafb : c_int, ipiv : [] c_int, r : [] c_float, c : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgtrfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgtrfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgtrfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgtrfs(ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sporfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dporfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cporfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zporfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dporfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sporfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zporfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cporfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, afp : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, afp : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), afp : [] complex(64), b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), afp : [] complex(128), b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbrfs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, afb : [] c_float, ref ldafb : c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbrfs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, afb : [] c_double, ref ldafb : c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbrfs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, afb : [] complex(64), ref ldafb : c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbrfs(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, afb : [] complex(128), ref ldafb : c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sptrfs(ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dptrfs(ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cptrfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zptrfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyrfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyrfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csyrfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsyrfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyrfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyrfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsyrfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csyrfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cherfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zherfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zherfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cherfsx(ref uplo : c_char, ref equed : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhprfs(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stprfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtprfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctprfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztprfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stbrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtbrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctbrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztbrfs(ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgetri(ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgetri(ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgetri(ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgetri(ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spotri(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpotri(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpotri(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpotri(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpftri(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spftri(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpftri(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpftri(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spptri(ref uplo : c_char, ref n : c_int, ap : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpptri(ref uplo : c_char, ref n : c_int, ap : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpptri(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpptri(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytri(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytri(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csytri(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsytri(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetri(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetri(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssptri(ref uplo : c_char, ref n : c_int, ap : [] c_float, ipiv : [] c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsptri(ref uplo : c_char, ref n : c_int, ap : [] c_double, ipiv : [] c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csptri(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ipiv : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsptri(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ipiv : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chptri(ref uplo : c_char, ref n : c_int, ap : [] complex(64), ipiv : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhptri(ref uplo : c_char, ref n : c_int, ap : [] complex(128), ipiv : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strtri(ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrtri(ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrtri(ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrtri(ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtftri(ref transr : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stftri(ref transr : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztftri(ref transr : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctftri(ref transr : c_char, ref uplo : c_char, ref diag : c_char, ref n : c_int, a : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stptri(ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtptri(ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctptri(ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztptri(ref uplo : c_char, ref diag : c_char, ref n : c_int, ap : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeequ(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeequ(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeequ(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeequ(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeequb(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeequb(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeequb(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeequb(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbequ(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_float, ref ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbequ(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_double, ref ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbequ(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(64), ref ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbequ(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(128), ref ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbequb(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_double, ref ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbequb(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_float, ref ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbequb(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(128), ref ldab : c_int, r : [] c_double, c : [] c_double, ref rowcnd : c_double, ref colcnd : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbequb(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(64), ref ldab : c_int, r : [] c_float, c : [] c_float, ref rowcnd : c_float, ref colcnd : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spoequ(ref n : c_int, a : [] c_float, ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpoequ(ref n : c_int, a : [] c_double, ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpoequ(ref n : c_int, a : [] complex(64), ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpoequ(ref n : c_int, a : [] complex(128), ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpoequb(ref n : c_int, a : [] c_double, ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spoequb(ref n : c_int, a : [] c_float, ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpoequb(ref n : c_int, a : [] complex(128), ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpoequb(ref n : c_int, a : [] complex(64), ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sppequ(ref uplo : c_char, ref n : c_int, ap : [] c_float, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dppequ(ref uplo : c_char, ref n : c_int, ap : [] c_double, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cppequ(ref uplo : c_char, ref n : c_int, ap : [] complex(64), s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zppequ(ref uplo : c_char, ref n : c_int, ap : [] complex(128), s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbequ(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbequ(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbequ(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbequ(ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyequb(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyequb(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsyequb(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csyequb(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zheequb(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, s : [] c_double, ref scond : c_double, ref amax : c_double, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cheequb(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, s : [] c_float, ref scond : c_float, ref amax : c_float, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgesv(ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgesv(ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgesv(ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgesv(ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsgesv(ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, work : [] c_double, swork : [] c_float, ref chlapack_iter : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zcgesv(ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, work : [] complex(128), swork : [] complex(64), rwork : [] c_double, ref chlapack_iter : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgesvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgesvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgesvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgesvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgesvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgesvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgesvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgesvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbsv(ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbsv(ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbsv(ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbsv(ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, afb : [] c_float, ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, afb : [] c_double, ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, afb : [] complex(64), ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, afb : [] complex(128), ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbsvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, afb : [] c_double, ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbsvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, afb : [] c_float, ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbsvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, afb : [] complex(128), ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_double, c : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbsvxx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref kl : c_int, ref ku : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, afb : [] complex(64), ref ldafb : c_int, ipiv : [] c_int, ref equed : c_char, r : [] c_float, c : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgtsv(ref n : c_int, ref nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgtsv(ref n : c_int, ref nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgtsv(ref n : c_int, ref nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgtsv(ref n : c_int, ref nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgtsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] c_float, d : [] c_float, du : [] c_float, dlf : [] c_float, df : [] c_float, duf : [] c_float, du2 : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgtsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] c_double, d : [] c_double, du : [] c_double, dlf : [] c_double, df : [] c_double, duf : [] c_double, du2 : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgtsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgtsvx(ref fact : c_char, ref trans : c_char, ref n : c_int, ref nrhs : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sposv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dposv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cposv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zposv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsposv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, work : [] c_double, swork : [] c_float, ref chlapack_iter : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zcposv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, work : [] complex(128), swork : [] complex(64), rwork : [] c_double, ref chlapack_iter : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sposvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dposvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cposvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zposvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dposvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sposvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zposvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cposvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sppsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dppsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cppsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zppsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sppsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, afp : [] c_float, ref equed : c_char, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dppsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, afp : [] c_double, ref equed : c_char, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cppsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ref equed : c_char, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zppsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ref equed : c_char, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbsv(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbsv(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbsv(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbsv(ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_float, ref ldab : c_int, afb : [] c_float, ref ldafb : c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] c_double, ref ldab : c_int, afb : [] c_double, ref ldafb : c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(64), ref ldab : c_int, afb : [] complex(64), ref ldafb : c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ref nrhs : c_int, ab : [] complex(128), ref ldab : c_int, afb : [] complex(128), ref ldafb : c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sptsv(ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] c_float, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dptsv(ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] c_double, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cptsv(ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] complex(64), b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zptsv(ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] complex(128), b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sptsvx(ref fact : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] c_float, df : [] c_float, ef : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dptsvx(ref fact : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] c_double, df : [] c_double, ef : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cptsvx(ref fact : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_float, e : [] complex(64), df : [] c_float, ef : [] complex(64), b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zptsvx(ref fact : c_char, ref n : c_int, ref nrhs : c_int, d : [] c_double, e : [] complex(128), df : [] c_double, ef : [] complex(128), b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssysv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsysv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csysv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsysv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssysvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsysvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csysvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsysvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsysvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, af : [] c_double, ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssysvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, af : [] c_float, ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsysvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csysvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chesv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhesv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chesvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhesvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhesvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, af : [] complex(128), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_double, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ref rpvgrw : c_double, berr : [] c_double, ref n_err_bnds : c_int, err_bnds_norm : [] c_double, err_bnds_comp : [] c_double, ref nparams : c_int, params : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chesvxx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, af : [] complex(64), ref ldaf : c_int, ipiv : [] c_int, ref equed : c_char, s : [] c_float, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ref rpvgrw : c_float, berr : [] c_float, ref n_err_bnds : c_int, err_bnds_norm : [] c_float, err_bnds_comp : [] c_float, ref nparams : c_int, params : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cspsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zspsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_float, afp : [] c_float, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, x : [] c_float, ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] c_double, afp : [] c_double, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, x : [] c_double, ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cspsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zspsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpsv(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, x : [] complex(64), ref ldx : c_int, ref rcond : c_float, ferr : [] c_float, berr : [] c_float, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpsvx(ref fact : c_char, ref uplo : c_char, ref n : c_int, ref nrhs : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, x : [] complex(128), ref ldx : c_int, ref rcond : c_double, ferr : [] c_double, berr : [] c_double, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqrf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqrf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqrf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqrf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqpf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, jpvt : [] c_int, tau : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqpf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, jpvt : [] c_int, tau : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqpf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, jpvt : [] c_int, tau : [] complex(64), work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqpf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, jpvt : [] c_int, tau : [] complex(128), work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqp3(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, jpvt : [] c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqp3(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, jpvt : [] c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqp3(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, jpvt : [] c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqp3(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, jpvt : [] c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorgqr(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorgqr(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormqr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormqr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cungqr(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zungqr(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmqr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmqr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgelqf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgelqf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgelqf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgelqf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorglq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorglq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormlq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormlq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunglq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunglq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmlq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmlq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqlf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqlf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqlf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqlf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorgql(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorgql(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cungql(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zungql(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormql(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormql(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmql(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmql(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgerqf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgerqf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgerqf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgerqf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorgrq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorgrq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cungrq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zungrq(ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormrq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormrq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmrq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmrq(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stzrzf(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtzrzf(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctzrzf(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztzrzf(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormrz(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormrz(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmrz(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmrz(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggqrf(ref n : c_int, ref m : c_int, ref p : c_int, a : [] c_float, ref lda : c_int, taua : [] c_float, b : [] c_float, ref ldb : c_int, taub : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggqrf(ref n : c_int, ref m : c_int, ref p : c_int, a : [] c_double, ref lda : c_int, taua : [] c_double, b : [] c_double, ref ldb : c_int, taub : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggqrf(ref n : c_int, ref m : c_int, ref p : c_int, a : [] complex(64), ref lda : c_int, taua : [] complex(64), b : [] complex(64), ref ldb : c_int, taub : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggqrf(ref n : c_int, ref m : c_int, ref p : c_int, a : [] complex(128), ref lda : c_int, taua : [] complex(128), b : [] complex(128), ref ldb : c_int, taub : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggrqf(ref m : c_int, ref p : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, taua : [] c_float, b : [] c_float, ref ldb : c_int, taub : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggrqf(ref m : c_int, ref p : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, taua : [] c_double, b : [] c_double, ref ldb : c_int, taub : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggrqf(ref m : c_int, ref p : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, taua : [] complex(64), b : [] complex(64), ref ldb : c_int, taub : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggrqf(ref m : c_int, ref p : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, taua : [] complex(128), b : [] complex(128), ref ldb : c_int, taub : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgebrd(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, d : [] c_float, e : [] c_float, tauq : [] c_float, taup : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgebrd(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, d : [] c_double, e : [] c_double, tauq : [] c_double, taup : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgebrd(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, d : [] c_float, e : [] c_float, tauq : [] complex(64), taup : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgebrd(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, d : [] c_double, e : [] c_double, tauq : [] complex(128), taup : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgbbrd(ref vect : c_char, ref m : c_int, ref n : c_int, ref ncc : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_float, ref ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ref ldq : c_int, pt : [] c_float, ref ldpt : c_int, c : [] c_float, ref ldc : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgbbrd(ref vect : c_char, ref m : c_int, ref n : c_int, ref ncc : c_int, ref kl : c_int, ref ku : c_int, ab : [] c_double, ref ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ref ldq : c_int, pt : [] c_double, ref ldpt : c_int, c : [] c_double, ref ldc : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgbbrd(ref vect : c_char, ref m : c_int, ref n : c_int, ref ncc : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(64), ref ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ref ldq : c_int, pt : [] complex(64), ref ldpt : c_int, c : [] complex(64), ref ldc : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgbbrd(ref vect : c_char, ref m : c_int, ref n : c_int, ref ncc : c_int, ref kl : c_int, ref ku : c_int, ab : [] complex(128), ref ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ref ldq : c_int, pt : [] complex(128), ref ldpt : c_int, c : [] complex(128), ref ldc : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorgbr(ref vect : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorgbr(ref vect : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormbr(ref vect : c_char, ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormbr(ref vect : c_char, ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cungbr(ref vect : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zungbr(ref vect : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmbr(ref vect : c_char, ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmbr(ref vect : c_char, ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sbdsqr(ref uplo : c_char, ref n : c_int, ref ncvt : c_int, ref nru : c_int, ref ncc : c_int, d : [] c_float, e : [] c_float, vt : [] c_float, ref ldvt : c_int, u : [] c_float, ref ldu : c_int, c : [] c_float, ref ldc : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dbdsqr(ref uplo : c_char, ref n : c_int, ref ncvt : c_int, ref nru : c_int, ref ncc : c_int, d : [] c_double, e : [] c_double, vt : [] c_double, ref ldvt : c_int, u : [] c_double, ref ldu : c_int, c : [] c_double, ref ldc : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cbdsqr(ref uplo : c_char, ref n : c_int, ref ncvt : c_int, ref nru : c_int, ref ncc : c_int, d : [] c_float, e : [] c_float, vt : [] complex(64), ref ldvt : c_int, u : [] complex(64), ref ldu : c_int, c : [] complex(64), ref ldc : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zbdsqr(ref uplo : c_char, ref n : c_int, ref ncvt : c_int, ref nru : c_int, ref ncc : c_int, d : [] c_double, e : [] c_double, vt : [] complex(128), ref ldvt : c_int, u : [] complex(128), ref ldu : c_int, c : [] complex(128), ref ldc : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sbdsdc(ref uplo : c_char, ref compq : c_char, ref n : c_int, d : [] c_float, e : [] c_float, u : [] c_float, ref ldu : c_int, vt : [] c_float, ref ldvt : c_int, q : [] c_float, iq : [] c_int, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dbdsdc(ref uplo : c_char, ref compq : c_char, ref n : c_int, d : [] c_double, e : [] c_double, u : [] c_double, ref ldu : c_int, vt : [] c_double, ref ldvt : c_int, q : [] c_double, iq : [] c_int, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytrd(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, d : [] c_float, e : [] c_float, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytrd(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, d : [] c_double, e : [] c_double, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorgtr(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorgtr(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetrd(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, d : [] c_float, e : [] c_float, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetrd(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, d : [] c_double, e : [] c_double, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cungtr(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zungtr(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssptrd(ref uplo : c_char, ref n : c_int, ap : [] c_float, d : [] c_float, e : [] c_float, tau : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsptrd(ref uplo : c_char, ref n : c_int, ap : [] c_double, d : [] c_double, e : [] c_double, tau : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sopgtr(ref uplo : c_char, ref n : c_int, ap : [] c_float, tau : [] c_float, q : [] c_float, ref ldq : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dopgtr(ref uplo : c_char, ref n : c_int, ap : [] c_double, tau : [] c_double, q : [] c_double, ref ldq : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sopmtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ap : [] c_float, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dopmtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ap : [] c_double, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chptrd(ref uplo : c_char, ref n : c_int, ap : [] complex(64), d : [] c_float, e : [] c_float, tau : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhptrd(ref uplo : c_char, ref n : c_int, ap : [] complex(128), d : [] c_double, e : [] c_double, tau : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cupgtr(ref uplo : c_char, ref n : c_int, ap : [] complex(64), tau : [] complex(64), q : [] complex(64), ref ldq : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zupgtr(ref uplo : c_char, ref n : c_int, ap : [] complex(128), tau : [] complex(128), q : [] complex(128), ref ldq : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cupmtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ap : [] complex(64), tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zupmtr(ref side : c_char, ref uplo : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ap : [] complex(128), tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbtrd(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, d : [] c_float, e : [] c_float, q : [] c_float, ref ldq : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbtrd(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, d : [] c_double, e : [] c_double, q : [] c_double, ref ldq : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbtrd(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, d : [] c_float, e : [] c_float, q : [] complex(64), ref ldq : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbtrd(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, d : [] c_double, e : [] c_double, q : [] complex(128), ref ldq : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssterf(ref n : c_int, d : [] c_float, e : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsterf(ref n : c_int, d : [] c_double, e : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssteqr(ref compz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsteqr(ref compz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csteqr(ref compz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsteqr(ref compz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstemr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_float, e : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, ref nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstemr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_double, e : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, ref nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cstemr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_float, e : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, ref nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zstemr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_double, e : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, ref nzc : c_int, isuppz : [] c_int, ref tryrac : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstedc(ref compz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstedc(ref compz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cstedc(ref compz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zstedc(ref compz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstegr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_float, e : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, isuppz : [] c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstegr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_double, e : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, isuppz : [] c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cstegr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_float, e : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, isuppz : [] c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zstegr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_double, e : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, isuppz : [] c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spteqr(ref compz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpteqr(ref compz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpteqr(ref compz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpteqr(ref compz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstebz(ref range : c_char, ref order : c_char, ref n : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, d : [] c_float, e : [] c_float, ref m : c_int, ref nsplit : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstebz(ref range : c_char, ref order : c_char, ref n : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, d : [] c_double, e : [] c_double, ref m : c_int, ref nsplit : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstein(ref n : c_int, d : [] c_float, e : [] c_float, ref m : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, z : [] c_float, ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifailv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstein(ref n : c_int, d : [] c_double, e : [] c_double, ref m : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, z : [] c_double, ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifailv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cstein(ref n : c_int, d : [] c_float, e : [] c_float, ref m : c_int, w : [] c_float, iblock : [] c_int, isplit : [] c_int, z : [] complex(64), ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifailv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zstein(ref n : c_int, d : [] c_double, e : [] c_double, ref m : c_int, w : [] c_double, iblock : [] c_int, isplit : [] c_int, z : [] complex(128), ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifailv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sdisna(ref job : c_char, ref m : c_int, ref n : c_int, d : [] c_float, sep : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ddisna(ref job : c_char, ref m : c_int, ref n : c_int, d : [] c_double, sep : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssygst(ref itype : c_int, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsygst(ref itype : c_int, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chegst(ref itype : c_int, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhegst(ref itype : c_int, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspgst(ref itype : c_int, ref uplo : c_char, ref n : c_int, ap : [] c_float, bp : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspgst(ref itype : c_int, ref uplo : c_char, ref n : c_int, ap : [] c_double, bp : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpgst(ref itype : c_int, ref uplo : c_char, ref n : c_int, ap : [] complex(64), bp : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpgst(ref itype : c_int, ref uplo : c_char, ref n : c_int, ap : [] complex(128), bp : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbgst(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_float, ref ldab : c_int, bb : [] c_float, ref ldbb : c_int, x : [] c_float, ref ldx : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbgst(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_double, ref ldab : c_int, bb : [] c_double, ref ldbb : c_int, x : [] c_double, ref ldx : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbgst(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(64), ref ldab : c_int, bb : [] complex(64), ref ldbb : c_int, x : [] complex(64), ref ldx : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbgst(ref vect : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(128), ref ldab : c_int, bb : [] complex(128), ref ldbb : c_int, x : [] complex(128), ref ldx : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_spbstf(ref uplo : c_char, ref n : c_int, ref kb : c_int, bb : [] c_float, ref ldbb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dpbstf(ref uplo : c_char, ref n : c_int, ref kb : c_int, bb : [] c_double, ref ldbb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cpbstf(ref uplo : c_char, ref n : c_int, ref kb : c_int, bb : [] complex(64), ref ldbb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zpbstf(ref uplo : c_char, ref n : c_int, ref kb : c_int, bb : [] complex(128), ref ldbb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgehrd(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgehrd(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgehrd(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgehrd(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorghr(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorghr(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sormhr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, c : [] c_float, ref ldc : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dormhr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, c : [] c_double, ref ldc : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunghr(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunghr(ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunmhr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunmhr(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgebal(ref job : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgebal(ref job : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgebal(ref job : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgebal(ref job : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgebak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref m : c_int, v : [] c_float, ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgebak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref m : c_int, v : [] c_double, ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgebak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref m : c_int, v : [] complex(64), ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgebak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref m : c_int, v : [] complex(128), ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_shseqr(ref job : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] c_float, ref ldh : c_int, wr : [] c_float, wi : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dhseqr(ref job : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] c_double, ref ldh : c_int, wr : [] c_double, wi : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chseqr(ref job : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] complex(64), ref ldh : c_int, w : [] complex(64), z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhseqr(ref job : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] complex(128), ref ldh : c_int, w : [] complex(128), z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_shsein(ref job : c_char, ref eigsrc : c_char, ref initv : c_char, chlapack_select : [] c_int, ref n : c_int, h : [] c_float, ref ldh : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] c_float, ifaill : [] c_int, ifailr : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dhsein(ref job : c_char, ref eigsrc : c_char, ref initv : c_char, chlapack_select : [] c_int, ref n : c_int, h : [] c_double, ref ldh : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] c_double, ifaill : [] c_int, ifailr : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chsein(ref job : c_char, ref eigsrc : c_char, ref initv : c_char, chlapack_select : [] c_int, ref n : c_int, h : [] complex(64), ref ldh : c_int, w : [] complex(64), vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float, ifaill : [] c_int, ifailr : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhsein(ref job : c_char, ref eigsrc : c_char, ref initv : c_char, chlapack_select : [] c_int, ref n : c_int, h : [] complex(128), ref ldh : c_int, w : [] complex(128), vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double, ifaill : [] c_int, ifailr : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] c_float, ref ldt : c_int, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] c_double, ref ldt : c_int, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] complex(64), ref ldt : c_int, vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] complex(128), ref ldt : c_int, vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] c_float, ref ldt : c_int, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, s : [] c_float, sep : [] c_float, ref mm : c_int, ref m : c_int, work : [] c_float, ref ldwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] c_double, ref ldt : c_int, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, s : [] c_double, sep : [] c_double, ref mm : c_int, ref m : c_int, work : [] c_double, ref ldwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] complex(64), ref ldt : c_int, vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, s : [] c_float, sep : [] c_float, ref mm : c_int, ref m : c_int, work : [] complex(64), ref ldwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] complex(128), ref ldt : c_int, vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, s : [] c_double, sep : [] c_double, ref mm : c_int, ref m : c_int, work : [] complex(128), ref ldwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strexc(ref compq : c_char, ref n : c_int, t : [] c_float, ref ldt : c_int, q : [] c_float, ref ldq : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrexc(ref compq : c_char, ref n : c_int, t : [] c_double, ref ldt : c_int, q : [] c_double, ref ldq : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrexc(ref compq : c_char, ref n : c_int, t : [] complex(64), ref ldt : c_int, q : [] complex(64), ref ldq : c_int, ref ifst : c_int, ref ilst : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrexc(ref compq : c_char, ref n : c_int, t : [] complex(128), ref ldt : c_int, q : [] complex(128), ref ldq : c_int, ref ifst : c_int, ref ilst : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strsen(ref job : c_char, ref compq : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] c_float, ref ldt : c_int, q : [] c_float, ref ldq : c_int, wr : [] c_float, wi : [] c_float, ref m : c_int, ref s : c_float, ref sep : c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrsen(ref job : c_char, ref compq : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] c_double, ref ldt : c_int, q : [] c_double, ref ldq : c_int, wr : [] c_double, wi : [] c_double, ref m : c_int, ref s : c_double, ref sep : c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrsen(ref job : c_char, ref compq : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] complex(64), ref ldt : c_int, q : [] complex(64), ref ldq : c_int, w : [] complex(64), ref m : c_int, ref s : c_float, ref sep : c_float, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrsen(ref job : c_char, ref compq : c_char, chlapack_select : [] c_int, ref n : c_int, t : [] complex(128), ref ldt : c_int, q : [] complex(128), ref ldq : c_int, w : [] complex(128), ref m : c_int, ref s : c_double, ref sep : c_double, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strsyl(ref trana : c_char, ref tranb : c_char, ref isgn : c_int, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, c : [] c_float, ref ldc : c_int, ref scale : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrsyl(ref trana : c_char, ref tranb : c_char, ref isgn : c_int, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, c : [] c_double, ref ldc : c_int, ref scale : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrsyl(ref trana : c_char, ref tranb : c_char, ref isgn : c_int, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, c : [] complex(64), ref ldc : c_int, ref scale : c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrsyl(ref trana : c_char, ref tranb : c_char, ref isgn : c_int, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, c : [] complex(128), ref ldc : c_int, ref scale : c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgghrd(ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, q : [] c_float, ref ldq : c_int, z : [] c_float, ref ldz : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgghrd(ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, q : [] c_double, ref ldq : c_int, z : [] c_double, ref ldz : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgghrd(ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, q : [] complex(64), ref ldq : c_int, z : [] complex(64), ref ldz : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgghrd(ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, q : [] complex(128), ref ldq : c_int, z : [] complex(128), ref ldz : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggbal(ref job : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggbal(ref job : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggbal(ref job : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggbal(ref job : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggbak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref m : c_int, v : [] c_float, ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggbak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref m : c_int, v : [] c_double, ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggbak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref m : c_int, v : [] complex(64), ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggbak(ref job : c_char, ref side : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref m : c_int, v : [] complex(128), ref ldv : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_shgeqz(ref job : c_char, ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] c_float, ref ldh : c_int, t : [] c_float, ref ldt : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ref ldq : c_int, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dhgeqz(ref job : c_char, ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] c_double, ref ldh : c_int, t : [] c_double, ref ldt : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ref ldq : c_int, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chgeqz(ref job : c_char, ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] complex(64), ref ldh : c_int, t : [] complex(64), ref ldt : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ref ldq : c_int, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhgeqz(ref job : c_char, ref compq : c_char, ref compz : c_char, ref n : c_int, ref ilo : c_int, ref ihi : c_int, h : [] complex(128), ref ldh : c_int, t : [] complex(128), ref ldt : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ref ldq : c_int, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stgevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, s : [] c_float, ref lds : c_int, p : [] c_float, ref ldp : c_int, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtgevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, s : [] c_double, ref lds : c_int, p : [] c_double, ref ldp : c_int, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctgevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, s : [] complex(64), ref lds : c_int, p : [] complex(64), ref ldp : c_int, vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztgevc(ref side : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, s : [] complex(128), ref lds : c_int, p : [] complex(128), ref ldp : c_int, vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, ref mm : c_int, ref m : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stgexc(ref wantq : c_int, ref wantz : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, q : [] c_float, ref ldq : c_int, z : [] c_float, ref ldz : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtgexc(ref wantq : c_int, ref wantz : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, q : [] c_double, ref ldq : c_int, z : [] c_double, ref ldz : c_int, ref ifst : c_int, ref ilst : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctgexc(ref wantq : c_int, ref wantz : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, q : [] complex(64), ref ldq : c_int, z : [] complex(64), ref ldz : c_int, ref ifst : c_int, ref ilst : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztgexc(ref wantq : c_int, ref wantz : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, q : [] complex(128), ref ldq : c_int, z : [] complex(128), ref ldz : c_int, ref ifst : c_int, ref ilst : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stgsen(ref ijob : c_int, ref wantq : c_int, ref wantz : c_int, chlapack_select : [] c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, q : [] c_float, ref ldq : c_int, z : [] c_float, ref ldz : c_int, ref m : c_int, ref pl : c_float, ref pr : c_float, dif : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtgsen(ref ijob : c_int, ref wantq : c_int, ref wantz : c_int, chlapack_select : [] c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, q : [] c_double, ref ldq : c_int, z : [] c_double, ref ldz : c_int, ref m : c_int, ref pl : c_double, ref pr : c_double, dif : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctgsen(ref ijob : c_int, ref wantq : c_int, ref wantz : c_int, chlapack_select : [] c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), ref ldq : c_int, z : [] complex(64), ref ldz : c_int, ref m : c_int, ref pl : c_float, ref pr : c_float, dif : [] c_float, work : [] complex(64), ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztgsen(ref ijob : c_int, ref wantq : c_int, ref wantz : c_int, chlapack_select : [] c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), ref ldq : c_int, z : [] complex(128), ref ldz : c_int, ref m : c_int, ref pl : c_double, ref pr : c_double, dif : [] c_double, work : [] complex(128), ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stgsyl(ref trans : c_char, ref ijob : c_int, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, c : [] c_float, ref ldc : c_int, d : [] c_float, ref ldd : c_int, e : [] c_float, ref lde : c_int, f : [] c_float, ref ldf : c_int, ref scale : c_float, ref dif : c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtgsyl(ref trans : c_char, ref ijob : c_int, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, c : [] c_double, ref ldc : c_int, d : [] c_double, ref ldd : c_int, e : [] c_double, ref lde : c_int, f : [] c_double, ref ldf : c_int, ref scale : c_double, ref dif : c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctgsyl(ref trans : c_char, ref ijob : c_int, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, c : [] complex(64), ref ldc : c_int, d : [] complex(64), ref ldd : c_int, e : [] complex(64), ref lde : c_int, f : [] complex(64), ref ldf : c_int, ref scale : c_float, ref dif : c_float, work : [] complex(64), ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztgsyl(ref trans : c_char, ref ijob : c_int, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, c : [] complex(128), ref ldc : c_int, d : [] complex(128), ref ldd : c_int, e : [] complex(128), ref lde : c_int, f : [] complex(128), ref ldf : c_int, ref scale : c_double, ref dif : c_double, work : [] complex(128), ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stgsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, s : [] c_float, dif : [] c_float, ref mm : c_int, ref m : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtgsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, s : [] c_double, dif : [] c_double, ref mm : c_int, ref m : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctgsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, s : [] c_float, dif : [] c_float, ref mm : c_int, ref m : c_int, work : [] complex(64), ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztgsna(ref job : c_char, ref howmny : c_char, chlapack_select : [] c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, s : [] c_double, dif : [] c_double, ref mm : c_int, ref m : c_int, work : [] complex(128), ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggsvp(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref tola : c_float, ref tolb : c_float, ref k : c_int, ref l : c_int, u : [] c_float, ref ldu : c_int, v : [] c_float, ref ldv : c_int, q : [] c_float, ref ldq : c_int, iwork : [] c_int, tau : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggsvp(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref tola : c_double, ref tolb : c_double, ref k : c_int, ref l : c_int, u : [] c_double, ref ldu : c_int, v : [] c_double, ref ldv : c_int, q : [] c_double, ref ldq : c_int, iwork : [] c_int, tau : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggsvp(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref tola : c_float, ref tolb : c_float, ref k : c_int, ref l : c_int, u : [] complex(64), ref ldu : c_int, v : [] complex(64), ref ldv : c_int, q : [] complex(64), ref ldq : c_int, iwork : [] c_int, rwork : [] c_float, tau : [] complex(64), work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggsvp(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref tola : c_double, ref tolb : c_double, ref k : c_int, ref l : c_int, u : [] complex(128), ref ldu : c_int, v : [] complex(128), ref ldv : c_int, q : [] complex(128), ref ldq : c_int, iwork : [] c_int, rwork : [] c_double, tau : [] complex(128), work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stgsja(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref tola : c_float, ref tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] c_float, ref ldu : c_int, v : [] c_float, ref ldv : c_int, q : [] c_float, ref ldq : c_int, work : [] c_float, ref ncycle : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtgsja(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref tola : c_double, ref tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] c_double, ref ldu : c_int, v : [] c_double, ref ldv : c_int, q : [] c_double, ref ldq : c_int, work : [] c_double, ref ncycle : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctgsja(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref tola : c_float, ref tolb : c_float, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ref ldu : c_int, v : [] complex(64), ref ldv : c_int, q : [] complex(64), ref ldq : c_int, work : [] complex(64), ref ncycle : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztgsja(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref p : c_int, ref n : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref tola : c_double, ref tolb : c_double, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ref ldu : c_int, v : [] complex(128), ref ldv : c_int, q : [] complex(128), ref ldq : c_int, work : [] complex(128), ref ncycle : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgels(ref trans : c_char, ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgels(ref trans : c_char, ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgels(ref trans : c_char, ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgels(ref trans : c_char, ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgelsy(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, jpvt : [] c_int, ref rcond : c_float, ref rank : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgelsy(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, jpvt : [] c_int, ref rcond : c_double, ref rank : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgelsy(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, jpvt : [] c_int, ref rcond : c_float, ref rank : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgelsy(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, jpvt : [] c_int, ref rcond : c_double, ref rank : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgelss(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, s : [] c_float, ref rcond : c_float, ref rank : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgelss(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, s : [] c_double, ref rcond : c_double, ref rank : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgelss(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, s : [] c_float, ref rcond : c_float, ref rank : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgelss(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, s : [] c_double, ref rcond : c_double, ref rank : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgelsd(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, s : [] c_float, ref rcond : c_float, ref rank : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgelsd(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, s : [] c_double, ref rcond : c_double, ref rank : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgelsd(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, s : [] c_float, ref rcond : c_float, ref rank : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgelsd(ref m : c_int, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, s : [] c_double, ref rcond : c_double, ref rank : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgglse(ref m : c_int, ref n : c_int, ref p : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, c : [] c_float, d : [] c_float, x : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgglse(ref m : c_int, ref n : c_int, ref p : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, c : [] c_double, d : [] c_double, x : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgglse(ref m : c_int, ref n : c_int, ref p : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, c : [] complex(64), d : [] complex(64), x : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgglse(ref m : c_int, ref n : c_int, ref p : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, c : [] complex(128), d : [] complex(128), x : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggglm(ref n : c_int, ref m : c_int, ref p : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, d : [] c_float, x : [] c_float, y : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggglm(ref n : c_int, ref m : c_int, ref p : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, d : [] c_double, x : [] c_double, y : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggglm(ref n : c_int, ref m : c_int, ref p : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, d : [] complex(64), x : [] complex(64), y : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggglm(ref n : c_int, ref m : c_int, ref p : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, d : [] complex(128), x : [] complex(128), y : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, w : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, w : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cheev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, w : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zheev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, w : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, w : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, w : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cheevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, w : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zheevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, w : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cheevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zheevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyevr(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, isuppz : [] c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyevr(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, isuppz : [] c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cheevr(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, isuppz : [] c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zheevr(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, isuppz : [] c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbev(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbevd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_float, ref ldab : c_int, q : [] c_float, ref ldq : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] c_double, ref ldab : c_int, q : [] c_double, ref ldq : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(64), ref ldab : c_int, q : [] complex(64), ref ldq : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbevx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref kd : c_int, ab : [] complex(128), ref ldab : c_int, q : [] complex(128), ref ldq : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstev(ref jobz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstev(ref jobz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstevd(ref jobz : c_char, ref n : c_int, d : [] c_float, e : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstevd(ref jobz : c_char, ref n : c_int, d : [] c_double, e : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstevx(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_float, e : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstevx(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_double, e : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sstevr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_float, e : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, isuppz : [] c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dstevr(ref jobz : c_char, ref range : c_char, ref n : c_int, d : [] c_double, e : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, isuppz : [] c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgees(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_S_SELECT2, ref n : c_int, a : [] c_float, ref lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ref ldvs : c_int, work : [] c_float, ref lwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgees(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_D_SELECT2, ref n : c_int, a : [] c_double, ref lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ref ldvs : c_int, work : [] c_double, ref lwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgees(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_C_SELECT1, ref n : c_int, a : [] complex(64), ref lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ref ldvs : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgees(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_Z_SELECT1, ref n : c_int, a : [] complex(128), ref lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ref ldvs : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeesx(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_S_SELECT2, ref sense : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref sdim : c_int, wr : [] c_float, wi : [] c_float, vs : [] c_float, ref ldvs : c_int, ref rconde : c_float, ref rcondv : c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeesx(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_D_SELECT2, ref sense : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref sdim : c_int, wr : [] c_double, wi : [] c_double, vs : [] c_double, ref ldvs : c_int, ref rconde : c_double, ref rcondv : c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeesx(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_C_SELECT1, ref sense : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ref ldvs : c_int, ref rconde : c_float, ref rcondv : c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeesx(ref jobvs : c_char, ref sort : c_char, chlapack_select : LAPACK_Z_SELECT1, ref sense : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ref ldvs : c_int, ref rconde : c_double, ref rcondv : c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, w : [] complex(64), vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, w : [] complex(128), vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, wr : [] c_float, wi : [] c_float, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, wr : [] c_double, wi : [] c_double, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, w : [] complex(64), vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_float, ref abnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, w : [] complex(128), vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, scale : [] c_double, ref abnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgesvd(ref jobu : c_char, ref jobvt : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, s : [] c_float, u : [] c_float, ref ldu : c_int, vt : [] c_float, ref ldvt : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgesvd(ref jobu : c_char, ref jobvt : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, s : [] c_double, u : [] c_double, ref ldu : c_int, vt : [] c_double, ref ldvt : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgesvd(ref jobu : c_char, ref jobvt : c_char, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, s : [] c_float, u : [] complex(64), ref ldu : c_int, vt : [] complex(64), ref ldvt : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgesvd(ref jobu : c_char, ref jobvt : c_char, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, s : [] c_double, u : [] complex(128), ref ldu : c_int, vt : [] complex(128), ref ldvt : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgesdd(ref jobz : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, s : [] c_float, u : [] c_float, ref ldu : c_int, vt : [] c_float, ref ldvt : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgesdd(ref jobz : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, s : [] c_double, u : [] c_double, ref ldu : c_int, vt : [] c_double, ref ldvt : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgesdd(ref jobz : c_char, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, s : [] c_float, u : [] complex(64), ref ldu : c_int, vt : [] complex(64), ref ldvt : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgesdd(ref jobz : c_char, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, s : [] c_double, u : [] complex(128), ref ldu : c_int, vt : [] complex(128), ref ldvt : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgejsv(ref joba : c_char, ref jobu : c_char, ref jobv : c_char, ref jobr : c_char, ref jobt : c_char, ref jobp : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, sva : [] c_double, u : [] c_double, ref ldu : c_int, v : [] c_double, ref ldv : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgejsv(ref joba : c_char, ref jobu : c_char, ref jobv : c_char, ref jobr : c_char, ref jobt : c_char, ref jobp : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, sva : [] c_float, u : [] c_float, ref ldu : c_int, v : [] c_float, ref ldv : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgesvj(ref joba : c_char, ref jobu : c_char, ref jobv : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, sva : [] c_double, ref mv : c_int, v : [] c_double, ref ldv : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgesvj(ref joba : c_char, ref jobu : c_char, ref jobv : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, sva : [] c_float, ref mv : c_int, v : [] c_float, ref ldv : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggsvd(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref n : c_int, ref p : c_int, ref k : c_int, ref l : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] c_float, ref ldu : c_int, v : [] c_float, ref ldv : c_int, q : [] c_float, ref ldq : c_int, work : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggsvd(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref n : c_int, ref p : c_int, ref k : c_int, ref l : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] c_double, ref ldu : c_int, v : [] c_double, ref ldv : c_int, q : [] c_double, ref ldq : c_int, work : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggsvd(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref n : c_int, ref p : c_int, ref k : c_int, ref l : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, alpha : [] c_float, beta : [] c_float, u : [] complex(64), ref ldu : c_int, v : [] complex(64), ref ldv : c_int, q : [] complex(64), ref ldq : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggsvd(ref jobu : c_char, ref jobv : c_char, ref jobq : c_char, ref m : c_int, ref n : c_int, ref p : c_int, ref k : c_int, ref l : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, alpha : [] c_double, beta : [] c_double, u : [] complex(128), ref ldu : c_int, v : [] complex(128), ref ldv : c_int, q : [] complex(128), ref ldq : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssygv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, w : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsygv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, w : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chegv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, w : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhegv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, w : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssygvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, w : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsygvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, w : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chegvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, w : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhegvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, w : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssygvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsygvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chegvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhegvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspgv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspgv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpgv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpgv(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspgvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, bp : [] c_float, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspgvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, bp : [] c_double, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpgvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpgvd(ref itype : c_int, ref jobz : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sspgvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, bp : [] c_float, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dspgvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, bp : [] c_double, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chpgvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), bp : [] complex(64), ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhpgvx(ref itype : c_int, ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), bp : [] complex(128), ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbgv(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_float, ref ldab : c_int, bb : [] c_float, ref ldbb : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbgv(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_double, ref ldab : c_int, bb : [] c_double, ref ldbb : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbgv(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(64), ref ldab : c_int, bb : [] complex(64), ref ldbb : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbgv(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(128), ref ldab : c_int, bb : [] complex(128), ref ldbb : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbgvd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_float, ref ldab : c_int, bb : [] c_float, ref ldbb : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbgvd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_double, ref ldab : c_int, bb : [] c_double, ref ldbb : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbgvd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(64), ref ldab : c_int, bb : [] complex(64), ref ldbb : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbgvd(ref jobz : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(128), ref ldab : c_int, bb : [] complex(128), ref ldbb : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref liwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssbgvx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_float, ref ldab : c_int, bb : [] c_float, ref ldbb : c_int, q : [] c_float, ref ldq : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] c_float, ref ldz : c_int, work : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsbgvx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] c_double, ref ldab : c_int, bb : [] c_double, ref ldbb : c_int, q : [] c_double, ref ldq : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] c_double, ref ldz : c_int, work : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chbgvx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(64), ref ldab : c_int, bb : [] complex(64), ref ldbb : c_int, q : [] complex(64), ref ldq : c_int, ref vl : c_float, ref vu : c_float, ref il : c_int, ref iu : c_int, ref abstol : c_float, ref m : c_int, w : [] c_float, z : [] complex(64), ref ldz : c_int, work : [] complex(64), rwork : [] c_float, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhbgvx(ref jobz : c_char, ref range : c_char, ref uplo : c_char, ref n : c_int, ref ka : c_int, ref kb : c_int, ab : [] complex(128), ref ldab : c_int, bb : [] complex(128), ref ldbb : c_int, q : [] complex(128), ref ldq : c_int, ref vl : c_double, ref vu : c_double, ref il : c_int, ref iu : c_int, ref abstol : c_double, ref m : c_int, w : [] c_double, z : [] complex(128), ref ldz : c_int, work : [] complex(128), rwork : [] c_double, iwork : [] c_int, ifail : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgges(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_S_SELECT3, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ref ldvsl : c_int, vsr : [] c_float, ref ldvsr : c_int, work : [] c_float, ref lwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgges(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_D_SELECT3, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ref ldvsl : c_int, vsr : [] c_double, ref ldvsr : c_int, work : [] c_double, ref lwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgges(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_C_SELECT2, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ref ldvsl : c_int, vsr : [] complex(64), ref ldvsr : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgges(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_Z_SELECT2, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ref ldvsl : c_int, vsr : [] complex(128), ref ldvsr : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggesx(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_S_SELECT3, ref sense : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, ref sdim : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vsl : [] c_float, ref ldvsl : c_int, vsr : [] c_float, ref ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggesx(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_D_SELECT3, ref sense : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, ref sdim : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vsl : [] c_double, ref ldvsl : c_int, vsr : [] c_double, ref ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref liwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggesx(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_C_SELECT2, ref sense : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), ref ldvsl : c_int, vsr : [] complex(64), ref ldvsr : c_int, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, iwork : [] c_int, ref liwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggesx(ref jobvsl : c_char, ref jobvsr : c_char, ref sort : c_char, selctg : LAPACK_Z_SELECT2, ref sense : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), ref ldvsl : c_int, vsr : [] complex(128), ref ldvsr : c_int, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, iwork : [] c_int, ref liwork : c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggev(ref jobvl : c_char, ref jobvr : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sggevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, alphar : [] c_float, alphai : [] c_float, beta : [] c_float, vl : [] c_float, ref ldvl : c_int, vr : [] c_float, ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] c_float, ref lwork : c_int, iwork : [] c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dggevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, alphar : [] c_double, alphai : [] c_double, beta : [] c_double, vl : [] c_double, ref ldvl : c_int, vr : [] c_double, ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] c_double, ref lwork : c_int, iwork : [] c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cggevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), ref ldvl : c_int, vr : [] complex(64), ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_float, rscale : [] c_float, ref abnrm : c_float, ref bbnrm : c_float, rconde : [] c_float, rcondv : [] c_float, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, iwork : [] c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zggevx(ref balanc : c_char, ref jobvl : c_char, ref jobvr : c_char, ref sense : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), ref ldvl : c_int, vr : [] complex(128), ref ldvr : c_int, ref ilo : c_int, ref ihi : c_int, lscale : [] c_double, rscale : [] c_double, ref abnrm : c_double, ref bbnrm : c_double, rconde : [] c_double, rcondv : [] c_double, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, iwork : [] c_int, bwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsfrk(ref transr : c_char, ref uplo : c_char, ref trans : c_char, ref n : c_int, ref k : c_int, ref alpha : c_double, a : [] c_double, ref lda : c_int, ref beta : c_double, c : [] c_double) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssfrk(ref transr : c_char, ref uplo : c_char, ref trans : c_char, ref n : c_int, ref k : c_int, ref alpha : c_float, a : [] c_float, ref lda : c_int, ref beta : c_float, c : [] c_float) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhfrk(ref transr : c_char, ref uplo : c_char, ref trans : c_char, ref n : c_int, ref k : c_int, ref alpha : c_double, a : [] complex(128), ref lda : c_int, ref beta : c_double, c : [] complex(128)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chfrk(ref transr : c_char, ref uplo : c_char, ref trans : c_char, ref n : c_int, ref k : c_int, ref alpha : c_float, a : [] complex(64), ref lda : c_int, ref beta : c_float, c : [] complex(64)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtfsm(ref transr : c_char, ref side : c_char, ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, ref alpha : c_double, a : [] c_double, b : [] c_double, ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stfsm(ref transr : c_char, ref side : c_char, ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, ref alpha : c_float, a : [] c_float, b : [] c_float, ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztfsm(ref transr : c_char, ref side : c_char, ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, ref alpha : complex(128), a : [] complex(128), b : [] complex(128), ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctfsm(ref transr : c_char, ref side : c_char, ref uplo : c_char, ref trans : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, ref alpha : complex(64), a : [] complex(64), b : [] complex(64), ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtfttp(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] c_double, ap : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stfttp(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] c_float, ap : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztfttp(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] complex(128), ap : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctfttp(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] complex(64), ap : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtfttr(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] c_double, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stfttr(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] c_float, a : [] c_float, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztfttr(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] complex(128), a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctfttr(ref transr : c_char, ref uplo : c_char, ref n : c_int, arf : [] complex(64), a : [] complex(64), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtpttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_double, arf : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stpttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, ap : [] c_float, arf : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztpttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(128), arf : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctpttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, ap : [] complex(64), arf : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtpttr(ref uplo : c_char, ref n : c_int, ap : [] c_double, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stpttr(ref uplo : c_char, ref n : c_int, ap : [] c_float, a : [] c_float, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztpttr(ref uplo : c_char, ref n : c_int, ap : [] complex(128), a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctpttr(ref uplo : c_char, ref n : c_int, ap : [] complex(64), a : [] complex(64), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, arf : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, arf : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, arf : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrttf(ref transr : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, arf : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtrttp(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ap : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_strttp(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ap : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztrttp(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ap : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctrttp(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ap : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqrfp(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqrfp(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqrfp(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqrfp(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clacgv(ref n : c_int, x : [] complex(64), ref incx : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlacgv(ref n : c_int, x : [] complex(128), ref incx : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slarnv(ref idist : c_int, iseed : [] c_int, ref n : c_int, x : [] c_float) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlarnv(ref idist : c_int, iseed : [] c_int, ref n : c_int, x : [] c_double) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clarnv(ref idist : c_int, iseed : [] c_int, ref n : c_int, x : [] complex(64)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlarnv(ref idist : c_int, iseed : [] c_int, ref n : c_int, x : [] complex(128)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqr2(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqr2(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqr2(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqr2(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slacn2(ref n : c_int, v : [] c_float, x : [] c_float, isgn : [] c_int, ref est : c_float, ref kase : c_int, isave : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlacn2(ref n : c_int, v : [] c_double, x : [] c_double, isgn : [] c_int, ref est : c_double, ref kase : c_int, isave : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clacn2(ref n : c_int, v : [] complex(64), x : [] complex(64), ref est : c_float, ref kase : c_int, isave : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlacn2(ref n : c_int, v : [] complex(128), x : [] complex(128), ref est : c_double, ref kase : c_int, isave : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slacpy(ref uplo : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlacpy(ref uplo : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clacpy(ref uplo : c_char, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlacpy(ref uplo : c_char, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clacp2(ref uplo : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, b : [] complex(64), ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlacp2(ref uplo : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, b : [] complex(128), ref ldb : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgetf2(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgetf2(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgetf2(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgetf2(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slaswp(ref n : c_int, a : [] c_float, ref lda : c_int, ref k1 : c_int, ref k2 : c_int, ipiv : [] c_int, ref incx : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlaswp(ref n : c_int, a : [] c_double, ref lda : c_int, ref k1 : c_int, ref k2 : c_int, ipiv : [] c_int, ref incx : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_claswp(ref n : c_int, a : [] complex(64), ref lda : c_int, ref k1 : c_int, ref k2 : c_int, ipiv : [] c_int, ref incx : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlaswp(ref n : c_int, a : [] complex(128), ref lda : c_int, ref k1 : c_int, ref k2 : c_int, ipiv : [] c_int, ref incx : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slange(ref norm : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_dlange(ref norm : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_clange(ref norm : c_char, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_zlange(ref norm : c_char, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_clanhe(ref norm : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_zlanhe(ref norm : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_slansy(ref norm : c_char, ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_dlansy(ref norm : c_char, ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_clansy(ref norm : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_zlansy(ref norm : c_char, ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_slantr(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_dlantr(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_clantr(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, work : [] c_float) : c_float;

pragma "no doc"
extern proc LAPACK_zlantr(ref norm : c_char, ref uplo : c_char, ref diag : c_char, ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, work : [] c_double) : c_double;

pragma "no doc"
extern proc LAPACK_slamch(ref cmach : c_char) : c_float;

pragma "no doc"
extern proc LAPACK_dlamch(ref cmach : c_char) : c_double;

pragma "no doc"
extern proc LAPACK_sgelq2(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, tau : [] c_float, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgelq2(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, tau : [] c_double, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgelq2(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, tau : [] complex(64), work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgelq2(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, tau : [] complex(128), work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slarfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, v : [] c_float, ref ldv : c_int, t : [] c_float, ref ldt : c_int, c : [] c_float, ref ldc : c_int, work : [] c_float, ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlarfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, v : [] c_double, ref ldv : c_int, t : [] c_double, ref ldt : c_int, c : [] c_double, ref ldc : c_int, work : [] c_double, ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clarfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, v : [] complex(64), ref ldv : c_int, t : [] complex(64), ref ldt : c_int, c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlarfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, v : [] complex(128), ref ldv : c_int, t : [] complex(128), ref ldt : c_int, c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slarfg(ref n : c_int, ref alpha : c_float, x : [] c_float, ref incx : c_int, ref tau : c_float) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlarfg(ref n : c_int, ref alpha : c_double, x : [] c_double, ref incx : c_int, ref tau : c_double) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clarfg(ref n : c_int, ref alpha : complex(64), x : [] complex(64), ref incx : c_int, ref tau : complex(64)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlarfg(ref n : c_int, ref alpha : complex(128), x : [] complex(128), ref incx : c_int, ref tau : complex(128)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slarft(ref direct : c_char, ref storev : c_char, ref n : c_int, ref k : c_int, v : [] c_float, ref ldv : c_int, tau : [] c_float, t : [] c_float, ref ldt : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlarft(ref direct : c_char, ref storev : c_char, ref n : c_int, ref k : c_int, v : [] c_double, ref ldv : c_int, tau : [] c_double, t : [] c_double, ref ldt : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clarft(ref direct : c_char, ref storev : c_char, ref n : c_int, ref k : c_int, v : [] complex(64), ref ldv : c_int, tau : [] complex(64), t : [] complex(64), ref ldt : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlarft(ref direct : c_char, ref storev : c_char, ref n : c_int, ref k : c_int, v : [] complex(128), ref ldv : c_int, tau : [] complex(128), t : [] complex(128), ref ldt : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slarfx(ref side : c_char, ref m : c_int, ref n : c_int, v : [] c_float, ref tau : c_float, c : [] c_float, ref ldc : c_int, work : [] c_float) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlarfx(ref side : c_char, ref m : c_int, ref n : c_int, v : [] c_double, ref tau : c_double, c : [] c_double, ref ldc : c_int, work : [] c_double) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clarfx(ref side : c_char, ref m : c_int, ref n : c_int, v : [] complex(64), ref tau : complex(64), c : [] complex(64), ref ldc : c_int, work : [] complex(64)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlarfx(ref side : c_char, ref m : c_int, ref n : c_int, v : [] complex(128), ref tau : complex(128), c : [] complex(128), ref ldc : c_int, work : [] complex(128)) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slatms(ref m : c_int, ref n : c_int, ref dist : c_char, iseed : [] c_int, ref sym : c_char, d : [] c_float, ref mode : c_int, ref cond : c_float, ref dmax : c_float, ref kl : c_int, ref ku : c_int, ref pack : c_char, a : [] c_float, ref lda : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlatms(ref m : c_int, ref n : c_int, ref dist : c_char, iseed : [] c_int, ref sym : c_char, d : [] c_double, ref mode : c_int, ref cond : c_double, ref dmax : c_double, ref kl : c_int, ref ku : c_int, ref pack : c_char, a : [] c_double, ref lda : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clatms(ref m : c_int, ref n : c_int, ref dist : c_char, iseed : [] c_int, ref sym : c_char, d : [] c_float, ref mode : c_int, ref cond : c_float, ref dmax : c_float, ref kl : c_int, ref ku : c_int, ref pack : c_char, a : [] complex(64), ref lda : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlatms(ref m : c_int, ref n : c_int, ref dist : c_char, iseed : [] c_int, ref sym : c_char, d : [] c_double, ref mode : c_int, ref cond : c_double, ref dmax : c_double, ref kl : c_int, ref ku : c_int, ref pack : c_char, a : [] complex(128), ref lda : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slag2d(ref m : c_int, ref n : c_int, sa : [] c_float, ref ldsa : c_int, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlag2s(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, sa : [] c_float, ref ldsa : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clag2z(ref m : c_int, ref n : c_int, sa : [] complex(64), ref ldsa : c_int, a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlag2c(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, sa : [] complex(64), ref ldsa : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slauum(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlauum(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clauum(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlauum(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slagge(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, d : [] c_float, a : [] c_float, ref lda : c_int, iseed : [] c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlagge(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, d : [] c_double, a : [] c_double, ref lda : c_int, iseed : [] c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clagge(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, d : [] c_float, a : [] complex(64), ref lda : c_int, iseed : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlagge(ref m : c_int, ref n : c_int, ref kl : c_int, ref ku : c_int, d : [] c_double, a : [] complex(128), ref lda : c_int, iseed : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slaset(ref uplo : c_char, ref m : c_int, ref n : c_int, ref alpha : c_float, ref beta : c_float, a : [] c_float, ref lda : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlaset(ref uplo : c_char, ref m : c_int, ref n : c_int, ref alpha : c_double, ref beta : c_double, a : [] c_double, ref lda : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_claset(ref uplo : c_char, ref m : c_int, ref n : c_int, ref alpha : complex(64), ref beta : complex(64), a : [] complex(64), ref lda : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlaset(ref uplo : c_char, ref m : c_int, ref n : c_int, ref alpha : complex(128), ref beta : complex(128), a : [] complex(128), ref lda : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slasrt(ref id : c_char, ref n : c_int, d : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlasrt(ref id : c_char, ref n : c_int, d : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_claghe(ref n : c_int, ref k : c_int, d : [] c_float, a : [] complex(64), ref lda : c_int, iseed : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlaghe(ref n : c_int, ref k : c_int, d : [] c_double, a : [] complex(128), ref lda : c_int, iseed : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slagsy(ref n : c_int, ref k : c_int, d : [] c_float, a : [] c_float, ref lda : c_int, iseed : [] c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlagsy(ref n : c_int, ref k : c_int, d : [] c_double, a : [] c_double, ref lda : c_int, iseed : [] c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clagsy(ref n : c_int, ref k : c_int, d : [] c_float, a : [] complex(64), ref lda : c_int, iseed : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlagsy(ref n : c_int, ref k : c_int, d : [] c_double, a : [] complex(128), ref lda : c_int, iseed : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slapmr(ref forwrd : c_int, ref m : c_int, ref n : c_int, x : [] c_float, ref ldx : c_int, k : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlapmr(ref forwrd : c_int, ref m : c_int, ref n : c_int, x : [] c_double, ref ldx : c_int, k : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_clapmr(ref forwrd : c_int, ref m : c_int, ref n : c_int, x : [] complex(64), ref ldx : c_int, k : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zlapmr(ref forwrd : c_int, ref m : c_int, ref n : c_int, x : [] complex(128), ref ldx : c_int, k : [] c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slapy2(ref x : c_float, ref y : c_float) : c_float;

pragma "no doc"
extern proc LAPACK_dlapy2(ref x : c_double, ref y : c_double) : c_double;

pragma "no doc"
extern proc LAPACK_slapy3(ref x : c_float, ref y : c_float, ref z : c_float) : c_float;

pragma "no doc"
extern proc LAPACK_dlapy3(ref x : c_double, ref y : c_double, ref z : c_double) : c_double;

pragma "no doc"
extern proc LAPACK_slartgp(ref f : c_float, ref g : c_float, ref cs : c_float, ref sn : c_float, ref r : c_float) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlartgp(ref f : c_double, ref g : c_double, ref cs : c_double, ref sn : c_double, ref r : c_double) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_slartgs(ref x : c_float, ref y : c_float, ref sigma : c_float, ref cs : c_float, ref sn : c_float) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dlartgs(ref x : c_double, ref y : c_double, ref sigma : c_double, ref cs : c_double, ref sn : c_double) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cbbcsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref m : c_int, ref p : c_int, ref q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] complex(64), ref ldu1 : c_int, u2 : [] complex(64), ref ldu2 : c_int, v1t : [] complex(64), ref ldv1t : c_int, v2t : [] complex(64), ref ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float, rwork : [] c_float, ref lrwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cheswapr(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref i1 : c_int, ref i2 : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetri2(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetri2x(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref nb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_chetrs2(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csyconv(ref uplo : c_char, ref way : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csyswapr(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref i1 : c_int, ref i2 : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csytri2(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csytri2x(ref uplo : c_char, ref n : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref nb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csytrs2(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cunbdb(ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] complex(64), ref ldx11 : c_int, x12 : [] complex(64), ref ldx12 : c_int, x21 : [] complex(64), ref ldx21 : c_int, x22 : [] complex(64), ref ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] complex(64), taup2 : [] complex(64), tauq1 : [] complex(64), tauq2 : [] complex(64), work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cuncsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] complex(64), ref ldx11 : c_int, x12 : [] complex(64), ref ldx12 : c_int, x21 : [] complex(64), ref ldx21 : c_int, x22 : [] complex(64), ref ldx22 : c_int, theta : [] c_float, u1 : [] complex(64), ref ldu1 : c_int, u2 : [] complex(64), ref ldu2 : c_int, v1t : [] complex(64), ref ldv1t : c_int, v2t : [] complex(64), ref ldv2t : c_int, work : [] complex(64), ref lwork : c_int, rwork : [] c_float, ref lrwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dbbcsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref m : c_int, ref p : c_int, ref q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] c_double, ref ldu1 : c_int, u2 : [] c_double, ref ldu2 : c_int, v1t : [] c_double, ref ldv1t : c_int, v2t : [] c_double, ref ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorbdb(ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] c_double, ref ldx11 : c_int, x12 : [] c_double, ref ldx12 : c_int, x21 : [] c_double, ref ldx21 : c_int, x22 : [] c_double, ref ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] c_double, taup2 : [] c_double, tauq1 : [] c_double, tauq2 : [] c_double, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dorcsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] c_double, ref ldx11 : c_int, x12 : [] c_double, ref ldx12 : c_int, x21 : [] c_double, ref ldx21 : c_int, x22 : [] c_double, ref ldx22 : c_int, theta : [] c_double, u1 : [] c_double, ref ldu1 : c_int, u2 : [] c_double, ref ldu2 : c_int, v1t : [] c_double, ref ldv1t : c_int, v2t : [] c_double, ref ldv2t : c_int, work : [] c_double, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyconv(ref uplo : c_char, ref way : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsyswapr(ref uplo : c_char, ref n : c_int, a : [] c_double, ref i1 : c_int, ref i2 : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytri2(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytri2x(ref uplo : c_char, ref n : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, work : [] c_double, ref nb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsytrs2(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sbbcsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref m : c_int, ref p : c_int, ref q : c_int, theta : [] c_float, phi : [] c_float, u1 : [] c_float, ref ldu1 : c_int, u2 : [] c_float, ref ldu2 : c_int, v1t : [] c_float, ref ldv1t : c_int, v2t : [] c_float, ref ldv2t : c_int, b11d : [] c_float, b11e : [] c_float, b12d : [] c_float, b12e : [] c_float, b21d : [] c_float, b21e : [] c_float, b22d : [] c_float, b22e : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorbdb(ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] c_float, ref ldx11 : c_int, x12 : [] c_float, ref ldx12 : c_int, x21 : [] c_float, ref ldx21 : c_int, x22 : [] c_float, ref ldx22 : c_int, theta : [] c_float, phi : [] c_float, taup1 : [] c_float, taup2 : [] c_float, tauq1 : [] c_float, tauq2 : [] c_float, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sorcsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] c_float, ref ldx11 : c_int, x12 : [] c_float, ref ldx12 : c_int, x21 : [] c_float, ref ldx21 : c_int, x22 : [] c_float, ref ldx22 : c_int, theta : [] c_float, u1 : [] c_float, ref ldu1 : c_int, u2 : [] c_float, ref ldu2 : c_int, v1t : [] c_float, ref ldv1t : c_int, v2t : [] c_float, ref ldv2t : c_int, work : [] c_float, ref lwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyconv(ref uplo : c_char, ref way : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssyswapr(ref uplo : c_char, ref n : c_int, a : [] c_float, ref i1 : c_int, ref i2 : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytri2(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytri2x(ref uplo : c_char, ref n : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, work : [] c_float, ref nb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssytrs2(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zbbcsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref m : c_int, ref p : c_int, ref q : c_int, theta : [] c_double, phi : [] c_double, u1 : [] complex(128), ref ldu1 : c_int, u2 : [] complex(128), ref ldu2 : c_int, v1t : [] complex(128), ref ldv1t : c_int, v2t : [] complex(128), ref ldv2t : c_int, b11d : [] c_double, b11e : [] c_double, b12d : [] c_double, b12e : [] c_double, b21d : [] c_double, b21e : [] c_double, b22d : [] c_double, b22e : [] c_double, rwork : [] c_double, ref lrwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zheswapr(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref i1 : c_int, ref i2 : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetri2(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetri2x(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref nb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zhetrs2(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsyconv(ref uplo : c_char, ref way : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsyswapr(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref i1 : c_int, ref i2 : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsytri2(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsytri2x(ref uplo : c_char, ref n : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, work : [] complex(128), ref nb : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsytrs2(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zunbdb(ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] complex(128), ref ldx11 : c_int, x12 : [] complex(128), ref ldx12 : c_int, x21 : [] complex(128), ref ldx21 : c_int, x22 : [] complex(128), ref ldx22 : c_int, theta : [] c_double, phi : [] c_double, taup1 : [] complex(128), taup2 : [] complex(128), tauq1 : [] complex(128), tauq2 : [] complex(128), work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zuncsd(ref jobu1 : c_char, ref jobu2 : c_char, ref jobv1t : c_char, ref jobv2t : c_char, ref trans : c_char, ref signs : c_char, ref m : c_int, ref p : c_int, ref q : c_int, x11 : [] complex(128), ref ldx11 : c_int, x12 : [] complex(128), ref ldx12 : c_int, x21 : [] complex(128), ref ldx21 : c_int, x22 : [] complex(128), ref ldx22 : c_int, theta : [] c_double, u1 : [] complex(128), ref ldu1 : c_int, u2 : [] complex(128), ref ldu2 : c_int, v1t : [] complex(128), ref ldv1t : c_int, v2t : [] complex(128), ref ldv2t : c_int, work : [] complex(128), ref lwork : c_int, rwork : [] c_double, ref lrwork : c_int, iwork : [] c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgemqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref nb : c_int, v : [] c_float, ref ldv : c_int, t : [] c_float, ref ldt : c_int, c : [] c_float, ref ldc : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgemqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref nb : c_int, v : [] c_double, ref ldv : c_int, t : [] c_double, ref ldt : c_int, c : [] c_double, ref ldc : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgemqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref nb : c_int, v : [] complex(64), ref ldv : c_int, t : [] complex(64), ref ldt : c_int, c : [] complex(64), ref ldc : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgemqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref nb : c_int, v : [] complex(128), ref ldv : c_int, t : [] complex(128), ref ldt : c_int, c : [] complex(128), ref ldc : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqrt(ref m : c_int, ref n : c_int, ref nb : c_int, a : [] c_float, ref lda : c_int, t : [] c_float, ref ldt : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqrt(ref m : c_int, ref n : c_int, ref nb : c_int, a : [] c_double, ref lda : c_int, t : [] c_double, ref ldt : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqrt(ref m : c_int, ref n : c_int, ref nb : c_int, a : [] complex(64), ref lda : c_int, t : [] complex(64), ref ldt : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqrt(ref m : c_int, ref n : c_int, ref nb : c_int, a : [] complex(128), ref lda : c_int, t : [] complex(128), ref ldt : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqrt2(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, t : [] c_float, ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqrt2(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, t : [] c_double, ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqrt2(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, t : [] complex(64), ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqrt2(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, t : [] complex(128), ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_sgeqrt3(ref m : c_int, ref n : c_int, a : [] c_float, ref lda : c_int, t : [] c_float, ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dgeqrt3(ref m : c_int, ref n : c_int, a : [] c_double, ref lda : c_int, t : [] c_double, ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_cgeqrt3(ref m : c_int, ref n : c_int, a : [] complex(64), ref lda : c_int, t : [] complex(64), ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zgeqrt3(ref m : c_int, ref n : c_int, a : [] complex(128), ref lda : c_int, t : [] complex(128), ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stpmqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, ref nb : c_int, v : [] c_float, ref ldv : c_int, t : [] c_float, ref ldt : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, work : [] c_float, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtpmqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, ref nb : c_int, v : [] c_double, ref ldv : c_int, t : [] c_double, ref ldt : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctpmqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, ref nb : c_int, v : [] complex(64), ref ldv : c_int, t : [] complex(64), ref ldt : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztpmqrt(ref side : c_char, ref trans : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, ref nb : c_int, v : [] complex(128), ref ldv : c_int, t : [] complex(128), ref ldt : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtpqrt(ref m : c_int, ref n : c_int, ref l : c_int, ref nb : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, t : [] c_double, ref ldt : c_int, work : [] c_double, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctpqrt(ref m : c_int, ref n : c_int, ref l : c_int, ref nb : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, t : [] complex(64), ref ldt : c_int, work : [] complex(64), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztpqrt(ref m : c_int, ref n : c_int, ref l : c_int, ref nb : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, t : [] complex(128), ref ldt : c_int, work : [] complex(128), ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stpqrt2(ref m : c_int, ref n : c_int, ref l : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, t : [] c_float, ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtpqrt2(ref m : c_int, ref n : c_int, ref l : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, t : [] c_double, ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctpqrt2(ref m : c_int, ref n : c_int, ref l : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, t : [] complex(64), ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztpqrt2(ref m : c_int, ref n : c_int, ref l : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, t : [] complex(128), ref ldt : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_stprfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, v : [] c_float, ref ldv : c_int, t : [] c_float, ref ldt : c_int, a : [] c_float, ref lda : c_int, b : [] c_float, ref ldb : c_int, work : [] c_float, ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dtprfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, v : [] c_double, ref ldv : c_int, t : [] c_double, ref ldt : c_int, a : [] c_double, ref lda : c_int, b : [] c_double, ref ldb : c_int, work : [] c_double, ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ctprfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, v : [] complex(64), ref ldv : c_int, t : [] complex(64), ref ldt : c_int, a : [] complex(64), ref lda : c_int, b : [] complex(64), ref ldb : c_int, work : [] c_float, ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ztprfb(ref side : c_char, ref trans : c_char, ref direct : c_char, ref storev : c_char, ref m : c_int, ref n : c_int, ref k : c_int, ref l : c_int, v : [] complex(128), ref ldv : c_int, t : [] complex(128), ref ldt : c_int, a : [] complex(128), ref lda : c_int, b : [] complex(128), ref ldb : c_int, work : [] c_double, ref ldwork : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ssysv_rook(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_float, ref lda : c_int, ipiv : [] c_int, b : [] c_float, ref ldb : c_int, work : [] c_float, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_dsysv_rook(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] c_double, ref lda : c_int, ipiv : [] c_int, b : [] c_double, ref ldb : c_int, work : [] c_double, ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csysv_rook(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(64), ref lda : c_int, ipiv : [] c_int, b : [] complex(64), ref ldb : c_int, work : [] complex(64), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsysv_rook(ref uplo : c_char, ref n : c_int, ref nrhs : c_int, a : [] complex(128), ref lda : c_int, ipiv : [] c_int, b : [] complex(128), ref ldb : c_int, work : [] complex(128), ref lwork : c_int, ref info : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_csyr(ref uplo : c_char, ref n : c_int, ref alpha : complex(64), x : [] complex(64), ref incx : c_int, a : [] complex(64), ref lda : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_zsyr(ref uplo : c_char, ref n : c_int, ref alpha : complex(128), x : [] complex(128), ref incx : c_int, a : [] complex(128), ref lda : c_int) : c_void_ptr;

pragma "no doc"
extern proc LAPACK_ilaver(ref vers_major : c_int, ref vers_minor : c_int, ref vers_patch : c_int) : c_void_ptr;

} // ClassicLAPACK
/* 
Wrapped procedure of LAPACKE_sbdsdc for the type real(32).
 */
inline proc bdsdc(matrix_order : lapack_memory_order, uplo : string, compq : string, n : c_int, d : [] real(32), e : [] real(32), u : [] real(32), vt : [] real(32), q : [] real(32), iq : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sbdsdc(matrix_order, ascii(uplo) : c_char, ascii(compq) : c_char, n, d, e, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int, q, iq);
}

/* 
Wrapped procedure of LAPACKE_dbdsdc for the type real(64).
 */
inline proc bdsdc(matrix_order : lapack_memory_order, uplo : string, compq : string, n : c_int, d : [] real(64), e : [] real(64), u : [] real(64), vt : [] real(64), q : [] real(64), iq : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dbdsdc(matrix_order, ascii(uplo) : c_char, ascii(compq) : c_char, n, d, e, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int, q, iq);
}

/* 
Wrapped procedure of LAPACKE_sbdsqr for the type real(32).
 */
inline proc bdsqr(matrix_order : lapack_memory_order, uplo : string, d : [] real(32), e : [] real(32), vt : [] real(32), u : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sbdsqr(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then vt.domain.dim(2).size else vt.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then u.domain.dim(1).size else u.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, d, e, vt, (vt.domain.dim(2).size) : c_int, u, (u.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dbdsqr for the type real(64).
 */
inline proc bdsqr(matrix_order : lapack_memory_order, uplo : string, d : [] real(64), e : [] real(64), vt : [] real(64), u : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dbdsqr(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then vt.domain.dim(2).size else vt.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then u.domain.dim(1).size else u.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, d, e, vt, (vt.domain.dim(2).size) : c_int, u, (u.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cbdsqr for the type complex(64).
 */
inline proc bdsqr(matrix_order : lapack_memory_order, uplo : string, d : [] real(32), e : [] real(32), vt : [] complex(64), u : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cbdsqr(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then vt.domain.dim(2).size else vt.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then u.domain.dim(1).size else u.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, d, e, vt, (vt.domain.dim(2).size) : c_int, u, (u.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zbdsqr for the type complex(128).
 */
inline proc bdsqr(matrix_order : lapack_memory_order, uplo : string, d : [] real(64), e : [] real(64), vt : [] complex(128), u : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zbdsqr(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then vt.domain.dim(2).size else vt.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then u.domain.dim(1).size else u.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, d, e, vt, (vt.domain.dim(2).size) : c_int, u, (u.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sdisna for the type real(32).
 */
inline proc disna(job : string, m : c_int, n : c_int, d : [] real(32), sep : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sdisna(ascii(job) : c_char, m, n, d, sep);
}

/* 
Wrapped procedure of LAPACKE_ddisna for the type real(64).
 */
inline proc disna(job : string, m : c_int, n : c_int, d : [] real(64), sep : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ddisna(ascii(job) : c_char, m, n, d, sep);
}

/* 
Wrapped procedure of LAPACKE_sgbbrd for the type real(32).
 */
inline proc gbbrd(matrix_order : lapack_memory_order, vect : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), d : [] real(32), e : [] real(32), q : [] real(32), pt : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbbrd(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, n, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, kl, ku, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int, pt, (pt.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgbbrd for the type real(64).
 */
inline proc gbbrd(matrix_order : lapack_memory_order, vect : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), d : [] real(64), e : [] real(64), q : [] real(64), pt : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbbrd(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, n, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, kl, ku, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int, pt, (pt.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgbbrd for the type complex(64).
 */
inline proc gbbrd(matrix_order : lapack_memory_order, vect : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), d : [] real(32), e : [] real(32), q : [] complex(64), pt : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgbbrd(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, n, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, kl, ku, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int, pt, (pt.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgbbrd for the type complex(128).
 */
inline proc gbbrd(matrix_order : lapack_memory_order, vect : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), d : [] real(64), e : [] real(64), q : [] complex(128), pt : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgbbrd(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, n, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, kl, ku, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int, pt, (pt.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgbcon for the type real(32).
 */
inline proc gbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dgbcon for the type real(64).
 */
inline proc gbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cgbcon for the type complex(64).
 */
inline proc gbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zgbcon for the type complex(128).
 */
inline proc gbcon(matrix_order : lapack_memory_order, norm : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbcon(matrix_order, ascii(norm) : c_char, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_sgbequ for the type real(32).
 */
inline proc gbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbequ(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_dgbequ for the type real(64).
 */
inline proc gbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbequ(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_cgbequ for the type complex(64).
 */
inline proc gbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbequ(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_zgbequ for the type complex(128).
 */
inline proc gbequ(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbequ(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_sgbequb for the type real(32).
 */
inline proc gbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbequb(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_dgbequb for the type real(64).
 */
inline proc gbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbequb(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_cgbequb for the type complex(64).
 */
inline proc gbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbequb(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_zgbequb for the type complex(128).
 */
inline proc gbequb(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbequb(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_sgbrfs for the type real(32).
 */
inline proc gbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), afb : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dgbrfs for the type real(64).
 */
inline proc gbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), afb : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cgbrfs for the type complex(64).
 */
inline proc gbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), afb : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zgbrfs for the type complex(128).
 */
inline proc gbrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), afb : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbrfs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sgbrfsx for the type real(32).
 */
inline proc gbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), afb : [] real(32), ipiv : [] c_int, r : [] real(32), c : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dgbrfsx for the type real(64).
 */
inline proc gbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), afb : [] real(64), ipiv : [] c_int, r : [] real(64), c : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_cgbrfsx for the type complex(64).
 */
inline proc gbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), afb : [] complex(64), ipiv : [] c_int, r : [] real(32), c : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zgbrfsx for the type complex(128).
 */
inline proc gbrfsx(matrix_order : lapack_memory_order, trans : string, equed : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), afb : [] complex(128), ipiv : [] c_int, r : [] real(64), c : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbrfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_sgbsv for the type real(32).
 */
inline proc gbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbsv(matrix_order, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgbsv for the type real(64).
 */
inline proc gbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbsv(matrix_order, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgbsv for the type complex(64).
 */
inline proc gbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgbsv(matrix_order, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgbsv for the type complex(128).
 */
inline proc gbsv(matrix_order : lapack_memory_order, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgbsv(matrix_order, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgbsvx for the type real(32).
 */
inline proc gbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), afb : [] real(32), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32), rpivot : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_dgbsvx for the type real(64).
 */
inline proc gbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), afb : [] real(64), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64), rpivot : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_cgbsvx for the type complex(64).
 */
inline proc gbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), afb : [] complex(64), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32), rpivot : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_zgbsvx for the type complex(128).
 */
inline proc gbsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), afb : [] complex(128), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64), rpivot : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_sgbsvxx for the type real(32).
 */
inline proc gbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), afb : [] real(32), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dgbsvxx for the type real(64).
 */
inline proc gbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), afb : [] real(64), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_cgbsvxx for the type complex(64).
 */
inline proc gbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), afb : [] complex(64), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zgbsvxx for the type complex(128).
 */
inline proc gbsvxx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), afb : [] complex(128), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgbsvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_sgbtrf for the type real(32).
 */
inline proc gbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sgbtrf(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dgbtrf for the type real(64).
 */
inline proc gbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dgbtrf(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_cgbtrf for the type complex(64).
 */
inline proc gbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cgbtrf(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zgbtrf for the type complex(128).
 */
inline proc gbtrf(matrix_order : lapack_memory_order, m : c_int, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zgbtrf(matrix_order, m, n, kl, ku, ab, (ab.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_sgbtrs for the type real(32).
 */
inline proc gbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgbtrs for the type real(64).
 */
inline proc gbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgbtrs for the type complex(64).
 */
inline proc gbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgbtrs for the type complex(128).
 */
inline proc gbtrs(matrix_order : lapack_memory_order, trans : string, n : c_int, kl : c_int, ku : c_int, ab : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgbtrs(matrix_order, ascii(trans) : c_char, n, kl, ku, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgebak for the type real(32).
 */
inline proc gebak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, scale : [] real(32), v : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, scale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgebak for the type real(64).
 */
inline proc gebak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, scale : [] real(64), v : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, scale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgebak for the type complex(64).
 */
inline proc gebak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, scale : [] real(32), v : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, scale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgebak for the type complex(128).
 */
inline proc gebak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, scale : [] real(64), v : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgebak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, scale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgebal for the type real(32).
 */
inline proc gebal(matrix_order : lapack_memory_order, job : string, a : [] real(32), ref ilo : c_int, ref ihi : c_int, scale : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgebal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ilo, ihi, scale);
}

/* 
Wrapped procedure of LAPACKE_dgebal for the type real(64).
 */
inline proc gebal(matrix_order : lapack_memory_order, job : string, a : [] real(64), ref ilo : c_int, ref ihi : c_int, scale : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgebal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ilo, ihi, scale);
}

/* 
Wrapped procedure of LAPACKE_cgebal for the type complex(64).
 */
inline proc gebal(matrix_order : lapack_memory_order, job : string, a : [] complex(64), ref ilo : c_int, ref ihi : c_int, scale : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgebal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ilo, ihi, scale);
}

/* 
Wrapped procedure of LAPACKE_zgebal for the type complex(128).
 */
inline proc gebal(matrix_order : lapack_memory_order, job : string, a : [] complex(128), ref ilo : c_int, ref ihi : c_int, scale : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgebal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ilo, ihi, scale);
}

/* 
Wrapped procedure of LAPACKE_sgebrd for the type real(32).
 */
inline proc gebrd(matrix_order : lapack_memory_order, a : [] real(32), d : [] real(32), e : [] real(32), tauq : [] real(32), taup : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgebrd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tauq, taup);
}

/* 
Wrapped procedure of LAPACKE_dgebrd for the type real(64).
 */
inline proc gebrd(matrix_order : lapack_memory_order, a : [] real(64), d : [] real(64), e : [] real(64), tauq : [] real(64), taup : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgebrd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tauq, taup);
}

/* 
Wrapped procedure of LAPACKE_cgebrd for the type complex(64).
 */
inline proc gebrd(matrix_order : lapack_memory_order, a : [] complex(64), d : [] real(32), e : [] real(32), tauq : [] complex(64), taup : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgebrd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tauq, taup);
}

/* 
Wrapped procedure of LAPACKE_zgebrd for the type complex(128).
 */
inline proc gebrd(matrix_order : lapack_memory_order, a : [] complex(128), d : [] real(64), e : [] real(64), tauq : [] complex(128), taup : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgebrd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tauq, taup);
}

/* 
Wrapped procedure of LAPACKE_sgecon for the type real(32).
 */
inline proc gecon(matrix_order : lapack_memory_order, norm : string, a : [] real(32), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgecon(matrix_order, ascii(norm) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dgecon for the type real(64).
 */
inline proc gecon(matrix_order : lapack_memory_order, norm : string, a : [] real(64), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgecon(matrix_order, ascii(norm) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cgecon for the type complex(64).
 */
inline proc gecon(matrix_order : lapack_memory_order, norm : string, a : [] complex(64), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgecon(matrix_order, ascii(norm) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zgecon for the type complex(128).
 */
inline proc gecon(matrix_order : lapack_memory_order, norm : string, a : [] complex(128), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgecon(matrix_order, ascii(norm) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_sgeequ for the type real(32).
 */
inline proc geequ(matrix_order : lapack_memory_order, a : [] real(32), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeequ(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_dgeequ for the type real(64).
 */
inline proc geequ(matrix_order : lapack_memory_order, a : [] real(64), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeequ(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_cgeequ for the type complex(64).
 */
inline proc geequ(matrix_order : lapack_memory_order, a : [] complex(64), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgeequ(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_zgeequ for the type complex(128).
 */
inline proc geequ(matrix_order : lapack_memory_order, a : [] complex(128), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgeequ(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_sgeequb for the type real(32).
 */
inline proc geequb(matrix_order : lapack_memory_order, a : [] real(32), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeequb(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_dgeequb for the type real(64).
 */
inline proc geequb(matrix_order : lapack_memory_order, a : [] real(64), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeequb(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_cgeequb for the type complex(64).
 */
inline proc geequb(matrix_order : lapack_memory_order, a : [] complex(64), r : [] real(32), c : [] real(32), ref rowcnd : real(32), ref colcnd : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgeequb(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_zgeequb for the type complex(128).
 */
inline proc geequb(matrix_order : lapack_memory_order, a : [] complex(128), r : [] real(64), c : [] real(64), ref rowcnd : real(64), ref colcnd : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgeequb(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, r, c, rowcnd, colcnd, amax);
}

/* 
Wrapped procedure of LAPACKE_sgees for the type real(32).
 */
inline proc gees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_S_SELECT2, a : [] real(32), ref sdim : c_int, wr : [] real(32), wi : [] real(32), vs : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, wr, wi, vs, (vs.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgees for the type real(64).
 */
inline proc gees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_D_SELECT2, a : [] real(64), ref sdim : c_int, wr : [] real(64), wi : [] real(64), vs : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, wr, wi, vs, (vs.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgees for the type complex(64).
 */
inline proc gees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_C_SELECT1, a : [] complex(64), ref sdim : c_int, w : [] complex(64), vs : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, w, vs, (vs.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgees for the type complex(128).
 */
inline proc gees(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_Z_SELECT1, a : [] complex(128), ref sdim : c_int, w : [] complex(128), vs : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgees(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, w, vs, (vs.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgeesx for the type real(32).
 */
inline proc geesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_S_SELECT2, sense : string, a : [] real(32), ref sdim : c_int, wr : [] real(32), wi : [] real(32), vs : [] real(32), ref rconde : real(32), ref rcondv : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, wr, wi, vs, (vs.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_dgeesx for the type real(64).
 */
inline proc geesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_D_SELECT2, sense : string, a : [] real(64), ref sdim : c_int, wr : [] real(64), wi : [] real(64), vs : [] real(64), ref rconde : real(64), ref rcondv : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, wr, wi, vs, (vs.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_cgeesx for the type complex(64).
 */
inline proc geesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_C_SELECT1, sense : string, a : [] complex(64), ref sdim : c_int, w : [] complex(64), vs : [] complex(64), ref rconde : real(32), ref rcondv : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, w, vs, (vs.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_zgeesx for the type complex(128).
 */
inline proc geesx(matrix_order : lapack_memory_order, jobvs : string, sort : string, chlapack_select : LAPACK_Z_SELECT1, sense : string, a : [] complex(128), ref sdim : c_int, w : [] complex(128), vs : [] complex(128), ref rconde : real(64), ref rcondv : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgeesx(matrix_order, ascii(jobvs) : c_char, ascii(sort) : c_char, chlapack_select, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sdim, w, vs, (vs.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_sgeev for the type real(32).
 */
inline proc geev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] real(32), wr : [] real(32), wi : [] real(32), vl : [] real(32), vr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, wr, wi, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgeev for the type real(64).
 */
inline proc geev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] real(64), wr : [] real(64), wi : [] real(64), vl : [] real(64), vr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, wr, wi, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgeev for the type complex(64).
 */
inline proc geev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] complex(64), w : [] complex(64), vl : [] complex(64), vr : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgeev for the type complex(128).
 */
inline proc geev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] complex(128), w : [] complex(128), vl : [] complex(128), vr : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgeevx for the type real(32).
 */
inline proc geevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] real(32), wr : [] real(32), wi : [] real(32), vl : [] real(32), vr : [] real(32), ref ilo : c_int, ref ihi : c_int, scale : [] real(32), ref abnrm : real(32), rconde : [] real(32), rcondv : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, wr, wi, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, scale, abnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_dgeevx for the type real(64).
 */
inline proc geevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] real(64), wr : [] real(64), wi : [] real(64), vl : [] real(64), vr : [] real(64), ref ilo : c_int, ref ihi : c_int, scale : [] real(64), ref abnrm : real(64), rconde : [] real(64), rcondv : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, wr, wi, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, scale, abnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_cgeevx for the type complex(64).
 */
inline proc geevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] complex(64), w : [] complex(64), vl : [] complex(64), vr : [] complex(64), ref ilo : c_int, ref ihi : c_int, scale : [] real(32), ref abnrm : real(32), rconde : [] real(32), rcondv : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, scale, abnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_zgeevx for the type complex(128).
 */
inline proc geevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] complex(128), w : [] complex(128), vl : [] complex(128), vr : [] complex(128), ref ilo : c_int, ref ihi : c_int, scale : [] real(64), ref abnrm : real(64), rconde : [] real(64), rcondv : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgeevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, scale, abnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_sgehrd for the type real(32).
 */
inline proc gehrd(matrix_order : lapack_memory_order, ilo : c_int, ihi : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgehrd(matrix_order, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgehrd for the type real(64).
 */
inline proc gehrd(matrix_order : lapack_memory_order, ilo : c_int, ihi : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgehrd(matrix_order, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgehrd for the type complex(64).
 */
inline proc gehrd(matrix_order : lapack_memory_order, ilo : c_int, ihi : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgehrd(matrix_order, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgehrd for the type complex(128).
 */
inline proc gehrd(matrix_order : lapack_memory_order, ilo : c_int, ihi : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgehrd(matrix_order, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgejsv for the type real(32).
 */
inline proc gejsv(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, jobr : string, jobt : string, jobp : string, a : [] real(32), sva : [] real(32), u : [] real(32), v : [] real(32), stat : [] real(32), istat : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sgejsv(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobr) : c_char, ascii(jobt) : c_char, ascii(jobp) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sva, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, stat, istat);
}

/* 
Wrapped procedure of LAPACKE_dgejsv for the type real(64).
 */
inline proc gejsv(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, jobr : string, jobt : string, jobp : string, a : [] real(64), sva : [] real(64), u : [] real(64), v : [] real(64), stat : [] real(64), istat : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dgejsv(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobr) : c_char, ascii(jobt) : c_char, ascii(jobp) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sva, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, stat, istat);
}

/* 
Wrapped procedure of LAPACKE_sgelq2 for the type real(32).
 */
inline proc gelq2(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgelq2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgelq2 for the type real(64).
 */
inline proc gelq2(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgelq2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgelq2 for the type complex(64).
 */
inline proc gelq2(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgelq2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgelq2 for the type complex(128).
 */
inline proc gelq2(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgelq2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgelqf for the type real(32).
 */
inline proc gelqf(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgelqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgelqf for the type real(64).
 */
inline proc gelqf(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgelqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgelqf for the type complex(64).
 */
inline proc gelqf(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgelqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgelqf for the type complex(128).
 */
inline proc gelqf(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgelqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgels for the type real(32).
 */
inline proc gels(matrix_order : lapack_memory_order, trans : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgels(matrix_order, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgels for the type real(64).
 */
inline proc gels(matrix_order : lapack_memory_order, trans : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgels(matrix_order, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgels for the type complex(64).
 */
inline proc gels(matrix_order : lapack_memory_order, trans : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgels(matrix_order, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgels for the type complex(128).
 */
inline proc gels(matrix_order : lapack_memory_order, trans : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgels(matrix_order, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgelsd for the type real(32).
 */
inline proc gelsd(matrix_order : lapack_memory_order, a : [] real(32), b : [] real(32), s : [] real(32), rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgelsd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgelsd for the type real(64).
 */
inline proc gelsd(matrix_order : lapack_memory_order, a : [] real(64), b : [] real(64), s : [] real(64), rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgelsd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgelsd for the type complex(64).
 */
inline proc gelsd(matrix_order : lapack_memory_order, a : [] complex(64), b : [] complex(64), s : [] real(32), rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgelsd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgelsd for the type complex(128).
 */
inline proc gelsd(matrix_order : lapack_memory_order, a : [] complex(128), b : [] complex(128), s : [] real(64), rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgelsd(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgelss for the type real(32).
 */
inline proc gelss(matrix_order : lapack_memory_order, a : [] real(32), b : [] real(32), s : [] real(32), rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgelss(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgelss for the type real(64).
 */
inline proc gelss(matrix_order : lapack_memory_order, a : [] real(64), b : [] real(64), s : [] real(64), rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgelss(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgelss for the type complex(64).
 */
inline proc gelss(matrix_order : lapack_memory_order, a : [] complex(64), b : [] complex(64), s : [] real(32), rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgelss(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgelss for the type complex(128).
 */
inline proc gelss(matrix_order : lapack_memory_order, a : [] complex(128), b : [] complex(128), s : [] real(64), rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgelss(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, s, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgelsy for the type real(32).
 */
inline proc gelsy(matrix_order : lapack_memory_order, a : [] real(32), b : [] real(32), jpvt : [] c_int, rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgelsy(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, jpvt, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgelsy for the type real(64).
 */
inline proc gelsy(matrix_order : lapack_memory_order, a : [] real(64), b : [] real(64), jpvt : [] c_int, rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgelsy(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, jpvt, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgelsy for the type complex(64).
 */
inline proc gelsy(matrix_order : lapack_memory_order, a : [] complex(64), b : [] complex(64), jpvt : [] c_int, rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgelsy(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, jpvt, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgelsy for the type complex(128).
 */
inline proc gelsy(matrix_order : lapack_memory_order, a : [] complex(128), b : [] complex(128), jpvt : [] c_int, rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgelsy(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, jpvt, rcond, (a.domain.dim(1).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgeqlf for the type real(32).
 */
inline proc geqlf(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqlf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgeqlf for the type real(64).
 */
inline proc geqlf(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqlf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgeqlf for the type complex(64).
 */
inline proc geqlf(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqlf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgeqlf for the type complex(128).
 */
inline proc geqlf(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqlf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgeqp3 for the type real(32).
 */
inline proc geqp3(matrix_order : lapack_memory_order, a : [] real(32), jpvt : [] c_int, tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqp3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_dgeqp3 for the type real(64).
 */
inline proc geqp3(matrix_order : lapack_memory_order, a : [] real(64), jpvt : [] c_int, tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqp3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_cgeqp3 for the type complex(64).
 */
inline proc geqp3(matrix_order : lapack_memory_order, a : [] complex(64), jpvt : [] c_int, tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqp3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_zgeqp3 for the type complex(128).
 */
inline proc geqp3(matrix_order : lapack_memory_order, a : [] complex(128), jpvt : [] c_int, tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqp3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_sgeqpf for the type real(32).
 */
inline proc geqpf(matrix_order : lapack_memory_order, a : [] real(32), jpvt : [] c_int, tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqpf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_dgeqpf for the type real(64).
 */
inline proc geqpf(matrix_order : lapack_memory_order, a : [] real(64), jpvt : [] c_int, tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqpf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_cgeqpf for the type complex(64).
 */
inline proc geqpf(matrix_order : lapack_memory_order, a : [] complex(64), jpvt : [] c_int, tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqpf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_zgeqpf for the type complex(128).
 */
inline proc geqpf(matrix_order : lapack_memory_order, a : [] complex(128), jpvt : [] c_int, tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqpf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, jpvt, tau);
}

/* 
Wrapped procedure of LAPACKE_sgeqr2 for the type real(32).
 */
inline proc geqr2(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqr2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgeqr2 for the type real(64).
 */
inline proc geqr2(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqr2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgeqr2 for the type complex(64).
 */
inline proc geqr2(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqr2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgeqr2 for the type complex(128).
 */
inline proc geqr2(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqr2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgeqrf for the type real(32).
 */
inline proc geqrf(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgeqrf for the type real(64).
 */
inline proc geqrf(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgeqrf for the type complex(64).
 */
inline proc geqrf(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgeqrf for the type complex(128).
 */
inline proc geqrf(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgeqrfp for the type real(32).
 */
inline proc geqrfp(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqrfp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgeqrfp for the type real(64).
 */
inline proc geqrfp(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqrfp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgeqrfp for the type complex(64).
 */
inline proc geqrfp(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqrfp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgeqrfp for the type complex(128).
 */
inline proc geqrfp(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqrfp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgerfs for the type real(32).
 */
inline proc gerfs(matrix_order : lapack_memory_order, trans : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgerfs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dgerfs for the type real(64).
 */
inline proc gerfs(matrix_order : lapack_memory_order, trans : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgerfs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cgerfs for the type complex(64).
 */
inline proc gerfs(matrix_order : lapack_memory_order, trans : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgerfs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zgerfs for the type complex(128).
 */
inline proc gerfs(matrix_order : lapack_memory_order, trans : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgerfs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sgerfsx for the type real(32).
 */
inline proc gerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, r : [] real(32), c : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dgerfsx for the type real(64).
 */
inline proc gerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, r : [] real(64), c : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_cgerfsx for the type complex(64).
 */
inline proc gerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, r : [] real(32), c : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zgerfsx for the type complex(128).
 */
inline proc gerfsx(matrix_order : lapack_memory_order, trans : string, equed : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, r : [] real(64), c : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgerfsx(matrix_order, ascii(trans) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_sgerqf for the type real(32).
 */
inline proc gerqf(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgerqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dgerqf for the type real(64).
 */
inline proc gerqf(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgerqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cgerqf for the type complex(64).
 */
inline proc gerqf(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgerqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zgerqf for the type complex(128).
 */
inline proc gerqf(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgerqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sgesdd for the type real(32).
 */
inline proc gesdd(matrix_order : lapack_memory_order, jobz : string, a : [] real(32), s : [] real(32), u : [] real(32), vt : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgesdd(matrix_order, ascii(jobz) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgesdd for the type real(64).
 */
inline proc gesdd(matrix_order : lapack_memory_order, jobz : string, a : [] real(64), s : [] real(64), u : [] real(64), vt : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgesdd(matrix_order, ascii(jobz) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgesdd for the type complex(64).
 */
inline proc gesdd(matrix_order : lapack_memory_order, jobz : string, a : [] complex(64), s : [] real(32), u : [] complex(64), vt : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgesdd(matrix_order, ascii(jobz) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgesdd for the type complex(128).
 */
inline proc gesdd(matrix_order : lapack_memory_order, jobz : string, a : [] complex(128), s : [] real(64), u : [] complex(128), vt : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgesdd(matrix_order, ascii(jobz) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgesv for the type real(32).
 */
inline proc gesv(matrix_order : lapack_memory_order, a : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgesv(matrix_order, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgesv for the type real(64).
 */
inline proc gesv(matrix_order : lapack_memory_order, a : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgesv(matrix_order, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgesv for the type complex(64).
 */
inline proc gesv(matrix_order : lapack_memory_order, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgesv(matrix_order, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgesv for the type complex(128).
 */
inline proc gesv(matrix_order : lapack_memory_order, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgesv(matrix_order, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsgesv for the type real(64).
 */
inline proc gesv(matrix_order : lapack_memory_order, a : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ref chlapack_iter : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsgesv(matrix_order, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, chlapack_iter);
}

/* 
Wrapped procedure of LAPACKE_zcgesv for the type complex(128).
 */
inline proc gesv(matrix_order : lapack_memory_order, a : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ref chlapack_iter : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zcgesv(matrix_order, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, chlapack_iter);
}

/* 
Wrapped procedure of LAPACKE_sgesvd for the type real(32).
 */
inline proc gesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, a : [] real(32), s : [] real(32), u : [] real(32), vt : [] real(32), superb : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int, superb);
}

/* 
Wrapped procedure of LAPACKE_dgesvd for the type real(64).
 */
inline proc gesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, a : [] real(64), s : [] real(64), u : [] real(64), vt : [] real(64), superb : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int, superb);
}

/* 
Wrapped procedure of LAPACKE_cgesvd for the type complex(64).
 */
inline proc gesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, a : [] complex(64), s : [] real(32), u : [] complex(64), vt : [] complex(64), superb : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int, superb);
}

/* 
Wrapped procedure of LAPACKE_zgesvd for the type complex(128).
 */
inline proc gesvd(matrix_order : lapack_memory_order, jobu : string, jobvt : string, a : [] complex(128), s : [] real(64), u : [] complex(128), vt : [] complex(128), superb : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgesvd(matrix_order, ascii(jobu) : c_char, ascii(jobvt) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, u, (u.domain.dim(2).size) : c_int, vt, (vt.domain.dim(2).size) : c_int, superb);
}

/* 
Wrapped procedure of LAPACKE_sgesvj for the type real(32).
 */
inline proc gesvj(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, a : [] real(32), sva : [] real(32), mv : c_int, v : [] real(32), stat : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgesvj(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sva, mv, v, (v.domain.dim(2).size) : c_int, stat);
}

/* 
Wrapped procedure of LAPACKE_dgesvj for the type real(64).
 */
inline proc gesvj(matrix_order : lapack_memory_order, joba : string, jobu : string, jobv : string, a : [] real(64), sva : [] real(64), mv : c_int, v : [] real(64), stat : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgesvj(matrix_order, ascii(joba) : c_char, ascii(jobu) : c_char, ascii(jobv) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sva, mv, v, (v.domain.dim(2).size) : c_int, stat);
}

/* 
Wrapped procedure of LAPACKE_sgesvx for the type real(32).
 */
inline proc gesvx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32), rpivot : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_dgesvx for the type real(64).
 */
inline proc gesvx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64), rpivot : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_cgesvx for the type complex(64).
 */
inline proc gesvx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32), rpivot : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_zgesvx for the type complex(128).
 */
inline proc gesvx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64), rpivot : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgesvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr, rpivot);
}

/* 
Wrapped procedure of LAPACKE_sgesvxx for the type real(32).
 */
inline proc gesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dgesvxx for the type real(64).
 */
inline proc gesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_cgesvxx for the type complex(64).
 */
inline proc gesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, ref equed : string, r : [] real(32), c : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zgesvxx for the type complex(128).
 */
inline proc gesvxx(matrix_order : lapack_memory_order, fact : string, trans : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, ref equed : string, r : [] real(64), c : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgesvxx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, r, c, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_sgetf2 for the type real(32).
 */
inline proc getf2(matrix_order : lapack_memory_order, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sgetf2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dgetf2 for the type real(64).
 */
inline proc getf2(matrix_order : lapack_memory_order, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dgetf2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_cgetf2 for the type complex(64).
 */
inline proc getf2(matrix_order : lapack_memory_order, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cgetf2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zgetf2 for the type complex(128).
 */
inline proc getf2(matrix_order : lapack_memory_order, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zgetf2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_sgetrf for the type real(32).
 */
inline proc getrf(matrix_order : lapack_memory_order, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sgetrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dgetrf for the type real(64).
 */
inline proc getrf(matrix_order : lapack_memory_order, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dgetrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_cgetrf for the type complex(64).
 */
inline proc getrf(matrix_order : lapack_memory_order, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cgetrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zgetrf for the type complex(128).
 */
inline proc getrf(matrix_order : lapack_memory_order, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zgetrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_sgetri for the type real(32).
 */
inline proc getri(matrix_order : lapack_memory_order, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sgetri(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dgetri for the type real(64).
 */
inline proc getri(matrix_order : lapack_memory_order, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dgetri(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_cgetri for the type complex(64).
 */
inline proc getri(matrix_order : lapack_memory_order, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cgetri(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zgetri for the type complex(128).
 */
inline proc getri(matrix_order : lapack_memory_order, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zgetri(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_sgetrs for the type real(32).
 */
inline proc getrs(matrix_order : lapack_memory_order, trans : string, a : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgetrs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgetrs for the type real(64).
 */
inline proc getrs(matrix_order : lapack_memory_order, trans : string, a : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgetrs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgetrs for the type complex(64).
 */
inline proc getrs(matrix_order : lapack_memory_order, trans : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgetrs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgetrs for the type complex(128).
 */
inline proc getrs(matrix_order : lapack_memory_order, trans : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgetrs(matrix_order, ascii(trans) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sggbak for the type real(32).
 */
inline proc ggbak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, lscale : [] real(32), rscale : [] real(32), v : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dggbak for the type real(64).
 */
inline proc ggbak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, lscale : [] real(64), rscale : [] real(64), v : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cggbak for the type complex(64).
 */
inline proc ggbak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, lscale : [] real(32), rscale : [] real(32), v : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zggbak for the type complex(128).
 */
inline proc ggbak(matrix_order : lapack_memory_order, job : string, side : string, ilo : c_int, ihi : c_int, lscale : [] real(64), rscale : [] real(64), v : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zggbak(matrix_order, ascii(job) : c_char, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(1).size else v.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, (if matrix_order == lapack_memory_order.row_major then v.domain.dim(2).size else v.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sggbal for the type real(32).
 */
inline proc ggbal(matrix_order : lapack_memory_order, job : string, a : [] real(32), b : [] real(32), ref ilo : c_int, ref ihi : c_int, lscale : [] real(32), rscale : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggbal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale);
}

/* 
Wrapped procedure of LAPACKE_dggbal for the type real(64).
 */
inline proc ggbal(matrix_order : lapack_memory_order, job : string, a : [] real(64), b : [] real(64), ref ilo : c_int, ref ihi : c_int, lscale : [] real(64), rscale : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggbal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale);
}

/* 
Wrapped procedure of LAPACKE_cggbal for the type complex(64).
 */
inline proc ggbal(matrix_order : lapack_memory_order, job : string, a : [] complex(64), b : [] complex(64), ref ilo : c_int, ref ihi : c_int, lscale : [] real(32), rscale : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cggbal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale);
}

/* 
Wrapped procedure of LAPACKE_zggbal for the type complex(128).
 */
inline proc ggbal(matrix_order : lapack_memory_order, job : string, a : [] complex(128), b : [] complex(128), ref ilo : c_int, ref ihi : c_int, lscale : [] real(64), rscale : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zggbal(matrix_order, ascii(job) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale);
}

/* 
Wrapped procedure of LAPACKE_sgges for the type real(32).
 */
inline proc gges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_S_SELECT3, a : [] real(32), b : [] real(32), ref sdim : c_int, alphar : [] real(32), alphai : [] real(32), beta : [] real(32), vsl : [] real(32), vsr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alphar, alphai, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgges for the type real(64).
 */
inline proc gges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_D_SELECT3, a : [] real(64), b : [] real(64), ref sdim : c_int, alphar : [] real(64), alphai : [] real(64), beta : [] real(64), vsl : [] real(64), vsr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alphar, alphai, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgges for the type complex(64).
 */
inline proc gges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_C_SELECT2, a : [] complex(64), b : [] complex(64), ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), vsr : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alpha, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgges for the type complex(128).
 */
inline proc gges(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_Z_SELECT2, a : [] complex(128), b : [] complex(128), ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), vsr : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgges(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alpha, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sggesx for the type real(32).
 */
inline proc ggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_S_SELECT3, sense : string, a : [] real(32), b : [] real(32), ref sdim : c_int, alphar : [] real(32), alphai : [] real(32), beta : [] real(32), vsl : [] real(32), vsr : [] real(32), rconde : [] real(32), rcondv : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alphar, alphai, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_dggesx for the type real(64).
 */
inline proc ggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_D_SELECT3, sense : string, a : [] real(64), b : [] real(64), ref sdim : c_int, alphar : [] real(64), alphai : [] real(64), beta : [] real(64), vsl : [] real(64), vsr : [] real(64), rconde : [] real(64), rcondv : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alphar, alphai, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_cggesx for the type complex(64).
 */
inline proc ggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_C_SELECT2, sense : string, a : [] complex(64), b : [] complex(64), ref sdim : c_int, alpha : [] complex(64), beta : [] complex(64), vsl : [] complex(64), vsr : [] complex(64), rconde : [] real(32), rcondv : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alpha, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_zggesx for the type complex(128).
 */
inline proc ggesx(matrix_order : lapack_memory_order, jobvsl : string, jobvsr : string, sort : string, selctg : LAPACK_Z_SELECT2, sense : string, a : [] complex(128), b : [] complex(128), ref sdim : c_int, alpha : [] complex(128), beta : [] complex(128), vsl : [] complex(128), vsr : [] complex(128), rconde : [] real(64), rcondv : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zggesx(matrix_order, ascii(jobvsl) : c_char, ascii(jobvsr) : c_char, ascii(sort) : c_char, selctg, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, sdim, alpha, beta, vsl, (vsl.domain.dim(2).size) : c_int, vsr, (vsr.domain.dim(2).size) : c_int, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_sggev for the type real(32).
 */
inline proc ggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] real(32), b : [] real(32), alphar : [] real(32), alphai : [] real(32), beta : [] real(32), vl : [] real(32), vr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alphar, alphai, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dggev for the type real(64).
 */
inline proc ggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] real(64), b : [] real(64), alphar : [] real(64), alphai : [] real(64), beta : [] real(64), vl : [] real(64), vr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alphar, alphai, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cggev for the type complex(64).
 */
inline proc ggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] complex(64), b : [] complex(64), alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), vr : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zggev for the type complex(128).
 */
inline proc ggev(matrix_order : lapack_memory_order, jobvl : string, jobvr : string, a : [] complex(128), b : [] complex(128), alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), vr : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zggev(matrix_order, ascii(jobvl) : c_char, ascii(jobvr) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sggevx for the type real(32).
 */
inline proc ggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] real(32), b : [] real(32), alphar : [] real(32), alphai : [] real(32), beta : [] real(32), vl : [] real(32), vr : [] real(32), ref ilo : c_int, ref ihi : c_int, lscale : [] real(32), rscale : [] real(32), ref abnrm : real(32), ref bbnrm : real(32), rconde : [] real(32), rcondv : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alphar, alphai, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_dggevx for the type real(64).
 */
inline proc ggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] real(64), b : [] real(64), alphar : [] real(64), alphai : [] real(64), beta : [] real(64), vl : [] real(64), vr : [] real(64), ref ilo : c_int, ref ihi : c_int, lscale : [] real(64), rscale : [] real(64), ref abnrm : real(64), ref bbnrm : real(64), rconde : [] real(64), rcondv : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alphar, alphai, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_cggevx for the type complex(64).
 */
inline proc ggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] complex(64), b : [] complex(64), alpha : [] complex(64), beta : [] complex(64), vl : [] complex(64), vr : [] complex(64), ref ilo : c_int, ref ihi : c_int, lscale : [] real(32), rscale : [] real(32), ref abnrm : real(32), ref bbnrm : real(32), rconde : [] real(32), rcondv : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_zggevx for the type complex(128).
 */
inline proc ggevx(matrix_order : lapack_memory_order, balanc : string, jobvl : string, jobvr : string, sense : string, a : [] complex(128), b : [] complex(128), alpha : [] complex(128), beta : [] complex(128), vl : [] complex(128), vr : [] complex(128), ref ilo : c_int, ref ihi : c_int, lscale : [] real(64), rscale : [] real(64), ref abnrm : real(64), ref bbnrm : real(64), rconde : [] real(64), rcondv : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zggevx(matrix_order, ascii(balanc) : c_char, ascii(jobvl) : c_char, ascii(jobvr) : c_char, ascii(sense) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, ilo, ihi, lscale, rscale, abnrm, bbnrm, rconde, rcondv);
}

/* 
Wrapped procedure of LAPACKE_sggglm for the type real(32).
 */
inline proc ggglm(matrix_order : lapack_memory_order, a : [] real(32), b : [] real(32), d : [] real(32), x : [] real(32), y : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggglm(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, d, x, y);
}

/* 
Wrapped procedure of LAPACKE_dggglm for the type real(64).
 */
inline proc ggglm(matrix_order : lapack_memory_order, a : [] real(64), b : [] real(64), d : [] real(64), x : [] real(64), y : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggglm(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, d, x, y);
}

/* 
Wrapped procedure of LAPACKE_cggglm for the type complex(64).
 */
inline proc ggglm(matrix_order : lapack_memory_order, a : [] complex(64), b : [] complex(64), d : [] complex(64), x : [] complex(64), y : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cggglm(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, d, x, y);
}

/* 
Wrapped procedure of LAPACKE_zggglm for the type complex(128).
 */
inline proc ggglm(matrix_order : lapack_memory_order, a : [] complex(128), b : [] complex(128), d : [] complex(128), x : [] complex(128), y : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zggglm(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, d, x, y);
}

/* 
Wrapped procedure of LAPACKE_sgghrd for the type real(32).
 */
inline proc gghrd(matrix_order : lapack_memory_order, compq : string, compz : string, ilo : c_int, ihi : c_int, a : [] real(32), b : [] real(32), q : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgghrd for the type real(64).
 */
inline proc gghrd(matrix_order : lapack_memory_order, compq : string, compz : string, ilo : c_int, ihi : c_int, a : [] real(64), b : [] real(64), q : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgghrd for the type complex(64).
 */
inline proc gghrd(matrix_order : lapack_memory_order, compq : string, compz : string, ilo : c_int, ihi : c_int, a : [] complex(64), b : [] complex(64), q : [] complex(64), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgghrd for the type complex(128).
 */
inline proc gghrd(matrix_order : lapack_memory_order, compq : string, compz : string, ilo : c_int, ihi : c_int, a : [] complex(128), b : [] complex(128), q : [] complex(128), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgghrd(matrix_order, ascii(compq) : c_char, ascii(compz) : c_char, (a.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgglse for the type real(32).
 */
inline proc gglse(matrix_order : lapack_memory_order, a : [] real(32), b : [] real(32), c : [] real(32), d : [] real(32), x : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgglse(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, d, x);
}

/* 
Wrapped procedure of LAPACKE_dgglse for the type real(64).
 */
inline proc gglse(matrix_order : lapack_memory_order, a : [] real(64), b : [] real(64), c : [] real(64), d : [] real(64), x : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgglse(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, d, x);
}

/* 
Wrapped procedure of LAPACKE_cgglse for the type complex(64).
 */
inline proc gglse(matrix_order : lapack_memory_order, a : [] complex(64), b : [] complex(64), c : [] complex(64), d : [] complex(64), x : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgglse(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, d, x);
}

/* 
Wrapped procedure of LAPACKE_zgglse for the type complex(128).
 */
inline proc gglse(matrix_order : lapack_memory_order, a : [] complex(128), b : [] complex(128), c : [] complex(128), d : [] complex(128), x : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgglse(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, d, x);
}

/* 
Wrapped procedure of LAPACKE_sggqrf for the type real(32).
 */
inline proc ggqrf(matrix_order : lapack_memory_order, a : [] real(32), taua : [] real(32), b : [] real(32), taub : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_dggqrf for the type real(64).
 */
inline proc ggqrf(matrix_order : lapack_memory_order, a : [] real(64), taua : [] real(64), b : [] real(64), taub : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_cggqrf for the type complex(64).
 */
inline proc ggqrf(matrix_order : lapack_memory_order, a : [] complex(64), taua : [] complex(64), b : [] complex(64), taub : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cggqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_zggqrf for the type complex(128).
 */
inline proc ggqrf(matrix_order : lapack_memory_order, a : [] complex(128), taua : [] complex(128), b : [] complex(128), taub : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zggqrf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_sggrqf for the type real(32).
 */
inline proc ggrqf(matrix_order : lapack_memory_order, a : [] real(32), taua : [] real(32), b : [] real(32), taub : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggrqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_dggrqf for the type real(64).
 */
inline proc ggrqf(matrix_order : lapack_memory_order, a : [] real(64), taua : [] real(64), b : [] real(64), taub : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggrqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_cggrqf for the type complex(64).
 */
inline proc ggrqf(matrix_order : lapack_memory_order, a : [] complex(64), taua : [] complex(64), b : [] complex(64), taub : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cggrqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_zggrqf for the type complex(128).
 */
inline proc ggrqf(matrix_order : lapack_memory_order, a : [] complex(128), taua : [] complex(128), b : [] complex(128), taub : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zggrqf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, taua, b, (b.domain.dim(2).size) : c_int, taub);
}

/* 
Wrapped procedure of LAPACKE_sggsvd for the type real(32).
 */
inline proc ggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, ref k : c_int, ref l : c_int, a : [] real(32), b : [] real(32), alpha : [] real(32), beta : [] real(32), u : [] real(32), v : [] real(32), q : [] real(32), iwork : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, iwork);
}

/* 
Wrapped procedure of LAPACKE_dggsvd for the type real(64).
 */
inline proc ggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, ref k : c_int, ref l : c_int, a : [] real(64), b : [] real(64), alpha : [] real(64), beta : [] real(64), u : [] real(64), v : [] real(64), q : [] real(64), iwork : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, iwork);
}

/* 
Wrapped procedure of LAPACKE_cggsvd for the type complex(64).
 */
inline proc ggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, ref k : c_int, ref l : c_int, a : [] complex(64), b : [] complex(64), alpha : [] real(32), beta : [] real(32), u : [] complex(64), v : [] complex(64), q : [] complex(64), iwork : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, iwork);
}

/* 
Wrapped procedure of LAPACKE_zggsvd for the type complex(128).
 */
inline proc ggsvd(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, ref k : c_int, ref l : c_int, a : [] complex(128), b : [] complex(128), alpha : [] real(64), beta : [] real(64), u : [] complex(128), v : [] complex(128), q : [] complex(128), iwork : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zggsvd(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, iwork);
}

/* 
Wrapped procedure of LAPACKE_sggsvp for the type real(32).
 */
inline proc ggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, a : [] real(32), b : [] real(32), tola : real(32), tolb : real(32), ref k : c_int, ref l : c_int, u : [] real(32), v : [] real(32), q : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, k, l, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dggsvp for the type real(64).
 */
inline proc ggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, a : [] real(64), b : [] real(64), tola : real(64), tolb : real(64), ref k : c_int, ref l : c_int, u : [] real(64), v : [] real(64), q : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, k, l, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cggsvp for the type complex(64).
 */
inline proc ggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, a : [] complex(64), b : [] complex(64), tola : real(32), tolb : real(32), ref k : c_int, ref l : c_int, u : [] complex(64), v : [] complex(64), q : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, k, l, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zggsvp for the type complex(128).
 */
inline proc ggsvp(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, a : [] complex(128), b : [] complex(128), tola : real(64), tolb : real(64), ref k : c_int, ref l : c_int, u : [] complex(128), v : [] complex(128), q : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zggsvp(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, k, l, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgtcon for the type real(32).
 */
inline proc gtcon(norm : string, n : c_int, dl : [] real(32), d : [] real(32), du : [] real(32), du2 : [] real(32), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dgtcon for the type real(64).
 */
inline proc gtcon(norm : string, n : c_int, dl : [] real(64), d : [] real(64), du : [] real(64), du2 : [] real(64), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cgtcon for the type complex(64).
 */
inline proc gtcon(norm : string, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zgtcon for the type complex(128).
 */
inline proc gtcon(norm : string, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgtcon(ascii(norm) : c_char, n, dl, d, du, du2, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_sgtrfs for the type real(32).
 */
inline proc gtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] real(32), d : [] real(32), du : [] real(32), dlf : [] real(32), df : [] real(32), duf : [] real(32), du2 : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgtrfs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dgtrfs for the type real(64).
 */
inline proc gtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] real(64), d : [] real(64), du : [] real(64), dlf : [] real(64), df : [] real(64), duf : [] real(64), du2 : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgtrfs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cgtrfs for the type complex(64).
 */
inline proc gtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgtrfs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zgtrfs for the type complex(128).
 */
inline proc gtrfs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgtrfs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sgtsv for the type real(32).
 */
inline proc gtsv(matrix_order : lapack_memory_order, dl : [] real(32), d : [] real(32), du : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgtsv(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgtsv for the type real(64).
 */
inline proc gtsv(matrix_order : lapack_memory_order, dl : [] real(64), d : [] real(64), du : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgtsv(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgtsv for the type complex(64).
 */
inline proc gtsv(matrix_order : lapack_memory_order, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgtsv(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgtsv for the type complex(128).
 */
inline proc gtsv(matrix_order : lapack_memory_order, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgtsv(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgtsvx for the type real(32).
 */
inline proc gtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, dl : [] real(32), d : [] real(32), du : [] real(32), dlf : [] real(32), df : [] real(32), duf : [] real(32), du2 : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dgtsvx for the type real(64).
 */
inline proc gtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, dl : [] real(64), d : [] real(64), du : [] real(64), dlf : [] real(64), df : [] real(64), duf : [] real(64), du2 : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cgtsvx for the type complex(64).
 */
inline proc gtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), dlf : [] complex(64), df : [] complex(64), duf : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zgtsvx for the type complex(128).
 */
inline proc gtsvx(matrix_order : lapack_memory_order, fact : string, trans : string, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), dlf : [] complex(128), df : [] complex(128), duf : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zgtsvx(matrix_order, ascii(fact) : c_char, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, dlf, df, duf, du2, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sgttrf for the type real(32).
 */
inline proc gttrf(n : c_int, dl : [] real(32), d : [] real(32), du : [] real(32), du2 : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sgttrf(n, dl, d, du, du2, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dgttrf for the type real(64).
 */
inline proc gttrf(n : c_int, dl : [] real(64), d : [] real(64), du : [] real(64), du2 : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dgttrf(n, dl, d, du, du2, ipiv);
}

/* 
Wrapped procedure of LAPACKE_cgttrf for the type complex(64).
 */
inline proc gttrf(n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cgttrf(n, dl, d, du, du2, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zgttrf for the type complex(128).
 */
inline proc gttrf(n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zgttrf(n, dl, d, du, du2, ipiv);
}

/* 
Wrapped procedure of LAPACKE_sgttrs for the type real(32).
 */
inline proc gttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] real(32), d : [] real(32), du : [] real(32), du2 : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgttrs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, du2, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgttrs for the type real(64).
 */
inline proc gttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] real(64), d : [] real(64), du : [] real(64), du2 : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgttrs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, du2, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgttrs for the type complex(64).
 */
inline proc gttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] complex(64), d : [] complex(64), du : [] complex(64), du2 : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgttrs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, du2, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgttrs for the type complex(128).
 */
inline proc gttrs(matrix_order : lapack_memory_order, trans : string, n : c_int, dl : [] complex(128), d : [] complex(128), du : [] complex(128), du2 : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgttrs(matrix_order, ascii(trans) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, dl, d, du, du2, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chbev for the type complex(64).
 */
inline proc hbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhbev for the type complex(128).
 */
inline proc hbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chbevd for the type complex(64).
 */
inline proc hbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhbevd for the type complex(128).
 */
inline proc hbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chbevx for the type complex(64).
 */
inline proc hbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), q : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_zhbevx for the type complex(128).
 */
inline proc hbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), q : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_chbgst for the type complex(64).
 */
inline proc hbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, ka : c_int, kb : c_int, ab : [] complex(64), bb : [] complex(64), x : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhbgst for the type complex(128).
 */
inline proc hbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, ka : c_int, kb : c_int, ab : [] complex(128), bb : [] complex(128), x : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chbgv for the type complex(64).
 */
inline proc hbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), bb : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhbgv for the type complex(128).
 */
inline proc hbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), bb : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chbgvd for the type complex(64).
 */
inline proc hbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(64), bb : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhbgvd for the type complex(128).
 */
inline proc hbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] complex(128), bb : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chbgvx for the type complex(64).
 */
inline proc hbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, ka : c_int, kb : c_int, ab : [] complex(64), bb : [] complex(64), q : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then q.domain.dim(2).size else q.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_zhbgvx for the type complex(128).
 */
inline proc hbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, ka : c_int, kb : c_int, ab : [] complex(128), bb : [] complex(128), q : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then q.domain.dim(2).size else q.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_chbtrd for the type complex(64).
 */
inline proc hbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), d : [] real(32), e : [] real(32), q : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhbtrd for the type complex(128).
 */
inline proc hbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), d : [] real(64), e : [] real(64), q : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_checon for the type complex(64).
 */
inline proc hecon(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_checon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zhecon for the type complex(128).
 */
inline proc hecon(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhecon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cheequb for the type complex(64).
 */
inline proc heequb(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cheequb(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_zheequb for the type complex(128).
 */
inline proc heequb(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zheequb(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_cheev for the type complex(64).
 */
inline proc heev(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] complex(64), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cheev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_zheev for the type complex(128).
 */
inline proc heev(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] complex(128), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zheev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_cheevd for the type complex(64).
 */
inline proc heevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] complex(64), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cheevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_zheevd for the type complex(128).
 */
inline proc heevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] complex(128), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zheevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_cheevr for the type complex(64).
 */
inline proc heevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cheevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_zheevr for the type complex(128).
 */
inline proc heevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zheevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_cheevx for the type complex(64).
 */
inline proc heevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cheevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_zheevx for the type complex(128).
 */
inline proc heevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zheevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_chegst for the type complex(64).
 */
inline proc hegst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chegst(matrix_order, itype, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhegst for the type complex(128).
 */
inline proc hegst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhegst(matrix_order, itype, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chegv for the type complex(64).
 */
inline proc hegv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] complex(64), b : [] complex(64), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chegv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_zhegv for the type complex(128).
 */
inline proc hegv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] complex(128), b : [] complex(128), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhegv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_chegvd for the type complex(64).
 */
inline proc hegvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] complex(64), b : [] complex(64), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chegvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_zhegvd for the type complex(128).
 */
inline proc hegvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] complex(128), b : [] complex(128), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhegvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_chegvx for the type complex(64).
 */
inline proc hegvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, a : [] complex(64), b : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chegvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_zhegvx for the type complex(128).
 */
inline proc hegvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, a : [] complex(128), b : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhegvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_cherfs for the type complex(64).
 */
inline proc herfs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cherfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zherfs for the type complex(128).
 */
inline proc herfs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zherfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cherfsx for the type complex(64).
 */
inline proc herfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cherfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zherfsx for the type complex(128).
 */
inline proc herfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zherfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_chesv for the type complex(64).
 */
inline proc hesv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chesv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhesv for the type complex(128).
 */
inline proc hesv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhesv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chesvx for the type complex(64).
 */
inline proc hesvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chesvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zhesvx for the type complex(128).
 */
inline proc hesvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhesvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_chesvxx for the type complex(64).
 */
inline proc hesvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, ref equed : string, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chesvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zhesvxx for the type complex(128).
 */
inline proc hesvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, ref equed : string, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhesvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_chetrd for the type complex(64).
 */
inline proc hetrd(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), d : [] real(32), e : [] real(32), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chetrd(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_zhetrd for the type complex(128).
 */
inline proc hetrd(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), d : [] real(64), e : [] real(64), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhetrd(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_chetrf for the type complex(64).
 */
inline proc hetrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chetrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zhetrf for the type complex(128).
 */
inline proc hetrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhetrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_chetri for the type complex(64).
 */
inline proc hetri(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chetri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zhetri for the type complex(128).
 */
inline proc hetri(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhetri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_chetrs for the type complex(64).
 */
inline proc hetrs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chetrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhetrs for the type complex(128).
 */
inline proc hetrs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhetrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chfrk for the type complex(64).
 */
inline proc hfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, alpha : real(32), a : [] complex(64), beta : real(32), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (c.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, a, (a.domain.dim(2).size) : c_int, beta, c);
}

/* 
Wrapped procedure of LAPACKE_zhfrk for the type complex(128).
 */
inline proc hfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, alpha : real(64), a : [] complex(128), beta : real(64), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (c.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, a, (a.domain.dim(2).size) : c_int, beta, c);
}

/* 
Wrapped procedure of LAPACKE_shgeqz for the type real(32).
 */
inline proc hgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, ilo : c_int, ihi : c_int, h : [] real(32), t : [] real(32), alphar : [] real(32), alphai : [] real(32), beta : [] real(32), q : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_shgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, alphar, alphai, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dhgeqz for the type real(64).
 */
inline proc hgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, ilo : c_int, ihi : c_int, h : [] real(64), t : [] real(64), alphar : [] real(64), alphai : [] real(64), beta : [] real(64), q : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dhgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, alphar, alphai, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chgeqz for the type complex(64).
 */
inline proc hgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, ilo : c_int, ihi : c_int, h : [] complex(64), t : [] complex(64), alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, alpha, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhgeqz for the type complex(128).
 */
inline proc hgeqz(matrix_order : lapack_memory_order, job : string, compq : string, compz : string, ilo : c_int, ihi : c_int, h : [] complex(128), t : [] complex(128), alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhgeqz(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, alpha, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chpcon for the type complex(64).
 */
inline proc hpcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chpcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zhpcon for the type complex(128).
 */
inline proc hpcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhpcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_chpev for the type complex(64).
 */
inline proc hpev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chpev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhpev for the type complex(128).
 */
inline proc hpev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhpev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chpevd for the type complex(64).
 */
inline proc hpevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chpevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhpevd for the type complex(128).
 */
inline proc hpevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhpevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chpevx for the type complex(64).
 */
inline proc hpevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chpevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_zhpevx for the type complex(128).
 */
inline proc hpevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhpevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_chpgst for the type complex(64).
 */
inline proc hpgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chpgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

/* 
Wrapped procedure of LAPACKE_zhpgst for the type complex(128).
 */
inline proc hpgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhpgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

/* 
Wrapped procedure of LAPACKE_chpgv for the type complex(64).
 */
inline proc hpgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chpgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhpgv for the type complex(128).
 */
inline proc hpgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhpgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chpgvd for the type complex(64).
 */
inline proc hpgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), w : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chpgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhpgvd for the type complex(128).
 */
inline proc hpgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), w : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhpgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chpgvx for the type complex(64).
 */
inline proc hpgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(64), bp : [] complex(64), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chpgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_zhpgvx for the type complex(128).
 */
inline proc hpgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] complex(128), bp : [] complex(128), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhpgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_chprfs for the type complex(64).
 */
inline proc hprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zhprfs for the type complex(128).
 */
inline proc hprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_chpsv for the type complex(64).
 */
inline proc hpsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chpsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhpsv for the type complex(128).
 */
inline proc hpsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhpsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chpsvx for the type complex(64).
 */
inline proc hpsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_chpsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zhpsvx for the type complex(128).
 */
inline proc hpsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zhpsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_chptrd for the type complex(64).
 */
inline proc hptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), d : [] real(32), e : [] real(32), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_zhptrd for the type complex(128).
 */
inline proc hptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), d : [] real(64), e : [] real(64), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_chptrf for the type complex(64).
 */
inline proc hptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zhptrf for the type complex(128).
 */
inline proc hptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_chptri for the type complex(64).
 */
inline proc hptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zhptri for the type complex(128).
 */
inline proc hptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_chptrs for the type complex(64).
 */
inline proc hptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhptrs for the type complex(128).
 */
inline proc hptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_shsein for the type real(32).
 */
inline proc hsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, h : [] real(32), wr : [] real(32), wi : [] real(32), vl : [] real(32), vr : [] real(32), mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_shsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, (h.domain.dim(1).size) : c_int, h, (h.domain.dim(2).size) : c_int, wr, wi, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m, ifaill, ifailr);
}

/* 
Wrapped procedure of LAPACKE_dhsein for the type real(64).
 */
inline proc hsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, h : [] real(64), wr : [] real(64), wi : [] real(64), vl : [] real(64), vr : [] real(64), mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dhsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, (h.domain.dim(1).size) : c_int, h, (h.domain.dim(2).size) : c_int, wr, wi, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m, ifaill, ifailr);
}

/* 
Wrapped procedure of LAPACKE_chsein for the type complex(64).
 */
inline proc hsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, h : [] complex(64), w : [] complex(64), vl : [] complex(64), vr : [] complex(64), mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, (h.domain.dim(1).size) : c_int, h, (h.domain.dim(2).size) : c_int, w, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m, ifaill, ifailr);
}

/* 
Wrapped procedure of LAPACKE_zhsein for the type complex(128).
 */
inline proc hsein(matrix_order : lapack_memory_order, job : string, eigsrc : string, initv : string, chlapack_select : [] c_int, h : [] complex(128), w : [] complex(128), vl : [] complex(128), vr : [] complex(128), mm : c_int, ref m : c_int, ifaill : [] c_int, ifailr : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhsein(matrix_order, ascii(job) : c_char, ascii(eigsrc) : c_char, ascii(initv) : c_char, chlapack_select, (h.domain.dim(1).size) : c_int, h, (h.domain.dim(2).size) : c_int, w, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m, ifaill, ifailr);
}

/* 
Wrapped procedure of LAPACKE_shseqr for the type real(32).
 */
inline proc hseqr(matrix_order : lapack_memory_order, job : string, compz : string, ilo : c_int, ihi : c_int, h : [] real(32), wr : [] real(32), wi : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_shseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, wr, wi, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dhseqr for the type real(64).
 */
inline proc hseqr(matrix_order : lapack_memory_order, job : string, compz : string, ilo : c_int, ihi : c_int, h : [] real(64), wr : [] real(64), wi : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dhseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, wr, wi, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_chseqr for the type complex(64).
 */
inline proc hseqr(matrix_order : lapack_memory_order, job : string, compz : string, ilo : c_int, ihi : c_int, h : [] complex(64), w : [] complex(64), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zhseqr for the type complex(128).
 */
inline proc hseqr(matrix_order : lapack_memory_order, job : string, compz : string, ilo : c_int, ihi : c_int, h : [] complex(128), w : [] complex(128), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhseqr(matrix_order, ascii(job) : c_char, ascii(compz) : c_char, (h.domain.dim(1).size) : c_int, ilo, ihi, h, (h.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clacgv for the type complex(64).
 */
inline proc lacgv(n : c_int, x : [] complex(64), incx : c_int): c_int{
  return ClassicLAPACK.LAPACKE_clacgv(n, x, incx);
}

/* 
Wrapped procedure of LAPACKE_zlacgv for the type complex(128).
 */
inline proc lacgv(n : c_int, x : [] complex(128), incx : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlacgv(n, x, incx);
}

/* 
Wrapped procedure of LAPACKE_slacn2 for the type real(32).
 */
inline proc lacn2(n : c_int, v : [] real(32), x : [] real(32), isgn : [] c_int, ref est : real(32), ref kase : c_int, isave : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_slacn2(n, v, x, isgn, est, kase, isave);
}

/* 
Wrapped procedure of LAPACKE_dlacn2 for the type real(64).
 */
inline proc lacn2(n : c_int, v : [] real(64), x : [] real(64), isgn : [] c_int, ref est : real(64), ref kase : c_int, isave : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dlacn2(n, v, x, isgn, est, kase, isave);
}

/* 
Wrapped procedure of LAPACKE_clacn2 for the type complex(64).
 */
inline proc lacn2(n : c_int, v : [] complex(64), x : [] complex(64), ref est : real(32), ref kase : c_int, isave : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_clacn2(n, v, x, est, kase, isave);
}

/* 
Wrapped procedure of LAPACKE_zlacn2 for the type complex(128).
 */
inline proc lacn2(n : c_int, v : [] complex(128), x : [] complex(128), ref est : real(64), ref kase : c_int, isave : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlacn2(n, v, x, est, kase, isave);
}

/* 
Wrapped procedure of LAPACKE_slacpy for the type real(32).
 */
inline proc lacpy(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slacpy(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlacpy for the type real(64).
 */
inline proc lacpy(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlacpy(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clacpy for the type complex(64).
 */
inline proc lacpy(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clacpy(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlacpy for the type complex(128).
 */
inline proc lacpy(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlacpy(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clacp2 for the type complex(64).
 */
inline proc lacp2(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clacp2(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlacp2 for the type complex(128).
 */
inline proc lacp2(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlacp2(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlag2c for the type complex(128).
 */
inline proc lag2c(matrix_order : lapack_memory_order, a : [] complex(128), sa : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_zlag2c(matrix_order, (if matrix_order == lapack_memory_order.row_major then sa.domain.dim(1).size else sa.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sa, (sa.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slag2d for the type real(32).
 */
inline proc lag2d(matrix_order : lapack_memory_order, sa : [] real(32), a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_slag2d(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, sa, (sa.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlag2s for the type real(64).
 */
inline proc lag2s(matrix_order : lapack_memory_order, a : [] real(64), sa : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_dlag2s(matrix_order, (if matrix_order == lapack_memory_order.row_major then sa.domain.dim(1).size else sa.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, sa, (sa.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clag2z for the type complex(64).
 */
inline proc lag2z(matrix_order : lapack_memory_order, sa : [] complex(64), a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_clag2z(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, sa, (sa.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slagge for the type real(32).
 */
inline proc lagge(matrix_order : lapack_memory_order, kl : c_int, ku : c_int, d : [] real(32), a : [] real(32), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_slagge(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, kl, ku, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_dlagge for the type real(64).
 */
inline proc lagge(matrix_order : lapack_memory_order, kl : c_int, ku : c_int, d : [] real(64), a : [] real(64), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dlagge(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, kl, ku, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_clagge for the type complex(64).
 */
inline proc lagge(matrix_order : lapack_memory_order, kl : c_int, ku : c_int, d : [] real(32), a : [] complex(64), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_clagge(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, kl, ku, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_zlagge for the type complex(128).
 */
inline proc lagge(matrix_order : lapack_memory_order, kl : c_int, ku : c_int, d : [] real(64), a : [] complex(128), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlagge(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, kl, ku, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_slamch for the type real(32).
 */
inline proc lamch(cmach : string): c_float{
  return ClassicLAPACK.LAPACKE_slamch(ascii(cmach) : c_char);
}

/* 
Wrapped procedure of LAPACKE_dlamch for the type real(64).
 */
inline proc lamch(cmach : string): c_double{
  return ClassicLAPACK.LAPACKE_dlamch(ascii(cmach) : c_char);
}

/* 
Wrapped procedure of LAPACKE_slange for the type real(32).
 */
inline proc lange(matrix_order : lapack_memory_order, norm : string, a : [] real(32)): c_float{
  return ClassicLAPACK.LAPACKE_slange(matrix_order, ascii(norm) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlange for the type real(64).
 */
inline proc lange(matrix_order : lapack_memory_order, norm : string, a : [] real(64)): c_double{
  return ClassicLAPACK.LAPACKE_dlange(matrix_order, ascii(norm) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clange for the type complex(64).
 */
inline proc lange(matrix_order : lapack_memory_order, norm : string, a : [] complex(64)): c_float{
  return ClassicLAPACK.LAPACKE_clange(matrix_order, ascii(norm) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlange for the type complex(128).
 */
inline proc lange(matrix_order : lapack_memory_order, norm : string, a : [] complex(128)): c_double{
  return ClassicLAPACK.LAPACKE_zlange(matrix_order, ascii(norm) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clanhe for the type complex(64).
 */
inline proc lanhe(matrix_order : lapack_memory_order, norm : string, uplo : string, a : [] complex(64)): c_float{
  return ClassicLAPACK.LAPACKE_clanhe(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlanhe for the type complex(128).
 */
inline proc lanhe(matrix_order : lapack_memory_order, norm : string, uplo : string, a : [] complex(128)): c_double{
  return ClassicLAPACK.LAPACKE_zlanhe(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slansy for the type real(32).
 */
inline proc lansy(matrix_order : lapack_memory_order, norm : string, uplo : string, a : [] real(32)): c_float{
  return ClassicLAPACK.LAPACKE_slansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlansy for the type real(64).
 */
inline proc lansy(matrix_order : lapack_memory_order, norm : string, uplo : string, a : [] real(64)): c_double{
  return ClassicLAPACK.LAPACKE_dlansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clansy for the type complex(64).
 */
inline proc lansy(matrix_order : lapack_memory_order, norm : string, uplo : string, a : [] complex(64)): c_float{
  return ClassicLAPACK.LAPACKE_clansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlansy for the type complex(128).
 */
inline proc lansy(matrix_order : lapack_memory_order, norm : string, uplo : string, a : [] complex(128)): c_double{
  return ClassicLAPACK.LAPACKE_zlansy(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slantr for the type real(32).
 */
inline proc lantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] real(32)): c_float{
  return ClassicLAPACK.LAPACKE_slantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlantr for the type real(64).
 */
inline proc lantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] real(64)): c_double{
  return ClassicLAPACK.LAPACKE_dlantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clantr for the type complex(64).
 */
inline proc lantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] complex(64)): c_float{
  return ClassicLAPACK.LAPACKE_clantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlantr for the type complex(128).
 */
inline proc lantr(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] complex(128)): c_double{
  return ClassicLAPACK.LAPACKE_zlantr(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slarfb for the type real(32).
 */
inline proc larfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, v : [] real(32), t : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlarfb for the type real(64).
 */
inline proc larfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, v : [] real(64), t : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clarfb for the type complex(64).
 */
inline proc larfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, v : [] complex(64), t : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlarfb for the type complex(128).
 */
inline proc larfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, v : [] complex(128), t : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlarfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slarfg for the type real(32).
 */
inline proc larfg(n : c_int, ref alpha : real(32), x : [] real(32), incx : c_int, ref tau : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slarfg(n, alpha, x, incx, tau);
}

/* 
Wrapped procedure of LAPACKE_dlarfg for the type real(64).
 */
inline proc larfg(n : c_int, ref alpha : real(64), x : [] real(64), incx : c_int, ref tau : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlarfg(n, alpha, x, incx, tau);
}

/* 
Wrapped procedure of LAPACKE_clarfg for the type complex(64).
 */
inline proc larfg(n : c_int, ref alpha : complex(64), x : [] complex(64), incx : c_int, ref tau : complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clarfg(n, alpha, x, incx, tau);
}

/* 
Wrapped procedure of LAPACKE_zlarfg for the type complex(128).
 */
inline proc larfg(n : c_int, ref alpha : complex(128), x : [] complex(128), incx : c_int, ref tau : complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlarfg(n, alpha, x, incx, tau);
}

/* 
Wrapped procedure of LAPACKE_slarft for the type real(32).
 */
inline proc larft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] real(32), tau : [] real(32), t : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, (v.domain.dim(2).size) : c_int, tau, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlarft for the type real(64).
 */
inline proc larft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] real(64), tau : [] real(64), t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, (v.domain.dim(2).size) : c_int, tau, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clarft for the type complex(64).
 */
inline proc larft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] complex(64), tau : [] complex(64), t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, (v.domain.dim(2).size) : c_int, tau, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlarft for the type complex(128).
 */
inline proc larft(matrix_order : lapack_memory_order, direct : string, storev : string, n : c_int, k : c_int, v : [] complex(128), tau : [] complex(128), t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlarft(matrix_order, ascii(direct) : c_char, ascii(storev) : c_char, n, k, v, (v.domain.dim(2).size) : c_int, tau, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slarfx for the type real(32).
 */
inline proc larfx(matrix_order : lapack_memory_order, side : string, v : [] real(32), tau : real(32), c : [] real(32), work : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slarfx(matrix_order, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, v, tau, c, (c.domain.dim(2).size) : c_int, work);
}

/* 
Wrapped procedure of LAPACKE_dlarfx for the type real(64).
 */
inline proc larfx(matrix_order : lapack_memory_order, side : string, v : [] real(64), tau : real(64), c : [] real(64), work : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlarfx(matrix_order, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, v, tau, c, (c.domain.dim(2).size) : c_int, work);
}

/* 
Wrapped procedure of LAPACKE_clarfx for the type complex(64).
 */
inline proc larfx(matrix_order : lapack_memory_order, side : string, v : [] complex(64), tau : complex(64), c : [] complex(64), work : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clarfx(matrix_order, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, v, tau, c, (c.domain.dim(2).size) : c_int, work);
}

/* 
Wrapped procedure of LAPACKE_zlarfx for the type complex(128).
 */
inline proc larfx(matrix_order : lapack_memory_order, side : string, v : [] complex(128), tau : complex(128), c : [] complex(128), work : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlarfx(matrix_order, ascii(side) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, v, tau, c, (c.domain.dim(2).size) : c_int, work);
}

/* 
Wrapped procedure of LAPACKE_slarnv for the type real(32).
 */
inline proc larnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slarnv(idist, iseed, n, x);
}

/* 
Wrapped procedure of LAPACKE_dlarnv for the type real(64).
 */
inline proc larnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlarnv(idist, iseed, n, x);
}

/* 
Wrapped procedure of LAPACKE_clarnv for the type complex(64).
 */
inline proc larnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clarnv(idist, iseed, n, x);
}

/* 
Wrapped procedure of LAPACKE_zlarnv for the type complex(128).
 */
inline proc larnv(idist : c_int, iseed : [] c_int, n : c_int, x : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlarnv(idist, iseed, n, x);
}

/* 
Wrapped procedure of LAPACKE_slaset for the type real(32).
 */
inline proc laset(matrix_order : lapack_memory_order, uplo : string, alpha : real(32), beta : real(32), a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slaset(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, beta, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlaset for the type real(64).
 */
inline proc laset(matrix_order : lapack_memory_order, uplo : string, alpha : real(64), beta : real(64), a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlaset(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, beta, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_claset for the type complex(64).
 */
inline proc laset(matrix_order : lapack_memory_order, uplo : string, alpha : complex(64), beta : complex(64), a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_claset(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, beta, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlaset for the type complex(128).
 */
inline proc laset(matrix_order : lapack_memory_order, uplo : string, alpha : complex(128), beta : complex(128), a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlaset(matrix_order, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, beta, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slasrt for the type real(32).
 */
inline proc lasrt(id : string, n : c_int, d : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slasrt(ascii(id) : c_char, n, d);
}

/* 
Wrapped procedure of LAPACKE_dlasrt for the type real(64).
 */
inline proc lasrt(id : string, n : c_int, d : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlasrt(ascii(id) : c_char, n, d);
}

/* 
Wrapped procedure of LAPACKE_slaswp for the type real(32).
 */
inline proc laswp(matrix_order : lapack_memory_order, a : [] real(32), k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int): c_int{
  return ClassicLAPACK.LAPACKE_slaswp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, k1, k2, ipiv, incx);
}

/* 
Wrapped procedure of LAPACKE_dlaswp for the type real(64).
 */
inline proc laswp(matrix_order : lapack_memory_order, a : [] real(64), k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dlaswp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, k1, k2, ipiv, incx);
}

/* 
Wrapped procedure of LAPACKE_claswp for the type complex(64).
 */
inline proc laswp(matrix_order : lapack_memory_order, a : [] complex(64), k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int): c_int{
  return ClassicLAPACK.LAPACKE_claswp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, k1, k2, ipiv, incx);
}

/* 
Wrapped procedure of LAPACKE_zlaswp for the type complex(128).
 */
inline proc laswp(matrix_order : lapack_memory_order, a : [] complex(128), k1 : c_int, k2 : c_int, ipiv : [] c_int, incx : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlaswp(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, k1, k2, ipiv, incx);
}

/* 
Wrapped procedure of LAPACKE_slatms for the type real(32).
 */
inline proc latms(matrix_order : lapack_memory_order, dist : string, iseed : [] c_int, sym : string, d : [] real(32), mode : c_int, cond : real(32), dmax : real(32), kl : c_int, ku : c_int, pack : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slatms(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlatms for the type real(64).
 */
inline proc latms(matrix_order : lapack_memory_order, dist : string, iseed : [] c_int, sym : string, d : [] real(64), mode : c_int, cond : real(64), dmax : real(64), kl : c_int, ku : c_int, pack : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlatms(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clatms for the type complex(64).
 */
inline proc latms(matrix_order : lapack_memory_order, dist : string, iseed : [] c_int, sym : string, d : [] real(32), mode : c_int, cond : real(32), dmax : real(32), kl : c_int, ku : c_int, pack : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clatms(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlatms for the type complex(128).
 */
inline proc latms(matrix_order : lapack_memory_order, dist : string, iseed : [] c_int, sym : string, d : [] real(64), mode : c_int, cond : real(64), dmax : real(64), kl : c_int, ku : c_int, pack : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlatms(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, ascii(dist) : c_char, iseed, ascii(sym) : c_char, d, mode, cond, dmax, kl, ku, ascii(pack) : c_char, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_slauum for the type real(32).
 */
inline proc lauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slauum(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dlauum for the type real(64).
 */
inline proc lauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlauum(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_clauum for the type complex(64).
 */
inline proc lauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_clauum(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zlauum for the type complex(128).
 */
inline proc lauum(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zlauum(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sopgtr for the type real(32).
 */
inline proc opgtr(matrix_order : lapack_memory_order, uplo : string, ap : [] real(32), tau : [] real(32), q : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sopgtr(matrix_order, ascii(uplo) : c_char, (q.domain.dim(1).size) : c_int, ap, tau, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dopgtr for the type real(64).
 */
inline proc opgtr(matrix_order : lapack_memory_order, uplo : string, ap : [] real(64), tau : [] real(64), q : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dopgtr(matrix_order, ascii(uplo) : c_char, (q.domain.dim(1).size) : c_int, ap, tau, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sopmtr for the type real(32).
 */
inline proc opmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, ap : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sopmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ap, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dopmtr for the type real(64).
 */
inline proc opmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, ap : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dopmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ap, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sorgbr for the type real(32).
 */
inline proc orgbr(matrix_order : lapack_memory_order, vect : string, k : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorgbr(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorgbr for the type real(64).
 */
inline proc orgbr(matrix_order : lapack_memory_order, vect : string, k : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorgbr(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sorghr for the type real(32).
 */
inline proc orghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorghr(matrix_order, n, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorghr for the type real(64).
 */
inline proc orghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorghr(matrix_order, n, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sorglq for the type real(32).
 */
inline proc orglq(matrix_order : lapack_memory_order, k : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorglq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorglq for the type real(64).
 */
inline proc orglq(matrix_order : lapack_memory_order, k : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorglq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sorgql for the type real(32).
 */
inline proc orgql(matrix_order : lapack_memory_order, k : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorgql(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorgql for the type real(64).
 */
inline proc orgql(matrix_order : lapack_memory_order, k : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorgql(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sorgqr for the type real(32).
 */
inline proc orgqr(matrix_order : lapack_memory_order, k : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorgqr(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorgqr for the type real(64).
 */
inline proc orgqr(matrix_order : lapack_memory_order, k : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorgqr(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sorgrq for the type real(32).
 */
inline proc orgrq(matrix_order : lapack_memory_order, k : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorgrq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorgrq for the type real(64).
 */
inline proc orgrq(matrix_order : lapack_memory_order, k : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorgrq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sorgtr for the type real(32).
 */
inline proc orgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorgtr(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dorgtr for the type real(64).
 */
inline proc orgtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorgtr(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_sormbr for the type real(32).
 */
inline proc ormbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, k : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormbr for the type real(64).
 */
inline proc ormbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, k : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormhr for the type real(32).
 */
inline proc ormhr(matrix_order : lapack_memory_order, side : string, trans : string, ilo : c_int, ihi : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormhr for the type real(64).
 */
inline proc ormhr(matrix_order : lapack_memory_order, side : string, trans : string, ilo : c_int, ihi : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormlq for the type real(32).
 */
inline proc ormlq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormlq for the type real(64).
 */
inline proc ormlq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormql for the type real(32).
 */
inline proc ormql(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormql for the type real(64).
 */
inline proc ormql(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormqr for the type real(32).
 */
inline proc ormqr(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormqr for the type real(64).
 */
inline proc ormqr(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormrq for the type real(32).
 */
inline proc ormrq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormrq for the type real(64).
 */
inline proc ormrq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormrz for the type real(32).
 */
inline proc ormrz(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, l : c_int, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormrz for the type real(64).
 */
inline proc ormrz(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, l : c_int, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sormtr for the type real(32).
 */
inline proc ormtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, a : [] real(32), tau : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sormtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dormtr for the type real(64).
 */
inline proc ormtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, a : [] real(64), tau : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dormtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spbcon for the type real(32).
 */
inline proc pbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(32), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dpbcon for the type real(64).
 */
inline proc pbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(64), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cpbcon for the type complex(64).
 */
inline proc pbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zpbcon for the type complex(128).
 */
inline proc pbcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpbcon(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_spbequ for the type real(32).
 */
inline proc pbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(32), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_dpbequ for the type real(64).
 */
inline proc pbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(64), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_cpbequ for the type complex(64).
 */
inline proc pbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_zpbequ for the type complex(128).
 */
inline proc pbequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpbequ(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_spbrfs for the type real(32).
 */
inline proc pbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(32), afb : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbrfs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dpbrfs for the type real(64).
 */
inline proc pbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(64), afb : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbrfs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cpbrfs for the type complex(64).
 */
inline proc pbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), afb : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpbrfs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zpbrfs for the type complex(128).
 */
inline proc pbrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), afb : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpbrfs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_spbstf for the type real(32).
 */
inline proc pbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] real(32), ldbb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_spbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

/* 
Wrapped procedure of LAPACKE_dpbstf for the type real(64).
 */
inline proc pbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] real(64), ldbb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dpbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

/* 
Wrapped procedure of LAPACKE_cpbstf for the type complex(64).
 */
inline proc pbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] complex(64), ldbb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_cpbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

/* 
Wrapped procedure of LAPACKE_zpbstf for the type complex(128).
 */
inline proc pbstf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kb : c_int, bb : [] complex(128), ldbb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zpbstf(matrix_order, ascii(uplo) : c_char, n, kb, bb, ldbb);
}

/* 
Wrapped procedure of LAPACKE_spbsv for the type real(32).
 */
inline proc pbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbsv(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpbsv for the type real(64).
 */
inline proc pbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbsv(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpbsv for the type complex(64).
 */
inline proc pbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpbsv(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpbsv for the type complex(128).
 */
inline proc pbsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpbsv(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spbsvx for the type real(32).
 */
inline proc pbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, ab : [] real(32), afb : [] real(32), ref equed : string, s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dpbsvx for the type real(64).
 */
inline proc pbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, ab : [] real(64), afb : [] real(64), ref equed : string, s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cpbsvx for the type complex(64).
 */
inline proc pbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), afb : [] complex(64), ref equed : string, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zpbsvx for the type complex(128).
 */
inline proc pbsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), afb : [] complex(128), ref equed : string, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpbsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, afb, (afb.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_spbtrf for the type real(32).
 */
inline proc pbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpbtrf for the type real(64).
 */
inline proc pbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpbtrf for the type complex(64).
 */
inline proc pbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpbtrf for the type complex(128).
 */
inline proc pbtrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpbtrf(matrix_order, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spbtrs for the type real(32).
 */
inline proc pbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spbtrs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpbtrs for the type real(64).
 */
inline proc pbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpbtrs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpbtrs for the type complex(64).
 */
inline proc pbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpbtrs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpbtrs for the type complex(128).
 */
inline proc pbtrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, kd : c_int, ab : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpbtrs(matrix_order, ascii(uplo) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spftrf for the type real(32).
 */
inline proc pftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_dpftrf for the type real(64).
 */
inline proc pftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_cpftrf for the type complex(64).
 */
inline proc pftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_zpftrf for the type complex(128).
 */
inline proc pftrf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpftrf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_spftri for the type real(32).
 */
inline proc pftri(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_dpftri for the type real(64).
 */
inline proc pftri(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_cpftri for the type complex(64).
 */
inline proc pftri(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_zpftri for the type complex(128).
 */
inline proc pftri(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_spftrs for the type real(32).
 */
inline proc pftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpftrs for the type real(64).
 */
inline proc pftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpftrs for the type complex(64).
 */
inline proc pftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpftrs for the type complex(128).
 */
inline proc pftrs(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpftrs(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spocon for the type real(32).
 */
inline proc pocon(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spocon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dpocon for the type real(64).
 */
inline proc pocon(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpocon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cpocon for the type complex(64).
 */
inline proc pocon(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpocon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zpocon for the type complex(128).
 */
inline proc pocon(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpocon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_spoequ for the type real(32).
 */
inline proc poequ(matrix_order : lapack_memory_order, a : [] real(32), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spoequ(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_dpoequ for the type real(64).
 */
inline proc poequ(matrix_order : lapack_memory_order, a : [] real(64), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpoequ(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_cpoequ for the type complex(64).
 */
inline proc poequ(matrix_order : lapack_memory_order, a : [] complex(64), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpoequ(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_zpoequ for the type complex(128).
 */
inline proc poequ(matrix_order : lapack_memory_order, a : [] complex(128), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpoequ(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_spoequb for the type real(32).
 */
inline proc poequb(matrix_order : lapack_memory_order, a : [] real(32), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spoequb(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_dpoequb for the type real(64).
 */
inline proc poequb(matrix_order : lapack_memory_order, a : [] real(64), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpoequb(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_cpoequb for the type complex(64).
 */
inline proc poequb(matrix_order : lapack_memory_order, a : [] complex(64), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpoequb(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_zpoequb for the type complex(128).
 */
inline proc poequb(matrix_order : lapack_memory_order, a : [] complex(128), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpoequb(matrix_order, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_sporfs for the type real(32).
 */
inline proc porfs(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), af : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sporfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dporfs for the type real(64).
 */
inline proc porfs(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), af : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dporfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cporfs for the type complex(64).
 */
inline proc porfs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), af : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cporfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zporfs for the type complex(128).
 */
inline proc porfs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), af : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zporfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sporfsx for the type real(32).
 */
inline proc porfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] real(32), af : [] real(32), s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dporfsx for the type real(64).
 */
inline proc porfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] real(64), af : [] real(64), s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_cporfsx for the type complex(64).
 */
inline proc porfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] complex(64), af : [] complex(64), s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zporfsx for the type complex(128).
 */
inline proc porfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] complex(128), af : [] complex(128), s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zporfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_sposv for the type real(32).
 */
inline proc posv(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sposv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dposv for the type real(64).
 */
inline proc posv(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dposv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cposv for the type complex(64).
 */
inline proc posv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cposv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zposv for the type complex(128).
 */
inline proc posv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zposv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsposv for the type real(64).
 */
inline proc posv(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), b : [] real(64), x : [] real(64), ref chlapack_iter : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsposv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, chlapack_iter);
}

/* 
Wrapped procedure of LAPACKE_zcposv for the type complex(128).
 */
inline proc posv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), b : [] complex(128), x : [] complex(128), ref chlapack_iter : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zcposv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, chlapack_iter);
}

/* 
Wrapped procedure of LAPACKE_sposvx for the type real(32).
 */
inline proc posvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(32), af : [] real(32), ref equed : string, s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dposvx for the type real(64).
 */
inline proc posvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(64), af : [] real(64), ref equed : string, s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cposvx for the type complex(64).
 */
inline proc posvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(64), af : [] complex(64), ref equed : string, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zposvx for the type complex(128).
 */
inline proc posvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(128), af : [] complex(128), ref equed : string, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zposvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sposvxx for the type real(32).
 */
inline proc posvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(32), af : [] real(32), ref equed : string, s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dposvxx for the type real(64).
 */
inline proc posvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(64), af : [] real(64), ref equed : string, s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_cposvxx for the type complex(64).
 */
inline proc posvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(64), af : [] complex(64), ref equed : string, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zposvxx for the type complex(128).
 */
inline proc posvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(128), af : [] complex(128), ref equed : string, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zposvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_spotrf for the type real(32).
 */
inline proc potrf(matrix_order : lapack_memory_order, uplo : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spotrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpotrf for the type real(64).
 */
inline proc potrf(matrix_order : lapack_memory_order, uplo : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpotrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpotrf for the type complex(64).
 */
inline proc potrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpotrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpotrf for the type complex(128).
 */
inline proc potrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpotrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spotri for the type real(32).
 */
inline proc potri(matrix_order : lapack_memory_order, uplo : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spotri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpotri for the type real(64).
 */
inline proc potri(matrix_order : lapack_memory_order, uplo : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpotri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpotri for the type complex(64).
 */
inline proc potri(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpotri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpotri for the type complex(128).
 */
inline proc potri(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpotri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spotrs for the type real(32).
 */
inline proc potrs(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spotrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpotrs for the type real(64).
 */
inline proc potrs(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpotrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpotrs for the type complex(64).
 */
inline proc potrs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpotrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpotrs for the type complex(128).
 */
inline proc potrs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpotrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sppcon for the type real(32).
 */
inline proc ppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dppcon for the type real(64).
 */
inline proc ppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cppcon for the type complex(64).
 */
inline proc ppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zppcon for the type complex(128).
 */
inline proc ppcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zppcon(matrix_order, ascii(uplo) : c_char, n, ap, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_sppequ for the type real(32).
 */
inline proc ppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_dppequ for the type real(64).
 */
inline proc ppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_cppequ for the type complex(64).
 */
inline proc ppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_zppequ for the type complex(128).
 */
inline proc ppequ(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zppequ(matrix_order, ascii(uplo) : c_char, n, ap, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_spprfs for the type real(32).
 */
inline proc pprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), afp : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dpprfs for the type real(64).
 */
inline proc pprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), afp : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cpprfs for the type complex(64).
 */
inline proc pprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), afp : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zpprfs for the type complex(128).
 */
inline proc pprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), afp : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sppsv for the type real(32).
 */
inline proc ppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sppsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dppsv for the type real(64).
 */
inline proc ppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dppsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cppsv for the type complex(64).
 */
inline proc ppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cppsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zppsv for the type complex(128).
 */
inline proc ppsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zppsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sppsvx for the type real(32).
 */
inline proc ppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] real(32), afp : [] real(32), ref equed : string, s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dppsvx for the type real(64).
 */
inline proc ppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] real(64), afp : [] real(64), ref equed : string, s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cppsvx for the type complex(64).
 */
inline proc ppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] complex(64), afp : [] complex(64), ref equed : string, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zppsvx for the type complex(128).
 */
inline proc ppsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] complex(128), afp : [] complex(128), ref equed : string, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zppsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_spptrf for the type real(32).
 */
inline proc pptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_dpptrf for the type real(64).
 */
inline proc pptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_cpptrf for the type complex(64).
 */
inline proc pptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_zpptrf for the type complex(128).
 */
inline proc pptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpptrf(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_spptri for the type real(32).
 */
inline proc pptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_dpptri for the type real(64).
 */
inline proc pptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_cpptri for the type complex(64).
 */
inline proc pptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_zpptri for the type complex(128).
 */
inline proc pptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpptri(matrix_order, ascii(uplo) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_spptrs for the type real(32).
 */
inline proc pptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpptrs for the type real(64).
 */
inline proc pptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpptrs for the type complex(64).
 */
inline proc pptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpptrs for the type complex(128).
 */
inline proc pptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_spstrf for the type real(32).
 */
inline proc pstrf(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), piv : [] c_int, ref rank : c_int, tol : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spstrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, piv, rank, tol);
}

/* 
Wrapped procedure of LAPACKE_dpstrf for the type real(64).
 */
inline proc pstrf(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), piv : [] c_int, ref rank : c_int, tol : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpstrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, piv, rank, tol);
}

/* 
Wrapped procedure of LAPACKE_cpstrf for the type complex(64).
 */
inline proc pstrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), piv : [] c_int, ref rank : c_int, tol : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cpstrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, piv, rank, tol);
}

/* 
Wrapped procedure of LAPACKE_zpstrf for the type complex(128).
 */
inline proc pstrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), piv : [] c_int, ref rank : c_int, tol : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zpstrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, piv, rank, tol);
}

/* 
Wrapped procedure of LAPACKE_sptcon for the type real(32).
 */
inline proc ptcon(n : c_int, d : [] real(32), e : [] real(32), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sptcon(n, d, e, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dptcon for the type real(64).
 */
inline proc ptcon(n : c_int, d : [] real(64), e : [] real(64), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dptcon(n, d, e, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cptcon for the type complex(64).
 */
inline proc ptcon(n : c_int, d : [] real(32), e : [] complex(64), anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cptcon(n, d, e, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zptcon for the type complex(128).
 */
inline proc ptcon(n : c_int, d : [] real(64), e : [] complex(128), anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zptcon(n, d, e, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_spteqr for the type real(32).
 */
inline proc pteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpteqr for the type real(64).
 */
inline proc pteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpteqr for the type complex(64).
 */
inline proc pteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpteqr for the type complex(128).
 */
inline proc pteqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sptrfs for the type real(32).
 */
inline proc ptrfs(matrix_order : lapack_memory_order, n : c_int, d : [] real(32), e : [] real(32), df : [] real(32), ef : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sptrfs(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dptrfs for the type real(64).
 */
inline proc ptrfs(matrix_order : lapack_memory_order, n : c_int, d : [] real(64), e : [] real(64), df : [] real(64), ef : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dptrfs(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cptrfs for the type complex(64).
 */
inline proc ptrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, d : [] real(32), e : [] complex(64), df : [] real(32), ef : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cptrfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zptrfs for the type complex(128).
 */
inline proc ptrfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, d : [] real(64), e : [] complex(128), df : [] real(64), ef : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zptrfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sptsv for the type real(32).
 */
inline proc ptsv(matrix_order : lapack_memory_order, n : c_int, d : [] real(32), e : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sptsv(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dptsv for the type real(64).
 */
inline proc ptsv(matrix_order : lapack_memory_order, n : c_int, d : [] real(64), e : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dptsv(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cptsv for the type complex(64).
 */
inline proc ptsv(matrix_order : lapack_memory_order, n : c_int, d : [] real(32), e : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cptsv(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zptsv for the type complex(128).
 */
inline proc ptsv(matrix_order : lapack_memory_order, n : c_int, d : [] real(64), e : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zptsv(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sptsvx for the type real(32).
 */
inline proc ptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, d : [] real(32), e : [] real(32), df : [] real(32), ef : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sptsvx(matrix_order, ascii(fact) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dptsvx for the type real(64).
 */
inline proc ptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, d : [] real(64), e : [] real(64), df : [] real(64), ef : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dptsvx(matrix_order, ascii(fact) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cptsvx for the type complex(64).
 */
inline proc ptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, d : [] real(32), e : [] complex(64), df : [] real(32), ef : [] complex(64), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cptsvx(matrix_order, ascii(fact) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zptsvx for the type complex(128).
 */
inline proc ptsvx(matrix_order : lapack_memory_order, fact : string, n : c_int, d : [] real(64), e : [] complex(128), df : [] real(64), ef : [] complex(128), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zptsvx(matrix_order, ascii(fact) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, df, ef, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_spttrf for the type real(32).
 */
inline proc pttrf(n : c_int, d : [] real(32), e : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spttrf(n, d, e);
}

/* 
Wrapped procedure of LAPACKE_dpttrf for the type real(64).
 */
inline proc pttrf(n : c_int, d : [] real(64), e : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpttrf(n, d, e);
}

/* 
Wrapped procedure of LAPACKE_cpttrf for the type complex(64).
 */
inline proc pttrf(n : c_int, d : [] real(32), e : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpttrf(n, d, e);
}

/* 
Wrapped procedure of LAPACKE_zpttrf for the type complex(128).
 */
inline proc pttrf(n : c_int, d : [] real(64), e : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpttrf(n, d, e);
}

/* 
Wrapped procedure of LAPACKE_spttrs for the type real(32).
 */
inline proc pttrs(matrix_order : lapack_memory_order, n : c_int, d : [] real(32), e : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_spttrs(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dpttrs for the type real(64).
 */
inline proc pttrs(matrix_order : lapack_memory_order, n : c_int, d : [] real(64), e : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dpttrs(matrix_order, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cpttrs for the type complex(64).
 */
inline proc pttrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, d : [] real(32), e : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cpttrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zpttrs for the type complex(128).
 */
inline proc pttrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, d : [] real(64), e : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zpttrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, d, e, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssbev for the type real(32).
 */
inline proc sbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsbev for the type real(64).
 */
inline proc sbev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsbev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssbevd for the type real(32).
 */
inline proc sbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsbevd for the type real(64).
 */
inline proc sbevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, kd : c_int, ab : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsbevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssbevx for the type real(32).
 */
inline proc sbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] real(32), q : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dsbevx for the type real(64).
 */
inline proc sbevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, kd : c_int, ab : [] real(64), q : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsbevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_ssbgst for the type real(32).
 */
inline proc sbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, ka : c_int, kb : c_int, ab : [] real(32), bb : [] real(32), x : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsbgst for the type real(64).
 */
inline proc sbgst(matrix_order : lapack_memory_order, vect : string, uplo : string, ka : c_int, kb : c_int, ab : [] real(64), bb : [] real(64), x : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsbgst(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssbgv for the type real(32).
 */
inline proc sbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] real(32), bb : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsbgv for the type real(64).
 */
inline proc sbgv(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] real(64), bb : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsbgv(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssbgvd for the type real(32).
 */
inline proc sbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] real(32), bb : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsbgvd for the type real(64).
 */
inline proc sbgvd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ka : c_int, kb : c_int, ab : [] real(64), bb : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsbgvd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssbgvx for the type real(32).
 */
inline proc sbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, ka : c_int, kb : c_int, ab : [] real(32), bb : [] real(32), q : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then q.domain.dim(2).size else q.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dsbgvx for the type real(64).
 */
inline proc sbgvx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, ka : c_int, kb : c_int, ab : [] real(64), bb : [] real(64), q : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsbgvx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (if matrix_order == lapack_memory_order.row_major then q.domain.dim(2).size else q.domain.dim(1).size) : c_int, ka, kb, ab, (ab.domain.dim(2).size) : c_int, bb, (bb.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_ssbtrd for the type real(32).
 */
inline proc sbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] real(32), d : [] real(32), e : [] real(32), q : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsbtrd for the type real(64).
 */
inline proc sbtrd(matrix_order : lapack_memory_order, vect : string, uplo : string, n : c_int, kd : c_int, ab : [] real(64), d : [] real(64), e : [] real(64), q : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsbtrd(matrix_order, ascii(vect) : c_char, ascii(uplo) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, d, e, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssfrk for the type real(32).
 */
inline proc sfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, alpha : real(32), a : [] real(32), beta : real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (c.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, a, (a.domain.dim(2).size) : c_int, beta, c);
}

/* 
Wrapped procedure of LAPACKE_dsfrk for the type real(64).
 */
inline proc sfrk(matrix_order : lapack_memory_order, transr : string, uplo : string, trans : string, alpha : real(64), a : [] real(64), beta : real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsfrk(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (c.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, alpha, a, (a.domain.dim(2).size) : c_int, beta, c);
}

/* 
Wrapped procedure of LAPACKE_sspcon for the type real(32).
 */
inline proc spcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dspcon for the type real(64).
 */
inline proc spcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_cspcon for the type complex(64).
 */
inline proc spcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zspcon for the type complex(128).
 */
inline proc spcon(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zspcon(matrix_order, ascii(uplo) : c_char, n, ap, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_sspev for the type real(32).
 */
inline proc spev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dspev for the type real(64).
 */
inline proc spev(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sspevd for the type real(32).
 */
inline proc spevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dspevd for the type real(64).
 */
inline proc spevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, n : c_int, ap : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sspevx for the type real(32).
 */
inline proc spevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sspevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dspevx for the type real(64).
 */
inline proc spevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, n : c_int, ap : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dspevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_sspgst for the type real(32).
 */
inline proc spgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] real(32), bp : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

/* 
Wrapped procedure of LAPACKE_dspgst for the type real(64).
 */
inline proc spgst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, n : c_int, ap : [] real(64), bp : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspgst(matrix_order, itype, ascii(uplo) : c_char, n, ap, bp);
}

/* 
Wrapped procedure of LAPACKE_sspgv for the type real(32).
 */
inline proc spgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] real(32), bp : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dspgv for the type real(64).
 */
inline proc spgv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] real(64), bp : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspgv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sspgvd for the type real(32).
 */
inline proc spgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] real(32), bp : [] real(32), w : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dspgvd for the type real(64).
 */
inline proc spgvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, n : c_int, ap : [] real(64), bp : [] real(64), w : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspgvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, n, ap, bp, w, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sspgvx for the type real(32).
 */
inline proc spgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] real(32), bp : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sspgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dspgvx for the type real(64).
 */
inline proc spgvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, ap : [] real(64), bp : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dspgvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, ap, bp, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_ssprfs for the type real(32).
 */
inline proc sprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), afp : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dsprfs for the type real(64).
 */
inline proc sprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), afp : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_csprfs for the type complex(64).
 */
inline proc sprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zsprfs for the type complex(128).
 */
inline proc sprfs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsprfs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_sspsv for the type real(32).
 */
inline proc spsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dspsv for the type real(64).
 */
inline proc spsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cspsv for the type complex(64).
 */
inline proc spsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cspsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zspsv for the type complex(128).
 */
inline proc spsv(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zspsv(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sspsvx for the type real(32).
 */
inline proc spsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] real(32), afp : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dspsvx for the type real(64).
 */
inline proc spsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] real(64), afp : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_cspsvx for the type complex(64).
 */
inline proc spsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] complex(64), afp : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zspsvx for the type complex(128).
 */
inline proc spsvx(matrix_order : lapack_memory_order, fact : string, uplo : string, n : c_int, ap : [] complex(128), afp : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zspsvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, afp, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ssptrd for the type real(32).
 */
inline proc sptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), d : [] real(32), e : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_dsptrd for the type real(64).
 */
inline proc sptrd(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), d : [] real(64), e : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsptrd(matrix_order, ascii(uplo) : c_char, n, ap, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_ssptrf for the type real(32).
 */
inline proc sptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dsptrf for the type real(64).
 */
inline proc sptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_csptrf for the type complex(64).
 */
inline proc sptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_csptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zsptrf for the type complex(128).
 */
inline proc sptrf(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsptrf(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_ssptri for the type real(32).
 */
inline proc sptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dsptri for the type real(64).
 */
inline proc sptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_csptri for the type complex(64).
 */
inline proc sptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_csptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zsptri for the type complex(128).
 */
inline proc sptri(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsptri(matrix_order, ascii(uplo) : c_char, n, ap, ipiv);
}

/* 
Wrapped procedure of LAPACKE_ssptrs for the type real(32).
 */
inline proc sptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsptrs for the type real(64).
 */
inline proc sptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_csptrs for the type complex(64).
 */
inline proc sptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_csptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zsptrs for the type complex(128).
 */
inline proc sptrs(matrix_order : lapack_memory_order, uplo : string, n : c_int, ap : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zsptrs(matrix_order, ascii(uplo) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sstebz for the type real(32).
 */
inline proc stebz(range : string, order : string, n : c_int, vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), d : [] real(32), e : [] real(32), ref m : c_int, ref nsplit : c_int, w : [] real(32), iblock : [] c_int, isplit : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sstebz(ascii(range) : c_char, ascii(order) : c_char, n, vl, vu, il, iu, abstol, d, e, m, nsplit, w, iblock, isplit);
}

/* 
Wrapped procedure of LAPACKE_dstebz for the type real(64).
 */
inline proc stebz(range : string, order : string, n : c_int, vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), d : [] real(64), e : [] real(64), ref m : c_int, ref nsplit : c_int, w : [] real(64), iblock : [] c_int, isplit : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dstebz(ascii(range) : c_char, ascii(order) : c_char, n, vl, vu, il, iu, abstol, d, e, m, nsplit, w, iblock, isplit);
}

/* 
Wrapped procedure of LAPACKE_sstedc for the type real(32).
 */
inline proc stedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dstedc for the type real(64).
 */
inline proc stedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cstedc for the type complex(64).
 */
inline proc stedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zstedc for the type complex(128).
 */
inline proc stedc(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zstedc(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sstegr for the type real(32).
 */
inline proc stegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(32), e : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_dstegr for the type real(64).
 */
inline proc stegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(64), e : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_cstegr for the type complex(64).
 */
inline proc stegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(32), e : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] complex(64), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_zstegr for the type complex(128).
 */
inline proc stegr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(64), e : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] complex(128), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zstegr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_sstein for the type real(32).
 */
inline proc stein(matrix_order : lapack_memory_order, n : c_int, d : [] real(32), e : [] real(32), m : c_int, w : [] real(32), iblock : [] c_int, isplit : [] c_int, z : [] real(32), ifailv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sstein(matrix_order, n, d, e, m, w, iblock, isplit, z, (z.domain.dim(2).size) : c_int, ifailv);
}

/* 
Wrapped procedure of LAPACKE_dstein for the type real(64).
 */
inline proc stein(matrix_order : lapack_memory_order, n : c_int, d : [] real(64), e : [] real(64), m : c_int, w : [] real(64), iblock : [] c_int, isplit : [] c_int, z : [] real(64), ifailv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dstein(matrix_order, n, d, e, m, w, iblock, isplit, z, (z.domain.dim(2).size) : c_int, ifailv);
}

/* 
Wrapped procedure of LAPACKE_cstein for the type complex(64).
 */
inline proc stein(matrix_order : lapack_memory_order, n : c_int, d : [] real(32), e : [] real(32), m : c_int, w : [] real(32), iblock : [] c_int, isplit : [] c_int, z : [] complex(64), ifailv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_cstein(matrix_order, n, d, e, m, w, iblock, isplit, z, (z.domain.dim(2).size) : c_int, ifailv);
}

/* 
Wrapped procedure of LAPACKE_zstein for the type complex(128).
 */
inline proc stein(matrix_order : lapack_memory_order, n : c_int, d : [] real(64), e : [] real(64), m : c_int, w : [] real(64), iblock : [] c_int, isplit : [] c_int, z : [] complex(128), ifailv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zstein(matrix_order, n, d, e, m, w, iblock, isplit, z, (z.domain.dim(2).size) : c_int, ifailv);
}

/* 
Wrapped procedure of LAPACKE_sstemr for the type real(32).
 */
inline proc stemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(32), e : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, ref m : c_int, w : [] real(32), z : [] real(32), nzc : c_int, isuppz : [] c_int, ref tryrac : c_int): c_int{
  return ClassicLAPACK.LAPACKE_sstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, (z.domain.dim(2).size) : c_int, nzc, isuppz, tryrac);
}

/* 
Wrapped procedure of LAPACKE_dstemr for the type real(64).
 */
inline proc stemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(64), e : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, ref m : c_int, w : [] real(64), z : [] real(64), nzc : c_int, isuppz : [] c_int, ref tryrac : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, (z.domain.dim(2).size) : c_int, nzc, isuppz, tryrac);
}

/* 
Wrapped procedure of LAPACKE_cstemr for the type complex(64).
 */
inline proc stemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(32), e : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, ref m : c_int, w : [] real(32), z : [] complex(64), nzc : c_int, isuppz : [] c_int, ref tryrac : c_int): c_int{
  return ClassicLAPACK.LAPACKE_cstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, (z.domain.dim(2).size) : c_int, nzc, isuppz, tryrac);
}

/* 
Wrapped procedure of LAPACKE_zstemr for the type complex(128).
 */
inline proc stemr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(64), e : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, ref m : c_int, w : [] real(64), z : [] complex(128), nzc : c_int, isuppz : [] c_int, ref tryrac : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zstemr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, m, w, z, (z.domain.dim(2).size) : c_int, nzc, isuppz, tryrac);
}

/* 
Wrapped procedure of LAPACKE_ssteqr for the type real(32).
 */
inline proc steqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsteqr for the type real(64).
 */
inline proc steqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_csteqr for the type complex(64).
 */
inline proc steqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_csteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zsteqr for the type complex(128).
 */
inline proc steqr(matrix_order : lapack_memory_order, compz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zsteqr(matrix_order, ascii(compz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssterf for the type real(32).
 */
inline proc sterf(n : c_int, d : [] real(32), e : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssterf(n, d, e);
}

/* 
Wrapped procedure of LAPACKE_dsterf for the type real(64).
 */
inline proc sterf(n : c_int, d : [] real(64), e : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsterf(n, d, e);
}

/* 
Wrapped procedure of LAPACKE_sstev for the type real(32).
 */
inline proc stev(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sstev(matrix_order, ascii(jobz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dstev for the type real(64).
 */
inline proc stev(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dstev(matrix_order, ascii(jobz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sstevd for the type real(32).
 */
inline proc stevd(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] real(32), e : [] real(32), z : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sstevd(matrix_order, ascii(jobz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dstevd for the type real(64).
 */
inline proc stevd(matrix_order : lapack_memory_order, jobz : string, n : c_int, d : [] real(64), e : [] real(64), z : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dstevd(matrix_order, ascii(jobz) : c_char, n, d, e, z, (z.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sstevr for the type real(32).
 */
inline proc stevr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(32), e : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sstevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_dstevr for the type real(64).
 */
inline proc stevr(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(64), e : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dstevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_sstevx for the type real(32).
 */
inline proc stevx(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(32), e : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_sstevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dstevx for the type real(64).
 */
inline proc stevx(matrix_order : lapack_memory_order, jobz : string, range : string, n : c_int, d : [] real(64), e : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dstevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, n, d, e, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_ssycon for the type real(32).
 */
inline proc sycon(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssycon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_dsycon for the type real(64).
 */
inline proc sycon(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsycon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_csycon for the type complex(64).
 */
inline proc sycon(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, anorm : real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csycon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_zsycon for the type complex(128).
 */
inline proc sycon(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, anorm : real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsycon(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, anorm, rcond);
}

/* 
Wrapped procedure of LAPACKE_ssyequb for the type real(32).
 */
inline proc syequb(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssyequb(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_dsyequb for the type real(64).
 */
inline proc syequb(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsyequb(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_csyequb for the type complex(64).
 */
inline proc syequb(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), s : [] real(32), ref scond : real(32), ref amax : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csyequb(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_zsyequb for the type complex(128).
 */
inline proc syequb(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), s : [] real(64), ref scond : real(64), ref amax : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsyequb(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, s, scond, amax);
}

/* 
Wrapped procedure of LAPACKE_ssyev for the type real(32).
 */
inline proc syev(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] real(32), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssyev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_dsyev for the type real(64).
 */
inline proc syev(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] real(64), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsyev(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_ssyevd for the type real(32).
 */
inline proc syevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] real(32), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssyevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_dsyevd for the type real(64).
 */
inline proc syevd(matrix_order : lapack_memory_order, jobz : string, uplo : string, a : [] real(64), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsyevd(matrix_order, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_ssyevr for the type real(32).
 */
inline proc syevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssyevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_dsyevr for the type real(64).
 */
inline proc syevr(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), isuppz : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsyevr(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, isuppz);
}

/* 
Wrapped procedure of LAPACKE_ssyevx for the type real(32).
 */
inline proc syevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssyevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dsyevx for the type real(64).
 */
inline proc syevx(matrix_order : lapack_memory_order, jobz : string, range : string, uplo : string, a : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsyevx(matrix_order, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_ssygst for the type real(32).
 */
inline proc sygst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssygst(matrix_order, itype, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsygst for the type real(64).
 */
inline proc sygst(matrix_order : lapack_memory_order, itype : c_int, uplo : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsygst(matrix_order, itype, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssygv for the type real(32).
 */
inline proc sygv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] real(32), b : [] real(32), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssygv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_dsygv for the type real(64).
 */
inline proc sygv(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] real(64), b : [] real(64), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsygv(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_ssygvd for the type real(32).
 */
inline proc sygvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] real(32), b : [] real(32), w : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssygvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_dsygvd for the type real(64).
 */
inline proc sygvd(matrix_order : lapack_memory_order, itype : c_int, jobz : string, uplo : string, a : [] real(64), b : [] real(64), w : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsygvd(matrix_order, itype, ascii(jobz) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, w);
}

/* 
Wrapped procedure of LAPACKE_ssygvx for the type real(32).
 */
inline proc sygvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] real(32), b : [] real(32), vl : real(32), vu : real(32), il : c_int, iu : c_int, abstol : real(32), ref m : c_int, w : [] real(32), z : [] real(32), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssygvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_dsygvx for the type real(64).
 */
inline proc sygvx(matrix_order : lapack_memory_order, itype : c_int, jobz : string, range : string, uplo : string, n : c_int, a : [] real(64), b : [] real(64), vl : real(64), vu : real(64), il : c_int, iu : c_int, abstol : real(64), ref m : c_int, w : [] real(64), z : [] real(64), ifail : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsygvx(matrix_order, itype, ascii(jobz) : c_char, ascii(range) : c_char, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, vu, il, iu, abstol, m, w, z, (z.domain.dim(2).size) : c_int, ifail);
}

/* 
Wrapped procedure of LAPACKE_ssyrfs for the type real(32).
 */
inline proc syrfs(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssyrfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dsyrfs for the type real(64).
 */
inline proc syrfs(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsyrfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_csyrfs for the type complex(64).
 */
inline proc syrfs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csyrfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zsyrfs for the type complex(128).
 */
inline proc syrfs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsyrfs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ssyrfsx for the type real(32).
 */
inline proc syrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dsyrfsx for the type real(64).
 */
inline proc syrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_csyrfsx for the type complex(64).
 */
inline proc syrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zsyrfsx for the type complex(128).
 */
inline proc syrfsx(matrix_order : lapack_memory_order, uplo : string, equed : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsyrfsx(matrix_order, ascii(uplo) : c_char, ascii(equed) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_ssysv for the type real(32).
 */
inline proc sysv(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssysv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsysv for the type real(64).
 */
inline proc sysv(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsysv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_csysv for the type complex(64).
 */
inline proc sysv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_csysv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zsysv for the type complex(128).
 */
inline proc sysv(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zsysv(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssysvx for the type real(32).
 */
inline proc sysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, b : [] real(32), x : [] real(32), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dsysvx for the type real(64).
 */
inline proc sysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, b : [] real(64), x : [] real(64), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_csysvx for the type complex(64).
 */
inline proc sysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, b : [] complex(64), x : [] complex(64), ref rcond : real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_zsysvx for the type complex(128).
 */
inline proc sysvx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, b : [] complex(128), x : [] complex(128), ref rcond : real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsysvx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ssysvxx for the type real(32).
 */
inline proc sysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(32), af : [] real(32), ipiv : [] c_int, ref equed : string, s : [] real(32), b : [] real(32), x : [] real(32), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_dsysvxx for the type real(64).
 */
inline proc sysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] real(64), af : [] real(64), ipiv : [] c_int, ref equed : string, s : [] real(64), b : [] real(64), x : [] real(64), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_csysvxx for the type complex(64).
 */
inline proc sysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(64), af : [] complex(64), ipiv : [] c_int, ref equed : string, s : [] real(32), b : [] complex(64), x : [] complex(64), ref rcond : real(32), ref rpvgrw : real(32), berr : [] real(32), n_err_bnds : c_int, err_bnds_norm : [] real(32), err_bnds_comp : [] real(32), nparams : c_int, params : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_csysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_zsysvxx for the type complex(128).
 */
inline proc sysvxx(matrix_order : lapack_memory_order, fact : string, uplo : string, a : [] complex(128), af : [] complex(128), ipiv : [] c_int, ref equed : string, s : [] real(64), b : [] complex(128), x : [] complex(128), ref rcond : real(64), ref rpvgrw : real(64), berr : [] real(64), n_err_bnds : c_int, err_bnds_norm : [] real(64), err_bnds_comp : [] real(64), nparams : c_int, params : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zsysvxx(matrix_order, ascii(fact) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, af, (af.domain.dim(2).size) : c_int, ipiv, ascii(equed) : c_char, s, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, rcond, rpvgrw, berr, n_err_bnds, err_bnds_norm, err_bnds_comp, nparams, params);
}

/* 
Wrapped procedure of LAPACKE_ssytrd for the type real(32).
 */
inline proc sytrd(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), d : [] real(32), e : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssytrd(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_dsytrd for the type real(64).
 */
inline proc sytrd(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), d : [] real(64), e : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsytrd(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, d, e, tau);
}

/* 
Wrapped procedure of LAPACKE_ssytrf for the type real(32).
 */
inline proc sytrf(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssytrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dsytrf for the type real(64).
 */
inline proc sytrf(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsytrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_csytrf for the type complex(64).
 */
inline proc sytrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_csytrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zsytrf for the type complex(128).
 */
inline proc sytrf(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsytrf(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_ssytri for the type real(32).
 */
inline proc sytri(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssytri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dsytri for the type real(64).
 */
inline proc sytri(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsytri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_csytri for the type complex(64).
 */
inline proc sytri(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_csytri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zsytri for the type complex(128).
 */
inline proc sytri(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsytri(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_ssytrs for the type real(32).
 */
inline proc sytrs(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssytrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsytrs for the type real(64).
 */
inline proc sytrs(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsytrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_csytrs for the type complex(64).
 */
inline proc sytrs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_csytrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zsytrs for the type complex(128).
 */
inline proc sytrs(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zsytrs(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_stbcon for the type real(32).
 */
inline proc tbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_dtbcon for the type real(64).
 */
inline proc tbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_ctbcon for the type complex(64).
 */
inline proc tbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] complex(64), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_ztbcon for the type complex(128).
 */
inline proc tbcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, kd : c_int, ab : [] complex(128), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztbcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, kd, ab, (ab.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_stbrfs for the type real(32).
 */
inline proc tbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dtbrfs for the type real(64).
 */
inline proc tbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ctbrfs for the type complex(64).
 */
inline proc tbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ztbrfs for the type complex(128).
 */
inline proc tbrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztbrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_stbtrs for the type real(32).
 */
inline proc tbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtbtrs for the type real(64).
 */
inline proc tbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctbtrs for the type complex(64).
 */
inline proc tbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztbtrs for the type complex(128).
 */
inline proc tbtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, kd : c_int, ab : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztbtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, kd, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ab, (ab.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_stfsm for the type real(32).
 */
inline proc tfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, alpha : real(32), a : [] real(32), b : [] real(32), ldb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_stfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, alpha, a, b, ldb);
}

/* 
Wrapped procedure of LAPACKE_dtfsm for the type real(64).
 */
inline proc tfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, alpha : real(64), a : [] real(64), b : [] real(64), ldb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, alpha, a, b, ldb);
}

/* 
Wrapped procedure of LAPACKE_ctfsm for the type complex(64).
 */
inline proc tfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, alpha : complex(64), a : [] complex(64), b : [] complex(64), ldb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, alpha, a, b, ldb);
}

/* 
Wrapped procedure of LAPACKE_ztfsm for the type complex(128).
 */
inline proc tfsm(matrix_order : lapack_memory_order, transr : string, side : string, uplo : string, trans : string, diag : string, alpha : complex(128), a : [] complex(128), b : [] complex(128), ldb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztfsm(matrix_order, ascii(transr) : c_char, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, alpha, a, b, ldb);
}

/* 
Wrapped procedure of LAPACKE_stftri for the type real(32).
 */
inline proc tftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_dtftri for the type real(64).
 */
inline proc tftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_ctftri for the type complex(64).
 */
inline proc tftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_ztftri for the type complex(128).
 */
inline proc tftri(matrix_order : lapack_memory_order, transr : string, uplo : string, diag : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztftri(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a);
}

/* 
Wrapped procedure of LAPACKE_stfttp for the type real(32).
 */
inline proc tfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] real(32), ap : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

/* 
Wrapped procedure of LAPACKE_dtfttp for the type real(64).
 */
inline proc tfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] real(64), ap : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

/* 
Wrapped procedure of LAPACKE_ctfttp for the type complex(64).
 */
inline proc tfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(64), ap : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

/* 
Wrapped procedure of LAPACKE_ztfttp for the type complex(128).
 */
inline proc tfttp(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, arf : [] complex(128), ap : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztfttp(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, arf, ap);
}

/* 
Wrapped procedure of LAPACKE_stfttr for the type real(32).
 */
inline proc tfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, arf : [] real(32), a : [] real(32), lda : c_int): c_int{
  return ClassicLAPACK.LAPACKE_stfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (arf.domain.dim(1).size) : c_int, arf, a, lda);
}

/* 
Wrapped procedure of LAPACKE_dtfttr for the type real(64).
 */
inline proc tfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, arf : [] real(64), a : [] real(64), lda : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (arf.domain.dim(1).size) : c_int, arf, a, lda);
}

/* 
Wrapped procedure of LAPACKE_ctfttr for the type complex(64).
 */
inline proc tfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, arf : [] complex(64), a : [] complex(64), lda : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, arf, a, lda);
}

/* 
Wrapped procedure of LAPACKE_ztfttr for the type complex(128).
 */
inline proc tfttr(matrix_order : lapack_memory_order, transr : string, uplo : string, arf : [] complex(128), a : [] complex(128), lda : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztfttr(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, arf, a, lda);
}

/* 
Wrapped procedure of LAPACKE_stgevc for the type real(32).
 */
inline proc tgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, s : [] real(32), p : [] real(32), vl : [] real(32), vr : [] real(32), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_stgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (s.domain.dim(1).size) : c_int, s, (s.domain.dim(2).size) : c_int, p, (p.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_dtgevc for the type real(64).
 */
inline proc tgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, s : [] real(64), p : [] real(64), vl : [] real(64), vr : [] real(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (s.domain.dim(1).size) : c_int, s, (s.domain.dim(2).size) : c_int, p, (p.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ctgevc for the type complex(64).
 */
inline proc tgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, s : [] complex(64), p : [] complex(64), vl : [] complex(64), vr : [] complex(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (s.domain.dim(1).size) : c_int, s, (s.domain.dim(2).size) : c_int, p, (p.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ztgevc for the type complex(128).
 */
inline proc tgevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, s : [] complex(128), p : [] complex(128), vl : [] complex(128), vr : [] complex(128), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztgevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (s.domain.dim(1).size) : c_int, s, (s.domain.dim(2).size) : c_int, p, (p.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_stgexc for the type real(32).
 */
inline proc tgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, a : [] real(32), b : [] real(32), q : [] real(32), z : [] real(32), ref ifst : c_int, ref ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_stgexc(matrix_order, wantq, wantz, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_dtgexc for the type real(64).
 */
inline proc tgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, a : [] real(64), b : [] real(64), q : [] real(64), z : [] real(64), ref ifst : c_int, ref ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtgexc(matrix_order, wantq, wantz, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_ctgexc for the type complex(64).
 */
inline proc tgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, a : [] complex(64), b : [] complex(64), q : [] complex(64), z : [] complex(64), ifst : c_int, ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctgexc(matrix_order, wantq, wantz, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_ztgexc for the type complex(128).
 */
inline proc tgexc(matrix_order : lapack_memory_order, wantq : c_int, wantz : c_int, a : [] complex(128), b : [] complex(128), q : [] complex(128), z : [] complex(128), ifst : c_int, ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztgexc(matrix_order, wantq, wantz, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_stgsen for the type real(32).
 */
inline proc tgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, a : [] real(32), b : [] real(32), alphar : [] real(32), alphai : [] real(32), beta : [] real(32), q : [] real(32), z : [] real(32), ref m : c_int, ref pl : real(32), ref pr : real(32), dif : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stgsen(matrix_order, ijob, wantq, wantz, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alphar, alphai, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, m, pl, pr, dif);
}

/* 
Wrapped procedure of LAPACKE_dtgsen for the type real(64).
 */
inline proc tgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, a : [] real(64), b : [] real(64), alphar : [] real(64), alphai : [] real(64), beta : [] real(64), q : [] real(64), z : [] real(64), ref m : c_int, ref pl : real(64), ref pr : real(64), dif : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtgsen(matrix_order, ijob, wantq, wantz, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alphar, alphai, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, m, pl, pr, dif);
}

/* 
Wrapped procedure of LAPACKE_ctgsen for the type complex(64).
 */
inline proc tgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, a : [] complex(64), b : [] complex(64), alpha : [] complex(64), beta : [] complex(64), q : [] complex(64), z : [] complex(64), ref m : c_int, ref pl : real(32), ref pr : real(32), dif : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctgsen(matrix_order, ijob, wantq, wantz, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, m, pl, pr, dif);
}

/* 
Wrapped procedure of LAPACKE_ztgsen for the type complex(128).
 */
inline proc tgsen(matrix_order : lapack_memory_order, ijob : c_int, wantq : c_int, wantz : c_int, chlapack_select : [] c_int, a : [] complex(128), b : [] complex(128), alpha : [] complex(128), beta : [] complex(128), q : [] complex(128), z : [] complex(128), ref m : c_int, ref pl : real(64), ref pr : real(64), dif : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztgsen(matrix_order, ijob, wantq, wantz, chlapack_select, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, alpha, beta, q, (q.domain.dim(2).size) : c_int, z, (z.domain.dim(2).size) : c_int, m, pl, pr, dif);
}

/* 
Wrapped procedure of LAPACKE_stgsja for the type real(32).
 */
inline proc tgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, k : c_int, l : c_int, a : [] real(32), b : [] real(32), tola : real(32), tolb : real(32), alpha : [] real(32), beta : [] real(32), u : [] real(32), v : [] real(32), q : [] real(32), ref ncycle : c_int): c_int{
  return ClassicLAPACK.LAPACKE_stgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ncycle);
}

/* 
Wrapped procedure of LAPACKE_dtgsja for the type real(64).
 */
inline proc tgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, k : c_int, l : c_int, a : [] real(64), b : [] real(64), tola : real(64), tolb : real(64), alpha : [] real(64), beta : [] real(64), u : [] real(64), v : [] real(64), q : [] real(64), ref ncycle : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ncycle);
}

/* 
Wrapped procedure of LAPACKE_ctgsja for the type complex(64).
 */
inline proc tgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, k : c_int, l : c_int, a : [] complex(64), b : [] complex(64), tola : real(32), tolb : real(32), alpha : [] real(32), beta : [] real(32), u : [] complex(64), v : [] complex(64), q : [] complex(64), ref ncycle : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ncycle);
}

/* 
Wrapped procedure of LAPACKE_ztgsja for the type complex(128).
 */
inline proc tgsja(matrix_order : lapack_memory_order, jobu : string, jobv : string, jobq : string, k : c_int, l : c_int, a : [] complex(128), b : [] complex(128), tola : real(64), tolb : real(64), alpha : [] real(64), beta : [] real(64), u : [] complex(128), v : [] complex(128), q : [] complex(128), ref ncycle : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztgsja(matrix_order, ascii(jobu) : c_char, ascii(jobv) : c_char, ascii(jobq) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, tola, tolb, alpha, beta, u, (u.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ncycle);
}

/* 
Wrapped procedure of LAPACKE_stgsna for the type real(32).
 */
inline proc tgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] real(32), b : [] real(32), vl : [] real(32), vr : [] real(32), s : [] real(32), dif : [] real(32), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_stgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, dif, mm, m);
}

/* 
Wrapped procedure of LAPACKE_dtgsna for the type real(64).
 */
inline proc tgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] real(64), b : [] real(64), vl : [] real(64), vr : [] real(64), s : [] real(64), dif : [] real(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, dif, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ctgsna for the type complex(64).
 */
inline proc tgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] complex(64), b : [] complex(64), vl : [] complex(64), vr : [] complex(64), s : [] real(32), dif : [] real(32), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, dif, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ztgsna for the type complex(128).
 */
inline proc tgsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, n : c_int, a : [] complex(128), b : [] complex(128), vl : [] complex(128), vr : [] complex(128), s : [] real(64), dif : [] real(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztgsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, n, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, dif, mm, m);
}

/* 
Wrapped procedure of LAPACKE_stgsyl for the type real(32).
 */
inline proc tgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, a : [] real(32), b : [] real(32), c : [] real(32), d : [] real(32), e : [] real(32), f : [] real(32), ref scale : real(32), ref dif : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stgsyl(matrix_order, ascii(trans) : c_char, ijob, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, d, (d.domain.dim(2).size) : c_int, e, (e.domain.dim(2).size) : c_int, f, (f.domain.dim(2).size) : c_int, scale, dif);
}

/* 
Wrapped procedure of LAPACKE_dtgsyl for the type real(64).
 */
inline proc tgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, a : [] real(64), b : [] real(64), c : [] real(64), d : [] real(64), e : [] real(64), f : [] real(64), ref scale : real(64), ref dif : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtgsyl(matrix_order, ascii(trans) : c_char, ijob, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, d, (d.domain.dim(2).size) : c_int, e, (e.domain.dim(2).size) : c_int, f, (f.domain.dim(2).size) : c_int, scale, dif);
}

/* 
Wrapped procedure of LAPACKE_ctgsyl for the type complex(64).
 */
inline proc tgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, a : [] complex(64), b : [] complex(64), c : [] complex(64), d : [] complex(64), e : [] complex(64), f : [] complex(64), ref scale : real(32), ref dif : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctgsyl(matrix_order, ascii(trans) : c_char, ijob, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, d, (d.domain.dim(2).size) : c_int, e, (e.domain.dim(2).size) : c_int, f, (f.domain.dim(2).size) : c_int, scale, dif);
}

/* 
Wrapped procedure of LAPACKE_ztgsyl for the type complex(128).
 */
inline proc tgsyl(matrix_order : lapack_memory_order, trans : string, ijob : c_int, a : [] complex(128), b : [] complex(128), c : [] complex(128), d : [] complex(128), e : [] complex(128), f : [] complex(128), ref scale : real(64), ref dif : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztgsyl(matrix_order, ascii(trans) : c_char, ijob, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, d, (d.domain.dim(2).size) : c_int, e, (e.domain.dim(2).size) : c_int, f, (f.domain.dim(2).size) : c_int, scale, dif);
}

/* 
Wrapped procedure of LAPACKE_stpcon for the type real(32).
 */
inline proc tpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

/* 
Wrapped procedure of LAPACKE_dtpcon for the type real(64).
 */
inline proc tpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

/* 
Wrapped procedure of LAPACKE_ctpcon for the type complex(64).
 */
inline proc tpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] complex(64), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

/* 
Wrapped procedure of LAPACKE_ztpcon for the type complex(128).
 */
inline proc tpcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, n : c_int, ap : [] complex(128), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztpcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap, rcond);
}

/* 
Wrapped procedure of LAPACKE_stprfs for the type real(32).
 */
inline proc tprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dtprfs for the type real(64).
 */
inline proc tprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ctprfs for the type complex(64).
 */
inline proc tprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ztprfs for the type complex(128).
 */
inline proc tprfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztprfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_stptri for the type real(32).
 */
inline proc tptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_dtptri for the type real(64).
 */
inline proc tptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_ctptri for the type complex(64).
 */
inline proc tptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_ztptri for the type complex(128).
 */
inline proc tptri(matrix_order : lapack_memory_order, uplo : string, diag : string, n : c_int, ap : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztptri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, n, ap);
}

/* 
Wrapped procedure of LAPACKE_stptrs for the type real(32).
 */
inline proc tptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtptrs for the type real(64).
 */
inline proc tptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctptrs for the type complex(64).
 */
inline proc tptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztptrs for the type complex(128).
 */
inline proc tptrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, n : c_int, ap : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztptrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, n, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, ap, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_stpttf for the type real(32).
 */
inline proc tpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] real(32), arf : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

/* 
Wrapped procedure of LAPACKE_dtpttf for the type real(64).
 */
inline proc tpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] real(64), arf : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

/* 
Wrapped procedure of LAPACKE_ctpttf for the type complex(64).
 */
inline proc tpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] complex(64), arf : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

/* 
Wrapped procedure of LAPACKE_ztpttf for the type complex(128).
 */
inline proc tpttf(matrix_order : lapack_memory_order, transr : string, uplo : string, n : c_int, ap : [] complex(128), arf : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztpttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, n, ap, arf);
}

/* 
Wrapped procedure of LAPACKE_stpttr for the type real(32).
 */
inline proc tpttr(matrix_order : lapack_memory_order, uplo : string, ap : [] real(32), a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stpttr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, ap, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtpttr for the type real(64).
 */
inline proc tpttr(matrix_order : lapack_memory_order, uplo : string, ap : [] real(64), a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtpttr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, ap, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctpttr for the type complex(64).
 */
inline proc tpttr(matrix_order : lapack_memory_order, uplo : string, ap : [] complex(64), a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctpttr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, ap, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztpttr for the type complex(128).
 */
inline proc tpttr(matrix_order : lapack_memory_order, uplo : string, ap : [] complex(128), a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztpttr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, ap, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_strcon for the type real(32).
 */
inline proc trcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] real(32), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_dtrcon for the type real(64).
 */
inline proc trcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] real(64), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_ctrcon for the type complex(64).
 */
inline proc trcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] complex(64), ref rcond : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctrcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_ztrcon for the type complex(128).
 */
inline proc trcon(matrix_order : lapack_memory_order, norm : string, uplo : string, diag : string, a : [] complex(128), ref rcond : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztrcon(matrix_order, ascii(norm) : c_char, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, rcond);
}

/* 
Wrapped procedure of LAPACKE_strevc for the type real(32).
 */
inline proc trevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, t : [] real(32), vl : [] real(32), vr : [] real(32), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_strevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_dtrevc for the type real(64).
 */
inline proc trevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, t : [] real(64), vl : [] real(64), vr : [] real(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtrevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ctrevc for the type complex(64).
 */
inline proc trevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, t : [] complex(64), vl : [] complex(64), vr : [] complex(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctrevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ztrevc for the type complex(128).
 */
inline proc trevc(matrix_order : lapack_memory_order, side : string, howmny : string, chlapack_select : [] c_int, t : [] complex(128), vl : [] complex(128), vr : [] complex(128), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztrevc(matrix_order, ascii(side) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, mm, m);
}

/* 
Wrapped procedure of LAPACKE_strexc for the type real(32).
 */
inline proc trexc(matrix_order : lapack_memory_order, compq : string, t : [] real(32), q : [] real(32), ref ifst : c_int, ref ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_strexc(matrix_order, ascii(compq) : c_char, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_dtrexc for the type real(64).
 */
inline proc trexc(matrix_order : lapack_memory_order, compq : string, t : [] real(64), q : [] real(64), ref ifst : c_int, ref ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtrexc(matrix_order, ascii(compq) : c_char, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_ctrexc for the type complex(64).
 */
inline proc trexc(matrix_order : lapack_memory_order, compq : string, t : [] complex(64), q : [] complex(64), ifst : c_int, ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctrexc(matrix_order, ascii(compq) : c_char, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_ztrexc for the type complex(128).
 */
inline proc trexc(matrix_order : lapack_memory_order, compq : string, t : [] complex(128), q : [] complex(128), ifst : c_int, ilst : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztrexc(matrix_order, ascii(compq) : c_char, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, ifst, ilst);
}

/* 
Wrapped procedure of LAPACKE_strrfs for the type real(32).
 */
inline proc trrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] real(32), b : [] real(32), x : [] real(32), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_dtrrfs for the type real(64).
 */
inline proc trrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] real(64), b : [] real(64), x : [] real(64), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ctrrfs for the type complex(64).
 */
inline proc trrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] complex(64), b : [] complex(64), x : [] complex(64), ferr : [] real(32), berr : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctrrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_ztrrfs for the type complex(128).
 */
inline proc trrfs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] complex(128), b : [] complex(128), x : [] complex(128), ferr : [] real(64), berr : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztrrfs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, x, (x.domain.dim(2).size) : c_int, ferr, berr);
}

/* 
Wrapped procedure of LAPACKE_strsen for the type real(32).
 */
inline proc trsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, t : [] real(32), q : [] real(32), wr : [] real(32), wi : [] real(32), ref m : c_int, ref s : real(32), ref sep : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, wr, wi, m, s, sep);
}

/* 
Wrapped procedure of LAPACKE_dtrsen for the type real(64).
 */
inline proc trsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, t : [] real(64), q : [] real(64), wr : [] real(64), wi : [] real(64), ref m : c_int, ref s : real(64), ref sep : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, wr, wi, m, s, sep);
}

/* 
Wrapped procedure of LAPACKE_ctrsen for the type complex(64).
 */
inline proc trsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, t : [] complex(64), q : [] complex(64), w : [] complex(64), ref m : c_int, ref s : real(32), ref sep : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctrsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, w, m, s, sep);
}

/* 
Wrapped procedure of LAPACKE_ztrsen for the type complex(128).
 */
inline proc trsen(matrix_order : lapack_memory_order, job : string, compq : string, chlapack_select : [] c_int, t : [] complex(128), q : [] complex(128), w : [] complex(128), ref m : c_int, ref s : real(64), ref sep : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztrsen(matrix_order, ascii(job) : c_char, ascii(compq) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, q, (q.domain.dim(2).size) : c_int, w, m, s, sep);
}

/* 
Wrapped procedure of LAPACKE_strsna for the type real(32).
 */
inline proc trsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, t : [] real(32), vl : [] real(32), vr : [] real(32), s : [] real(32), sep : [] real(32), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_strsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, sep, mm, m);
}

/* 
Wrapped procedure of LAPACKE_dtrsna for the type real(64).
 */
inline proc trsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, t : [] real(64), vl : [] real(64), vr : [] real(64), s : [] real(64), sep : [] real(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dtrsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, sep, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ctrsna for the type complex(64).
 */
inline proc trsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, t : [] complex(64), vl : [] complex(64), vr : [] complex(64), s : [] real(32), sep : [] real(32), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ctrsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, sep, mm, m);
}

/* 
Wrapped procedure of LAPACKE_ztrsna for the type complex(128).
 */
inline proc trsna(matrix_order : lapack_memory_order, job : string, howmny : string, chlapack_select : [] c_int, t : [] complex(128), vl : [] complex(128), vr : [] complex(128), s : [] real(64), sep : [] real(64), mm : c_int, ref m : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ztrsna(matrix_order, ascii(job) : c_char, ascii(howmny) : c_char, chlapack_select, (t.domain.dim(1).size) : c_int, t, (t.domain.dim(2).size) : c_int, vl, (vl.domain.dim(2).size) : c_int, vr, (vr.domain.dim(2).size) : c_int, s, sep, mm, m);
}

/* 
Wrapped procedure of LAPACKE_strsyl for the type real(32).
 */
inline proc trsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, a : [] real(32), b : [] real(32), c : [] real(32), ref scale : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, scale);
}

/* 
Wrapped procedure of LAPACKE_dtrsyl for the type real(64).
 */
inline proc trsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, a : [] real(64), b : [] real(64), c : [] real(64), ref scale : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, scale);
}

/* 
Wrapped procedure of LAPACKE_ctrsyl for the type complex(64).
 */
inline proc trsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, a : [] complex(64), b : [] complex(64), c : [] complex(64), ref scale : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ctrsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, scale);
}

/* 
Wrapped procedure of LAPACKE_ztrsyl for the type complex(128).
 */
inline proc trsyl(matrix_order : lapack_memory_order, trana : string, tranb : string, isgn : c_int, a : [] complex(128), b : [] complex(128), c : [] complex(128), ref scale : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_ztrsyl(matrix_order, ascii(trana) : c_char, ascii(tranb) : c_char, isgn, (a.domain.dim(1).size) : c_int, (b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int, scale);
}

/* 
Wrapped procedure of LAPACKE_strtri for the type real(32).
 */
inline proc trtri(matrix_order : lapack_memory_order, uplo : string, diag : string, a : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtrtri for the type real(64).
 */
inline proc trtri(matrix_order : lapack_memory_order, uplo : string, diag : string, a : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctrtri for the type complex(64).
 */
inline proc trtri(matrix_order : lapack_memory_order, uplo : string, diag : string, a : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctrtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztrtri for the type complex(128).
 */
inline proc trtri(matrix_order : lapack_memory_order, uplo : string, diag : string, a : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztrtri(matrix_order, ascii(uplo) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_strtrs for the type real(32).
 */
inline proc trtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtrtrs for the type real(64).
 */
inline proc trtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctrtrs for the type complex(64).
 */
inline proc trtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctrtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztrtrs for the type complex(128).
 */
inline proc trtrs(matrix_order : lapack_memory_order, uplo : string, trans : string, diag : string, a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztrtrs(matrix_order, ascii(uplo) : c_char, ascii(trans) : c_char, ascii(diag) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_strttf for the type real(32).
 */
inline proc trttf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(32), lda : c_int, arf : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, lda, arf);
}

/* 
Wrapped procedure of LAPACKE_dtrttf for the type real(64).
 */
inline proc trttf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] real(64), lda : c_int, arf : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, lda, arf);
}

/* 
Wrapped procedure of LAPACKE_ctrttf for the type complex(64).
 */
inline proc trttf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(64), lda : c_int, arf : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctrttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, lda, arf);
}

/* 
Wrapped procedure of LAPACKE_ztrttf for the type complex(128).
 */
inline proc trttf(matrix_order : lapack_memory_order, transr : string, uplo : string, a : [] complex(128), lda : c_int, arf : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztrttf(matrix_order, ascii(transr) : c_char, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, lda, arf);
}

/* 
Wrapped procedure of LAPACKE_strttp for the type real(32).
 */
inline proc trttp(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ap : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_strttp(matrix_order, ascii(uplo) : c_char, (ap.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ap);
}

/* 
Wrapped procedure of LAPACKE_dtrttp for the type real(64).
 */
inline proc trttp(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ap : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtrttp(matrix_order, ascii(uplo) : c_char, (ap.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ap);
}

/* 
Wrapped procedure of LAPACKE_ctrttp for the type complex(64).
 */
inline proc trttp(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ap : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctrttp(matrix_order, ascii(uplo) : c_char, (ap.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ap);
}

/* 
Wrapped procedure of LAPACKE_ztrttp for the type complex(128).
 */
inline proc trttp(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ap : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztrttp(matrix_order, ascii(uplo) : c_char, (ap.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ap);
}

/* 
Wrapped procedure of LAPACKE_stzrzf for the type real(32).
 */
inline proc tzrzf(matrix_order : lapack_memory_order, a : [] real(32), tau : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stzrzf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_dtzrzf for the type real(64).
 */
inline proc tzrzf(matrix_order : lapack_memory_order, a : [] real(64), tau : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtzrzf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_ctzrzf for the type complex(64).
 */
inline proc tzrzf(matrix_order : lapack_memory_order, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctzrzf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_ztzrzf for the type complex(128).
 */
inline proc tzrzf(matrix_order : lapack_memory_order, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztzrzf(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cungbr for the type complex(64).
 */
inline proc ungbr(matrix_order : lapack_memory_order, vect : string, k : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cungbr(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zungbr for the type complex(128).
 */
inline proc ungbr(matrix_order : lapack_memory_order, vect : string, k : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zungbr(matrix_order, ascii(vect) : c_char, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cunghr for the type complex(64).
 */
inline proc unghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunghr(matrix_order, n, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zunghr for the type complex(128).
 */
inline proc unghr(matrix_order : lapack_memory_order, n : c_int, ilo : c_int, ihi : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunghr(matrix_order, n, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cunglq for the type complex(64).
 */
inline proc unglq(matrix_order : lapack_memory_order, k : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunglq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zunglq for the type complex(128).
 */
inline proc unglq(matrix_order : lapack_memory_order, k : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunglq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cungql for the type complex(64).
 */
inline proc ungql(matrix_order : lapack_memory_order, k : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cungql(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zungql for the type complex(128).
 */
inline proc ungql(matrix_order : lapack_memory_order, k : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zungql(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cungqr for the type complex(64).
 */
inline proc ungqr(matrix_order : lapack_memory_order, k : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cungqr(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zungqr for the type complex(128).
 */
inline proc ungqr(matrix_order : lapack_memory_order, k : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zungqr(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cungrq for the type complex(64).
 */
inline proc ungrq(matrix_order : lapack_memory_order, k : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cungrq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zungrq for the type complex(128).
 */
inline proc ungrq(matrix_order : lapack_memory_order, k : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zungrq(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cungtr for the type complex(64).
 */
inline proc ungtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(64), tau : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cungtr(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_zungtr for the type complex(128).
 */
inline proc ungtr(matrix_order : lapack_memory_order, uplo : string, n : c_int, a : [] complex(128), tau : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zungtr(matrix_order, ascii(uplo) : c_char, n, a, (a.domain.dim(2).size) : c_int, tau);
}

/* 
Wrapped procedure of LAPACKE_cunmbr for the type complex(64).
 */
inline proc unmbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, k : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmbr for the type complex(128).
 */
inline proc unmbr(matrix_order : lapack_memory_order, vect : string, side : string, trans : string, k : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmbr(matrix_order, ascii(vect) : c_char, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmhr for the type complex(64).
 */
inline proc unmhr(matrix_order : lapack_memory_order, side : string, trans : string, ilo : c_int, ihi : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmhr for the type complex(128).
 */
inline proc unmhr(matrix_order : lapack_memory_order, side : string, trans : string, ilo : c_int, ihi : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmhr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ilo, ihi, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmlq for the type complex(64).
 */
inline proc unmlq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmlq for the type complex(128).
 */
inline proc unmlq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmlq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmql for the type complex(64).
 */
inline proc unmql(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmql for the type complex(128).
 */
inline proc unmql(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmql(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmqr for the type complex(64).
 */
inline proc unmqr(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmqr for the type complex(128).
 */
inline proc unmqr(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmqr(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmrq for the type complex(64).
 */
inline proc unmrq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmrq for the type complex(128).
 */
inline proc unmrq(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmrq(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmrz for the type complex(64).
 */
inline proc unmrz(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, l : c_int, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmrz for the type complex(128).
 */
inline proc unmrz(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, l : c_int, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmrz(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, l, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunmtr for the type complex(64).
 */
inline proc unmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, a : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunmtr for the type complex(128).
 */
inline proc unmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, a : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cupgtr for the type complex(64).
 */
inline proc upgtr(matrix_order : lapack_memory_order, uplo : string, ap : [] complex(64), tau : [] complex(64), q : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cupgtr(matrix_order, ascii(uplo) : c_char, (q.domain.dim(1).size) : c_int, ap, tau, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zupgtr for the type complex(128).
 */
inline proc upgtr(matrix_order : lapack_memory_order, uplo : string, ap : [] complex(128), tau : [] complex(128), q : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zupgtr(matrix_order, ascii(uplo) : c_char, (q.domain.dim(1).size) : c_int, ap, tau, q, (q.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cupmtr for the type complex(64).
 */
inline proc upmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, ap : [] complex(64), tau : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cupmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ap, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zupmtr for the type complex(128).
 */
inline proc upmtr(matrix_order : lapack_memory_order, side : string, uplo : string, trans : string, ap : [] complex(128), tau : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zupmtr(matrix_order, ascii(side) : c_char, ascii(uplo) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, ap, tau, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_claghe for the type complex(64).
 */
inline proc laghe(matrix_order : lapack_memory_order, k : c_int, d : [] real(32), a : [] complex(64), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_claghe(matrix_order, (a.domain.dim(1).size) : c_int, k, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_zlaghe for the type complex(128).
 */
inline proc laghe(matrix_order : lapack_memory_order, k : c_int, d : [] real(64), a : [] complex(128), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlaghe(matrix_order, (a.domain.dim(1).size) : c_int, k, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_slagsy for the type real(32).
 */
inline proc lagsy(matrix_order : lapack_memory_order, k : c_int, d : [] real(32), a : [] real(32), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_slagsy(matrix_order, (a.domain.dim(1).size) : c_int, k, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_dlagsy for the type real(64).
 */
inline proc lagsy(matrix_order : lapack_memory_order, k : c_int, d : [] real(64), a : [] real(64), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dlagsy(matrix_order, (a.domain.dim(1).size) : c_int, k, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_clagsy for the type complex(64).
 */
inline proc lagsy(matrix_order : lapack_memory_order, k : c_int, d : [] real(32), a : [] complex(64), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_clagsy(matrix_order, (a.domain.dim(1).size) : c_int, k, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_zlagsy for the type complex(128).
 */
inline proc lagsy(matrix_order : lapack_memory_order, k : c_int, d : [] real(64), a : [] complex(128), iseed : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlagsy(matrix_order, (a.domain.dim(1).size) : c_int, k, d, a, (a.domain.dim(2).size) : c_int, iseed);
}

/* 
Wrapped procedure of LAPACKE_slapmr for the type real(32).
 */
inline proc lapmr(matrix_order : lapack_memory_order, forwrd : c_int, x : [] real(32), k : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_slapmr(matrix_order, forwrd, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(1).size else x.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, x, (x.domain.dim(2).size) : c_int, k);
}

/* 
Wrapped procedure of LAPACKE_dlapmr for the type real(64).
 */
inline proc lapmr(matrix_order : lapack_memory_order, forwrd : c_int, x : [] real(64), k : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dlapmr(matrix_order, forwrd, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(1).size else x.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, x, (x.domain.dim(2).size) : c_int, k);
}

/* 
Wrapped procedure of LAPACKE_clapmr for the type complex(64).
 */
inline proc lapmr(matrix_order : lapack_memory_order, forwrd : c_int, x : [] complex(64), k : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_clapmr(matrix_order, forwrd, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(1).size else x.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, x, (x.domain.dim(2).size) : c_int, k);
}

/* 
Wrapped procedure of LAPACKE_zlapmr for the type complex(128).
 */
inline proc lapmr(matrix_order : lapack_memory_order, forwrd : c_int, x : [] complex(128), k : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zlapmr(matrix_order, forwrd, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(1).size else x.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x.domain.dim(2).size else x.domain.dim(1).size) : c_int, x, (x.domain.dim(2).size) : c_int, k);
}

/* 
Wrapped procedure of LAPACKE_slapy2 for the type real(32).
 */
inline proc lapy2(x : real(32), y : real(32)): c_float{
  return ClassicLAPACK.LAPACKE_slapy2(x, y);
}

/* 
Wrapped procedure of LAPACKE_dlapy2 for the type real(64).
 */
inline proc lapy2(x : real(64), y : real(64)): c_double{
  return ClassicLAPACK.LAPACKE_dlapy2(x, y);
}

/* 
Wrapped procedure of LAPACKE_slapy3 for the type real(32).
 */
inline proc lapy3(x : real(32), y : real(32), z : real(32)): c_float{
  return ClassicLAPACK.LAPACKE_slapy3(x, y, z);
}

/* 
Wrapped procedure of LAPACKE_dlapy3 for the type real(64).
 */
inline proc lapy3(x : real(64), y : real(64), z : real(64)): c_double{
  return ClassicLAPACK.LAPACKE_dlapy3(x, y, z);
}

/* 
Wrapped procedure of LAPACKE_slartgp for the type real(32).
 */
inline proc lartgp(f : real(32), g : real(32), ref cs : real(32), ref sn : real(32), ref r : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slartgp(f, g, cs, sn, r);
}

/* 
Wrapped procedure of LAPACKE_dlartgp for the type real(64).
 */
inline proc lartgp(f : real(64), g : real(64), ref cs : real(64), ref sn : real(64), ref r : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlartgp(f, g, cs, sn, r);
}

/* 
Wrapped procedure of LAPACKE_slartgs for the type real(32).
 */
inline proc lartgs(x : real(32), y : real(32), sigma : real(32), ref cs : real(32), ref sn : real(32)): c_int{
  return ClassicLAPACK.LAPACKE_slartgs(x, y, sigma, cs, sn);
}

/* 
Wrapped procedure of LAPACKE_dlartgs for the type real(64).
 */
inline proc lartgs(x : real(64), y : real(64), sigma : real(64), ref cs : real(64), ref sn : real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dlartgs(x, y, sigma, cs, sn);
}

/* 
Wrapped procedure of LAPACKE_cbbcsd for the type complex(64).
 */
inline proc bbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, theta : [] real(32), phi : [] real(32), u1 : [] complex(64), u2 : [] complex(64), v1t : [] complex(64), v2t : [] complex(64), b11d : [] real(32), b11e : [] real(32), b12d : [] real(32), b12e : [] real(32), b21d : [] real(32), b21e : [] real(32), b22d : [] real(32), b22e : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_cbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(2).size else u1.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(2).size else v1t.domain.dim(1).size) : c_int, theta, phi, u1, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(1).size else u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(1).size else v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

/* 
Wrapped procedure of LAPACKE_cheswapr for the type complex(64).
 */
inline proc heswapr(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), i1 : c_int, i2 : c_int): c_int{
  return ClassicLAPACK.LAPACKE_cheswapr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, i1, i2);
}

/* 
Wrapped procedure of LAPACKE_chetri2 for the type complex(64).
 */
inline proc hetri2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_chetri2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_chetri2x for the type complex(64).
 */
inline proc hetri2x(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, nb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_chetri2x(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, nb);
}

/* 
Wrapped procedure of LAPACKE_chetrs2 for the type complex(64).
 */
inline proc hetrs2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_chetrs2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_csyconv for the type complex(64).
 */
inline proc syconv(matrix_order : lapack_memory_order, uplo : string, way : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_csyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_csyswapr for the type complex(64).
 */
inline proc syswapr(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), i1 : c_int, i2 : c_int): c_int{
  return ClassicLAPACK.LAPACKE_csyswapr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, i1, i2);
}

/* 
Wrapped procedure of LAPACKE_csytri2 for the type complex(64).
 */
inline proc sytri2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_csytri2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_csytri2x for the type complex(64).
 */
inline proc sytri2x(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, nb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_csytri2x(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, nb);
}

/* 
Wrapped procedure of LAPACKE_csytrs2 for the type complex(64).
 */
inline proc sytrs2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_csytrs2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cunbdb for the type complex(64).
 */
inline proc unbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, x11 : [] complex(64), x12 : [] complex(64), x21 : [] complex(64), x22 : [] complex(64), theta : [] real(32), phi : [] real(32), taup1 : [] complex(64), taup2 : [] complex(64), tauq1 : [] complex(64), tauq2 : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cunbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, phi, taup1, taup2, tauq1, tauq2);
}

/* 
Wrapped procedure of LAPACKE_cuncsd for the type complex(64).
 */
inline proc uncsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, x11 : [] complex(64), x12 : [] complex(64), x21 : [] complex(64), x22 : [] complex(64), theta : [] real(32), u1 : [] complex(64), u2 : [] complex(64), v1t : [] complex(64), v2t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cuncsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, u1, (u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dbbcsd for the type real(64).
 */
inline proc bbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, theta : [] real(64), phi : [] real(64), u1 : [] real(64), u2 : [] real(64), v1t : [] real(64), v2t : [] real(64), b11d : [] real(64), b11e : [] real(64), b12d : [] real(64), b12e : [] real(64), b21d : [] real(64), b21e : [] real(64), b22d : [] real(64), b22e : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(2).size else u1.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(2).size else v1t.domain.dim(1).size) : c_int, theta, phi, u1, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(1).size else u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(1).size else v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

/* 
Wrapped procedure of LAPACKE_dorbdb for the type real(64).
 */
inline proc orbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, x11 : [] real(64), x12 : [] real(64), x21 : [] real(64), x22 : [] real(64), theta : [] real(64), phi : [] real(64), taup1 : [] real(64), taup2 : [] real(64), tauq1 : [] real(64), tauq2 : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, phi, taup1, taup2, tauq1, tauq2);
}

/* 
Wrapped procedure of LAPACKE_dorcsd for the type real(64).
 */
inline proc orcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, x11 : [] real(64), x12 : [] real(64), x21 : [] real(64), x22 : [] real(64), theta : [] real(64), u1 : [] real(64), u2 : [] real(64), v1t : [] real(64), v2t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dorcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, u1, (u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsyconv for the type real(64).
 */
inline proc syconv(matrix_order : lapack_memory_order, uplo : string, way : string, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dsyswapr for the type real(64).
 */
inline proc syswapr(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), i1 : c_int, i2 : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsyswapr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, i1, i2);
}

/* 
Wrapped procedure of LAPACKE_dsytri2 for the type real(64).
 */
inline proc sytri2(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsytri2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_dsytri2x for the type real(64).
 */
inline proc sytri2x(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int, nb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_dsytri2x(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, nb);
}

/* 
Wrapped procedure of LAPACKE_dsytrs2 for the type real(64).
 */
inline proc sytrs2(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsytrs2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sbbcsd for the type real(32).
 */
inline proc bbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, theta : [] real(32), phi : [] real(32), u1 : [] real(32), u2 : [] real(32), v1t : [] real(32), v2t : [] real(32), b11d : [] real(32), b11e : [] real(32), b12d : [] real(32), b12e : [] real(32), b21d : [] real(32), b21e : [] real(32), b22d : [] real(32), b22e : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(2).size else u1.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(2).size else v1t.domain.dim(1).size) : c_int, theta, phi, u1, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(1).size else u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(1).size else v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

/* 
Wrapped procedure of LAPACKE_sorbdb for the type real(32).
 */
inline proc orbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, x11 : [] real(32), x12 : [] real(32), x21 : [] real(32), x22 : [] real(32), theta : [] real(32), phi : [] real(32), taup1 : [] real(32), taup2 : [] real(32), tauq1 : [] real(32), tauq2 : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, phi, taup1, taup2, tauq1, tauq2);
}

/* 
Wrapped procedure of LAPACKE_sorcsd for the type real(32).
 */
inline proc orcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, x11 : [] real(32), x12 : [] real(32), x21 : [] real(32), x22 : [] real(32), theta : [] real(32), u1 : [] real(32), u2 : [] real(32), v1t : [] real(32), v2t : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sorcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, u1, (u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssyconv for the type real(32).
 */
inline proc syconv(matrix_order : lapack_memory_order, uplo : string, way : string, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_ssyswapr for the type real(32).
 */
inline proc syswapr(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), i1 : c_int, i2 : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssyswapr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, i1, i2);
}

/* 
Wrapped procedure of LAPACKE_ssytri2 for the type real(32).
 */
inline proc sytri2(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssytri2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_ssytri2x for the type real(32).
 */
inline proc sytri2x(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int, nb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_ssytri2x(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, nb);
}

/* 
Wrapped procedure of LAPACKE_ssytrs2 for the type real(32).
 */
inline proc sytrs2(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssytrs2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zbbcsd for the type complex(128).
 */
inline proc bbcsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, m : c_int, theta : [] real(64), phi : [] real(64), u1 : [] complex(128), u2 : [] complex(128), v1t : [] complex(128), v2t : [] complex(128), b11d : [] real(64), b11e : [] real(64), b12d : [] real(64), b12e : [] real(64), b21d : [] real(64), b21e : [] real(64), b22d : [] real(64), b22e : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_zbbcsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, m, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(2).size else u1.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(2).size else v1t.domain.dim(1).size) : c_int, theta, phi, u1, (if matrix_order == lapack_memory_order.row_major then u1.domain.dim(1).size else u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (if matrix_order == lapack_memory_order.row_major then v1t.domain.dim(1).size else v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int, b11d, b11e, b12d, b12e, b21d, b21e, b22d, b22e);
}

/* 
Wrapped procedure of LAPACKE_zheswapr for the type complex(128).
 */
inline proc heswapr(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), i1 : c_int, i2 : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zheswapr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, i1, i2);
}

/* 
Wrapped procedure of LAPACKE_zhetri2 for the type complex(128).
 */
inline proc hetri2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhetri2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zhetri2x for the type complex(128).
 */
inline proc hetri2x(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, nb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zhetri2x(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, nb);
}

/* 
Wrapped procedure of LAPACKE_zhetrs2 for the type complex(128).
 */
inline proc hetrs2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zhetrs2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zsyconv for the type complex(128).
 */
inline proc syconv(matrix_order : lapack_memory_order, uplo : string, way : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsyconv(matrix_order, ascii(uplo) : c_char, ascii(way) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zsyswapr for the type complex(128).
 */
inline proc syswapr(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), i1 : c_int, i2 : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsyswapr(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, i1, i2);
}

/* 
Wrapped procedure of LAPACKE_zsytri2 for the type complex(128).
 */
inline proc sytri2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsytri2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv);
}

/* 
Wrapped procedure of LAPACKE_zsytri2x for the type complex(128).
 */
inline proc sytri2x(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, nb : c_int): c_int{
  return ClassicLAPACK.LAPACKE_zsytri2x(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, nb);
}

/* 
Wrapped procedure of LAPACKE_zsytrs2 for the type complex(128).
 */
inline proc sytrs2(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zsytrs2(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zunbdb for the type complex(128).
 */
inline proc unbdb(matrix_order : lapack_memory_order, trans : string, signs : string, m : c_int, x11 : [] complex(128), x12 : [] complex(128), x21 : [] complex(128), x22 : [] complex(128), theta : [] real(64), phi : [] real(64), taup1 : [] complex(128), taup2 : [] complex(128), tauq1 : [] complex(128), tauq2 : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zunbdb(matrix_order, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, phi, taup1, taup2, tauq1, tauq2);
}

/* 
Wrapped procedure of LAPACKE_zuncsd for the type complex(128).
 */
inline proc uncsd(matrix_order : lapack_memory_order, jobu1 : string, jobu2 : string, jobv1t : string, jobv2t : string, trans : string, signs : string, m : c_int, x11 : [] complex(128), x12 : [] complex(128), x21 : [] complex(128), x22 : [] complex(128), theta : [] real(64), u1 : [] complex(128), u2 : [] complex(128), v1t : [] complex(128), v2t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zuncsd(matrix_order, ascii(jobu1) : c_char, ascii(jobu2) : c_char, ascii(jobv1t) : c_char, ascii(jobv2t) : c_char, ascii(trans) : c_char, ascii(signs) : c_char, m, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(1).size else x11.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then x11.domain.dim(2).size else x11.domain.dim(1).size) : c_int, x11, (x11.domain.dim(2).size) : c_int, x12, (x12.domain.dim(2).size) : c_int, x21, (x21.domain.dim(2).size) : c_int, x22, (x22.domain.dim(2).size) : c_int, theta, u1, (u1.domain.dim(2).size) : c_int, u2, (u2.domain.dim(2).size) : c_int, v1t, (v1t.domain.dim(2).size) : c_int, v2t, (v2t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgemqrt for the type real(32).
 */
inline proc gemqrt(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, v : [] real(32), t : [] real(32), c : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgemqrt for the type real(64).
 */
inline proc gemqrt(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, v : [] real(64), t : [] real(64), c : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgemqrt for the type complex(64).
 */
inline proc gemqrt(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, v : [] complex(64), t : [] complex(64), c : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgemqrt for the type complex(128).
 */
inline proc gemqrt(matrix_order : lapack_memory_order, side : string, trans : string, k : c_int, v : [] complex(128), t : [] complex(128), c : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgemqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(1).size else c.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then c.domain.dim(2).size else c.domain.dim(1).size) : c_int, k, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, c, (c.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgeqrt for the type real(32).
 */
inline proc geqrt(matrix_order : lapack_memory_order, nb : c_int, a : [] real(32), t : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, nb, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgeqrt for the type real(64).
 */
inline proc geqrt(matrix_order : lapack_memory_order, nb : c_int, a : [] real(64), t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, nb, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgeqrt for the type complex(64).
 */
inline proc geqrt(matrix_order : lapack_memory_order, nb : c_int, a : [] complex(64), t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, nb, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgeqrt for the type complex(128).
 */
inline proc geqrt(matrix_order : lapack_memory_order, nb : c_int, a : [] complex(128), t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, nb, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgeqrt2 for the type real(32).
 */
inline proc geqrt2(matrix_order : lapack_memory_order, a : [] real(32), t : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgeqrt2 for the type real(64).
 */
inline proc geqrt2(matrix_order : lapack_memory_order, a : [] real(64), t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgeqrt2 for the type complex(64).
 */
inline proc geqrt2(matrix_order : lapack_memory_order, a : [] complex(64), t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgeqrt2 for the type complex(128).
 */
inline proc geqrt2(matrix_order : lapack_memory_order, a : [] complex(128), t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_sgeqrt3 for the type real(32).
 */
inline proc geqrt3(matrix_order : lapack_memory_order, a : [] real(32), t : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_sgeqrt3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dgeqrt3 for the type real(64).
 */
inline proc geqrt3(matrix_order : lapack_memory_order, a : [] real(64), t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dgeqrt3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_cgeqrt3 for the type complex(64).
 */
inline proc geqrt3(matrix_order : lapack_memory_order, a : [] complex(64), t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_cgeqrt3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zgeqrt3 for the type complex(128).
 */
inline proc geqrt3(matrix_order : lapack_memory_order, a : [] complex(128), t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zgeqrt3(matrix_order, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(1).size else a.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_stpmqrt for the type real(32).
 */
inline proc tpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, l : c_int, v : [] real(32), t : [] real(32), a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, l, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtpmqrt for the type real(64).
 */
inline proc tpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, l : c_int, v : [] real(64), t : [] real(64), a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, l, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctpmqrt for the type complex(64).
 */
inline proc tpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, l : c_int, v : [] complex(64), t : [] complex(64), a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, l, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztpmqrt for the type complex(128).
 */
inline proc tpmqrt(matrix_order : lapack_memory_order, side : string, trans : string, l : c_int, v : [] complex(128), t : [] complex(128), a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztpmqrt(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then a.domain.dim(2).size else a.domain.dim(1).size) : c_int, l, (if matrix_order == lapack_memory_order.row_major then t.domain.dim(1).size else t.domain.dim(2).size) : c_int, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtpqrt for the type real(64).
 */
inline proc tpqrt(matrix_order : lapack_memory_order, l : c_int, nb : c_int, a : [] real(64), b : [] real(64), t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtpqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, nb, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctpqrt for the type complex(64).
 */
inline proc tpqrt(matrix_order : lapack_memory_order, l : c_int, nb : c_int, a : [] complex(64), b : [] complex(64), t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctpqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, nb, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztpqrt for the type complex(128).
 */
inline proc tpqrt(matrix_order : lapack_memory_order, l : c_int, nb : c_int, a : [] complex(128), b : [] complex(128), t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztpqrt(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, nb, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_stpqrt2 for the type real(32).
 */
inline proc tpqrt2(matrix_order : lapack_memory_order, l : c_int, a : [] real(32), b : [] real(32), t : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stpqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtpqrt2 for the type real(64).
 */
inline proc tpqrt2(matrix_order : lapack_memory_order, l : c_int, a : [] real(64), b : [] real(64), t : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtpqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctpqrt2 for the type complex(64).
 */
inline proc tpqrt2(matrix_order : lapack_memory_order, l : c_int, a : [] complex(64), b : [] complex(64), t : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctpqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztpqrt2 for the type complex(128).
 */
inline proc tpqrt2(matrix_order : lapack_memory_order, l : c_int, a : [] complex(128), b : [] complex(128), t : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztpqrt2(matrix_order, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, l, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_stprfb for the type real(32).
 */
inline proc tprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, l : c_int, v : [] real(32), t : [] real(32), a : [] real(32), b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_stprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, l, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dtprfb for the type real(64).
 */
inline proc tprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, l : c_int, v : [] real(64), t : [] real(64), a : [] real(64), b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dtprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, l, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ctprfb for the type complex(64).
 */
inline proc tprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, l : c_int, v : [] complex(64), t : [] complex(64), a : [] complex(64), b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_ctprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, l, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ztprfb for the type complex(128).
 */
inline proc tprfb(matrix_order : lapack_memory_order, side : string, trans : string, direct : string, storev : string, l : c_int, v : [] complex(128), t : [] complex(128), a : [] complex(128), b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_ztprfb(matrix_order, ascii(side) : c_char, ascii(trans) : c_char, ascii(direct) : c_char, ascii(storev) : c_char, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(1).size else b.domain.dim(2).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, (t.domain.dim(1).size) : c_int, l, v, (v.domain.dim(2).size) : c_int, t, (t.domain.dim(2).size) : c_int, a, (a.domain.dim(2).size) : c_int, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_ssysv_rook for the type real(32).
 */
inline proc sysv_rook(matrix_order : lapack_memory_order, uplo : string, a : [] real(32), ipiv : [] c_int, b : [] real(32)): c_int{
  return ClassicLAPACK.LAPACKE_ssysv_rook(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_dsysv_rook for the type real(64).
 */
inline proc sysv_rook(matrix_order : lapack_memory_order, uplo : string, a : [] real(64), ipiv : [] c_int, b : [] real(64)): c_int{
  return ClassicLAPACK.LAPACKE_dsysv_rook(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_csysv_rook for the type complex(64).
 */
inline proc sysv_rook(matrix_order : lapack_memory_order, uplo : string, a : [] complex(64), ipiv : [] c_int, b : [] complex(64)): c_int{
  return ClassicLAPACK.LAPACKE_csysv_rook(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

/* 
Wrapped procedure of LAPACKE_zsysv_rook for the type complex(128).
 */
inline proc sysv_rook(matrix_order : lapack_memory_order, uplo : string, a : [] complex(128), ipiv : [] c_int, b : [] complex(128)): c_int{
  return ClassicLAPACK.LAPACKE_zsysv_rook(matrix_order, ascii(uplo) : c_char, (a.domain.dim(1).size) : c_int, (if matrix_order == lapack_memory_order.row_major then b.domain.dim(2).size else b.domain.dim(1).size) : c_int, a, (a.domain.dim(2).size) : c_int, ipiv, b, (b.domain.dim(2).size) : c_int);
}

} // LAPACK
