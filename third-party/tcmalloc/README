===================================
gperftools for Chapel release
===================================

This copy of gperftools is being released with Chapel for convenience, and uses
a snapshot of gperftools obtained from Google at:
  http://code.google.com/p/gperftools/

Note that Chapel only uses the tcmalloc memory allocator provided by the
gperftools distribution. The other tools are neither built nor used by Chapel.

Any Chapel issues that seem to be related to gperftools should be directed to
the Chapel team at chapel-bugs@lists.sourceforge.net, as the cause is most
likely due to Chapel's use of gperftools and not the gperftools library itself.

The modifications that we have made to the official gperftools 2.2
release are as follows:

* Change the default large allocation reporting threshold to 0, so that
  by default tcmalloc does not produce a message no matter how large an
  allocation is.
* Add the LIBC_MALLOC_OVERRIDE preprocessor constant, which controls
  whether or not tcmalloc overrides (intercepts) calls to the regular
  libc malloc interface functions.  Add a --enable-libc-malloc-override
  option to the configure script, to control whether or not overriding
  is turned on.
  Files affected: configure.ac, configure, Makefile.am, Makefile.in,
  src/config.h.in, src/tcmalloc.cc.

The structure of this directory is as follows:

./
  Makefile               : a Makefile to help build gperftools for
                           Chapel's use
  README                 : this file
  gperftools-2.2/        : the gperftools release, with Chapel's
                           changes applied
  install/               : as gperftools is built it will be
                           installed here:
                           $CHPL_TARGET_PLATFORM/{bin,include,lib,share}
