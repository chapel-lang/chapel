.\" Automatically generated by Pandoc 2.5
.\"
.TH "fi_info" "1" "2021\-03\-22" "Libfabric Programmer\[cq]s Manual" "Libfabric v1.13.2"
.hy
.SH NAME
.PP
fi_info \- Simple utility to query for fabric interfaces
.SH SYNOPSIS
.IP
.nf
\f[C]
 fi_info [OPTIONS]
\f[R]
.fi
.SH DESCRIPTION
.PP
The fi_info utility can be used to query for available fabric
interfaces.
The utility supports filtering based on a number of options such as
endpoint type, provider name, or supported modes.
Additionally, fi_info can also be used to discover the environment
variables that can be used to tune provider specific parameters.
If no filters are specified, then all available fabric interfaces for
all providers and endpoint types will be returned.
.SH OPTIONS
.SS Filtering
.TP
.B \f[I]\-n, \[en]node=<NAME>\f[R]
Node name or address used to filter interfaces.
Only interfaces which can reach the given node or address will respond.
.TP
.B \f[I]\-P, \[en]port=<PORT>\f[R]
Port number used to filter interfaces.
.TP
.B \f[I]\-c, \[en]caps=<CAP1|CAP2>..\f[R]
Pipe separated list of capabilities used to filter interfaces.
Only interfaces supporting all of the given capabilities will respond.
For more information on capabilities, see fi_getinfo(3).
.TP
.B \f[I]\-m, \[en]mode=<MOD1|MOD2>..\f[R]
Pipe separated list of modes used to filter interfaces.
Only interfaces supporting all of the given modes will respond.
For more information on, modes see fi_getinfo(3).
.TP
.B \f[I]\-t, \[en]ep_type=<EPTYPE>\f[R]
Specifies the type of fabric interface communication desired.
For example, specifying FI_EP_DGRAM would return only interfaces which
support unreliable datagram.
For more information on endpoint types, see fi_endpoint(3).
.TP
.B \f[I]\-a, \[en]addr_format=<FMT>\f[R]
Filter fabric interfaces by their address format.
For example, specifying FI_SOCKADDR_IN would return only interfaces
which use sockaddr_in structures for addressing.
For more information on address formats, see fi_getinfo(3).
.TP
.B \f[I]\-p, \[en]provider=<PROV>\f[R]
Filter fabric interfaces by the provider implementation.
For a list of providers, see the \f[C]\-\-list\f[R] option.
.TP
.B \f[I]\-d, \[en]domain=<DOMAIN>\f[R]
Filter interfaces to only those with the given domain name.
.TP
.B \f[I]\-f, \[en]fabric=<FABRIC>\f[R]
Filter interfaces to only those with the given fabric name.
.SS Discovery
.TP
.B \f[I]\-e, \[en]env\f[R]
List libfabric related environment variables which can be used to enable
extra configuration or tuning.
.TP
.B *\-g [filter]
Same as \-e option, with output limited to environment variables
containing filter as a substring.
.TP
.B \f[I]\-l, \[en]list\f[R]
List available libfabric providers.
.TP
.B \f[I]\-v, \[en]verbose\f[R]
By default, fi_info will display a summary of each of the interfaces
discovered.
If the verbose option is enabled, then all of the contents of the
fi_info structure are displayed.
For more information on the data contained in the fi_info structure, see
fi_getinfo(3).
.TP
.B \f[I]\[en]version\f[R]
Display versioning information.
.SH USAGE EXAMPLES
.IP
.nf
\f[C]
$ fi_info \-n 30.0.11.1 \-p usnic \-t FI_EP_DGRAM
\f[R]
.fi
.PP
This will respond with all fabric interfaces that can reach address
30.0.11.1 using endpoint type FI_EP_DGRAM with the usNIC provider.
.SH OUTPUT
.PP
By default fi_info will output a summary of the fabric interfaces
discovered:
.IP
.nf
\f[C]
$ ./fi_info \-n 30.0.11.1 \-p usnic \-t FI_EP_DGRAM
provider: usnic
    fabric: 30.0.11.0/24
    domain: usnic_2
    version: 1.0
    type: FI_EP_DGRAM
    protocol: FI_PROTO_UDP
\f[R]
.fi
.PP
To see the full fi_info structure, specify the \f[C]\-v\f[R] option.
.SH SEE ALSO
.PP
\f[C]fi_getinfo(3)\f[R], \f[C]fi_endpoint(3)\f[R]
.SH AUTHORS
OpenFabrics.
