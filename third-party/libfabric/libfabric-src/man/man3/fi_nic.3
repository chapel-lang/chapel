.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "fi_nic" "3" "2020\-04\-14" "Libfabric Programmer\[aq]s Manual" "Libfabric v1.10.1"
.hy
.SH NAME
.PP
fi_nic \- Fabric network interface card attributes
.SH NETWORK INTERFACE CARD ATTRIBUTES
.PP
The fid_nic structure defines attributes for a struct fi_info that is
directly associated with underlying networking hardware and may be
returned directly from calling \f[C]fi_getinfo\f[](3).
The format of fid_nic and the related substructures are defined below.
.PP
Note that not all fields of all structures may be available.
Unavailable or fields that are not applicable to the indicated device
will be set to NULL or 0.
.IP
.nf
\f[C]
struct\ fid_nic\ {
\ \ \ \ struct\ fid\ \ \ \ \ \ \ \ \ \ \ \ \ fid;
\ \ \ \ struct\ fi_device_attr\ *device_attr;
\ \ \ \ struct\ fi_bus_attr\ \ \ \ *bus_attr;
\ \ \ \ struct\ fi_link_attr\ \ \ *link_attr;
\ \ \ \ void\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *prov_attr;
};

struct\ fi_device_attr\ {
\ \ \ \ char\ *name;
\ \ \ \ char\ *device_id;
\ \ \ \ char\ *device_version;
\ \ \ \ char\ *vendor_id;
\ \ \ \ char\ *driver;
\ \ \ \ char\ *firmware;
};

struct\ fi_pci_attr\ {
\ \ \ \ uint16_t\ domain_id;
\ \ \ \ uint8_t\ \ bus_id;
\ \ \ \ uint8_t\ \ device_id;
\ \ \ \ uint8_t\ \ function_id;
};

struct\ fi_bus_attr\ {
\ \ \ \ enum\ fi_bus_type\ \ \ \ \ \ \ bus_type;
\ \ \ \ union\ {
\ \ \ \ \ \ \ \ struct\ fi_pci_attr\ pci;
\ \ \ \ }\ attr;
};

struct\ fi_link_attr\ {
\ \ \ \ char\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *address;
\ \ \ \ size_t\ \ \ \ \ \ \ \ \ \ \ \ \ mtu;
\ \ \ \ size_t\ \ \ \ \ \ \ \ \ \ \ \ \ speed;
\ \ \ \ enum\ fi_link_state\ state;
\ \ \ \ char\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *network_type;
};
\f[]
.fi
.SS Device Attributes
.PP
Device attributes are used to identify the specific virtual or hardware
NIC associated with an fi_info structure.
.TP
.B \f[I]name\f[]
The operating system name associated with the device.
This may be a logical network interface name (e.g.
eth0 or eno1) or an absolute filename.
.RS
.RE
.TP
.B \f[I]device_id\f[]
This is a vendor specific identifier for the device or product.
.RS
.RE
.TP
.B \f[I]device_version\f[]
Indicates the version of the device.
.RS
.RE
.TP
.B \f[I]vendor_id\f[]
Indicates the name of the vendor that distributes the NIC.
.RS
.RE
.TP
.B \f[I]driver\f[]
The name of the driver associated with the device
.RS
.RE
.TP
.B \f[I]firmware\f[]
The device\[aq]s firmware version.
.RS
.RE
.SS Bus Attributes
.PP
The bus attributes are used to identify the physical location of the NIC
in the system.
.TP
.B \f[I]bus_type\f[]
Indicates the type of system bus where the NIC is located.
Valid values are FI_BUS_PCI or FI_BUS_UNKNOWN.
.RS
.RE
.TP
.B \f[I]attr.pci.domain_id\f[]
The domain where the PCI bus is located.
Valid only if bus_type is FI_BUS_PCI.
.RS
.RE
.TP
.B \f[I]attr.pci.bus_id\f[]
The PCI bus identifier where the device is located.
Valid only if bus_type is FI_BUS_PCI.
.RS
.RE
.TP
.B \f[I]attr.pci.device_id\f[]
The identifier on the PCI bus where the device is located.
Valid only if bus_type is FI_BUS_PCI.
.RS
.RE
.TP
.B \f[I]attr.pci.function_id\f[]
The function on the device being referenced.
Valid only if bus_type is FI_BUS_PCI.
.RS
.RE
.SS Link Attributes
.PP
Link attributes describe low\-level details about the network connection
into the fabric.
.TP
.B \f[I]address\f[]
The primary link\-level address associated with the NIC, such as a MAC
address.
If multiple addresses are available, only one will be reported.
.RS
.RE
.TP
.B \f[I]mtu\f[]
The maximum transfer unit of link level frames or packets, in bytes.
.RS
.RE
.TP
.B \f[I]speed\f[]
The active link data rate, given in bits per second.
.RS
.RE
.TP
.B \f[I]state\f[]
The current physical port state.
Possible values are FI_LINK_UNKNOWN, FI_LINK_DOWN, and FI_LINK_UP, to
indicate if the port state is unknown or not applicable (unknown),
inactive (down), or active (up).
.RS
.RE
.TP
.B \f[I]network_type\f[]
Specifies the type of network interface currently active, such as
Ethernet or InfiniBand.
.RS
.RE
.SS Provider Attributes
.PP
Provider attributes reference provider specific details of the device.
These attributes are both provider and device specific.
The attributes can be interpreted by \f[C]fi_tostr\f[](3).
Applications may also use the other attribute fields, such as related
fi_fabric_attr: prov_name field, to determine an appropriate structure
to cast the attributes.
The format and definition of this field is outside the scope of the
libfabric core framework, but may be available as part of a provider
specific header file included with libfabric package.
.SH NOTES
.PP
The fid_nic structure is returned as part of a call to
\f[C]fi_getinfo\f[](3).
It is automatically freed as part of calling \f[C]fi_freeinfo\f[](3)
.SH SEE ALSO
.PP
\f[C]fi_getinfo\f[](3)
.SH AUTHORS
OpenFabrics.
