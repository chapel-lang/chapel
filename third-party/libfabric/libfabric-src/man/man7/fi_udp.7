.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "fi_udp" "7" "2022\-12\-11" "Libfabric Programmer\[cq]s Manual" "Libfabric v1.17.1"
.hy
.SH NAME
.PP
fi_udp - The UDP Fabric Provider
.SH OVERVIEW
.PP
The UDP provider is a basic provider that can be used on any system that
supports UDP sockets.
The provider is not intended to provide performance improvements over
regular TCP sockets, but rather to allow application and provider
developers to write, test, and debug their code.
The UDP provider forms the foundation of a utility provider that enables
the implementation of libfabric features over any hardware.
.SH SUPPORTED FEATURES
.PP
The UDP provider supports a minimal set of features useful for sending
and receiving datagram messages over an unreliable endpoint.
.TP
\f[I]Endpoint types\f[R]
The provider supports only endpoint type \f[I]FI_EP_DGRAM\f[R].
.TP
\f[I]Endpoint capabilities\f[R]
The following data transfer interface is supported: \f[I]fi_msg\f[R].
The provider supports standard unicast datagram transfers, as well as
multicast operations.
.TP
\f[I]Modes\f[R]
The provider does not require the use of any mode bits.
.TP
\f[I]Progress\f[R]
The UDP provider supports both \f[I]FI_PROGRESS_AUTO\f[R] and
\f[I]FI_PROGRESS_MANUAL\f[R], with a default set to auto.
However, receive side data buffers are not modified outside of
completion processing routines.
.SH LIMITATIONS
.PP
The UDP provider has hard-coded maximums for supported queue sizes and
data transfers.
These values are reflected in the related fabric attribute structures
.PP
EPs must be bound to both RX and TX CQs.
.PP
No support for selective completions or multi-recv.
.PP
No support for counters.
.SH RUNTIME PARAMETERS
.PP
No runtime parameters are currently defined.
.SH SEE ALSO
.PP
\f[C]fabric\f[R](7), \f[C]fi_provider\f[R](7), \f[C]fi_getinfo\f[R](3)
.SH AUTHORS
OpenFabrics.
