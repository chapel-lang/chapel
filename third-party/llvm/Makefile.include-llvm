include $(THIRD_PARTY_DIR)/llvm/Makefile.share-included

# Enable RV and Polly if they are in the source directory
LLVM_RV_FILE = $(LLVM_DIR)/$(LLVM_SUBDIR)/tools/rv/
LLVM_POLLY_FILE = $(LLVM_DIR)/$(LLVM_SUBDIR)/tools/polly/
ifneq ("$(wildcard $(LLVM_RV_FILE))","")
  CHPL_RV := 1
endif

ifneq ("$(wildcard $(LLVM_POLLY_FILE))","")
  CHPL_POLLY := 1
endif

ifndef LLVM_LLVM_LIBS
  export LLVM_LLVM_LIBS=$(shell test -x $(LLVM_CONFIG) && $(LLVM_CONFIG) --ldflags --system-libs --libs bitreader bitwriter ipo instrumentation option objcarcopts profiledata all-targets coverage coroutines lto)
endif

ifeq ($(LLVM_MAJOR_VERSION_9PLUS),9)
  # -lclangASTMatchers needed for LLVM 9 but not earlier
  LLVM_CLANG_LIBS=-lclangFrontend -lclangSerialization -lclangDriver -lclangCodeGen -lclangParse -lclangSema -lclangAnalysis -lclangEdit -lclangASTMatchers -lclangAST -lclangLex -lclangBasic
else
  LLVM_CLANG_LIBS=-lclangFrontend -lclangSerialization -lclangDriver -lclangCodeGen -lclangParse -lclangSema -lclangAnalysis -lclangEdit -lclangAST -lclangLex -lclangBasic
endif


ifdef CHPL_RV
  LLVM_RV_CFLAGS=-DHAVE_LLVM_RV=1
  LLVM_RV_LIBS=-lRV -lgensleef
endif

LLVM_CXXFLAGS=$(LLVM_CONFIG_CXXFLAGS) -DHAVE_LLVM -Wno-comment $(LLVM_RV_CFLAGS)
LLVM_CFLAGS=$(LLVM_CONFIG_CFLAGS) -DHAVE_LLVM $(LLVM_RV_CFLAGS)

LLVM_INCLUDES=-I$(LLVM_INCLUDE_DIR)
LLVM_LIBS=-L$(LLVM_LIB_DIR) $(LLVM_CLANG_LIBS) $(LLVM_RV_LIBS) $(LLVM_LLVM_LIBS) -Wl,-rpath,$(LLVM_LIB_DIR)

CLANG_CC=$(LLVM_BIN_DIR)/clang
CLANG_CXX=$(LLVM_BIN_DIR)/clang++

