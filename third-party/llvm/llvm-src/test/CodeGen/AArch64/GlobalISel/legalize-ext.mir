# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -run-pass=legalizer %s -o - | FileCheck %s

--- |
  target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
  target triple = "aarch64--"
  define void @test_ext() {
  entry:
    ret void
  }
...

---
name:            test_ext
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
  - { id: 3, class: _ }
  - { id: 4, class: _ }
  - { id: 5, class: _ }
  - { id: 6, class: _ }
  - { id: 7, class: _ }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: _ }
  - { id: 11, class: _ }
  - { id: 12, class: _ }
  - { id: 13, class: _ }
  - { id: 14, class: _ }
  - { id: 15, class: _ }
  - { id: 16, class: _ }
  - { id: 17, class: _ }
  - { id: 18, class: _ }
body: |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3
    ; CHECK-LABEL: name: test_ext
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC]](s32)
    ; CHECK: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC1]](s32)
    ; CHECK: [[TRUNC2:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC2]](s32)
    ; CHECK: [[TRUNC3:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC3]](s32)
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY [[COPY]](s64)
    ; CHECK: $x0 = COPY [[COPY1]](s64)
    ; CHECK: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 255
    ; CHECK: [[COPY2:%[0-9]+]]:_(s64) = COPY [[COPY]](s64)
    ; CHECK: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY2]], [[C]]
    ; CHECK: $x0 = COPY [[AND]](s64)
    ; CHECK: [[COPY3:%[0-9]+]]:_(s64) = COPY [[COPY]](s64)
    ; CHECK: $x0 = COPY [[COPY3]](s64)
    ; CHECK: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 32
    ; CHECK: [[COPY4:%[0-9]+]]:_(s64) = COPY [[COPY]](s64)
    ; CHECK: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY4]], [[C1]]
    ; CHECK: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[C1]]
    ; CHECK: $x0 = COPY [[ASHR]](s64)
    ; CHECK: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK: [[TRUNC4:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[TRUNC4]], [[C2]]
    ; CHECK: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C2]]
    ; CHECK: $w0 = COPY [[ASHR1]](s32)
    ; CHECK: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK: [[TRUNC5:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[AND1:%[0-9]+]]:_(s32) = G_AND [[TRUNC5]], [[C3]]
    ; CHECK: $w0 = COPY [[AND1]](s32)
    ; CHECK: [[TRUNC6:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC6]](s32)
    ; CHECK: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK: [[TRUNC7:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[AND2:%[0-9]+]]:_(s32) = G_AND [[TRUNC7]], [[C4]]
    ; CHECK: $w0 = COPY [[AND2]](s32)
    ; CHECK: [[TRUNC8:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC8]](s32)
    ; CHECK: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CHECK: [[TRUNC9:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[TRUNC9]], [[C5]]
    ; CHECK: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C5]]
    ; CHECK: $w0 = COPY [[ASHR2]](s32)
    ; CHECK: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK: [[TRUNC10:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[COPY5:%[0-9]+]]:_(s32) = COPY [[TRUNC3]]4(s32)
    ; CHECK: [[AND3:%[0-9]+]]:_(s32) = G_AND [[TRUNC3]]1, [[TRUNC3]]2
    ; CHECK: [[COPY6:%[0-9]+]]:_(s32) = COPY [[TRUNC3]]3(s32)
    ; CHECK: $w0 = COPY [[COPY6]](s32)
    ; CHECK: [[TRUNC11:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC11]](s32)
    ; CHECK: [[TRUNC12:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: $w0 = COPY [[TRUNC12]](s32)
    ; CHECK: [[FPEXT:%[0-9]+]]:_(s64) = G_FPEXT [[TRUNC12]](s32)
    ; CHECK: $x0 = COPY [[FPEXT]](s64)
    %0(s64) = COPY $x0

    %1(s1) = G_TRUNC %0
    %19:_(s32) = G_ANYEXT %1
    $w0 = COPY %19
    %2(s8) = G_TRUNC %0
    %20:_(s32) = G_ANYEXT %2
    $w0 = COPY %20
    %3(s16) = G_TRUNC %0
    %21:_(s32) = G_ANYEXT %3
    $w0 = COPY %21
    %4(s32) = G_TRUNC %0
    $w0 = COPY %4

    %5(s64) = G_ANYEXT %1
    $x0 = COPY %5
    %6(s64) = G_ZEXT %2
    $x0 = COPY %6
    %7(s64) = G_ANYEXT %3
    $x0 = COPY %7
    %8(s64) = G_SEXT %4
    $x0 = COPY %8

    %9(s32) = G_SEXT %1
    $w0 = COPY %9
    %10(s32) = G_ZEXT %2
    $w0 = COPY %10
    %11(s32) = G_ANYEXT %3
    $w0 = COPY %11

    %12(s32) = G_ZEXT %1
    $w0 = COPY %12
    %13(s32) = G_ANYEXT %2
    $w0 = COPY %13
    %14(s32) = G_SEXT %3
    $w0 = COPY %14

    %15(s8) = G_ZEXT %1
    %22:_(s32) = G_ANYEXT %15
    $w0 = COPY %22
    %16(s16) = G_ANYEXT %2
    %23:_(s32) = G_ANYEXT %16
    $w0 = COPY %23

    %17(s32) = G_TRUNC  %0
    $w0 = COPY %17
    %18(s64) = G_FPEXT %17
    $x0 = COPY %18
...
