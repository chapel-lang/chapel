# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -run-pass=legalizer %s -o - | FileCheck %s

--- |
  target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
  target triple = "aarch64--"
  define void @test_icmp() {
  entry:
    ret void
  }
...

---
name:            test_icmp
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
  - { id: 3, class: _ }
  - { id: 4, class: _ }
  - { id: 5, class: _ }
  - { id: 6, class: _ }
  - { id: 7, class: _ }
body: |
  bb.0.entry:
    liveins: $x0, $x1, $x2, $x3
    ; CHECK-LABEL: name: test_icmp
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[COPY1]](s64)
    ; CHECK: [[FCMP:%[0-9]+]]:_(s32) = G_FCMP floatpred(oge), [[COPY]](s64), [[COPY1]]
    ; CHECK: $w0 = COPY [[FCMP]](s32)
    ; CHECK: [[FCMP1:%[0-9]+]]:_(s32) = G_FCMP floatpred(uno), [[TRUNC]](s32), [[TRUNC1]]
    ; CHECK: $w0 = COPY [[FCMP1]](s32)
    %0(s64) = COPY $x0
    %1(s64) = COPY $x0

    %2(s32) = G_TRUNC %0
    %3(s32) = G_TRUNC %1

    %4(s32) = G_FCMP floatpred(oge), %0, %1
    $w0 = COPY %4

    %5(s32) = G_FCMP floatpred(uno), %2, %3
    $w0 = COPY %5
...
