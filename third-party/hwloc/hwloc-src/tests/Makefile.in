# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright © 2009-2016 Inria.  All rights reserved.
# Copyright © 2009-2012 Université Bordeaux
# Copyright © 2009-2010 Cisco Systems, Inc.  All rights reserved.
# See COPYING in top-level directory.
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@HWLOC_HAVE_LINUX_TRUE@am__append_1 = linux
check_PROGRAMS = hwloc_list_components$(EXEEXT) hwloc_bitmap$(EXEEXT) \
	hwloc_bitmap_string$(EXEEXT) \
	hwloc_bitmap_compare_inclusion$(EXEEXT) \
	hwloc_get_closest_objs$(EXEEXT) \
	hwloc_get_obj_covering_cpuset$(EXEEXT) \
	hwloc_get_cache_covering_cpuset$(EXEEXT) \
	hwloc_get_largest_objs_inside_cpuset$(EXEEXT) \
	hwloc_get_next_obj_covering_cpuset$(EXEEXT) \
	hwloc_get_obj_inside_cpuset$(EXEEXT) \
	hwloc_get_shared_cache_covering_obj$(EXEEXT) \
	hwloc_get_obj_below_array_by_type$(EXEEXT) \
	hwloc_bitmap_first_last_weight$(EXEEXT) \
	hwloc_bitmap_singlify$(EXEEXT) hwloc_type_depth$(EXEEXT) \
	hwloc_bind$(EXEEXT) hwloc_get_last_cpu_location$(EXEEXT) \
	hwloc_get_area_memlocation$(EXEEXT) \
	hwloc_object_userdata$(EXEEXT) hwloc_synthetic$(EXEEXT) \
	hwloc_custom$(EXEEXT) hwloc_backends$(EXEEXT) \
	hwloc_pci_backend$(EXEEXT) hwloc_is_thissystem$(EXEEXT) \
	hwloc_distances$(EXEEXT) hwloc_groups$(EXEEXT) \
	hwloc_groups2$(EXEEXT) hwloc_insert_misc$(EXEEXT) \
	hwloc_topology_restrict$(EXEEXT) hwloc_topology_dup$(EXEEXT) \
	hwloc_topology_diff$(EXEEXT) hwloc_obj_infos$(EXEEXT) \
	hwloc_iodevs$(EXEEXT) xmlbuffer$(EXEEXT) gl$(EXEEXT) \
	intel-mic$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8)
@HWLOC_HAVE_LINUX_LIBNUMA_TRUE@am__append_2 = linux-libnuma
@HWLOC_HAVE_SCHED_SETAFFINITY_TRUE@am__append_3 = glibc-sched
@HWLOC_HAVE_LIBIBVERBS_TRUE@am__append_4 = openfabrics-verbs
@HWLOC_HAVE_MYRIEXPRESS_TRUE@am__append_5 = myriexpress
@HWLOC_HAVE_OPENCL_TRUE@am__append_6 = opencl
@HWLOC_HAVE_CUDA_TRUE@am__append_7 = cuda
@HWLOC_HAVE_CUDART_TRUE@am__append_8 = cudart
@HWLOC_HAVE_NVML_TRUE@am__append_9 = nvml
@HWLOC_HAVE_PTHREAD_TRUE@am__append_10 = -lpthread
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/hwloc.m4 \
	$(top_srcdir)/config/hwloc_check_attributes.m4 \
	$(top_srcdir)/config/hwloc_check_vendor.m4 \
	$(top_srcdir)/config/hwloc_check_visibility.m4 \
	$(top_srcdir)/config/hwloc_components.m4 \
	$(top_srcdir)/config/hwloc_internal.m4 \
	$(top_srcdir)/config/hwloc_pkg.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/private/autogen/config.h \
	$(top_builddir)/include/hwloc/autogen/config.h
CONFIG_CLEAN_FILES = wrapper.sh
CONFIG_CLEAN_VPATH_FILES =
@HWLOC_HAVE_LINUX_LIBNUMA_TRUE@am__EXEEXT_1 = linux-libnuma$(EXEEXT)
@HWLOC_HAVE_SCHED_SETAFFINITY_TRUE@am__EXEEXT_2 =  \
@HWLOC_HAVE_SCHED_SETAFFINITY_TRUE@	glibc-sched$(EXEEXT)
@HWLOC_HAVE_LIBIBVERBS_TRUE@am__EXEEXT_3 = openfabrics-verbs$(EXEEXT)
@HWLOC_HAVE_MYRIEXPRESS_TRUE@am__EXEEXT_4 = myriexpress$(EXEEXT)
@HWLOC_HAVE_OPENCL_TRUE@am__EXEEXT_5 = opencl$(EXEEXT)
@HWLOC_HAVE_CUDA_TRUE@am__EXEEXT_6 = cuda$(EXEEXT)
@HWLOC_HAVE_CUDART_TRUE@am__EXEEXT_7 = cudart$(EXEEXT)
@HWLOC_HAVE_NVML_TRUE@am__EXEEXT_8 = nvml$(EXEEXT)
cuda_SOURCES = cuda.c
cuda_OBJECTS = cuda.$(OBJEXT)
cuda_DEPENDENCIES = $(LDADD)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
cudart_SOURCES = cudart.c
cudart_OBJECTS = cudart.$(OBJEXT)
cudart_DEPENDENCIES = $(LDADD)
gl_SOURCES = gl.c
gl_OBJECTS = gl.$(OBJEXT)
gl_LDADD = $(LDADD)
gl_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
glibc_sched_SOURCES = glibc-sched.c
glibc_sched_OBJECTS = glibc-sched.$(OBJEXT)
glibc_sched_LDADD = $(LDADD)
glibc_sched_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_backends_SOURCES = hwloc_backends.c
hwloc_backends_OBJECTS = hwloc_backends.$(OBJEXT)
hwloc_backends_LDADD = $(LDADD)
hwloc_backends_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bind_SOURCES = hwloc_bind.c
hwloc_bind_OBJECTS = hwloc_bind.$(OBJEXT)
am__DEPENDENCIES_1 =
hwloc_bind_DEPENDENCIES = $(LDADD) $(am__DEPENDENCIES_1)
hwloc_bitmap_SOURCES = hwloc_bitmap.c
hwloc_bitmap_OBJECTS = hwloc_bitmap.$(OBJEXT)
hwloc_bitmap_LDADD = $(LDADD)
hwloc_bitmap_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_compare_inclusion_SOURCES =  \
	hwloc_bitmap_compare_inclusion.c
hwloc_bitmap_compare_inclusion_OBJECTS =  \
	hwloc_bitmap_compare_inclusion.$(OBJEXT)
hwloc_bitmap_compare_inclusion_LDADD = $(LDADD)
hwloc_bitmap_compare_inclusion_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_first_last_weight_SOURCES =  \
	hwloc_bitmap_first_last_weight.c
hwloc_bitmap_first_last_weight_OBJECTS =  \
	hwloc_bitmap_first_last_weight.$(OBJEXT)
hwloc_bitmap_first_last_weight_LDADD = $(LDADD)
hwloc_bitmap_first_last_weight_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_singlify_SOURCES = hwloc_bitmap_singlify.c
hwloc_bitmap_singlify_OBJECTS = hwloc_bitmap_singlify.$(OBJEXT)
hwloc_bitmap_singlify_LDADD = $(LDADD)
hwloc_bitmap_singlify_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_string_SOURCES = hwloc_bitmap_string.c
hwloc_bitmap_string_OBJECTS = hwloc_bitmap_string.$(OBJEXT)
hwloc_bitmap_string_LDADD = $(LDADD)
hwloc_bitmap_string_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_custom_SOURCES = hwloc_custom.c
hwloc_custom_OBJECTS = hwloc_custom.$(OBJEXT)
hwloc_custom_LDADD = $(LDADD)
hwloc_custom_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_distances_SOURCES = hwloc_distances.c
hwloc_distances_OBJECTS = hwloc_distances.$(OBJEXT)
hwloc_distances_LDADD = $(LDADD)
hwloc_distances_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_area_memlocation_SOURCES = hwloc_get_area_memlocation.c
hwloc_get_area_memlocation_OBJECTS =  \
	hwloc_get_area_memlocation.$(OBJEXT)
hwloc_get_area_memlocation_LDADD = $(LDADD)
hwloc_get_area_memlocation_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_cache_covering_cpuset_SOURCES =  \
	hwloc_get_cache_covering_cpuset.c
hwloc_get_cache_covering_cpuset_OBJECTS =  \
	hwloc_get_cache_covering_cpuset.$(OBJEXT)
hwloc_get_cache_covering_cpuset_LDADD = $(LDADD)
hwloc_get_cache_covering_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_closest_objs_SOURCES = hwloc_get_closest_objs.c
hwloc_get_closest_objs_OBJECTS = hwloc_get_closest_objs.$(OBJEXT)
hwloc_get_closest_objs_LDADD = $(LDADD)
hwloc_get_closest_objs_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_largest_objs_inside_cpuset_SOURCES =  \
	hwloc_get_largest_objs_inside_cpuset.c
hwloc_get_largest_objs_inside_cpuset_OBJECTS =  \
	hwloc_get_largest_objs_inside_cpuset.$(OBJEXT)
hwloc_get_largest_objs_inside_cpuset_LDADD = $(LDADD)
hwloc_get_largest_objs_inside_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_last_cpu_location_SOURCES = hwloc_get_last_cpu_location.c
hwloc_get_last_cpu_location_OBJECTS =  \
	hwloc_get_last_cpu_location.$(OBJEXT)
hwloc_get_last_cpu_location_LDADD = $(LDADD)
hwloc_get_last_cpu_location_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_next_obj_covering_cpuset_SOURCES =  \
	hwloc_get_next_obj_covering_cpuset.c
hwloc_get_next_obj_covering_cpuset_OBJECTS =  \
	hwloc_get_next_obj_covering_cpuset.$(OBJEXT)
hwloc_get_next_obj_covering_cpuset_LDADD = $(LDADD)
hwloc_get_next_obj_covering_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_obj_below_array_by_type_SOURCES =  \
	hwloc_get_obj_below_array_by_type.c
hwloc_get_obj_below_array_by_type_OBJECTS =  \
	hwloc_get_obj_below_array_by_type.$(OBJEXT)
hwloc_get_obj_below_array_by_type_LDADD = $(LDADD)
hwloc_get_obj_below_array_by_type_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_obj_covering_cpuset_SOURCES =  \
	hwloc_get_obj_covering_cpuset.c
hwloc_get_obj_covering_cpuset_OBJECTS =  \
	hwloc_get_obj_covering_cpuset.$(OBJEXT)
hwloc_get_obj_covering_cpuset_LDADD = $(LDADD)
hwloc_get_obj_covering_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_obj_inside_cpuset_SOURCES = hwloc_get_obj_inside_cpuset.c
hwloc_get_obj_inside_cpuset_OBJECTS =  \
	hwloc_get_obj_inside_cpuset.$(OBJEXT)
hwloc_get_obj_inside_cpuset_LDADD = $(LDADD)
hwloc_get_obj_inside_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_shared_cache_covering_obj_SOURCES =  \
	hwloc_get_shared_cache_covering_obj.c
hwloc_get_shared_cache_covering_obj_OBJECTS =  \
	hwloc_get_shared_cache_covering_obj.$(OBJEXT)
hwloc_get_shared_cache_covering_obj_LDADD = $(LDADD)
hwloc_get_shared_cache_covering_obj_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_groups_SOURCES = hwloc_groups.c
hwloc_groups_OBJECTS = hwloc_groups.$(OBJEXT)
hwloc_groups_LDADD = $(LDADD)
hwloc_groups_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_groups2_SOURCES = hwloc_groups2.c
hwloc_groups2_OBJECTS = hwloc_groups2.$(OBJEXT)
hwloc_groups2_LDADD = $(LDADD)
hwloc_groups2_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_insert_misc_SOURCES = hwloc_insert_misc.c
hwloc_insert_misc_OBJECTS = hwloc_insert_misc.$(OBJEXT)
hwloc_insert_misc_LDADD = $(LDADD)
hwloc_insert_misc_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_iodevs_SOURCES = hwloc_iodevs.c
hwloc_iodevs_OBJECTS = hwloc_iodevs.$(OBJEXT)
hwloc_iodevs_LDADD = $(LDADD)
hwloc_iodevs_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_is_thissystem_SOURCES = hwloc_is_thissystem.c
hwloc_is_thissystem_OBJECTS = hwloc_is_thissystem.$(OBJEXT)
hwloc_is_thissystem_LDADD = $(LDADD)
hwloc_is_thissystem_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_list_components_SOURCES = hwloc_list_components.c
hwloc_list_components_OBJECTS = hwloc_list_components.$(OBJEXT)
hwloc_list_components_LDADD = $(LDADD)
hwloc_list_components_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_obj_infos_SOURCES = hwloc_obj_infos.c
hwloc_obj_infos_OBJECTS = hwloc_obj_infos.$(OBJEXT)
hwloc_obj_infos_LDADD = $(LDADD)
hwloc_obj_infos_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_object_userdata_SOURCES = hwloc_object_userdata.c
hwloc_object_userdata_OBJECTS = hwloc_object_userdata.$(OBJEXT)
hwloc_object_userdata_LDADD = $(LDADD)
hwloc_object_userdata_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_pci_backend_SOURCES = hwloc_pci_backend.c
hwloc_pci_backend_OBJECTS = hwloc_pci_backend.$(OBJEXT)
hwloc_pci_backend_LDADD = $(LDADD)
hwloc_pci_backend_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_synthetic_SOURCES = hwloc_synthetic.c
hwloc_synthetic_OBJECTS = hwloc_synthetic.$(OBJEXT)
hwloc_synthetic_LDADD = $(LDADD)
hwloc_synthetic_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_topology_diff_SOURCES = hwloc_topology_diff.c
hwloc_topology_diff_OBJECTS = hwloc_topology_diff.$(OBJEXT)
hwloc_topology_diff_LDADD = $(LDADD)
hwloc_topology_diff_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_topology_dup_SOURCES = hwloc_topology_dup.c
hwloc_topology_dup_OBJECTS = hwloc_topology_dup.$(OBJEXT)
hwloc_topology_dup_LDADD = $(LDADD)
hwloc_topology_dup_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_topology_restrict_SOURCES = hwloc_topology_restrict.c
hwloc_topology_restrict_OBJECTS = hwloc_topology_restrict.$(OBJEXT)
hwloc_topology_restrict_LDADD = $(LDADD)
hwloc_topology_restrict_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_type_depth_SOURCES = hwloc_type_depth.c
hwloc_type_depth_OBJECTS = hwloc_type_depth.$(OBJEXT)
hwloc_type_depth_LDADD = $(LDADD)
hwloc_type_depth_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
intel_mic_SOURCES = intel-mic.c
intel_mic_OBJECTS = intel-mic.$(OBJEXT)
intel_mic_LDADD = $(LDADD)
intel_mic_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
linux_libnuma_SOURCES = linux-libnuma.c
linux_libnuma_OBJECTS = linux-libnuma.$(OBJEXT)
linux_libnuma_DEPENDENCIES = $(LDADD)
myriexpress_SOURCES = myriexpress.c
myriexpress_OBJECTS = myriexpress.$(OBJEXT)
myriexpress_DEPENDENCIES = $(LDADD)
nvml_SOURCES = nvml.c
nvml_OBJECTS = nvml.$(OBJEXT)
nvml_DEPENDENCIES = $(LDADD)
opencl_SOURCES = opencl.c
opencl_OBJECTS = opencl.$(OBJEXT)
opencl_DEPENDENCIES = $(LDADD)
openfabrics_verbs_SOURCES = openfabrics-verbs.c
openfabrics_verbs_OBJECTS = openfabrics-verbs.$(OBJEXT)
openfabrics_verbs_DEPENDENCIES = $(LDADD)
xmlbuffer_SOURCES = xmlbuffer.c
xmlbuffer_OBJECTS = xmlbuffer.$(OBJEXT)
xmlbuffer_LDADD = $(LDADD)
xmlbuffer_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include/private/autogen -I$(top_builddir)/include/hwloc/autogen
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = cuda.c cudart.c gl.c glibc-sched.c hwloc_backends.c \
	hwloc_bind.c hwloc_bitmap.c hwloc_bitmap_compare_inclusion.c \
	hwloc_bitmap_first_last_weight.c hwloc_bitmap_singlify.c \
	hwloc_bitmap_string.c hwloc_custom.c hwloc_distances.c \
	hwloc_get_area_memlocation.c hwloc_get_cache_covering_cpuset.c \
	hwloc_get_closest_objs.c \
	hwloc_get_largest_objs_inside_cpuset.c \
	hwloc_get_last_cpu_location.c \
	hwloc_get_next_obj_covering_cpuset.c \
	hwloc_get_obj_below_array_by_type.c \
	hwloc_get_obj_covering_cpuset.c hwloc_get_obj_inside_cpuset.c \
	hwloc_get_shared_cache_covering_obj.c hwloc_groups.c \
	hwloc_groups2.c hwloc_insert_misc.c hwloc_iodevs.c \
	hwloc_is_thissystem.c hwloc_list_components.c \
	hwloc_obj_infos.c hwloc_object_userdata.c hwloc_pci_backend.c \
	hwloc_synthetic.c hwloc_topology_diff.c hwloc_topology_dup.c \
	hwloc_topology_restrict.c hwloc_type_depth.c intel-mic.c \
	linux-libnuma.c myriexpress.c nvml.c opencl.c \
	openfabrics-verbs.c xmlbuffer.c
DIST_SOURCES = cuda.c cudart.c gl.c glibc-sched.c hwloc_backends.c \
	hwloc_bind.c hwloc_bitmap.c hwloc_bitmap_compare_inclusion.c \
	hwloc_bitmap_first_last_weight.c hwloc_bitmap_singlify.c \
	hwloc_bitmap_string.c hwloc_custom.c hwloc_distances.c \
	hwloc_get_area_memlocation.c hwloc_get_cache_covering_cpuset.c \
	hwloc_get_closest_objs.c \
	hwloc_get_largest_objs_inside_cpuset.c \
	hwloc_get_last_cpu_location.c \
	hwloc_get_next_obj_covering_cpuset.c \
	hwloc_get_obj_below_array_by_type.c \
	hwloc_get_obj_covering_cpuset.c hwloc_get_obj_inside_cpuset.c \
	hwloc_get_shared_cache_covering_obj.c hwloc_groups.c \
	hwloc_groups2.c hwloc_insert_misc.c hwloc_iodevs.c \
	hwloc_is_thissystem.c hwloc_list_components.c \
	hwloc_obj_infos.c hwloc_object_userdata.c hwloc_pci_backend.c \
	hwloc_synthetic.c hwloc_topology_diff.c hwloc_topology_dup.c \
	hwloc_topology_restrict.c hwloc_type_depth.c intel-mic.c \
	linux-libnuma.c myriexpress.c nvml.c opencl.c \
	openfabrics-verbs.c xmlbuffer.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/./config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/./config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/wrapper.sh.in \
	$(top_srcdir)/./config/depcomp \
	$(top_srcdir)/./config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BUNZIPP = @BUNZIPP@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CONFIGURE_DEPENDENCIES = @CONFIGURE_DEPENDENCIES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EPSTOPDF = @EPSTOPDF@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FIG2DEV = @FIG2DEV@
GREP = @GREP@
GS = @GS@
HWLOC_CAIRO_CFLAGS = @HWLOC_CAIRO_CFLAGS@
HWLOC_CAIRO_LIBS = @HWLOC_CAIRO_LIBS@
HWLOC_CFLAGS = @HWLOC_CFLAGS@
HWLOC_CPPFLAGS = @HWLOC_CPPFLAGS@
HWLOC_CUDA_LIBS = @HWLOC_CUDA_LIBS@
HWLOC_DIFF_U = @HWLOC_DIFF_U@
HWLOC_DIFF_W = @HWLOC_DIFF_W@
HWLOC_EMBEDDED_CFLAGS = @HWLOC_EMBEDDED_CFLAGS@
HWLOC_EMBEDDED_CPPFLAGS = @HWLOC_EMBEDDED_CPPFLAGS@
HWLOC_EMBEDDED_LDADD = @HWLOC_EMBEDDED_LDADD@
HWLOC_EMBEDDED_LIBS = @HWLOC_EMBEDDED_LIBS@
HWLOC_GL_LIBS = @HWLOC_GL_LIBS@
HWLOC_HAVE_LIBXML2 = @HWLOC_HAVE_LIBXML2@
HWLOC_HAVE_NVML = @HWLOC_HAVE_NVML@
HWLOC_HAVE_OPENCL = @HWLOC_HAVE_OPENCL@
HWLOC_KERRIGHED_CFLAGS = @HWLOC_KERRIGHED_CFLAGS@
HWLOC_KERRIGHED_LIBS = @HWLOC_KERRIGHED_LIBS@
HWLOC_LDFLAGS = @HWLOC_LDFLAGS@
HWLOC_LIBS = @HWLOC_LIBS@
HWLOC_LIBS_PRIVATE = @HWLOC_LIBS_PRIVATE@
HWLOC_LIBXML2_CFLAGS = @HWLOC_LIBXML2_CFLAGS@
HWLOC_LIBXML2_LIBS = @HWLOC_LIBXML2_LIBS@
HWLOC_LINUX_LIBNUMA_LIBS = @HWLOC_LINUX_LIBNUMA_LIBS@
HWLOC_MS_LIB = @HWLOC_MS_LIB@
HWLOC_MS_LIB_ARCH = @HWLOC_MS_LIB_ARCH@
HWLOC_NVML_LIBS = @HWLOC_NVML_LIBS@
HWLOC_OPENCL_LIBS = @HWLOC_OPENCL_LIBS@
HWLOC_PCIACCESS_CFLAGS = @HWLOC_PCIACCESS_CFLAGS@
HWLOC_PCIACCESS_LIBS = @HWLOC_PCIACCESS_LIBS@
HWLOC_PLUGINS_DIR = @HWLOC_PLUGINS_DIR@
HWLOC_PLUGINS_PATH = @HWLOC_PLUGINS_PATH@
HWLOC_RELEASE_DATE = @HWLOC_RELEASE_DATE@
HWLOC_REQUIRES = @HWLOC_REQUIRES@
HWLOC_TERMCAP_LIBS = @HWLOC_TERMCAP_LIBS@
HWLOC_VERSION = @HWLOC_VERSION@
HWLOC_W3_GENERATOR = @HWLOC_W3_GENERATOR@
HWLOC_X11_CPPFLAGS = @HWLOC_X11_CPPFLAGS@
HWLOC_X11_LIBS = @HWLOC_X11_LIBS@
HWLOC_XML_LOCALIZED = @HWLOC_XML_LOCALIZED@
HWLOC_runstatedir = @HWLOC_runstatedir@
HWLOC_top_builddir = @HWLOC_top_builddir@
HWLOC_top_srcdir = @HWLOC_top_srcdir@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
LYNX = @LYNX@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
W3M = @W3M@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libhwloc_so_version = @libhwloc_so_version@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CFLAGS = $(HWLOC_CFLAGS)
AM_CPPFLAGS = $(HWLOC_CPPFLAGS)
AM_LDFLAGS = $(HWLOC_LDFLAGS)
SUBDIRS = . ports xml $(am__append_1)
DIST_SUBDIRS = ports xml linux rename
LDADD = $(HWLOC_top_builddir)/src/$(hwloc_lib)
LOG_COMPILER = $(builddir)/wrapper.sh
TESTS = $(check_PROGRAMS)
@HWLOC_BUILD_STANDALONE_FALSE@hwloc_lib = libhwloc_embedded.la

# The library has a different name depending on whether we are
# building in standalone or embedded mode.
@HWLOC_BUILD_STANDALONE_TRUE@hwloc_lib = libhwloc.la
linux_libnuma_LDADD = $(LDADD) -lnuma
openfabrics_verbs_LDADD = $(LDADD) -libverbs
myriexpress_LDADD = $(LDADD) -lmyriexpress
opencl_LDADD = $(LDADD) -lOpenCL
cuda_LDADD = $(LDADD) -lcuda
cudart_LDADD = $(LDADD) -lcuda -lcudart
nvml_LDADD = $(LDADD) -lnvidia-ml
hwloc_bind_LDADD = $(LDADD) $(am__append_10)

# ship the embedded test code but don't actually let automake ever
# look at it because we have another configure stuff in there
EXTRA_DIST = embedded/autogen.sh \
		embedded/configure.ac \
		embedded/Makefile.am \
		embedded/do_test.c \
		embedded/main.c \
		embedded/run-embedded-tests.sh \
		embedded/README.txt \
		embedded/config/README.txt

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
wrapper.sh: $(top_builddir)/config.status $(srcdir)/wrapper.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

cuda$(EXEEXT): $(cuda_OBJECTS) $(cuda_DEPENDENCIES) $(EXTRA_cuda_DEPENDENCIES) 
	@rm -f cuda$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cuda_OBJECTS) $(cuda_LDADD) $(LIBS)

cudart$(EXEEXT): $(cudart_OBJECTS) $(cudart_DEPENDENCIES) $(EXTRA_cudart_DEPENDENCIES) 
	@rm -f cudart$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cudart_OBJECTS) $(cudart_LDADD) $(LIBS)

gl$(EXEEXT): $(gl_OBJECTS) $(gl_DEPENDENCIES) $(EXTRA_gl_DEPENDENCIES) 
	@rm -f gl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gl_OBJECTS) $(gl_LDADD) $(LIBS)

glibc-sched$(EXEEXT): $(glibc_sched_OBJECTS) $(glibc_sched_DEPENDENCIES) $(EXTRA_glibc_sched_DEPENDENCIES) 
	@rm -f glibc-sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(glibc_sched_OBJECTS) $(glibc_sched_LDADD) $(LIBS)

hwloc_backends$(EXEEXT): $(hwloc_backends_OBJECTS) $(hwloc_backends_DEPENDENCIES) $(EXTRA_hwloc_backends_DEPENDENCIES) 
	@rm -f hwloc_backends$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_backends_OBJECTS) $(hwloc_backends_LDADD) $(LIBS)

hwloc_bind$(EXEEXT): $(hwloc_bind_OBJECTS) $(hwloc_bind_DEPENDENCIES) $(EXTRA_hwloc_bind_DEPENDENCIES) 
	@rm -f hwloc_bind$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bind_OBJECTS) $(hwloc_bind_LDADD) $(LIBS)

hwloc_bitmap$(EXEEXT): $(hwloc_bitmap_OBJECTS) $(hwloc_bitmap_DEPENDENCIES) $(EXTRA_hwloc_bitmap_DEPENDENCIES) 
	@rm -f hwloc_bitmap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_OBJECTS) $(hwloc_bitmap_LDADD) $(LIBS)

hwloc_bitmap_compare_inclusion$(EXEEXT): $(hwloc_bitmap_compare_inclusion_OBJECTS) $(hwloc_bitmap_compare_inclusion_DEPENDENCIES) $(EXTRA_hwloc_bitmap_compare_inclusion_DEPENDENCIES) 
	@rm -f hwloc_bitmap_compare_inclusion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_compare_inclusion_OBJECTS) $(hwloc_bitmap_compare_inclusion_LDADD) $(LIBS)

hwloc_bitmap_first_last_weight$(EXEEXT): $(hwloc_bitmap_first_last_weight_OBJECTS) $(hwloc_bitmap_first_last_weight_DEPENDENCIES) $(EXTRA_hwloc_bitmap_first_last_weight_DEPENDENCIES) 
	@rm -f hwloc_bitmap_first_last_weight$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_first_last_weight_OBJECTS) $(hwloc_bitmap_first_last_weight_LDADD) $(LIBS)

hwloc_bitmap_singlify$(EXEEXT): $(hwloc_bitmap_singlify_OBJECTS) $(hwloc_bitmap_singlify_DEPENDENCIES) $(EXTRA_hwloc_bitmap_singlify_DEPENDENCIES) 
	@rm -f hwloc_bitmap_singlify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_singlify_OBJECTS) $(hwloc_bitmap_singlify_LDADD) $(LIBS)

hwloc_bitmap_string$(EXEEXT): $(hwloc_bitmap_string_OBJECTS) $(hwloc_bitmap_string_DEPENDENCIES) $(EXTRA_hwloc_bitmap_string_DEPENDENCIES) 
	@rm -f hwloc_bitmap_string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_string_OBJECTS) $(hwloc_bitmap_string_LDADD) $(LIBS)

hwloc_custom$(EXEEXT): $(hwloc_custom_OBJECTS) $(hwloc_custom_DEPENDENCIES) $(EXTRA_hwloc_custom_DEPENDENCIES) 
	@rm -f hwloc_custom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_custom_OBJECTS) $(hwloc_custom_LDADD) $(LIBS)

hwloc_distances$(EXEEXT): $(hwloc_distances_OBJECTS) $(hwloc_distances_DEPENDENCIES) $(EXTRA_hwloc_distances_DEPENDENCIES) 
	@rm -f hwloc_distances$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_distances_OBJECTS) $(hwloc_distances_LDADD) $(LIBS)

hwloc_get_area_memlocation$(EXEEXT): $(hwloc_get_area_memlocation_OBJECTS) $(hwloc_get_area_memlocation_DEPENDENCIES) $(EXTRA_hwloc_get_area_memlocation_DEPENDENCIES) 
	@rm -f hwloc_get_area_memlocation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_area_memlocation_OBJECTS) $(hwloc_get_area_memlocation_LDADD) $(LIBS)

hwloc_get_cache_covering_cpuset$(EXEEXT): $(hwloc_get_cache_covering_cpuset_OBJECTS) $(hwloc_get_cache_covering_cpuset_DEPENDENCIES) $(EXTRA_hwloc_get_cache_covering_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_cache_covering_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_cache_covering_cpuset_OBJECTS) $(hwloc_get_cache_covering_cpuset_LDADD) $(LIBS)

hwloc_get_closest_objs$(EXEEXT): $(hwloc_get_closest_objs_OBJECTS) $(hwloc_get_closest_objs_DEPENDENCIES) $(EXTRA_hwloc_get_closest_objs_DEPENDENCIES) 
	@rm -f hwloc_get_closest_objs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_closest_objs_OBJECTS) $(hwloc_get_closest_objs_LDADD) $(LIBS)

hwloc_get_largest_objs_inside_cpuset$(EXEEXT): $(hwloc_get_largest_objs_inside_cpuset_OBJECTS) $(hwloc_get_largest_objs_inside_cpuset_DEPENDENCIES) $(EXTRA_hwloc_get_largest_objs_inside_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_largest_objs_inside_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_largest_objs_inside_cpuset_OBJECTS) $(hwloc_get_largest_objs_inside_cpuset_LDADD) $(LIBS)

hwloc_get_last_cpu_location$(EXEEXT): $(hwloc_get_last_cpu_location_OBJECTS) $(hwloc_get_last_cpu_location_DEPENDENCIES) $(EXTRA_hwloc_get_last_cpu_location_DEPENDENCIES) 
	@rm -f hwloc_get_last_cpu_location$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_last_cpu_location_OBJECTS) $(hwloc_get_last_cpu_location_LDADD) $(LIBS)

hwloc_get_next_obj_covering_cpuset$(EXEEXT): $(hwloc_get_next_obj_covering_cpuset_OBJECTS) $(hwloc_get_next_obj_covering_cpuset_DEPENDENCIES) $(EXTRA_hwloc_get_next_obj_covering_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_next_obj_covering_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_next_obj_covering_cpuset_OBJECTS) $(hwloc_get_next_obj_covering_cpuset_LDADD) $(LIBS)

hwloc_get_obj_below_array_by_type$(EXEEXT): $(hwloc_get_obj_below_array_by_type_OBJECTS) $(hwloc_get_obj_below_array_by_type_DEPENDENCIES) $(EXTRA_hwloc_get_obj_below_array_by_type_DEPENDENCIES) 
	@rm -f hwloc_get_obj_below_array_by_type$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_obj_below_array_by_type_OBJECTS) $(hwloc_get_obj_below_array_by_type_LDADD) $(LIBS)

hwloc_get_obj_covering_cpuset$(EXEEXT): $(hwloc_get_obj_covering_cpuset_OBJECTS) $(hwloc_get_obj_covering_cpuset_DEPENDENCIES) $(EXTRA_hwloc_get_obj_covering_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_obj_covering_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_obj_covering_cpuset_OBJECTS) $(hwloc_get_obj_covering_cpuset_LDADD) $(LIBS)

hwloc_get_obj_inside_cpuset$(EXEEXT): $(hwloc_get_obj_inside_cpuset_OBJECTS) $(hwloc_get_obj_inside_cpuset_DEPENDENCIES) $(EXTRA_hwloc_get_obj_inside_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_obj_inside_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_obj_inside_cpuset_OBJECTS) $(hwloc_get_obj_inside_cpuset_LDADD) $(LIBS)

hwloc_get_shared_cache_covering_obj$(EXEEXT): $(hwloc_get_shared_cache_covering_obj_OBJECTS) $(hwloc_get_shared_cache_covering_obj_DEPENDENCIES) $(EXTRA_hwloc_get_shared_cache_covering_obj_DEPENDENCIES) 
	@rm -f hwloc_get_shared_cache_covering_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_shared_cache_covering_obj_OBJECTS) $(hwloc_get_shared_cache_covering_obj_LDADD) $(LIBS)

hwloc_groups$(EXEEXT): $(hwloc_groups_OBJECTS) $(hwloc_groups_DEPENDENCIES) $(EXTRA_hwloc_groups_DEPENDENCIES) 
	@rm -f hwloc_groups$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_groups_OBJECTS) $(hwloc_groups_LDADD) $(LIBS)

hwloc_groups2$(EXEEXT): $(hwloc_groups2_OBJECTS) $(hwloc_groups2_DEPENDENCIES) $(EXTRA_hwloc_groups2_DEPENDENCIES) 
	@rm -f hwloc_groups2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_groups2_OBJECTS) $(hwloc_groups2_LDADD) $(LIBS)

hwloc_insert_misc$(EXEEXT): $(hwloc_insert_misc_OBJECTS) $(hwloc_insert_misc_DEPENDENCIES) $(EXTRA_hwloc_insert_misc_DEPENDENCIES) 
	@rm -f hwloc_insert_misc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_insert_misc_OBJECTS) $(hwloc_insert_misc_LDADD) $(LIBS)

hwloc_iodevs$(EXEEXT): $(hwloc_iodevs_OBJECTS) $(hwloc_iodevs_DEPENDENCIES) $(EXTRA_hwloc_iodevs_DEPENDENCIES) 
	@rm -f hwloc_iodevs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_iodevs_OBJECTS) $(hwloc_iodevs_LDADD) $(LIBS)

hwloc_is_thissystem$(EXEEXT): $(hwloc_is_thissystem_OBJECTS) $(hwloc_is_thissystem_DEPENDENCIES) $(EXTRA_hwloc_is_thissystem_DEPENDENCIES) 
	@rm -f hwloc_is_thissystem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_is_thissystem_OBJECTS) $(hwloc_is_thissystem_LDADD) $(LIBS)

hwloc_list_components$(EXEEXT): $(hwloc_list_components_OBJECTS) $(hwloc_list_components_DEPENDENCIES) $(EXTRA_hwloc_list_components_DEPENDENCIES) 
	@rm -f hwloc_list_components$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_list_components_OBJECTS) $(hwloc_list_components_LDADD) $(LIBS)

hwloc_obj_infos$(EXEEXT): $(hwloc_obj_infos_OBJECTS) $(hwloc_obj_infos_DEPENDENCIES) $(EXTRA_hwloc_obj_infos_DEPENDENCIES) 
	@rm -f hwloc_obj_infos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_obj_infos_OBJECTS) $(hwloc_obj_infos_LDADD) $(LIBS)

hwloc_object_userdata$(EXEEXT): $(hwloc_object_userdata_OBJECTS) $(hwloc_object_userdata_DEPENDENCIES) $(EXTRA_hwloc_object_userdata_DEPENDENCIES) 
	@rm -f hwloc_object_userdata$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_object_userdata_OBJECTS) $(hwloc_object_userdata_LDADD) $(LIBS)

hwloc_pci_backend$(EXEEXT): $(hwloc_pci_backend_OBJECTS) $(hwloc_pci_backend_DEPENDENCIES) $(EXTRA_hwloc_pci_backend_DEPENDENCIES) 
	@rm -f hwloc_pci_backend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_pci_backend_OBJECTS) $(hwloc_pci_backend_LDADD) $(LIBS)

hwloc_synthetic$(EXEEXT): $(hwloc_synthetic_OBJECTS) $(hwloc_synthetic_DEPENDENCIES) $(EXTRA_hwloc_synthetic_DEPENDENCIES) 
	@rm -f hwloc_synthetic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_synthetic_OBJECTS) $(hwloc_synthetic_LDADD) $(LIBS)

hwloc_topology_diff$(EXEEXT): $(hwloc_topology_diff_OBJECTS) $(hwloc_topology_diff_DEPENDENCIES) $(EXTRA_hwloc_topology_diff_DEPENDENCIES) 
	@rm -f hwloc_topology_diff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_topology_diff_OBJECTS) $(hwloc_topology_diff_LDADD) $(LIBS)

hwloc_topology_dup$(EXEEXT): $(hwloc_topology_dup_OBJECTS) $(hwloc_topology_dup_DEPENDENCIES) $(EXTRA_hwloc_topology_dup_DEPENDENCIES) 
	@rm -f hwloc_topology_dup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_topology_dup_OBJECTS) $(hwloc_topology_dup_LDADD) $(LIBS)

hwloc_topology_restrict$(EXEEXT): $(hwloc_topology_restrict_OBJECTS) $(hwloc_topology_restrict_DEPENDENCIES) $(EXTRA_hwloc_topology_restrict_DEPENDENCIES) 
	@rm -f hwloc_topology_restrict$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_topology_restrict_OBJECTS) $(hwloc_topology_restrict_LDADD) $(LIBS)

hwloc_type_depth$(EXEEXT): $(hwloc_type_depth_OBJECTS) $(hwloc_type_depth_DEPENDENCIES) $(EXTRA_hwloc_type_depth_DEPENDENCIES) 
	@rm -f hwloc_type_depth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_type_depth_OBJECTS) $(hwloc_type_depth_LDADD) $(LIBS)

intel-mic$(EXEEXT): $(intel_mic_OBJECTS) $(intel_mic_DEPENDENCIES) $(EXTRA_intel_mic_DEPENDENCIES) 
	@rm -f intel-mic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(intel_mic_OBJECTS) $(intel_mic_LDADD) $(LIBS)

linux-libnuma$(EXEEXT): $(linux_libnuma_OBJECTS) $(linux_libnuma_DEPENDENCIES) $(EXTRA_linux_libnuma_DEPENDENCIES) 
	@rm -f linux-libnuma$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linux_libnuma_OBJECTS) $(linux_libnuma_LDADD) $(LIBS)

myriexpress$(EXEEXT): $(myriexpress_OBJECTS) $(myriexpress_DEPENDENCIES) $(EXTRA_myriexpress_DEPENDENCIES) 
	@rm -f myriexpress$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(myriexpress_OBJECTS) $(myriexpress_LDADD) $(LIBS)

nvml$(EXEEXT): $(nvml_OBJECTS) $(nvml_DEPENDENCIES) $(EXTRA_nvml_DEPENDENCIES) 
	@rm -f nvml$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nvml_OBJECTS) $(nvml_LDADD) $(LIBS)

opencl$(EXEEXT): $(opencl_OBJECTS) $(opencl_DEPENDENCIES) $(EXTRA_opencl_DEPENDENCIES) 
	@rm -f opencl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opencl_OBJECTS) $(opencl_LDADD) $(LIBS)

openfabrics-verbs$(EXEEXT): $(openfabrics_verbs_OBJECTS) $(openfabrics_verbs_DEPENDENCIES) $(EXTRA_openfabrics_verbs_DEPENDENCIES) 
	@rm -f openfabrics-verbs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openfabrics_verbs_OBJECTS) $(openfabrics_verbs_LDADD) $(LIBS)

xmlbuffer$(EXEEXT): $(xmlbuffer_OBJECTS) $(xmlbuffer_DEPENDENCIES) $(EXTRA_xmlbuffer_DEPENDENCIES) 
	@rm -f xmlbuffer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xmlbuffer_OBJECTS) $(xmlbuffer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cuda.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cudart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/glibc-sched.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_backends.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_bind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_bitmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_bitmap_compare_inclusion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_bitmap_first_last_weight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_bitmap_singlify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_bitmap_string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_custom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_distances.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_area_memlocation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_cache_covering_cpuset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_closest_objs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_largest_objs_inside_cpuset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_last_cpu_location.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_next_obj_covering_cpuset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_obj_below_array_by_type.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_obj_covering_cpuset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_obj_inside_cpuset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_get_shared_cache_covering_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_groups.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_groups2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_insert_misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_iodevs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_is_thissystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_list_components.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_obj_infos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_object_userdata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_pci_backend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_synthetic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_topology_diff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_topology_dup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_topology_restrict.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hwloc_type_depth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/intel-mic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linux-libnuma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/myriexpress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nvml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opencl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openfabrics-verbs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlbuffer.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
hwloc_list_components.log: hwloc_list_components$(EXEEXT)
	@p='hwloc_list_components$(EXEEXT)'; \
	b='hwloc_list_components'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_bitmap.log: hwloc_bitmap$(EXEEXT)
	@p='hwloc_bitmap$(EXEEXT)'; \
	b='hwloc_bitmap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_bitmap_string.log: hwloc_bitmap_string$(EXEEXT)
	@p='hwloc_bitmap_string$(EXEEXT)'; \
	b='hwloc_bitmap_string'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_bitmap_compare_inclusion.log: hwloc_bitmap_compare_inclusion$(EXEEXT)
	@p='hwloc_bitmap_compare_inclusion$(EXEEXT)'; \
	b='hwloc_bitmap_compare_inclusion'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_closest_objs.log: hwloc_get_closest_objs$(EXEEXT)
	@p='hwloc_get_closest_objs$(EXEEXT)'; \
	b='hwloc_get_closest_objs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_obj_covering_cpuset.log: hwloc_get_obj_covering_cpuset$(EXEEXT)
	@p='hwloc_get_obj_covering_cpuset$(EXEEXT)'; \
	b='hwloc_get_obj_covering_cpuset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_cache_covering_cpuset.log: hwloc_get_cache_covering_cpuset$(EXEEXT)
	@p='hwloc_get_cache_covering_cpuset$(EXEEXT)'; \
	b='hwloc_get_cache_covering_cpuset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_largest_objs_inside_cpuset.log: hwloc_get_largest_objs_inside_cpuset$(EXEEXT)
	@p='hwloc_get_largest_objs_inside_cpuset$(EXEEXT)'; \
	b='hwloc_get_largest_objs_inside_cpuset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_next_obj_covering_cpuset.log: hwloc_get_next_obj_covering_cpuset$(EXEEXT)
	@p='hwloc_get_next_obj_covering_cpuset$(EXEEXT)'; \
	b='hwloc_get_next_obj_covering_cpuset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_obj_inside_cpuset.log: hwloc_get_obj_inside_cpuset$(EXEEXT)
	@p='hwloc_get_obj_inside_cpuset$(EXEEXT)'; \
	b='hwloc_get_obj_inside_cpuset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_shared_cache_covering_obj.log: hwloc_get_shared_cache_covering_obj$(EXEEXT)
	@p='hwloc_get_shared_cache_covering_obj$(EXEEXT)'; \
	b='hwloc_get_shared_cache_covering_obj'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_obj_below_array_by_type.log: hwloc_get_obj_below_array_by_type$(EXEEXT)
	@p='hwloc_get_obj_below_array_by_type$(EXEEXT)'; \
	b='hwloc_get_obj_below_array_by_type'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_bitmap_first_last_weight.log: hwloc_bitmap_first_last_weight$(EXEEXT)
	@p='hwloc_bitmap_first_last_weight$(EXEEXT)'; \
	b='hwloc_bitmap_first_last_weight'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_bitmap_singlify.log: hwloc_bitmap_singlify$(EXEEXT)
	@p='hwloc_bitmap_singlify$(EXEEXT)'; \
	b='hwloc_bitmap_singlify'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_type_depth.log: hwloc_type_depth$(EXEEXT)
	@p='hwloc_type_depth$(EXEEXT)'; \
	b='hwloc_type_depth'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_bind.log: hwloc_bind$(EXEEXT)
	@p='hwloc_bind$(EXEEXT)'; \
	b='hwloc_bind'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_last_cpu_location.log: hwloc_get_last_cpu_location$(EXEEXT)
	@p='hwloc_get_last_cpu_location$(EXEEXT)'; \
	b='hwloc_get_last_cpu_location'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_get_area_memlocation.log: hwloc_get_area_memlocation$(EXEEXT)
	@p='hwloc_get_area_memlocation$(EXEEXT)'; \
	b='hwloc_get_area_memlocation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_object_userdata.log: hwloc_object_userdata$(EXEEXT)
	@p='hwloc_object_userdata$(EXEEXT)'; \
	b='hwloc_object_userdata'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_synthetic.log: hwloc_synthetic$(EXEEXT)
	@p='hwloc_synthetic$(EXEEXT)'; \
	b='hwloc_synthetic'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_custom.log: hwloc_custom$(EXEEXT)
	@p='hwloc_custom$(EXEEXT)'; \
	b='hwloc_custom'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_backends.log: hwloc_backends$(EXEEXT)
	@p='hwloc_backends$(EXEEXT)'; \
	b='hwloc_backends'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_pci_backend.log: hwloc_pci_backend$(EXEEXT)
	@p='hwloc_pci_backend$(EXEEXT)'; \
	b='hwloc_pci_backend'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_is_thissystem.log: hwloc_is_thissystem$(EXEEXT)
	@p='hwloc_is_thissystem$(EXEEXT)'; \
	b='hwloc_is_thissystem'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_distances.log: hwloc_distances$(EXEEXT)
	@p='hwloc_distances$(EXEEXT)'; \
	b='hwloc_distances'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_groups.log: hwloc_groups$(EXEEXT)
	@p='hwloc_groups$(EXEEXT)'; \
	b='hwloc_groups'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_groups2.log: hwloc_groups2$(EXEEXT)
	@p='hwloc_groups2$(EXEEXT)'; \
	b='hwloc_groups2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_insert_misc.log: hwloc_insert_misc$(EXEEXT)
	@p='hwloc_insert_misc$(EXEEXT)'; \
	b='hwloc_insert_misc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_topology_restrict.log: hwloc_topology_restrict$(EXEEXT)
	@p='hwloc_topology_restrict$(EXEEXT)'; \
	b='hwloc_topology_restrict'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_topology_dup.log: hwloc_topology_dup$(EXEEXT)
	@p='hwloc_topology_dup$(EXEEXT)'; \
	b='hwloc_topology_dup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_topology_diff.log: hwloc_topology_diff$(EXEEXT)
	@p='hwloc_topology_diff$(EXEEXT)'; \
	b='hwloc_topology_diff'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_obj_infos.log: hwloc_obj_infos$(EXEEXT)
	@p='hwloc_obj_infos$(EXEEXT)'; \
	b='hwloc_obj_infos'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hwloc_iodevs.log: hwloc_iodevs$(EXEEXT)
	@p='hwloc_iodevs$(EXEEXT)'; \
	b='hwloc_iodevs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xmlbuffer.log: xmlbuffer$(EXEEXT)
	@p='xmlbuffer$(EXEEXT)'; \
	b='xmlbuffer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gl.log: gl$(EXEEXT)
	@p='gl$(EXEEXT)'; \
	b='gl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
intel-mic.log: intel-mic$(EXEEXT)
	@p='intel-mic$(EXEEXT)'; \
	b='intel-mic'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
linux-libnuma.log: linux-libnuma$(EXEEXT)
	@p='linux-libnuma$(EXEEXT)'; \
	b='linux-libnuma'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibc-sched.log: glibc-sched$(EXEEXT)
	@p='glibc-sched$(EXEEXT)'; \
	b='glibc-sched'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openfabrics-verbs.log: openfabrics-verbs$(EXEEXT)
	@p='openfabrics-verbs$(EXEEXT)'; \
	b='openfabrics-verbs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
myriexpress.log: myriexpress$(EXEEXT)
	@p='myriexpress$(EXEEXT)'; \
	b='myriexpress'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opencl.log: opencl$(EXEEXT)
	@p='opencl$(EXEEXT)'; \
	b='opencl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cuda.log: cuda$(EXEEXT)
	@p='cuda$(EXEEXT)'; \
	b='cuda'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cudart.log: cudart$(EXEEXT)
	@p='cudart$(EXEEXT)'; \
	b='cudart'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nvml.log: nvml$(EXEEXT)
	@p='nvml$(EXEEXT)'; \
	b='nvml'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
