# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright © 2009-2016 Inria.  All rights reserved.
# Copyright © 2009, 2011-2012 Université Bordeaux
# Copyright © 2009-2010 Cisco Systems, Inc.  All rights reserved.
# See COPYING in top-level directory.
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = tests/ports
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/hwloc.m4 \
	$(top_srcdir)/config/hwloc_check_attributes.m4 \
	$(top_srcdir)/config/hwloc_check_vendor.m4 \
	$(top_srcdir)/config/hwloc_check_visibility.m4 \
	$(top_srcdir)/config/hwloc_components.m4 \
	$(top_srcdir)/config/hwloc_internal.m4 \
	$(top_srcdir)/config/hwloc_pkg.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/private/autogen/config.h \
	$(top_builddir)/include/hwloc/autogen/config.h
CONFIG_CLEAN_FILES = topology-solaris.c topology-solaris-chiptype.c \
	topology-aix.c topology-osf.c topology-windows.c \
	topology-darwin.c topology-freebsd.c topology-netbsd.c \
	topology-hpux.c topology-bgq.c topology-opencl.c \
	topology-cuda.c topology-nvml.c topology-gl.c
CONFIG_CLEAN_VPATH_FILES =
libhwloc_port_aix_la_LIBADD =
am_libhwloc_port_aix_la_OBJECTS =
nodist_libhwloc_port_aix_la_OBJECTS =  \
	libhwloc_port_aix_la-topology-aix.lo
libhwloc_port_aix_la_OBJECTS = $(am_libhwloc_port_aix_la_OBJECTS) \
	$(nodist_libhwloc_port_aix_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_aix_la_rpath =
libhwloc_port_bgq_la_LIBADD =
am_libhwloc_port_bgq_la_OBJECTS =
nodist_libhwloc_port_bgq_la_OBJECTS =  \
	libhwloc_port_bgq_la-topology-bgq.lo
libhwloc_port_bgq_la_OBJECTS = $(am_libhwloc_port_bgq_la_OBJECTS) \
	$(nodist_libhwloc_port_bgq_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_bgq_la_rpath =
libhwloc_port_cuda_la_LIBADD =
am_libhwloc_port_cuda_la_OBJECTS =
nodist_libhwloc_port_cuda_la_OBJECTS =  \
	libhwloc_port_cuda_la-topology-cuda.lo
libhwloc_port_cuda_la_OBJECTS = $(am_libhwloc_port_cuda_la_OBJECTS) \
	$(nodist_libhwloc_port_cuda_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_cuda_la_rpath =
libhwloc_port_darwin_la_LIBADD =
am_libhwloc_port_darwin_la_OBJECTS =
nodist_libhwloc_port_darwin_la_OBJECTS =  \
	libhwloc_port_darwin_la-topology-darwin.lo
libhwloc_port_darwin_la_OBJECTS =  \
	$(am_libhwloc_port_darwin_la_OBJECTS) \
	$(nodist_libhwloc_port_darwin_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_darwin_la_rpath =
libhwloc_port_freebsd_la_LIBADD =
am_libhwloc_port_freebsd_la_OBJECTS =
nodist_libhwloc_port_freebsd_la_OBJECTS =  \
	libhwloc_port_freebsd_la-topology-freebsd.lo
libhwloc_port_freebsd_la_OBJECTS =  \
	$(am_libhwloc_port_freebsd_la_OBJECTS) \
	$(nodist_libhwloc_port_freebsd_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_freebsd_la_rpath =
libhwloc_port_gl_la_LIBADD =
am_libhwloc_port_gl_la_OBJECTS =
nodist_libhwloc_port_gl_la_OBJECTS =  \
	libhwloc_port_gl_la-topology-gl.lo
libhwloc_port_gl_la_OBJECTS = $(am_libhwloc_port_gl_la_OBJECTS) \
	$(nodist_libhwloc_port_gl_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_gl_la_rpath =
libhwloc_port_hpux_la_LIBADD =
am_libhwloc_port_hpux_la_OBJECTS =
nodist_libhwloc_port_hpux_la_OBJECTS =  \
	libhwloc_port_hpux_la-topology-hpux.lo
libhwloc_port_hpux_la_OBJECTS = $(am_libhwloc_port_hpux_la_OBJECTS) \
	$(nodist_libhwloc_port_hpux_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_hpux_la_rpath =
libhwloc_port_netbsd_la_LIBADD =
am_libhwloc_port_netbsd_la_OBJECTS =
nodist_libhwloc_port_netbsd_la_OBJECTS =  \
	libhwloc_port_netbsd_la-topology-netbsd.lo
libhwloc_port_netbsd_la_OBJECTS =  \
	$(am_libhwloc_port_netbsd_la_OBJECTS) \
	$(nodist_libhwloc_port_netbsd_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_netbsd_la_rpath =
libhwloc_port_nvml_la_LIBADD =
am_libhwloc_port_nvml_la_OBJECTS =
nodist_libhwloc_port_nvml_la_OBJECTS =  \
	libhwloc_port_nvml_la-topology-nvml.lo
libhwloc_port_nvml_la_OBJECTS = $(am_libhwloc_port_nvml_la_OBJECTS) \
	$(nodist_libhwloc_port_nvml_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_nvml_la_rpath =
libhwloc_port_opencl_la_LIBADD =
am_libhwloc_port_opencl_la_OBJECTS =
nodist_libhwloc_port_opencl_la_OBJECTS =  \
	libhwloc_port_opencl_la-topology-opencl.lo
libhwloc_port_opencl_la_OBJECTS =  \
	$(am_libhwloc_port_opencl_la_OBJECTS) \
	$(nodist_libhwloc_port_opencl_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_opencl_la_rpath =
libhwloc_port_osf_la_LIBADD =
am_libhwloc_port_osf_la_OBJECTS =
nodist_libhwloc_port_osf_la_OBJECTS =  \
	libhwloc_port_osf_la-topology-osf.lo
libhwloc_port_osf_la_OBJECTS = $(am_libhwloc_port_osf_la_OBJECTS) \
	$(nodist_libhwloc_port_osf_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_osf_la_rpath =
libhwloc_port_solaris_la_LIBADD =
am_libhwloc_port_solaris_la_OBJECTS =
nodist_libhwloc_port_solaris_la_OBJECTS =  \
	libhwloc_port_solaris_la-topology-solaris.lo \
	libhwloc_port_solaris_la-topology-solaris-chiptype.lo
libhwloc_port_solaris_la_OBJECTS =  \
	$(am_libhwloc_port_solaris_la_OBJECTS) \
	$(nodist_libhwloc_port_solaris_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_solaris_la_rpath =
libhwloc_port_windows_la_LIBADD =
am_libhwloc_port_windows_la_OBJECTS =
nodist_libhwloc_port_windows_la_OBJECTS =  \
	libhwloc_port_windows_la-topology-windows.lo
libhwloc_port_windows_la_OBJECTS =  \
	$(am_libhwloc_port_windows_la_OBJECTS) \
	$(nodist_libhwloc_port_windows_la_OBJECTS)
@HWLOC_HAVE_LINUX_TRUE@am_libhwloc_port_windows_la_rpath =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include/private/autogen -I$(top_builddir)/include/hwloc/autogen
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libhwloc_port_aix_la_SOURCES) \
	$(nodist_libhwloc_port_aix_la_SOURCES) \
	$(libhwloc_port_bgq_la_SOURCES) \
	$(nodist_libhwloc_port_bgq_la_SOURCES) \
	$(libhwloc_port_cuda_la_SOURCES) \
	$(nodist_libhwloc_port_cuda_la_SOURCES) \
	$(libhwloc_port_darwin_la_SOURCES) \
	$(nodist_libhwloc_port_darwin_la_SOURCES) \
	$(libhwloc_port_freebsd_la_SOURCES) \
	$(nodist_libhwloc_port_freebsd_la_SOURCES) \
	$(libhwloc_port_gl_la_SOURCES) \
	$(nodist_libhwloc_port_gl_la_SOURCES) \
	$(libhwloc_port_hpux_la_SOURCES) \
	$(nodist_libhwloc_port_hpux_la_SOURCES) \
	$(libhwloc_port_netbsd_la_SOURCES) \
	$(nodist_libhwloc_port_netbsd_la_SOURCES) \
	$(libhwloc_port_nvml_la_SOURCES) \
	$(nodist_libhwloc_port_nvml_la_SOURCES) \
	$(libhwloc_port_opencl_la_SOURCES) \
	$(nodist_libhwloc_port_opencl_la_SOURCES) \
	$(libhwloc_port_osf_la_SOURCES) \
	$(nodist_libhwloc_port_osf_la_SOURCES) \
	$(libhwloc_port_solaris_la_SOURCES) \
	$(nodist_libhwloc_port_solaris_la_SOURCES) \
	$(libhwloc_port_windows_la_SOURCES) \
	$(nodist_libhwloc_port_windows_la_SOURCES)
DIST_SOURCES = $(libhwloc_port_aix_la_SOURCES) \
	$(libhwloc_port_bgq_la_SOURCES) \
	$(libhwloc_port_cuda_la_SOURCES) \
	$(libhwloc_port_darwin_la_SOURCES) \
	$(libhwloc_port_freebsd_la_SOURCES) \
	$(libhwloc_port_gl_la_SOURCES) \
	$(libhwloc_port_hpux_la_SOURCES) \
	$(libhwloc_port_netbsd_la_SOURCES) \
	$(libhwloc_port_nvml_la_SOURCES) \
	$(libhwloc_port_opencl_la_SOURCES) \
	$(libhwloc_port_osf_la_SOURCES) \
	$(libhwloc_port_solaris_la_SOURCES) \
	$(libhwloc_port_windows_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/./config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BUNZIPP = @BUNZIPP@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CONFIGURE_DEPENDENCIES = @CONFIGURE_DEPENDENCIES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EPSTOPDF = @EPSTOPDF@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FIG2DEV = @FIG2DEV@
GREP = @GREP@
GS = @GS@
HWLOC_CAIRO_CFLAGS = @HWLOC_CAIRO_CFLAGS@
HWLOC_CAIRO_LIBS = @HWLOC_CAIRO_LIBS@
HWLOC_CFLAGS = @HWLOC_CFLAGS@
HWLOC_CPPFLAGS = @HWLOC_CPPFLAGS@
HWLOC_CUDA_LIBS = @HWLOC_CUDA_LIBS@
HWLOC_DIFF_U = @HWLOC_DIFF_U@
HWLOC_DIFF_W = @HWLOC_DIFF_W@
HWLOC_EMBEDDED_CFLAGS = @HWLOC_EMBEDDED_CFLAGS@
HWLOC_EMBEDDED_CPPFLAGS = @HWLOC_EMBEDDED_CPPFLAGS@
HWLOC_EMBEDDED_LDADD = @HWLOC_EMBEDDED_LDADD@
HWLOC_EMBEDDED_LIBS = @HWLOC_EMBEDDED_LIBS@
HWLOC_GL_LIBS = @HWLOC_GL_LIBS@
HWLOC_HAVE_LIBXML2 = @HWLOC_HAVE_LIBXML2@
HWLOC_HAVE_NVML = @HWLOC_HAVE_NVML@
HWLOC_HAVE_OPENCL = @HWLOC_HAVE_OPENCL@
HWLOC_KERRIGHED_CFLAGS = @HWLOC_KERRIGHED_CFLAGS@
HWLOC_KERRIGHED_LIBS = @HWLOC_KERRIGHED_LIBS@
HWLOC_LDFLAGS = @HWLOC_LDFLAGS@
HWLOC_LIBS = @HWLOC_LIBS@
HWLOC_LIBS_PRIVATE = @HWLOC_LIBS_PRIVATE@
HWLOC_LIBXML2_CFLAGS = @HWLOC_LIBXML2_CFLAGS@
HWLOC_LIBXML2_LIBS = @HWLOC_LIBXML2_LIBS@
HWLOC_LINUX_LIBNUMA_LIBS = @HWLOC_LINUX_LIBNUMA_LIBS@
HWLOC_MS_LIB = @HWLOC_MS_LIB@
HWLOC_MS_LIB_ARCH = @HWLOC_MS_LIB_ARCH@
HWLOC_NVML_LIBS = @HWLOC_NVML_LIBS@
HWLOC_OPENCL_LIBS = @HWLOC_OPENCL_LIBS@
HWLOC_PCIACCESS_CFLAGS = @HWLOC_PCIACCESS_CFLAGS@
HWLOC_PCIACCESS_LIBS = @HWLOC_PCIACCESS_LIBS@
HWLOC_PLUGINS_DIR = @HWLOC_PLUGINS_DIR@
HWLOC_PLUGINS_PATH = @HWLOC_PLUGINS_PATH@
HWLOC_RELEASE_DATE = @HWLOC_RELEASE_DATE@
HWLOC_REQUIRES = @HWLOC_REQUIRES@
HWLOC_TERMCAP_LIBS = @HWLOC_TERMCAP_LIBS@
HWLOC_VERSION = @HWLOC_VERSION@
HWLOC_W3_GENERATOR = @HWLOC_W3_GENERATOR@
HWLOC_X11_CPPFLAGS = @HWLOC_X11_CPPFLAGS@
HWLOC_X11_LIBS = @HWLOC_X11_LIBS@
HWLOC_XML_LOCALIZED = @HWLOC_XML_LOCALIZED@
HWLOC_runstatedir = @HWLOC_runstatedir@
HWLOC_top_builddir = @HWLOC_top_builddir@
HWLOC_top_srcdir = @HWLOC_top_srcdir@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
LYNX = @LYNX@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
W3M = @W3M@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libhwloc_so_version = @libhwloc_so_version@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CFLAGS = $(HWLOC_CFLAGS)
AM_CPPFLAGS = $(HWLOC_CPPFLAGS)
AM_LDFLAGS = $(HWLOC_LDFLAGS)
SRC = $(HWLOC_top_srcdir)/src
@HWLOC_HAVE_LINUX_TRUE@check_LTLIBRARIES = \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-aix.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-bgq.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-darwin.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-freebsd.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-hpux.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-netbsd.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-osf.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-solaris.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-windows.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-opencl.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-cuda.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-nvml.la \
@HWLOC_HAVE_LINUX_TRUE@	libhwloc-port-gl.la


# Note that AC_CONFIG_LINKS sets up the sym links for the files in
# this directory (back to the $top_srcdir/src directory).  So if you
# need more sym-linked files in here, go edit configure.ac.  Note that
# we have to use sym links in here rather than just directly
# referencing the files via $HWLOC_top_srcdir/src/foo.c because of
# dependencies issues when using the Automake option "subdir-objects".
# We nodist these because they're created by configure.
common_CPPFLAGS = \
	$(HWLOC_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/include \
	-DHWLOC_COMPILE_PORTS \
	-DHWLOC_INSIDE_LIBHWLOC

nodist_libhwloc_port_aix_la_SOURCES = topology-aix.c
libhwloc_port_aix_la_SOURCES = \
	include/aix/procinfo.h \
	include/aix/sys/processor.h \
	include/aix/sys/rset.h \
	include/aix/sys/systemcfg.h \
	include/aix/sys/thread.h

libhwloc_port_aix_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/aix \
	-DHWLOC_AIX_SYS \
	-DHWLOC_HAVE_PTHREAD_GETTHRDS_NP

nodist_libhwloc_port_bgq_la_SOURCES = topology-bgq.c
libhwloc_port_bgq_la_SOURCES = \
	include/bgq/spi/include/kernel/location.h \
	include/bgq/spi/include/kernel/process.h

libhwloc_port_bgq_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/bgq \
	-DHWLOC_BGQ_SYS

nodist_libhwloc_port_darwin_la_SOURCES = topology-darwin.c
libhwloc_port_darwin_la_SOURCES = \
	include/darwin/sys/sysctl.h

libhwloc_port_darwin_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/darwin \
	-DHWLOC_DARWIN_SYS

nodist_libhwloc_port_freebsd_la_SOURCES = topology-freebsd.c
libhwloc_port_freebsd_la_SOURCES = \
	include/freebsd/pthread.h \
	include/freebsd/pthread_np.h \
	include/freebsd/sys/cpuset.h \
	include/freebsd/sys/sysctl.h

libhwloc_port_freebsd_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/freebsd \
	-DHWLOC_FREEBSD_SYS \
	-DHAVE_PTHREAD_NP_H \
	-DHAVE_SYS_CPUSET_H \
	-DHAVE_SYS_SYSCTL_H \
	-DHAVE_SYSCTL \
	-DHAVE_CPUSET_SETAFFINITY \
	-Dhwloc_thread_t=pthread_t \
	-DHAVE_DECL_PTHREAD_SETAFFINITY_NP=1 \
	-DHAVE_DECL_PTHREAD_GETAFFINITY_NP=1 \
	-DHAVE_CPUSET_SETID

nodist_libhwloc_port_hpux_la_SOURCES = topology-hpux.c
libhwloc_port_hpux_la_SOURCES = \
	include/hpux/sys/mpctl.h

libhwloc_port_hpux_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/hpux \
	-DHWLOC_HPUX_SYS

nodist_libhwloc_port_netbsd_la_SOURCES = topology-netbsd.c
libhwloc_port_netbsd_la_SOURCES = \
	include/netbsd/pthread.h \
	include/netbsd/sched.h \
	include/netbsd/sys/sysctl.h

libhwloc_port_netbsd_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/netbsd \
	-DHWLOC_NETBSD_SYS \
	-DHAVE_SYS_SYSCTL_H \
	-DHAVE_SYSCTL

nodist_libhwloc_port_osf_la_SOURCES = topology-osf.c
libhwloc_port_osf_la_SOURCES = \
	include/osf/cpuset.h \
	include/osf/numa.h \
	include/osf/radset.h

libhwloc_port_osf_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/osf \
	-DHWLOC_OSF_SYS

nodist_libhwloc_port_solaris_la_SOURCES = topology-solaris.c topology-solaris-chiptype.c
libhwloc_port_solaris_la_SOURCES = \
	include/solaris/kstat.h \
	include/solaris/picl.h \
	include/solaris/sys/lgrp_user.h \
	include/solaris/sys/processor.h \
	include/solaris/sys/procset.h \
	include/solaris/sys/systeminfo.h

libhwloc_port_solaris_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/solaris \
	-DHWLOC_SOLARIS_SYS \
	-DHAVE_LIBLGRP \
	-DHAVE_DECL_LGRP_LATENCY_COOKIE=1 \
	-DHAVE_LIBKSTAT \
	-DHAVE_PICL_H

nodist_libhwloc_port_windows_la_SOURCES = topology-windows.c
libhwloc_port_windows_la_SOURCES = \
	include/windows/windows.h

libhwloc_port_windows_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/windows \
	-DHWLOC_WIN_SYS

nodist_libhwloc_port_opencl_la_SOURCES = topology-opencl.c
libhwloc_port_opencl_la_SOURCES = \
	include/opencl/CL/cl_ext.h

libhwloc_port_opencl_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/opencl

nodist_libhwloc_port_cuda_la_SOURCES = topology-cuda.c
libhwloc_port_cuda_la_SOURCES = \
	include/cuda/cuda.h \
	include/cuda/cuda_runtime_api.h

libhwloc_port_cuda_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/cuda

nodist_libhwloc_port_nvml_la_SOURCES = topology-nvml.c
libhwloc_port_nvml_la_SOURCES = \
	include/nvml/nvml.h

libhwloc_port_nvml_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/nvml

nodist_libhwloc_port_gl_la_SOURCES = topology-gl.c
libhwloc_port_gl_la_SOURCES = \
	include/gl/X11/Xlib.h \
	include/gl/NVCtrl/NVCtrl.h \
	include/gl/NVCtrl/NVCtrlLib.h

libhwloc_port_gl_la_CPPFLAGS = $(common_CPPFLAGS) \
	-I$(HWLOC_top_srcdir)/tests/ports/include/gl

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/ports/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/ports/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libhwloc-port-aix.la: $(libhwloc_port_aix_la_OBJECTS) $(libhwloc_port_aix_la_DEPENDENCIES) $(EXTRA_libhwloc_port_aix_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_aix_la_rpath) $(libhwloc_port_aix_la_OBJECTS) $(libhwloc_port_aix_la_LIBADD) $(LIBS)

libhwloc-port-bgq.la: $(libhwloc_port_bgq_la_OBJECTS) $(libhwloc_port_bgq_la_DEPENDENCIES) $(EXTRA_libhwloc_port_bgq_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_bgq_la_rpath) $(libhwloc_port_bgq_la_OBJECTS) $(libhwloc_port_bgq_la_LIBADD) $(LIBS)

libhwloc-port-cuda.la: $(libhwloc_port_cuda_la_OBJECTS) $(libhwloc_port_cuda_la_DEPENDENCIES) $(EXTRA_libhwloc_port_cuda_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_cuda_la_rpath) $(libhwloc_port_cuda_la_OBJECTS) $(libhwloc_port_cuda_la_LIBADD) $(LIBS)

libhwloc-port-darwin.la: $(libhwloc_port_darwin_la_OBJECTS) $(libhwloc_port_darwin_la_DEPENDENCIES) $(EXTRA_libhwloc_port_darwin_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_darwin_la_rpath) $(libhwloc_port_darwin_la_OBJECTS) $(libhwloc_port_darwin_la_LIBADD) $(LIBS)

libhwloc-port-freebsd.la: $(libhwloc_port_freebsd_la_OBJECTS) $(libhwloc_port_freebsd_la_DEPENDENCIES) $(EXTRA_libhwloc_port_freebsd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_freebsd_la_rpath) $(libhwloc_port_freebsd_la_OBJECTS) $(libhwloc_port_freebsd_la_LIBADD) $(LIBS)

libhwloc-port-gl.la: $(libhwloc_port_gl_la_OBJECTS) $(libhwloc_port_gl_la_DEPENDENCIES) $(EXTRA_libhwloc_port_gl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_gl_la_rpath) $(libhwloc_port_gl_la_OBJECTS) $(libhwloc_port_gl_la_LIBADD) $(LIBS)

libhwloc-port-hpux.la: $(libhwloc_port_hpux_la_OBJECTS) $(libhwloc_port_hpux_la_DEPENDENCIES) $(EXTRA_libhwloc_port_hpux_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_hpux_la_rpath) $(libhwloc_port_hpux_la_OBJECTS) $(libhwloc_port_hpux_la_LIBADD) $(LIBS)

libhwloc-port-netbsd.la: $(libhwloc_port_netbsd_la_OBJECTS) $(libhwloc_port_netbsd_la_DEPENDENCIES) $(EXTRA_libhwloc_port_netbsd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_netbsd_la_rpath) $(libhwloc_port_netbsd_la_OBJECTS) $(libhwloc_port_netbsd_la_LIBADD) $(LIBS)

libhwloc-port-nvml.la: $(libhwloc_port_nvml_la_OBJECTS) $(libhwloc_port_nvml_la_DEPENDENCIES) $(EXTRA_libhwloc_port_nvml_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_nvml_la_rpath) $(libhwloc_port_nvml_la_OBJECTS) $(libhwloc_port_nvml_la_LIBADD) $(LIBS)

libhwloc-port-opencl.la: $(libhwloc_port_opencl_la_OBJECTS) $(libhwloc_port_opencl_la_DEPENDENCIES) $(EXTRA_libhwloc_port_opencl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_opencl_la_rpath) $(libhwloc_port_opencl_la_OBJECTS) $(libhwloc_port_opencl_la_LIBADD) $(LIBS)

libhwloc-port-osf.la: $(libhwloc_port_osf_la_OBJECTS) $(libhwloc_port_osf_la_DEPENDENCIES) $(EXTRA_libhwloc_port_osf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_osf_la_rpath) $(libhwloc_port_osf_la_OBJECTS) $(libhwloc_port_osf_la_LIBADD) $(LIBS)

libhwloc-port-solaris.la: $(libhwloc_port_solaris_la_OBJECTS) $(libhwloc_port_solaris_la_DEPENDENCIES) $(EXTRA_libhwloc_port_solaris_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_solaris_la_rpath) $(libhwloc_port_solaris_la_OBJECTS) $(libhwloc_port_solaris_la_LIBADD) $(LIBS)

libhwloc-port-windows.la: $(libhwloc_port_windows_la_OBJECTS) $(libhwloc_port_windows_la_DEPENDENCIES) $(EXTRA_libhwloc_port_windows_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_port_windows_la_rpath) $(libhwloc_port_windows_la_OBJECTS) $(libhwloc_port_windows_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_aix_la-topology-aix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_bgq_la-topology-bgq.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_cuda_la-topology-cuda.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_darwin_la-topology-darwin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_freebsd_la-topology-freebsd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_gl_la-topology-gl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_hpux_la-topology-hpux.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_netbsd_la-topology-netbsd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_nvml_la-topology-nvml.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_opencl_la-topology-opencl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_osf_la-topology-osf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_solaris_la-topology-solaris-chiptype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_solaris_la-topology-solaris.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libhwloc_port_windows_la-topology-windows.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libhwloc_port_aix_la-topology-aix.lo: topology-aix.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_aix_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_aix_la-topology-aix.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_aix_la-topology-aix.Tpo -c -o libhwloc_port_aix_la-topology-aix.lo `test -f 'topology-aix.c' || echo '$(srcdir)/'`topology-aix.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_aix_la-topology-aix.Tpo $(DEPDIR)/libhwloc_port_aix_la-topology-aix.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-aix.c' object='libhwloc_port_aix_la-topology-aix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_aix_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_aix_la-topology-aix.lo `test -f 'topology-aix.c' || echo '$(srcdir)/'`topology-aix.c

libhwloc_port_bgq_la-topology-bgq.lo: topology-bgq.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_bgq_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_bgq_la-topology-bgq.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_bgq_la-topology-bgq.Tpo -c -o libhwloc_port_bgq_la-topology-bgq.lo `test -f 'topology-bgq.c' || echo '$(srcdir)/'`topology-bgq.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_bgq_la-topology-bgq.Tpo $(DEPDIR)/libhwloc_port_bgq_la-topology-bgq.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-bgq.c' object='libhwloc_port_bgq_la-topology-bgq.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_bgq_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_bgq_la-topology-bgq.lo `test -f 'topology-bgq.c' || echo '$(srcdir)/'`topology-bgq.c

libhwloc_port_cuda_la-topology-cuda.lo: topology-cuda.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_cuda_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_cuda_la-topology-cuda.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_cuda_la-topology-cuda.Tpo -c -o libhwloc_port_cuda_la-topology-cuda.lo `test -f 'topology-cuda.c' || echo '$(srcdir)/'`topology-cuda.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_cuda_la-topology-cuda.Tpo $(DEPDIR)/libhwloc_port_cuda_la-topology-cuda.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-cuda.c' object='libhwloc_port_cuda_la-topology-cuda.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_cuda_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_cuda_la-topology-cuda.lo `test -f 'topology-cuda.c' || echo '$(srcdir)/'`topology-cuda.c

libhwloc_port_darwin_la-topology-darwin.lo: topology-darwin.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_darwin_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_darwin_la-topology-darwin.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_darwin_la-topology-darwin.Tpo -c -o libhwloc_port_darwin_la-topology-darwin.lo `test -f 'topology-darwin.c' || echo '$(srcdir)/'`topology-darwin.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_darwin_la-topology-darwin.Tpo $(DEPDIR)/libhwloc_port_darwin_la-topology-darwin.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-darwin.c' object='libhwloc_port_darwin_la-topology-darwin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_darwin_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_darwin_la-topology-darwin.lo `test -f 'topology-darwin.c' || echo '$(srcdir)/'`topology-darwin.c

libhwloc_port_freebsd_la-topology-freebsd.lo: topology-freebsd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_freebsd_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_freebsd_la-topology-freebsd.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_freebsd_la-topology-freebsd.Tpo -c -o libhwloc_port_freebsd_la-topology-freebsd.lo `test -f 'topology-freebsd.c' || echo '$(srcdir)/'`topology-freebsd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_freebsd_la-topology-freebsd.Tpo $(DEPDIR)/libhwloc_port_freebsd_la-topology-freebsd.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-freebsd.c' object='libhwloc_port_freebsd_la-topology-freebsd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_freebsd_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_freebsd_la-topology-freebsd.lo `test -f 'topology-freebsd.c' || echo '$(srcdir)/'`topology-freebsd.c

libhwloc_port_gl_la-topology-gl.lo: topology-gl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_gl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_gl_la-topology-gl.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_gl_la-topology-gl.Tpo -c -o libhwloc_port_gl_la-topology-gl.lo `test -f 'topology-gl.c' || echo '$(srcdir)/'`topology-gl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_gl_la-topology-gl.Tpo $(DEPDIR)/libhwloc_port_gl_la-topology-gl.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-gl.c' object='libhwloc_port_gl_la-topology-gl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_gl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_gl_la-topology-gl.lo `test -f 'topology-gl.c' || echo '$(srcdir)/'`topology-gl.c

libhwloc_port_hpux_la-topology-hpux.lo: topology-hpux.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_hpux_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_hpux_la-topology-hpux.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_hpux_la-topology-hpux.Tpo -c -o libhwloc_port_hpux_la-topology-hpux.lo `test -f 'topology-hpux.c' || echo '$(srcdir)/'`topology-hpux.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_hpux_la-topology-hpux.Tpo $(DEPDIR)/libhwloc_port_hpux_la-topology-hpux.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-hpux.c' object='libhwloc_port_hpux_la-topology-hpux.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_hpux_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_hpux_la-topology-hpux.lo `test -f 'topology-hpux.c' || echo '$(srcdir)/'`topology-hpux.c

libhwloc_port_netbsd_la-topology-netbsd.lo: topology-netbsd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_netbsd_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_netbsd_la-topology-netbsd.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_netbsd_la-topology-netbsd.Tpo -c -o libhwloc_port_netbsd_la-topology-netbsd.lo `test -f 'topology-netbsd.c' || echo '$(srcdir)/'`topology-netbsd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_netbsd_la-topology-netbsd.Tpo $(DEPDIR)/libhwloc_port_netbsd_la-topology-netbsd.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-netbsd.c' object='libhwloc_port_netbsd_la-topology-netbsd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_netbsd_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_netbsd_la-topology-netbsd.lo `test -f 'topology-netbsd.c' || echo '$(srcdir)/'`topology-netbsd.c

libhwloc_port_nvml_la-topology-nvml.lo: topology-nvml.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_nvml_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_nvml_la-topology-nvml.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_nvml_la-topology-nvml.Tpo -c -o libhwloc_port_nvml_la-topology-nvml.lo `test -f 'topology-nvml.c' || echo '$(srcdir)/'`topology-nvml.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_nvml_la-topology-nvml.Tpo $(DEPDIR)/libhwloc_port_nvml_la-topology-nvml.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-nvml.c' object='libhwloc_port_nvml_la-topology-nvml.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_nvml_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_nvml_la-topology-nvml.lo `test -f 'topology-nvml.c' || echo '$(srcdir)/'`topology-nvml.c

libhwloc_port_opencl_la-topology-opencl.lo: topology-opencl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_opencl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_opencl_la-topology-opencl.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_opencl_la-topology-opencl.Tpo -c -o libhwloc_port_opencl_la-topology-opencl.lo `test -f 'topology-opencl.c' || echo '$(srcdir)/'`topology-opencl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_opencl_la-topology-opencl.Tpo $(DEPDIR)/libhwloc_port_opencl_la-topology-opencl.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-opencl.c' object='libhwloc_port_opencl_la-topology-opencl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_opencl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_opencl_la-topology-opencl.lo `test -f 'topology-opencl.c' || echo '$(srcdir)/'`topology-opencl.c

libhwloc_port_osf_la-topology-osf.lo: topology-osf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_osf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_osf_la-topology-osf.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_osf_la-topology-osf.Tpo -c -o libhwloc_port_osf_la-topology-osf.lo `test -f 'topology-osf.c' || echo '$(srcdir)/'`topology-osf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_osf_la-topology-osf.Tpo $(DEPDIR)/libhwloc_port_osf_la-topology-osf.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-osf.c' object='libhwloc_port_osf_la-topology-osf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_osf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_osf_la-topology-osf.lo `test -f 'topology-osf.c' || echo '$(srcdir)/'`topology-osf.c

libhwloc_port_solaris_la-topology-solaris.lo: topology-solaris.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_solaris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_solaris_la-topology-solaris.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_solaris_la-topology-solaris.Tpo -c -o libhwloc_port_solaris_la-topology-solaris.lo `test -f 'topology-solaris.c' || echo '$(srcdir)/'`topology-solaris.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_solaris_la-topology-solaris.Tpo $(DEPDIR)/libhwloc_port_solaris_la-topology-solaris.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-solaris.c' object='libhwloc_port_solaris_la-topology-solaris.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_solaris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_solaris_la-topology-solaris.lo `test -f 'topology-solaris.c' || echo '$(srcdir)/'`topology-solaris.c

libhwloc_port_solaris_la-topology-solaris-chiptype.lo: topology-solaris-chiptype.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_solaris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_solaris_la-topology-solaris-chiptype.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_solaris_la-topology-solaris-chiptype.Tpo -c -o libhwloc_port_solaris_la-topology-solaris-chiptype.lo `test -f 'topology-solaris-chiptype.c' || echo '$(srcdir)/'`topology-solaris-chiptype.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_solaris_la-topology-solaris-chiptype.Tpo $(DEPDIR)/libhwloc_port_solaris_la-topology-solaris-chiptype.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-solaris-chiptype.c' object='libhwloc_port_solaris_la-topology-solaris-chiptype.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_solaris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_solaris_la-topology-solaris-chiptype.lo `test -f 'topology-solaris-chiptype.c' || echo '$(srcdir)/'`topology-solaris-chiptype.c

libhwloc_port_windows_la-topology-windows.lo: topology-windows.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_windows_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhwloc_port_windows_la-topology-windows.lo -MD -MP -MF $(DEPDIR)/libhwloc_port_windows_la-topology-windows.Tpo -c -o libhwloc_port_windows_la-topology-windows.lo `test -f 'topology-windows.c' || echo '$(srcdir)/'`topology-windows.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libhwloc_port_windows_la-topology-windows.Tpo $(DEPDIR)/libhwloc_port_windows_la-topology-windows.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='topology-windows.c' object='libhwloc_port_windows_la-topology-windows.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhwloc_port_windows_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhwloc_port_windows_la-topology-windows.lo `test -f 'topology-windows.c' || echo '$(srcdir)/'`topology-windows.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES)
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-checkLTLIBRARIES clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
