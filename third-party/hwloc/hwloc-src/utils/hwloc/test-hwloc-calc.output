# root
0xffffffff,0xffffffff

# all --taskset
0xffffffffffffffff

# hex
0x0000000f

# hex combination
0x00000f0c

# object combination
0x0000800a

# --no-smt NUMA Node range
0x11111111,0x0

# --no-smt hex
0x00000112

# --no-smt=1 hex
0x00000024

# --no-smt=2 hex
0x00000048

# --no-smt=3 hex
0x00000080

# --no-smt=4 hex
0x0

# --no-smt=-1 hex
0x000001fe

# even PUs
0x55555555,0x55555555

# NUMA Nodes 2+
0xffffffff,0x0

# cores 12+
0xffff0000,0x0

# PU wrapping range
0xc0000000,0x000000ff

# some PUs in all Cores
0x66666666,0x66666666

# one PU in odd Cores
0x10101010,0x10101010

# combination of different ranges, hierarchical or not
0x8000c000,0x000ee0c0

# number of Group0 when there are 3 group levels
2

# list of Group1 near one Group0 when there are 3 group levels
0,1

# hierarchical list of Group0.Group2 near one NUMA when there are 3 group levels
Group0:1.Group2:2 Group0:1.Group2:3

# number of Group2 when there are 3 group levels
8

# Number of NUMA Nodes
4

# Number of Cores in a NUMA Node
4

# Number of objects at depth 3 in a NUMA Node
16

# List of Machine objects
0

# List of NUMA Nodes in a range of Cores
1

# List of NUMA Nodes in a range of Cores (again)
2,3

# Hierarchical spec for a range of PUs
Group0:0.PU:2 Group0:0.PU:3

# Hierarchical spec for a range of PUs, with different separator
Group0:0.Core:0fooGroup0:0.Core:1

# Hierarchical spec for a range of PUs (again)
Core:0.PU:3 Core:1.PU:0 Core:1.PU:1 Core:1.PU:2

# List of PUs from another invocation with hierarchical output
3,4,5,6

# Hierarchical spec for a range of PUs (3 levels)
Group0:0.Core:2.PU:3 Group0:0.Core:3.PU:0 Group0:0.Core:3.PU:1 Group0:0.Core:3.PU:2

# List of PUs from another invocation with hierarchical output (again)
11,12,13,14

# --largest
Core:3 Group0:1 Core:8 PU:36 PU:37

# --largest, with different separator
PU:22_PU:23_Core:6_Core:7_Group0:2

# Singlified output
0x00400000

# Singlified PU list
22

# PU list with physical output
33,34,35,36,37

# NUMA Node list of physical output and different separator
1foo2

# Manipulating NUMA Nodes with nodesets
0x00000006

# Nodeset output of PUs
0x00000008

# Converting NUMA Nodes from logical to physical
0,2

# Physical output of NUMA Nodes when out-of-order in the topology
2,1

# Converting physical to logical PU indexes when complexly ordered in the topology
4,20,32,48

# 4 local nodes near a Package (node:3-4@Die + node:5@Package + node:6@Machine)
3,4,5,6

# 2 local nodes larger or equal to a Package (node:2@Package + node:6@Machine), with space separator
2 6

# Best-locality local node near a PU (node:1@Die)
1

# Best-capacity local node near a PU (node:6@Machine)
6

# CPU kind by index
0x000000ff

# CPU kind by wrong index
0x0

# CPU kind by info attr
0x00000fff

# Caches with attributes
0x0000000b

# Groups with attributes
0x0000ff0f

# Caches without attributes
0x0000e03f

# OS devices by name
0xffffffff,0xffff0000,0x0

# OS devices by name (again)
0xffffff00,,0x0

# OS devices by range
0x000000ff,0xffff0000,0x0

# PCI devices by range
0xffffffff,0xffff0000,0x0

# PCI devices by vendors/device IDs and range wrapping around
0xffffff00,,0x00ffffff

# PCI devices by vendors/device IDs and index
0x00ffffff

# PCI devices by vendors/device IDs and range
0x000000ff,0xffffffff,0xff000000

# PCI devices added
0x000000ff,0xffff0000,0x00ffffff

# PCI devices intersection
0x0

# PCI devices intersection (again)
0x00ffffff

# Restrict
4
1
8
8
1,2

# Reading from stdin
Waiting for locations to process on stdin...
0x00000001
0xf0000000,0x0000000f
0xffff0000,0x0000ffff
0x0000000f
0x00000001
0x00000001,,0x0
0xffffffff,0xffffffff

