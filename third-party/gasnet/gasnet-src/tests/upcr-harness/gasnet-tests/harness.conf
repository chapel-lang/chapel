# This suite is independent of UPC compiler:
KnownFailureAnySpec

BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
# ensure smp/no-pshm jobs silently downgrade to single-process:
AppEnv: 	network_smp && nopshm ; UPCRUN_ALLOW_1PROC_DOWNGRADE=1
TimeLimit:      1.5 * $DEFAULT$
RequireFeature: gasnet
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
ProcPerNode:    1
Pthreads:       0
# When using distcc+clang we lose suppression of warnings
# for the expansions of macros declared in system headers:
# + glibc's inline strcmp when one string is < 3 chars
WarningFilter: (cc_clang && distcc) && nodebug ; .*? warning: array index [23] is past the end of the array .*?
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

# complicated calling convention, known to hang in several cases
TestName:       testexit-seq
TimeLimit:      0
#Fixed in SS12.2+#KnownFailure:   compile-failure ; cc_sun && cpu_i386 && nodebug ; bug 2938 - suncc crash building testexit
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()

TestName:	check-exports
TimeLimit:      0
RequireFeature: gasnet,cc_gnu # Other compilers have too many odd symbol manglings
KnownFailure:   compile-failure ; os_bgq ; BG/Q headers leak UCI parse/encode/decode symbols

TestName:	check-tools-exports
TimeLimit:      0
RequireFeature: gasnet,cc_gnu # Other compilers have too many odd symbol manglings
KnownFailure:   compile-failure ; os_bgq ; BG/Q headers leak UCI parse/encode/decode symbols

TestName:	check-libupcr-exports
RequireFeature: gasnet,cc_gnu # Other compilers have too many odd symbol manglings
TimeLimit:      0

TestName:       check-other
RequireFeature: gasnet
TimeLimit:      0

TestName:       testgasnet_Wextra-seq
MakeFlags:      MANUAL_CFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CFLAGS!"
RequireFeature: gasnet && (cc_clang||cc_gnu)
TimeLimit:      0
# Comments to suppress implicit-fallthrough warnings don't work w/i macros (bug 3692)
WarningFilter:  all ; .*?Wimplicit-fallthrough.*?

TestName:       testgasnet_Wextra-par
MakeFlags:      MANUAL_CFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CFLAGS!"
RequireFeature: gasnet_has_par && (cc_clang||cc_gnu)
TimeLimit:      0
# Comments to suppress implicit-fallthrough warnings don't work w/i macros (bug 3692)
WarningFilter:  all ; .*?Wimplicit-fallthrough.*?

TestName:       testgasnet_mismatch-seq
MakeFlags:      MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CFLAGS!"

TestName:       testgasnet_mismatch-par
MakeFlags:      MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
RequireFeature: gasnet_has_par
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CFLAGS!"

TestName:       testlegacy_Wextra-seq
MakeFlags:      MANUAL_CFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CFLAGS!"
RequireFeature: gasnet && (cc_clang||cc_gnu)
TimeLimit:      0

TestName:       testlegacy_Wextra-par
MakeFlags:      MANUAL_CFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CFLAGS!"
RequireFeature: gasnet_has_par && (cc_clang||cc_gnu)
TimeLimit:      0

TestName:       testlegacy_mismatch-seq
MakeFlags:      MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CFLAGS!"

TestName:       testlegacy_mismatch-par
MakeFlags:      MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
RequireFeature: gasnet_has_par
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CFLAGS!"

# test{,legacy}cxx* don't create a GASNet executable to run unless udp-conduit was configured

TestName:       testcxx-seq
RequireFeature: gasnet_has_udp
TimeLimit:      0
#KnownFailure:   compile-failure ; cc_pgi && cpu_powerpc64le && debug ; EXTERNAL: Bug 3380 - pgcc 16.10 Community Edition for OpenPower ICE building libgasnet  (Fixed at or before 17.4)
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testcxx-par
RequireFeature: gasnet_has_udp,gasnet_has_par
TimeLimit:      0
#KnownFailure:   compile-failure ; cc_pgi && cpu_powerpc64le && debug ; EXTERNAL: Bug 3380 - pgcc 16.10 Community Edition for OpenPower ICE building libgasnet  (Fixed at or before 17.4)
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testcxx_Wextra-seq
MakeFlags:      MANUAL_CXXFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CXXFLAGS!"
RequireFeature: gasnet_has_udp && (cc_clang||cc_gnu)
TimeLimit:      0
# Comments to suppress implicit-fallthrough warnings don't work w/i macros (bug 3692)
WarningFilter:  all ; .*?Wimplicit-fallthrough.*?

TestName:       testcxx_Wextra-par
MakeFlags:      MANUAL_CXXFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CXXFLAGS!"
RequireFeature: gasnet_has_udp && gasnet_has_par && (cc_clang||cc_gnu)
TimeLimit:      0
# Comments to suppress implicit-fallthrough warnings don't work w/i macros (bug 3692)
WarningFilter:  all ; .*?Wimplicit-fallthrough.*?

TestName:       testcxx_mismatch-seq
MakeFlags:      MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CXXFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
RequireFeature: gasnet_has_udp
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CXXFLAGS!"
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testcxx_mismatch-par
MakeFlags:      MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CXXFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
RequireFeature: gasnet_has_udp && gasnet_has_par
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CXXFLAGS!"
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testlegacycxx-seq
RequireFeature: gasnet_has_udp
TimeLimit:      0
WarningFilter:  cc_gnu ; .*?distcheck-old.*? NULL \n?used in arithmetic.*?   # g++-2.96 dislikes (NULL == NULL)
WarningFilter:  cc_open64 ; .*? NULL used in arithmetic.*?   # OpenCC dislikes (NULL == NULL)
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testlegacycxx-par
RequireFeature: gasnet_has_udp,gasnet_has_par
TimeLimit:      0
WarningFilter:  cc_gnu ; .*?distcheck-old.*? NULL \n?used in arithmetic.*?   # g++-2.96 dislikes (NULL == NULL)
WarningFilter:  cc_open64 ; .*? NULL used in arithmetic.*?   # OpenCC dislikes (NULL == NULL)
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testlegacycxx_Wextra-seq
MakeFlags:      MANUAL_CXXFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CXXFLAGS!"
RequireFeature: gasnet_has_udp && (cc_clang||cc_gnu)
TimeLimit:      0

TestName:       testlegacycxx_Wextra-par
MakeFlags:      MANUAL_CXXFLAGS="-Wall -Wextra -Wno-unused -Wno-unused-parameter !MANUAL_CXXFLAGS!"
RequireFeature: gasnet_has_udp && gasnet_has_par && (cc_clang||cc_gnu)
TimeLimit:      0

TestName:       testlegacycxx_mismatch-seq
MakeFlags:      MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CXXFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
WarningFilter:  cc_gnu ; .*?distcheck-old.*? NULL \n?used in arithmetic.*?   # g++-2.96 dislikes (NULL == NULL)
WarningFilter:  cc_open64 ; .*? NULL used in arithmetic.*?   # OpenCC dislikes (NULL == NULL)
RequireFeature: gasnet_has_udp
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CXXFLAGS!"
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testlegacycxx_mismatch-par
MakeFlags:      MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH !MANUAL_CXXFLAGS!"
WarningFilter:  all ; .*? warning: function might be possible candidate for .(gnu_)?printf. format attribute.*?
WarningFilter:  cc_gnu ; .*?distcheck-old.*? NULL \n?used in arithmetic.*?   # g++-2.96 dislikes (NULL == NULL)
WarningFilter:  cc_open64 ; .*? NULL used in arithmetic.*?   # OpenCC dislikes (NULL == NULL)
RequireFeature: gasnet_has_udp && gasnet_has_par
TimeLimit:      0
# Some compilers have broken runtime feature tests (such as __has_builtin or
# __has_attribute) that prevent us from providing annotations which would
# prevent certain warnings in a mismatch compile.
MakeFlags:	cc_pathscale ; MANUAL_CXXFLAGS="-DGASNETT_COMPILER_FORCE_MISMATCH -Wno-uninitialized !MANUAL_CXXFLAGS!"
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

# ------------------------------------------
# General SEQ tests 

TestName:       testgasnet-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit:      1000 + 2300 * $THREADS$ # SEGMENT_EVERYTHING, hostnames and pathnames make this limit problematic
#KnownFailure: run-all ; cpu_i386 && cc_sun && nodebug ; bug2154 (testgasnet failures on cloon_cc_pthreads-opt)
#Fixed in SS12.2+#KnownFailure: compile-failure ; cc_sun && (cpu_i386 || cpu_x86_64) && nodebug ; bug 2710 (Sun CC crash compiling testgasnet)
## May fail user backtrace test if $TMPDIR is not valid on compute node(s)

TestName:       testlegacy-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit:      1000 + 2300 * $THREADS$ # SEGMENT_EVERYTHING, hostnames and pathnames make this limit problematic
## May fail user backtrace test if $TMPDIR is not valid on compute node(s)

TestName:       testinternal-seq
TimeLimit:      2 * $DEFAULT$
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testenv-seq
AppArgs:	GASNet is "Global Address Space Networking"
AppEnv: 	GASNET_DUMMY="GASNet dummy value"
#KnownFailure: run-all ; os_aix && (network_mpi || network_lapi) ; bug1039 (poe mishandles quoted program arguments)
# clang warns on glibc's inline strcmp when one string is < 3 chars
WarningFilter: cc_clang && nodebug ; .*? warning: array index 3 is past the end of the array .*?

TestName:       testsmall-seq
FileLimit: 9000 + 7350 * $THREADS$
BenchmarkResult: -\s+8 byte :\s+\S+ iters, latency\s+\S+ us total,\s+(\S+) (us ave. \(PutBlocking latency\))

TestName:       testlarge-seq
AppArgs: 100 2097152
FileLimit: 6400 + 5300 * $THREADS$
BenchmarkResult: 2097152 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(PutNB\+DEFER throughput\))

TestName:       testval-seq
FileLimit:      3000 + 1750 * $THREADS$
BenchmarkResult: 8 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(PutBlockingVal throughput\))

TestName:       testam-seq
AppArgs:        -sync-req
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit: 16000 + 15500 * $THREADS$
BenchmarkResult: AMShort ping-pong, roundtrip latency\s+:\s+\S+ sec\s+(\S+) (us)
#KnownFailure: run-all ; cpu_x86_64 && network_elan ; bug1444 (elan exceptions on elan4/Opteron mu & hive) 
WarningFilter: cc_clang ; .*? warning: self-comparison always evaluates to false .*?

TestName:       testam_async-seq
AppArgs:        -async-req
FileLimit: 16000 + 15500 * $THREADS$
BenchmarkResult: max:\n.* AMMedium\s+flood\s+one-way\s+Req\s+:.*us\s+(\S+) (MB/s)
WarningFilter: cc_clang ; .*? warning: self-comparison always evaluates to false .*?

TestName:       testcore1-seq
AppArgs: 1000

TestName:       testcore2-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
# bug955 - firehose mishandles free (see bug 3989):
AppEnv: network_ibv ; GASNET_DISABLE_MUNMAP=1
# Avoid triggering kernel OOM-killer on 32-bit MIPS Malta
AppArgs: (_threads > 1) && malta && cpu_32; 0 524288

TestName:       testcore3-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testcore4-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
#KnownFailure: compile-failure ; cc_pgi ; bug2796 (testcore4 compilation failure w/ PGI compiler)
TimeLimit: 2 * $DEFAULT$

TestName:       testcore5-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
TimeLimit: 2 * $DEFAULT$

TestName:       testbarrier-seq
BenchmarkResult: Avg Anon. Barrier latency:\s+(\S+) (us)

TestName:       testlogGP-seq
AppArgs: 1000 0 8 65536
FileLimit: 1250 + 1200 * $THREADS$
BenchmarkResult: -\s+8 byte :\s+\S+ iters,\s+\S+ us difference =\s+(\S+) (us/msg \(put: o_i - PutNB\+DEFER\))
MakeFlags: cc_cray ; MANUAL_CFLAGS=-hnomessage=3140 # bug 3847: hide a warning about delay.o

TestName:       testvis-seq
AppEnv: GASNET_VIS_AMPIPE=0 GASNET_VIS_REMOTECONTIG=0
AppArgs: 50
KnownFailure: run-crash ; os_bgq && debug; Bug 3819 - testvis out-of-memory failures on BG/Q

TestName:       testvis_pack-seq
AppEnv: GASNET_VIS_AMPIPE=1 GASNET_VIS_REMOTECONTIG=1
AppEnv: network_ibv ; GASNET_DISABLE_MUNMAP=1 #  bug955 - firehose mishandles free
AppArgs: 50
ProhibitFeature: network_smp

TestName:       testvisperf-seq
AppArgs: -maxdata 131072 -maxcontig 512 10
FileLimit: 7500 + 5500 * $THREADS$

TestName:       testmisc-seq
BenchmarkResult: Do-nothing gasnet_AMPoll\(\)\s+:\s+\S+ sec\s+(\S+) (us/iter)
DynamicThreads: 1
#KnownFailure: run-all ; cc_sun && cpu_sparc ; bug 1417 (Solaris 2.10/SunC 5.8 fails testmisc-par with -g)
#KnownFailure: run-crash ; cc_gnu && os_darwin && nodebug ; Bug 3080 - testmisc failures w/ Apple XCode

TestName:       testalign-seq
AppArgs: 100
FileLimit: 1400 + 5950 * $THREADS$
BenchmarkResult: byte\s+4 byte aligned :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(PutNB\+DEFER throughput\))

TestName:       testrand-seq
BenchmarkResult: Timer granularity: .. (\S+) (us), overhead: . \S+ us
AppArgs: 1024

TestName:       testbarrierconf-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierconf_t-seq
AppArgs:        -t
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierlate-seq
BenchmarkResult: Late notify\(\) Anon. Barrier net latency, average:\s+(\S+) (us)
MakeFlags: cc_cray ; MANUAL_CFLAGS=-hnomessage=3140 # bug 3847: hide a warning about delay.o

TestName:       testcoll-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testnbr-seq
TimeLimit:      3 * $DEFAULT$

TestName:       testqueue-seq
DynamicThreads: $DEFAULT$
FileLimit: 15000 + 11100 * $THREADS$
AppArgs: 1 256 262144
WarningFilter:  cc_pathscale && nodebug; 'WARNING.*?number of phis is too big.*?'

TestName:       testhsl-seq
AppArgs: 0
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()
#KnownFailure:   compile-failure ; cc_pgi && cpu_powerpc64le && debug ; EXTERNAL: Bug 3380 - pgcc 16.10 Community Edition for OpenPower ICE building libgasnet  (Fixed at or before 17.4)

TestName:       testtools-seq
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads
SaveOutput:     1
# bug 3337: CPU timers are inaccurate in a virtualized environment,
# where tsc register is virtualized. Disable that test and retain others.
# Real users on KVM/QEMU/etc. should configure --enable-force-gettimeofday
AppEnv: qemu || kvm ; GASNET_TEST_TIME_SLACK=300
KnownFailure:	run-limit ; os_bgq && cc_xlc && nodebug ; word-tearing w/ xlc on BG/Q
# The nightly irun_cross_compiler tester avoids bugs 3019 and 1712
#KnownFailure:	run-exit ; rosetta ; Bug 3019 - testtools is faked as mpi-conduit, which is not available
#KnownFailure:	run-match ; rosetta ; Bug 1712 - timer and atomics inaccuracy with PPC binaries on MacIntel 
# Filter away two known warnings under AIX due to bug 2554
WarningFilter:	os_aix; ld: 0711-224 WARNING: Duplicate symbol: gasnett_backtrace_user.*?
WarningFilter:	os_aix; ld: 0711-341 WARNING: Replaced XTY_CM symbol gasnett_backtrace_user.*?

TestName:       testtoolscxx-seq
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads
SaveOutput:     1
RequireFeature: gasnet_has_udp
AppEnv: qemu || kvm ; GASNET_TEST_TIME_SLACK=300
KnownFailure:	run-limit ; os_bgq && cc_xlc && nodebug ; word-tearing w/ xlc on BG/Q

TestName:       testslice-seq
DynamicThreads: 2 # test only works w/ 2 threads
#KnownFailure:	run-all ; cc_clang && cpu_x86_64 && nodebug ; Bug 3630 - testslice failing with clang-4+
KnownFailure:   run-all ; cc_clang && os_openbsd && cpu_x86_64 && nodebug; Bug 3843 - testslice failures on OpenBSD/clang-6.0.x/opt

TestName:       testcollperf-seq
AppArgs:        -szfactor 4 16384 2 50 0
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testcollperf_src_out-seq
AppArgs:        -src-out -szfactor 4 16384 2 10 0
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testcollperf_dst_out-seq
AppArgs:        -dst-out -szfactor 4 16384 2 10 0
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testcollperf_both_out-seq
AppArgs:        -src-out -dst-out -szfactor 4 16384 2 10 0
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testteam-seq

TestName:       testteambarrier-seq

TestName:       testteambcast-seq
FileLimit:      2400 + 2500 * $THREADS$

TestName:       testreduce-seq

TestName:       testreduce_medium-seq
AppArgs:        100 512

TestName:       testreduce_large-seq
AppArgs:        50 1024
AppEnv:         GASNET_COLL_SCRATCH_SIZE=2K

TestName:       testratomic-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
CompileTimeLimit: 2 * $DEFAULT$
#KnownFailure:   compile-failure ; cc_sun && debug ; Bug 3729 - testratomic crashes sun 12.6 compiler in debug
#KnownFailure:   run-match ; (cc_clang || cc_pgi) && cpu_powerpc64le && nodebug ; Bug 3742 - testratomic failure with pgi and clang on ppc64el

TestName:       testfaddperf-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit:      2200 + 800 * $THREADS$
BenchmarkResult: total,\s+(\S+) (us ave\. \(U32 FADD latency\))

TestName:       testfaddperf_S-seq
FileLimit:      1200 + 1600 * $THREADS$
BenchmarkResult: iters, throughput\s+(\S+) (ops/sec \(U32 FADD throughput\))
AppArgs:        -S

TestName:       testimm-seq
AppArgs:        (network_udp || network_mpi); 5000   # Just half the iters for reference conduits

TestName:       testacc-seq
ProcPerNode:    2 # many failure modes depend on multiple ppn
AppArgs:        100000
AppArgs:        (network_udp || network_mpi); 50000
AppArgs:        network_smp                 ; 1000000

TestName:       testreadonly-seq
#KnownFailure:   run-all ; network_ibv ; Bug 3338 - ibv_reg_mr failure (EFAULT/Bad address) on read-only data
#KnownFailure:   run-all ; network_ibv && ibv_odp ; Bug 4008 - testreadonly failure with ibv/odp
KnownFailure:   run-all ; network_ibv && os_solaris ; Bug 4009 - testreadonly failure with ibv on Solaris

# minimal test for working on-demand backtrace
TestName:       testexit_bt-seq
AppArgs:        100
PassExpr:       do_crash_test
FailExpr:       backtrace failed
ProhibitFeature: missing_backtrace
TimeLimit:      300
MakeFlags:      cc_pgi && os_darwin ; KEEPTMPS=1 # debugger needs testexit.o
KnownFailure:   run-match ; nodebug ; Debug symbols unreliable in opt mode
# do NOT add more known failures here - use -add_feature=missing_backtrace instead to avoid potential timeouts
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()

# test backtrace from a SIGABRT
TestName:       testexit_bt_abort-seq
AppArgs:        103
AppEnv:         GASNET_BACKTRACE=1
PassExpr:       do_crash_test
FailExpr:       backtrace failed
RunCmd:         ./crash-filter $UPCRUN_CMD$
# Prohibit solaris+ibv due to bug3895: CQ leak
ProhibitFeature: missing_backtrace || (os_solaris && network_ibv)
TimeLimit:      300
MakeFlags:      cc_pgi && os_darwin ; KEEPTMPS=1 # debugger needs testexit.o
KnownFailure:   run-match ; nodebug ; Debug symbols unreliable in opt mode
KnownFailure:   run-match ; cpu_sparc64 && cc_clang ; Sparc64+clang cannot backtrace out of signal context
KnownFailure:   run-match ; cpu_mips64 && cpu_64 ; MIPS LP64 ABI backtrace breaks at libc boundary (broken gdb?)
# do NOT add more known failures here - use -add_feature=missing_backtrace instead to avoid potential timeouts
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()

# ------------------------------------------
# BEGIN PTHREADED TESTS

BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
# ensure smp/no-pshm jobs silently downgrade to single-process:
AppEnv: 	network_smp && nopshm ; UPCRUN_ALLOW_1PROC_DOWNGRADE=1
TimeLimit:      2 * $DEFAULT$
RequireFeature: gasnet_has_par
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
ProcPerNode:    1
Pthreads:       0
# When using distcc+clang we lose suppression of warnings
# for the expansions of macros declared in system headers:
# + glibc's inline strcmp when one string is < 3 chars
WarningFilter: (cc_clang && distcc) && nodebug ; .*? warning: array index [23] is past the end of the array .*?
END_DEFAULT_CONFIG

# ------------------------------------------
# General PAR tests 

TestName:       testgasnet-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit:      1000 + 2300 * $THREADS$ # SEGMENT_EVERYTHING, hostnames and pathnames make this limit problematic
#KnownFailure: run-all ; cpu_x86_64 && network_elan ; bug1445 (gasnett_set_affinity broken on hive)
#KnownFailure: run-crash ; os_irix && cpu_32 ; bug2482 (32-bit testgasnet-par exhausts memory)
#Fixed in SS12.2+#KnownFailure: compile-failure ; cc_sun && (cpu_i386 || cpu_x86_64) && nodebug ; bug 2710 (Sun CC crash compiling testgasnet)
## May fail user backtrace test if $TMPDIR is not valid on compute node(s)

TestName:       testlegacy-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit:      1000 + 2300 * $THREADS$ # SEGMENT_EVERYTHING, hostnames and pathnames make this limit problematic
## May fail user backtrace test if $TMPDIR is not valid on compute node(s)

TestName:       testinternal-par
TimeLimit:      2 * $DEFAULT$
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
# Should NOT see these 2 in nightly testing becasue we --enable-force-generic-atomicops
#KnownFailure:	run-match ; rosetta ; Bug 1712 - timer and atomics inaccuracy with PPC binaries on MacIntel 
#KnownFailure:	run-crash ; rosetta ; Bug 1712 - timer and atomics inaccuracy with PPC binaries on MacIntel 

TestName:       testenv-par
AppArgs:	GASNet is "Global Address Space Networking"
AppEnv: 	GASNET_DUMMY="GASNet dummy value"
#KnownFailure: run-all ; os_aix && (network_mpi || network_lapi) ; bug1039 (poe mishandles quoted program arguments)

TestName:       testsmall-par
FileLimit: 9000 + 7350 * $THREADS$
BenchmarkResult: -\s+8 byte :\s+\S+ iters, latency\s+\S+ us total,\s+(\S+) (us ave. \(GetBlocking latency\))

TestName:       testlarge-par
AppArgs: 100 2097152
FileLimit: 6400 + 5300 * $THREADS$
BenchmarkResult: 2097152 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(GetNB throughput\))

TestName:       testval-par
FileLimit:      3000 + 1750 * $THREADS$
BenchmarkResult: 8 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(GetBlockingVal throughput\))

TestName:       testam-par
AppArgs:        -sync-req -p 1
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit: 16000 + 15500 * $THREADS$
BenchmarkResult: AMShort ping-pong, roundtrip latency\s+:\s+\S+ sec\s+(\S+) (us)
#KnownFailure: run-all ; cpu_x86_64 && network_elan ; bug1444 (elan exceptions on elan4/Opteron mu & hive) 
WarningFilter: cc_clang ; .*? warning: self-comparison always evaluates to false .*?

TestName:       testam_async-par
AppArgs:        -async-req -p 1
FileLimit: 16000 + 15500 * $THREADS$
BenchmarkResult: max:\n.* AMMedium\s+flood\s+one-way\s+Req\s+:.*us\s+(\S+) (MB/s)
WarningFilter: cc_clang ; .*? warning: self-comparison always evaluates to false .*?

TestName:       testcore1-par
AppArgs: 1000

TestName:       testcore2-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
# bug955 - firehose mishandles free (see bug 3989, including for why this may not be effective):
AppEnv: network_ibv ; GASNET_DISABLE_MUNMAP=1
# Avoid triggering kernel OOM-killer on 32-bit MIPS Malta
AppArgs: (_threads > 1) && malta && cpu_32; 0 524288

TestName:       testcore3-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testcore4-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
#KnownFailure: compile-failure ; cc_pgi ; bug2796 (testcore4 compilation failure w/ PGI compiler)

TestName:       testcore5-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrier-par
AppArgs:        -p 1
BenchmarkResult: Avg Named Barrier latency:\s+(\S+) (us)

TestName:       testlogGP-par
AppArgs: 1000 0 8 65536
FileLimit: 1250 + 1200 * $THREADS$
BenchmarkResult: -\s+8 byte :\s+\S+ iters,\s+\S+ us difference =\s+(\S+) (us/msg \(get: o_i - GetNB\))
MakeFlags: cc_cray ; MANUAL_CFLAGS=-hnomessage=3140 # bug 3847: hide a warning about delay.o

TestName:       testvis-par
AppEnv: GASNET_VIS_AMPIPE=0 GASNET_VIS_REMOTECONTIG=0
AppArgs: 50
KnownFailure: run-crash ; os_bgq && debug; Bug 3819 - testvis out-of-memory failures on BG/Q

TestName:       testvis_pack-par
AppEnv: GASNET_VIS_AMPIPE=1 GASNET_VIS_REMOTECONTIG=1
AppEnv: network_ibv ; GASNET_DISABLE_MUNMAP=1 #  bug955 - firehose mishandles free
AppArgs: 50
ProhibitFeature: network_smp

TestName:       testvisperf-par
AppArgs: -maxdata 131072 -maxcontig 512 10
FileLimit: 7500 + 5500 * $THREADS$

TestName:       testmisc-par
BenchmarkResult: Do-nothing gasnet_AMPoll\(\)\s+:\s+\S+ sec\s+(\S+) (us/iter)
DynamicThreads: 1
#KnownFailure: run-all ; cc_sun && cpu_sparc ; bug 1417 (Solaris 2.10/SunC 5.8 fails testmisc-par with -g)
#KnownFailure: run-crash ; cc_gnu && os_darwin && nodebug ; Bug 3080 - testmisc failures w/ Apple XCode

TestName:       testalign-par
AppArgs: 100
FileLimit: 1400 + 5950 * $THREADS$
BenchmarkResult: byte\s+4 byte aligned :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(GetNB throughput\))

TestName:       testrand-par
BenchmarkResult: Timer granularity: .. \S+ us, overhead: . (\S+) (us)
AppArgs: 1024

TestName:       testbarrierconf-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierconf_t-par
AppArgs:        -t
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierconf_p-par
AppArgs:        -p 1
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierconf_tp-par
AppArgs:        -t -p 1
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierlate-par
BenchmarkResult: Late wait\(\) Anon. Barrier net latency, average:\s+(\S+) (us)
MakeFlags: cc_cray ; MANUAL_CFLAGS=-hnomessage=3140 # bug 3847: hide a warning about delay.o

# Typically overcommits CPUs by a factor of 2, so reduce iters
TestName:       testcoll-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs: 200
# Conduits using alloca() work-around bug 2079
#KnownFailure:   run-all ; cc_pgi && cpu_x86_64 ; Bug 2079 - "stack overflow" w/ PGI

TestName:       testcoll_p-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs: -p 1 200 1  # One active thread and one polling thread

TestName:       testnbr-par
TimeLimit:      3 * $DEFAULT$

TestName:       testqueue-par
DynamicThreads: $DEFAULT$
FileLimit: 15000 + 11100 * $THREADS$
AppArgs: 1 256 262144
WarningFilter:  cc_pathscale && nodebug; 'WARNING.*?number of phis is too big.*?'

TestName:       testhsl-par
AppArgs: 0
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()
#KnownFailure:   compile-failure ; cc_pgi && cpu_powerpc64le && debug ; EXTERNAL: Bug 3380 - pgcc 16.10 Community Edition for OpenPower ICE building libgasnet  (Fixed at or before 17.4)
KnownFailure:   run-time ; cc_sparc64 ;  Bug 3864 - testhsl-par hangs on SPARC64

TestName:       testtools-par
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads
SaveOutput:     1
# bug 3337: CPU timers are inaccurate in a virtualized environment,
# where tsc register is virtualized. Disable that test and retain others.
# Real users on KVM/QEMU/etc. should configure --enable-force-gettimeofday
AppEnv: qemu || kvm ; GASNET_TEST_TIME_SLACK=300
KnownFailure:	run-limit ; os_bgq && cc_xlc && nodebug ; word-tearing w/ xlc on BG/Q
# The nightly irun_cross_compiler tester avoids bugs 3019 and 1712
#KnownFailure:	run-exit ; rosetta ; Bug 3019 - testtools is faked as mpi-conduit, which is not available
#KnownFailure:	run-match ; rosetta ; Bug 1712 - timer and atomics inaccuracy with PPC binaries on MacIntel 
# Filter away two known warnings under AIX due to bug 2554
WarningFilter:	os_aix; ld: 0711-224 WARNING: Duplicate symbol: gasnett_backtrace_user.*?
WarningFilter:	os_aix; ld: 0711-341 WARNING: Replaced XTY_CM symbol gasnett_backtrace_user.*?

TestName:       testtoolscxx-par
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads
SaveOutput:     1
RequireFeature: gasnet_has_udp,gasnet_has_par
AppEnv: qemu || kvm ; GASNET_TEST_TIME_SLACK=300
KnownFailure:	run-limit ; os_bgq && cc_xlc && nodebug ; word-tearing w/ xlc on BG/Q
#KnownFailure:   compile-crash ; cc_pgi ; EXTERNAL: Bug 3757 - pgc++-18.x ICE on test(legacy)cxx and testtoolscxx-par

TestName:       testslice-par
DynamicThreads: 2 # test only works w/ 2 threads
#KnownFailure:	run-all ; cc_clang && cpu_x86_64 && nodebug ; Bug 3630 - testslice failing with clang-4+
KnownFailure:   run-all ; cc_clang && os_openbsd && cpu_x86_64 && nodebug; Bug 3843 - testslice failures on OpenBSD/clang-6.0.x/opt

TestName:       testcollperf-par
AppArgs:        -szfactor 4 16384 2 50 0
AppEnv:         GASNET_TEST_THREAD_LIMIT=2
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
TimeLimit:      8 * $DEFAULT$
# Conduits using alloca() work-around bug 2079
#KnownFailure:   run-all ; cc_pgi && cpu_x86_64 ; Bug 2079 - "stack overflow" w/ PGI

TestName:       testcollperf_src_out-par
AppArgs:        -src-out -szfactor 4 16384 2 10 0
AppEnv:         GASNET_TEST_THREAD_LIMIT=2
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
TimeLimit:      8 * $DEFAULT$

TestName:       testcollperf_dst_out-par
AppArgs:        -dst-out -szfactor 4 16384 2 10 0
AppEnv:         GASNET_TEST_THREAD_LIMIT=2
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
TimeLimit:      8 * $DEFAULT$

TestName:       testcollperf_both_out-par
AppArgs:        -src-out -dst-out -szfactor 4 16384 2 10 0
AppEnv:         GASNET_TEST_THREAD_LIMIT=2
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
TimeLimit:      8 * $DEFAULT$

TestName:       testteam-par

TestName:       testteambarrier-par
TimeLimit: 2 * $DEFAULT$
AppEnv: GASNET_TEST_THREAD_LIMIT=2

TestName:       testteambcast-par
FileLimit:      2400 + 2500 * $THREADS$

TestName:       testreduce-par

TestName:       testreduce_medium-par
AppArgs:        100 512

TestName:       testreduce_large-par
AppArgs:        50 1024
AppEnv:         GASNET_COLL_SCRATCH_SIZE=2K

TestName:       testratomic-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
CompileTimeLimit: 2 * $DEFAULT$
#KnownFailure:   compile-failure ; cc_sun && debug ; Bug 3729 - testratomic crashes sun 12.6 compiler in debug
#KnownFailure:   run-match ; (cc_clang || cc_pgi) && cpu_powerpc64le && nodebug ; Bug 3742 - testratomic failure with pgi and clang on ppc64el
KnownFailure:   run-all ; cc_clang && os_cygwin && nodebug ; Bug 3828 - testratomic failures on cygwin/clang-5.0.1/opt
KnownFailure:   run-all ; cc_clang && os_openbsd && cpu_x86_64 ; Bug 3842 - TLS: testratomic-par failures on OpenBSD/clang-6.0.x

TestName:       testfaddperf-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
FileLimit:      2200 + 800 * $THREADS$
BenchmarkResult: total,\s+(\S+) (us ave\. \(U32 FADD latency\))

TestName:       testfaddperf_S-par
FileLimit:      1200 + 1600 * $THREADS$
BenchmarkResult: iters, throughput\s+(\S+) (ops/sec \(U32 FADD throughput\))
AppArgs:        -S

TestName:       testimm-par
AppArgs:        (network_udp || network_mpi); 5000   # Just half the iters for reference conduits

TestName:       testacc-par
ProcPerNode:    2 # many failure modes depend on multiple ppn
AppArgs:        100000
AppArgs:        (network_udp || network_mpi); 50000
AppArgs:        network_smp                 ; 1000000

TestName:       testreadonly-par
#KnownFailure:   run-all ; network_ibv ; Bug 3338 - ibv_reg_mr failure (EFAULT/Bad address) on read-only data
#KnownFailure:   run-all ; network_ibv && ibv_odp ; Bug 4008 - testreadonly failure with ibv/odp
KnownFailure:   run-all ; network_ibv && os_solaris ; Bug 4009 - testreadonly failure with ibv on Solaris

# minimal test for working on-demand backtrace
TestName:       testexit_bt-par
AppArgs:        300 2
PassExpr:       do_crash_test
FailExpr:       backtrace failed
ProhibitFeature: missing_backtrace
TimeLimit:      300
MakeFlags:      cc_pgi && os_darwin ; KEEPTMPS=1 # debugger needs testexit.o
KnownFailure:   run-match ; nodebug ; Debug symbols unreliable in opt mode
# do NOT add more known failures here - use -add_feature=missing_backtrace instead to avoid potential timeouts
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()

# test backtrace from a SIGABRT
TestName:       testexit_bt_abort-par
AppArgs:        303 2
AppEnv:         GASNET_BACKTRACE=1
PassExpr:       do_crash_test
FailExpr:       backtrace failed
RunCmd:         ./crash-filter $UPCRUN_CMD$
# Prohibit cygwin due to bug3856: signals are unreliable on cygwin/PAR and lead to zombies
# Prohibit solaris+ibv due to bug3895: CQ leak
ProhibitFeature: missing_backtrace || os_cygwin || (os_solaris && network_ibv)
TimeLimit:      300
MakeFlags:      cc_pgi && os_darwin ; KEEPTMPS=1 # debugger needs testexit.o
KnownFailure:   run-match ; nodebug ; Debug symbols unreliable in opt mode
KnownFailure:   run-match ; cpu_sparc64 && cc_clang ; Sparc64+clang cannot backtrace out of signal context
KnownFailure:   run-match ; cpu_mips64 && cpu_64 ; MIPS LP64 ABI backtrace breaks at libc boundary (broken gdb?)
# do NOT add more known failures here - use -add_feature=missing_backtrace instead to avoid potential timeouts
WarningFilter:  cc_xlc; '.*? 1500-010: .*?' # Infinite loop in main()

# ------------------------------------------
# PAR-only tests

TestName:       testthreads-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs:  2

TestName:       testcontend-par
AppEnv:    GASNET_TEST_POLITE_SYNC=0
TimeLimit: 3 * $DEFAULT$
FileLimit: 6900 + 3850 * $THREADS$

# ------------------------------------------
# PARSYNC tests

# Build parysync lib, fitering all known warnings
# We don't zero TimeLimit so that this test will match the "runnable" 
# filter, and thus continue to function to hide any parsync warnings
# in those harness runs that --include=runnable to reduce running time.
# When run we expect a non-zero exitcode and a known error message.
TestName:	parsync
ExitCode:	non-zero
PassExpr:	'is not a Berkeley UPC executable'
CompileTimeLimit: 2 * $DEFAULT$
#KnownFailure:   compile-warning ; ; bug 2148 (parsync gasnet tests cause harness failures)
# Filter away harmless inliner warnings (gcc 4.7+)
WarningFilter:	cc_gnu; .*?-Winline.*?
# Filter away apparent bug in gcc-llvm
WarningFilter:	cc_gnu; .*?gasnet_bootstrap_ssh.*? warning: missing sentinel in function call.*?
# Filter away warning on bad code from OFED
WarningFilter:	cc_intel; '.*?/verbs\.h.*?: warning \04361: .*?'
# Harmless warnings about vargs function pointers, additionally "error" makes harness thing compiler failed
WarningFilter:  cc_cray; 'CC-3185 .*?'
WarningFilter:  cc_cray; '.*?When resolving pointer function "gasneti_fatalerror".*?'
WarningFilter:  cc_cray && nodebug ; 'CC-7212.*?gasnet.pshm.c.*?\n?.*?"the_sd".*?'   # bug 3721
WarningFilter:  cc_cray && nodebug ; 'CC-7212.*?gasnet_core.c.*?\n?.*?"the_sd".*?'   # bug 3721
# Compilers get too smart analyzing gasnete_eopaddr_isnil(EOPADDR_NIL)
WarningFilter:  cc_gnu || cc_clang; .*?gasnet_extended.*? warning: self-comparison always evaluates to true .*?
# Warning due to conflict with cloned portable_platform.h in vendor-provided Open MPI
WarningFilter:  os_solaris && cc_sun ; .*?mpi_portable_platform.*?warning: macro redefined: PLATFORM_.*?
# Filter "may be used uninitialized" warnings due to weaknesses in gcc-4.4.7 on BG/Q
# However, by design this filter will *not* match occurrences in the pami-conduit directory
WarningFilter:  os_bgq && cc_gnu; '.*?(?<!/pami-conduit)/[a-z_]+\.[ch]:[0-9]+: warning: .[a-zA-Z0-9_]+. may be used uninitialized in this function'

TestName:       testgasnet-parsync
FileLimit:      1000 + 2300 * $THREADS$ # SEGMENT_EVERYTHING, hostnames and pathnames make this limit problematic
#Fixed in SS12.2+#KnownFailure: compile-failure ; cc_sun && (cpu_i386 || cpu_x86_64) && nodebug ; bug 2710 (Sun CC crash compiling testgasnet)
## May fail user backtrace test if $TMPDIR is not valid on compute node(s)

# ------------------------------------------
# Conduit-specific test
TestName:	testconduitspecific
DynamicThreads: 2    # limit threads to prevent output overflow
#KnownFailure: run-all ; cpu_x86_64 && network_elan ; bug1444 (elan exceptions on elan4/Opteron mu & hive) 
# Only if testconduitspecific == testam:
WarningFilter: cc_clang ; .*?/tests/test(.h|am.c):[0-9:]* warning: self-comparison always evaluates to false .*?
