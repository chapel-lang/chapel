# This suite is independent of UPC compiler:
KnownFailureAnySpec

BEGIN_DEFAULT_CONFIG
# debug harness runs  - ensure Chapel will also use a debug build:
MakeFlags:      debug; CHPL_COMM_DEBUG=1
# compiler families known to Chapel *only* where default is not sufficient
MakeFlags:      cc_intel && !os_cnl; CHPL_HOST_COMPILER=intel
MakeFlags:      cc_pgi   && !os_cnl; CHPL_HOST_COMPILER=pgi
MakeFlags:      cc_gnu && os_darwin; CHPL_HOST_COMPILER=gnu
MakeFlags:      cc_pathscale       ; CHPL_HOST_COMPILER=pathscale
MakeFlags:      cc_clang           ; CHPL_HOST_COMPILER=clang
MakeFlags:      cc_xlc             ; CHPL_HOST_COMPILER=ibm
#
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:         
RunCmd:         env -u "BASH_FUNC_module()" %P -nl %N %A
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,chapel
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
# Sigh - builds are far too noisy to apply precise filters
WarningFilter:  .*?(chpl__auto_destroy_Error|error|warning|WARNING).*?
END_DEFAULT_CONFIG

# TODO: teach harness how to rm the _real files?
# TODO: BenchmarkResults are all misreported as MFLOPS due to harness limitations

# ------------------------------------------
# Tests to compile, but not run

TestName:	_chapel
MakeFlags:      debug; CHPL_DEVELOPER=1
CompileTimeLimit: 8 * $DEFAULT$
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

# ------------------------------------------
# General tests from examples/

TestName:       hello4-datapar-dist
DynamicThreads: 2
PassExpr:       from iteration 100 of 100

TestName:       hello6-taskpar-dist
DynamicThreads: 2
PassExpr:       from locale 1 of 2
SaveOutput:     1 # to diagnose spawner misbehaviors

# ------------------------------------------
# HPCC benchmarks

TestName:	ra
AppArgs:	--n=10
DynamicThreads: 3
PassExpr:	Validation: SUCCESS
BenchmarkResult:Performance \(GUPS\) = ([0-9.eE+-]+)

TestName:	ra-atomics
AppArgs:	--n=16 --N_U=4096
DynamicThreads: 3
PassExpr:	Validation: SUCCESS
BenchmarkResult:Performance \(GUPS\) = ([0-9.eE+-]+)

TestName:	fft
AppArgs:	--printArrays=false --useRandomSeed=false --n=5
DynamicThreads: 4
PassExpr:	Validation: SUCCESS
BenchmarkResult:Performance \(Gflop/s\) = ([0-9.eE+-]+)

TestName:	ptrans
AppArgs:	--numrows=100 --rowBlkSize=3 --colBlkSize=5
DynamicThreads: 3
PassExpr:	Validation: SUCCESS
BenchmarkResult:Performance \(GB/s\) = ([0-9.eE+-]+)

TestName:	hpl
AppArgs:	--printArrays=false --useRandomSeed=false --n=30
DynamicThreads: 3
PassExpr:	Validation: SUCCESS
BenchmarkResult:Performance \(Gflop/s\) = ([0-9.eE+-]+)

# ------------------------------------------
# ISX benchmark

TestName:	isx-strong
AppArgs:	--testrun=true --mode=strong  --printTimings=false --perBucketMultiply=1
DynamicThreads: 4
PassExpr:	Verification successful!

TestName:	isx-weak
AppArgs:	--testrun=true --mode=weak    --printTimings=false --perBucketMultiply=1
DynamicThreads: 4
PassExpr:	Verification successful!

TestName:	isx-weakISO
AppArgs:	--testrun=true --mode=weakISO --printTimings=false --perBucketMultiply=1
DynamicThreads: 4
PassExpr:	Verification successful!

# ------------------------------------------
# SCCA2 benchmark

TestName:	ssca2_rmat
AppArgs:	--TEST_TORUS_1D=true --TEST_TORUS_2D=true --TEST_TORUS_3D=true --TEST_TORUS_4D=true --dataParTasksPerLocale=4
PassExpr:	Computed betweenness centrality satisfies
FailExpr:	Computed betweenness centrality does not
DynamicThreads: 2

TestName:	ssca2_1d
AppArgs:	--TEST_TORUS_1D=true --TEST_TORUS_2D=true --TEST_TORUS_3D=true --TEST_TORUS_4D=true --dataParTasksPerLocale=4
PassExpr:	Computed betweenness centrality satisfies
FailExpr:	Computed betweenness centrality does not
DynamicThreads: 2

TestName:	ssca2_2d
AppArgs:	--TEST_TORUS_1D=true --TEST_TORUS_2D=true --TEST_TORUS_3D=true --TEST_TORUS_4D=true --dataParTasksPerLocale=4
DynamicThreads: 2
PassExpr:	Computed betweenness centrality satisfies
FailExpr:	Computed betweenness centrality does not
TimeLimit:	$DEFAULT$ * 2

TestName:	ssca2_3d
AppArgs:	--TEST_TORUS_1D=true --TEST_TORUS_2D=true --TEST_TORUS_3D=true --TEST_TORUS_4D=true --dataParTasksPerLocale=4
DynamicThreads: 2
PassExpr:	Computed betweenness centrality satisfies
FailExpr:	Computed betweenness centrality does not
TimeLimit:	$DEFAULT$ * 3
RequireFeature: gasnet,chapel,chapel_full # too slow for "smoke testing"

TestName:	ssca2_4d
AppArgs:	--TEST_TORUS_1D=true --TEST_TORUS_2D=true --TEST_TORUS_3D=true --TEST_TORUS_4D=true --dataParTasksPerLocale=4
DynamicThreads: 2
PassExpr:	Computed betweenness centrality satisfies
FailExpr:	Computed betweenness centrality does not
TimeLimit:	$DEFAULT$ * 4
RequireFeature: gasnet,chapel,chapel_full # too slow for "smoke testing"

# ------------------------------------------
# Clean up - MUST BE LAST
TestName:       _chapel_clean
RequireFeature: gasnet,chapel,chapel_clean
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0
# ------------------------------------------
# DO NOT ADD ANY TESTS BELOW THIS LINE
