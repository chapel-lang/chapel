# This suite is independent of UPC compiler:
KnownFailureAnySpec

BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
TimeLimit:      0
RequireFeature: gasnet_has_mpi
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
ProcPerNode:    1
Pthreads:       0
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

TestName:	check-exports
RequireFeature: gasnet_has_mpi,cc_gnu # Other compilers have too many odd symbol manglings

TestName:	amxdist
RequireFeature: gasnet_has_mpi,amx_standalone # This tests stand-alone functionality and is off by default
PassExpr: 	ready for distribution

TestName:	tests
ProhibitFeature: network_mpi # handled below

TestName:	distcheck
RequireFeature: gasnet_has_mpi,amx_standalone # This tests stand-alone functionality and is off by default
AppArgs:        100 P
TimeLimit:      $DEFAULT$
RunCmd:		./gasnetrun_mpi -np %N %P %A
WarningFilter:  WARNING: Using Makefile.generic.*?
WarningFilter:  .*?-Wunused.*?
WarningFilter:  .*?AMMPI_Error.*?
WarningFilter:  .*?warning: statement not reached.*?
# Warning due to conflict with cloned portable_platform.h in vendor-provided Open MPI
WarningFilter:  os_solaris && cc_sun ; .*?mpi_portable_platform.*?warning: macro redefined: PLATFORM_.*?
PassExpr: Slave 0 done.

BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
StaticThreads:  0
CompileResult:  pass
RunCmd:		./gasnetrun_mpi -np %N %P %A
PassExpr: 	0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
TimeLimit:      $DEFAULT$
RequireFeature: network_mpi
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
ProcPerNode:    1
Pthreads:       0
END_DEFAULT_CONFIG

# ------------------------------------------
# General run tests 

TestName: testping
AppArgs: 100 P
PassExpr: microseconds total
BenchmarkResult: (\S+)\s*(us / request)

TestName: testlatency
AppArgs: 100 P
PassExpr: microseconds total
BenchmarkResult: (\S+)\s*(us / request)

TestName: testlatencyM
AppArgs: 100 P 64
PassExpr: microseconds total
BenchmarkResult: (\S+)\s*(us / request)

TestName: testbulk
AppArgs: 100 1048576 P H
PassExpr: microseconds total
BenchmarkResult: Slave.*?throughput:\s*(\S+)\s*(KB/sec)

TestName: testam
AppArgs: 100 P
PassExpr: Slave 0 done.

TestName: testbounce
AppArgs: 100 P
PassExpr: microseconds total
BenchmarkResult: Slave 0.*?throughput:\s*(\S+)\s*(KB/sec)

TestName: testreduce 
PassExpr: Result verified!

TestName: testgetput
AppArgs: 100
PassExpr: Proc 0 verified.

TestName: testreadwrite
AppArgs: 100
PassExpr: Proc 0 verified.

