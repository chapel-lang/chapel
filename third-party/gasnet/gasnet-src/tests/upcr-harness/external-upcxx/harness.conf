# This suite is independent of UPC compiler:
KnownFailureAnySpec

# ------------------------------------------
# Single-threaded tests
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,upcxx
RunCmd:         ./launcher -np %N %P %A
MakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1
MakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0
SaveOutput: 1
WarningFilter:  all ; '.*?warning: command line option .-Wnested-externs. is valid for C.*?'
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

TestName:	_upcxx
CompileTimeLimit: 4 * $DEFAULT$
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

TestName:	_upcxx-inst-SEQ
CompileTimeLimit: 4 * $DEFAULT$
WarningFilter:  all ; 'WARNING: .* platform has not been validated.*?\nWARNING:.*?'
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

# ------------------------------------------
# Tests that don't use GASNet
# Can only be safely launched as a local executable

TestName:       hello-seq
DynamicThreads: 1
RunCmd:         %P %A
PassExpr:       ^Hello world

TestName:       future-seq
DynamicThreads: 1
RunCmd:         %P %A

TestName:       multifile-seq
DynamicThreads: 1
RunCmd:         %P %A
PassExpr:       ^Hello from

# ------------------------------------------
# General Tests:

TestName:       hello_gasnet-seq
PassExpr:       ^Hello from 0

TestName:       hello_upcxx-seq
PassExpr:       ^Hello from 0

TestName:       dist_object-seq

TestName:       rpc_barrier-seq

TestName:       rpc_ff_ring-seq

TestName:       rput-seq

TestName:       atomics-seq

TestName:       collectives-seq

TestName:       uts_ranks-seq

TestName:       vis-seq
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 127 (Mac+gcc+VIS breaks on lpc operation with seq and par)

TestName:       vis_stress-seq

# ------------------------------------------
# Regression suite:

TestName: 	issue88-seq

TestName: 	issue108-seq

TestName: 	issue128-seq

# ------------------------------------------
# Guide examples:

TestName:       hello-world-seq
PassExpr:       ^Hello world from

TestName:       compute-pi-seq
AppArgs:        10000
PassExpr:       ^pi estimate: 3.1

TestName:       compute-pi-multi-examples-seq
AppArgs:        10000

TestName:       rb1d-av-seq
PassExpr:       ^Converged at

TestName:       dmap-test-seq

TestName:       dmap-async-insert-test-seq

TestName:       dmap-async-find-test-seq

TestName:       dmap-quiescence-test-seq

TestName:       dmap-atomics-test-seq

TestName:       dmap-conjoined-test-seq

TestName:       dmap-promises-test-seq

TestName:       non-contig-example-seq

TestName:       view-histogram1-seq

TestName:       view-histogram2-seq

# ------------------------------------------
# Multi-threaded tests
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:
TimeLimit:      $DEFAULT$
RequireFeature: pthread_support,gasnet,upcxx
RunCmd:         ./launcher -np %N %P %A
MakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1
MakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0
SaveOutput: 1
WarningFilter:  all ; '.*?warning: command line option .-Wnested-externs. is valid for C.*?'
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

TestName:	_upcxx-inst-PAR
CompileTimeLimit: 4 * $DEFAULT$
WarningFilter:  all ; 'WARNING: .* platform has not been validated.*?\nWARNING:.*?'
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

# ------------------------------------------
# Tests that don't use GASNet
# Can only be safely launched as a local executable

TestName:       uts_threads-par
DynamicThreads: 1
RunCmd:         %P %A
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)

TestName:       lpc_barrier-par
DynamicThreads: 1
RunCmd:         %P %A
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)

TestName:       uts_omp-par
DynamicThreads: 1
RunCmd:         %P %A
ProhibitFeature: missing_openmp
#MakeFlags:      UPCXX_TEST_FLAGS="-fopenmp"  # added by nobs
AppEnv:         OMP_NUM_THREADS=10
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 92 (aka issue 49)
# OpenMP library yields this warning on Cray systems:
WarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'

# ------------------------------------------
# General Tests:

TestName:       hello_gasnet-par
PassExpr:       ^Hello from 0

TestName:       hello_upcxx-par
PassExpr:       ^Hello from 0

TestName:       dist_object-par

TestName:       rpc_barrier-par

TestName:       rpc_ff_ring-par

TestName:       rput-par

TestName:       atomics-par

TestName:       collectives-par

TestName:       vis-par
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 127 (Mac+gcc+VIS breaks on lpc operation with seq and par)

TestName:       vis_stress-par

TestName:       uts_ranks-par

TestName:       uts_hybrid-par
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)

TestName:       uts_omp_ranks-par
ProhibitFeature: missing_openmp
#MakeFlags:      UPCXX_TEST_FLAGS="-fopenmp"  # added by nobs
AppEnv:         OMP_NUM_THREADS=4
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)
#KnownFailure:   run-all ; os_linux && cc_clang ; issue 93 (uts_omp_ranks crash w/ clang on Linux/x86-64)
# OpenMP library yields this warning on Cray systems:
WarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'

# ------------------------------------------
# Regression suite:

TestName: 	issue88-par

TestName: 	issue108-par

TestName: 	issue128-par

# ------------------------------------------
# Guide examples:

TestName:       hello-world-par
PassExpr:       ^Hello world from

TestName:       compute-pi-par
AppArgs:        10000
PassExpr:       ^pi estimate: 3.1

TestName:       compute-pi-multi-examples-par
AppArgs:        10000

TestName:       rb1d-av-par
PassExpr:       ^Converged at

TestName:       dmap-test-par

TestName:       dmap-async-insert-test-par

TestName:       dmap-async-find-test-par

TestName:       dmap-quiescence-test-par

TestName:       dmap-atomics-test-par

TestName:       dmap-conjoined-test-par

TestName:       dmap-promises-test-par

TestName:       non-contig-example-par

TestName:       view-histogram1-par

TestName:       view-histogram2-par

TestName:       view-matrix-tasks-par

TestName:       persona-example-par

TestName:       persona-example-rputs-par

