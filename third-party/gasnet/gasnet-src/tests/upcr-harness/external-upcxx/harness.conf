# This suite is independent of UPC compiler:
KnownFailureAnySpec

# ------------------------------------------
# Single-threaded tests
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:	        report_file=-
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,upcxx
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
RunCmd:         ./launcher -np %N %P %A
MakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug
MakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3
SaveOutput: 1
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

TestName:	_upcxx
CompileTimeLimit: 4 * $DEFAULT$
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

TestName:	_upcxx-inst-SEQ
CompileTimeLimit: 4 * $DEFAULT$
WarningFilter:  all ; 'WARNING: .* platform has not been validated.*?\nWARNING:.*?'
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

# ------------------------------------------
# Tests that don't use GASNet
# Can only be safely launched as a local executable

TestName:       hello-seq
DynamicThreads: 1
RunCmd:         %P %A
PassExpr:       ^Hello world

TestName:       future-seq
DynamicThreads: 1
RunCmd:         %P %A

TestName:       multifile-seq
DynamicThreads: 1
RunCmd:         %P %A
PassExpr:       ^Hello from

TestName:       serialization-seq
DynamicThreads: 1
RunCmd:         %P %A

# ------------------------------------------
# General Tests:

TestName:       hello_gasnet-seq
PassExpr:       ^Hello from 0

TestName:       hello_upcxx-seq
PassExpr:       ^Hello from 0

TestName:       dist_object-seq

TestName:       barrier-seq

TestName:       rpc_barrier-seq

TestName:       rpc_ff_ring-seq

TestName:       rput-seq

TestName:       rput_rpc_cx-seq

TestName:       atomics-seq

TestName:       collectives-seq

TestName:       local_team-seq

TestName:       uts_ranks-seq

TestName:       vis-seq
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 127 (Mac+gcc+VIS breaks on lpc operation with seq and par)

TestName:       vis_stress-seq

TestName:       alloc-seq
AppArgs:        10
FileLimit:      100 + 2200 * $THREADS$

TestName:       copy-seq
FailExpr:       WARNING: UPC.. CUDA support

# ------------------------------------------
# Benchmarks:
# The BenchmarkResult units below are in bytes/sec, but there's no way to express that in harness

TestName:       put_flood-seq
TimeLimit:      2*$DEFAULT$
BenchmarkResult: size=8, kind="lat", how="upcxx".*?bw=([^,]+)(,)
#KnownFailure:     run-all ; (cc_clang || cc_gnu) && nodebug ; issue 184 (bench/put_flood crashes on clang-7/opt/Linux)

TestName:       nebr_exchange-seq
BenchmarkResult: bw=([^,]+),.*?via="rput"(,)
KnownFailure:   run-crash ; os_cygwin && cc_clang ; issue 188 (bench/nebr_exchange crash on Cygwin/clang)

TestName:       cuda_microbenchmark-seq
AppArgs:        10 10
AppEnv:         UPCXX_SHARED_HEAP_SIZE=1GB
BenchmarkResult: message size = 4194304 byte.*?\n\s*Local GPU -> Remote GPU:[^,]+, ([^ ]+) (GB/s)
RequireFeature: upcxx_cuda

# ------------------------------------------
# Regression suite:

TestName: 	issue88-seq

TestName: 	issue108-seq

TestName: 	issue128-seq

TestName: 	issue138-seq
AppEnv:         UPCXX_SHARED_HEAP_SIZE=128MB

TestName: 	issue140-seq
TimeLimit:      $DEFAULT$ / 4
#KnownFailure:   run-time ; all ; issue 140 (upcxx::discharge() does not discharge remote_cx::as_rpc())

TestName: 	issue141-seq

TestName: 	issue142-seq
KnownFailure:   run-all ; debug ; issue 142 (UPCXX_THREADMODE=seq breaks after liberate_master_persona())

TestName: 	issue170-seq

TestName: 	issue185-seq
TimeLimit:      0

TestName: 	issue210-seq

TestName: 	issue219-seq
TimeLimit:      0

TestName: 	issue223-seq
PassExpr:       done.

TestName: 	issue224-seq
TimeLimit:      0

TestName: 	issue234-seq
#KnownFailure:   compile-all ; ; issue 234 (Generalized operation completion for barrier_async and broadcast)

TestName: 	issue242-seq
AppArgs:        100 
AppEnv:         GASNET_BACKTRACE=0  # skip backtraces for known crash
KnownFailure:   run-crash ; ; issue 242 (Lack of backpressure in RPC injection leads to obscure memory-exhaustion crashes)

# ------------------------------------------
# Guide examples:

TestName:       hello-world-seq
PassExpr:       ^Hello world from

TestName:       compute-pi-seq
AppArgs:        10000
PassExpr:       ^pi estimate: 3.1

TestName:       compute-pi-multi-examples-seq
AppArgs:        10000

TestName:       rb1d-av-seq
PassExpr:       ^Converged at

TestName:       dmap-test-seq

TestName:       dmap-async-insert-test-seq

TestName:       dmap-async-find-test-seq

TestName:       dmap-quiescence-test-seq

TestName:       dmap-atomics-test-seq

TestName:       dmap-conjoined-test-seq

TestName:       dmap-promises-test-seq

TestName:       team_simple-seq

TestName:       team_advanced-seq

TestName:       non-contig-example-seq

TestName:       view-histogram1-seq

TestName:       view-histogram2-seq

TestName:       h-d-seq
FailExpr:       Failure
PassExpr:       Success
RequireFeature: upcxx_cuda

TestName:       h-d-remote-seq
FailExpr:       Failure
PassExpr:       Success
RequireFeature: upcxx_cuda

# ------------------------------------------
# upcxx-extras

TestName:       allocator-example-seq

# ------------------------------------------
# misc examples

TestName:       cuda_vecadd-seq
RequireFeature: upcxx_cuda_compute_30

# ------------------------------------------
# Multi-threaded tests
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:	        report_file=-
TimeLimit:      $DEFAULT$
RequireFeature: gasnet_has_par,upcxx
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
RunCmd:         ./launcher -np %N %P %A
MakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug
MakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3
SaveOutput: 1
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

TestName:	_upcxx-inst-PAR
CompileTimeLimit: 4 * $DEFAULT$
WarningFilter:  all ; 'WARNING: .* platform has not been validated.*?\nWARNING:.*?'
# `clang++ -std=c++14 -pedantic` warns if (as is the case in some of our automated
# testing) GASNet configure's value of `CXX` lacks `-pedantic` and thus detects
# support for this attribute.
WarningFilter:  cc_clang ; '.*?warning: use of the .fallthrough. attribute is a C\+\+.. extension.*?'
# So this test can match the "runnable" filter:
RunCmd:         true
PassExpr:       0

# ------------------------------------------
# Tests that don't use GASNet
# Can only be safely launched as a local executable

TestName:       hello_threads-par
DynamicThreads: 1
RunCmd:         %P %A
PassExpr:       ^Done
MakeFlags: static_link ; UPCXX_TEST_FLAGS="-Wl,--whole-archive -lpthread -Wl,--no-whole-archive"
#KnownFailure:   run-crash ; os_cnl ; Bug 3813 - Crashes using C++11 threads on Cray systems

TestName:       serialization-par
DynamicThreads: 1
RunCmd:         %P %A

TestName:       uts_threads-par
DynamicThreads: 1
RunCmd:         %P %A
MakeFlags: static_link ; UPCXX_TEST_FLAGS="-Wl,--whole-archive -lpthread -Wl,--no-whole-archive"
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)
#KnownFailure:   run-crash ; os_cnl ; Bug 3813 - Crashes using C++11 threads on Cray systems

TestName:       lpc_barrier-par
DynamicThreads: 1
RunCmd:         %P %A
MakeFlags: static_link ; UPCXX_TEST_FLAGS="-Wl,--whole-archive -lpthread -Wl,--no-whole-archive"
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)
#KnownFailure:   run-crash ; os_cnl ; Bug 3813 - Crashes using C++11 threads on Cray systems

TestName:       uts_omp-par
DynamicThreads: 1
RunCmd:         %P %A
ProhibitFeature: missing_openmp
#MakeFlags:      UPCXX_TEST_FLAGS="-fopenmp"  # added by nobs
AppEnv:         OMP_NUM_THREADS=10
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 92 (aka issue 49)
# OpenMP library yields this warning on Cray systems:
WarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'

# ------------------------------------------
# General Tests:

TestName:       hello_gasnet-par
PassExpr:       ^Hello from 0

TestName:       hello_upcxx-par
PassExpr:       ^Hello from 0

TestName:       dist_object-par

TestName:       barrier-par

TestName:       rpc_barrier-par

TestName:       rpc_ff_ring-par

TestName:       rput-par

TestName:       rput_rpc_cx-par

TestName:       rput_thread-par

TestName:       atomics-par

TestName:       collectives-par

TestName:       local_team-par

TestName:       vis-par
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 127 (Mac+gcc+VIS breaks on lpc operation with seq and par)

TestName:       vis_stress-par

TestName:       alloc-par
AppArgs:        10
FileLimit:      100 + 2200 * $THREADS$

TestName:       copy-par
FailExpr:       WARNING: UPC.. CUDA support

TestName:       view-par

TestName:       uts_ranks-par

TestName:       uts_hybrid-par
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)

TestName:       uts_omp_ranks-par
ProhibitFeature: missing_openmp
#MakeFlags:      UPCXX_TEST_FLAGS="-fopenmp"  # added by nobs
AppEnv:         OMP_NUM_THREADS=4
#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)
#KnownFailure:   run-all ; os_linux && cc_clang ; issue 93 (uts_omp_ranks crash w/ clang on Linux/x86-64)
# OpenMP library yields this warning on Cray systems:
WarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'

TestName:       rput_omp-par
ProhibitFeature: missing_openmp
#MakeFlags:      UPCXX_TEST_FLAGS="-fopenmp"  # added by nobs
AppEnv:         OMP_NUM_THREADS=4
# OpenMP library yields this warning on Cray systems:
WarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'

# ------------------------------------------
# Benchmarks:

TestName:       put_flood-par
TimeLimit:      2*$DEFAULT$
BenchmarkResult: size=8, kind="lat", how="upcxx".*?bw=([^,]+)(,)
#KnownFailure:     run-all ; (cc_clang || cc_gnu) && nodebug ; issue 184 (bench/put_flood crashes on clang-7/opt/Linux)

TestName:       nebr_exchange-par
BenchmarkResult: bw=([^,]+),.*?via="rput"(,)
KnownFailure:   run-crash ; os_cygwin && cc_clang ; issue 188 (bench/nebr_exchange crash on Cygwin/clang)

TestName:       cuda_microbenchmark-par
AppArgs:        10 10
AppEnv:         UPCXX_SHARED_HEAP_SIZE=1GB
BenchmarkResult: message size = 4194304 byte.*?\n\s*Local GPU -> Remote GPU:[^,]+, ([^ ]+) (GB/s)
RequireFeature: gasnet_has_par,upcxx_cuda

# ------------------------------------------
# Regression suite:

TestName: 	issue88-par

TestName: 	issue108-par

TestName: 	issue128-par

TestName: 	issue138-par
AppEnv:         UPCXX_SHARED_HEAP_SIZE=128MB

TestName: 	issue140-par
TimeLimit:      $DEFAULT$ / 4
#KnownFailure:   run-time ; all ; issue 140 (upcxx::discharge() does not discharge remote_cx::as_rpc())

TestName: 	issue141-par

TestName: 	issue142-par

TestName: 	issue168-par
TimeLimit:      $DEFAULT$ / 4  # expected to deadlock and time out
#KnownFailure:   run-all ; ; issue 168 (upcxx::progress_required always return 0 for rpc chain with cx as lpc)

TestName: 	issue170-par

TestName: 	issue185-par
TimeLimit:      0

TestName: 	issue210-par

TestName: 	issue219-par
TimeLimit:      0

TestName: 	issue223-par
PassExpr:       done.

TestName: 	issue224-par
TimeLimit:      0

TestName: 	issue234-par
#KnownFailure:   compile-all ; ; issue 234 (Generalized operation completion for barrier_async and broadcast)

TestName: 	issue242-par
AppArgs:        100 
AppEnv:         GASNET_BACKTRACE=0  # skip backtraces for known crash
KnownFailure:   run-crash ; ; issue 242 (Lack of backpressure in RPC injection leads to obscure memory-exhaustion crashes)

# ------------------------------------------
# Guide examples:

TestName:       hello-world-par
PassExpr:       ^Hello world from

TestName:       compute-pi-par
AppArgs:        10000
PassExpr:       ^pi estimate: 3.1

TestName:       compute-pi-multi-examples-par
AppArgs:        10000

TestName:       rb1d-av-par
PassExpr:       ^Converged at

TestName:       dmap-test-par

TestName:       dmap-async-insert-test-par

TestName:       dmap-async-find-test-par

TestName:       dmap-quiescence-test-par

TestName:       dmap-atomics-test-par

TestName:       dmap-conjoined-test-par

TestName:       dmap-promises-test-par

TestName:       team_simple-par

TestName:       team_advanced-par

TestName:       non-contig-example-par

TestName:       view-histogram1-par

TestName:       view-histogram2-par

TestName:       view-matrix-tasks-par

# persona-example spins 11 threads/proc, leading to overcommit,
# so turn down the proc count and iteration count
TestName:       persona-example-par
DynamicThreads: 2
AppArgs:        1000
AppEnv:         UPCXX_OVERSUBSCRIBED=1
KnownFailure:   run-time ; upcxx_lpc_inbox_locked ; issue 245 (persona-example deadlocks with UPCXX_LPC_INBOX=locked)

TestName:       persona-example-rputs-par

TestName:       h-d-par
FailExpr:       Failure
PassExpr:       Success
RequireFeature: gasnet_has_par,upcxx_cuda

TestName:       h-d-remote-par
FailExpr:       Failure
PassExpr:       Success
RequireFeature: gasnet_has_par,upcxx_cuda

# ------------------------------------------
# upcxx-extras

TestName:       allocator-example-par

# ------------------------------------------
# misc examples

TestName:       cuda_vecadd-par
RequireFeature: gasnet_has_par,upcxx_cuda_compute_30

# ------------------------------------------
# upcxx-extras : guppie
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       passed
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,upcxx
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
RunCmd:         ./launcher -np %N %P %A
# Note "reset" of LDFLAGS avoids problems with those in harness environment
MakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug LDFLAGS=
MakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3    LDFLAGS=
SaveOutput: 1
BenchmarkResult: rate\s*=\s*(\S+)\s*(Mup/s)
AppArgs: 	-l20 -m1 -h0
END_DEFAULT_CONFIG

TestName:       guppie-rma-seq
AppArgs: 	-l20 -m1 -h0.10

TestName:       guppie-amo-seq

TestName:       guppie-amo-pipe-seq

TestName:       guppie-rpc-seq

TestName:       guppie-rpc_ff-seq

TestName:       guppie-rma-par
RequireFeature: gasnet_has_par,upcxx
AppArgs: 	-l20 -m1 -h0.10

TestName:       guppie-amo-par
RequireFeature: gasnet_has_par,upcxx

TestName:       guppie-amo-pipe-par
RequireFeature: gasnet_has_par,upcxx

TestName:       guppie-rpc-par
RequireFeature: gasnet_has_par,upcxx

TestName:       guppie-rpc_ff-par
RequireFeature: gasnet_has_par,upcxx

# ------------------------------------------
# upcxx-extras : jac3d
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       FAIL
ExitCode:       0
BuildCmd:       make,notrans
AppEnv:
TimeLimit:      $DEFAULT$
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
RunCmd:         ./launcher -np %N %P %A
MakeFlags:      debug   ; OPT=-g
MakeFlags:      nodebug ; OPT=-O3
SaveOutput: 1
BenchmarkResult: GFLOPS\s*:\s*([^\n]+)\n(?:.|\n)*?(Gflops)
AppArgs: 	-N 256 -i 1000 
END_DEFAULT_CONFIG

TestName:       jac3d-seq
RequireFeature: upcxx_cuda_compute_30

TestName:       jac3d-par
RequireFeature: gasnet_has_par,upcxx_cuda_compute_30

# ------------------------------------------
# upcxx-extras : extend-add
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       FAIL
ExitCode:       0
BuildCmd:       make,notrans
AppEnv:
TimeLimit:      $DEFAULT$ * 3
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
RunCmd:         ./launcher -np %N %P %A
# Note "reset" of LDFLAGS avoids problems with those in harness environment
MakeFlags:      debug   ; OPT=-g  LDFLAGS=
MakeFlags:      nodebug ; OPT="-O3 -DNDEBUG" LDFLAGS=
MakeFlags:      cc_pgi ; UPCXX_EXTENDADD_EXTRA="-w -Mnoopenmp"
SaveOutput: 1
BenchmarkResult: multifrontal_factorization maximum value:\s*([^\s]+)\s*(s)
AppEnv:         UPCXX_SHARED_HEAP_SIZE=1GB
AppArgs: 	!UPCXX_EXTENDADD_INPUTPATH!/audikw_1/audikw_1_$THREADS$.dmp  
END_DEFAULT_CONFIG

TestName:       extend-add_upcxx-seq
RequireFeature: upcxx,upcxx_extendadd

TestName:       extend-add_upcxx-par
RequireFeature: gasnet_has_par,upcxx,upcxx_extendadd

TestName:       extend-add_mpi_p2p-seq
RunCmd:         ./launcher-mpi -np %N %P %A
RequireFeature: upcxx,upcxx_extendadd,gasnet_has_mpi

TestName:       extend-add_mpi_collective-seq
RunCmd:         ./launcher-mpi -np %N %P %A
RequireFeature: upcxx,upcxx_extendadd,gasnet_has_mpi

# ------------------------------------------
# UPC interoperability
# ------------------------------------------

BEGIN_DEFAULT_CONFIG
Flags:          
Files:          
DynamicThreads: $DEFAULT$
StaticThreads:  0
ProcPerNode:    1
Pthreads:       0
CompileResult:  pass
PassExpr:       SUCCESS
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
AppEnv:         GASNET_MAX_SEGSIZE=64MB UPC_SHARED_HEAP_SIZE=64MB UPCXX_SHARED_HEAP_SIZE=32MB
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,upcxx
ProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC
RunCmd:         ./launcher -np %N %P %A
MakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug
MakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3
SaveOutput: 1
END_DEFAULT_CONFIG

TestName:       upc-main_upc-seq

TestName:       upc-main_upcxx-seq

TestName:       upc-alloc-seq
AppArgs:        10 32
FileLimit:      1200 + 2000 * $THREADS$

TestName:       upc-arrval_upc-seq

TestName:       upc-arrval_upcxx-seq

# PAR UPC interop requires upcr/configure --enable-uses-threads and harness -add_feature=uses_threads_support

TestName:       upc-main_upc-par
RequireFeature: gasnet_has_par,upcxx,uses_threads_support

TestName:       upc-main_upcxx-par
RequireFeature: gasnet_has_par,upcxx,uses_threads_support

TestName:       upc-alloc-par
RequireFeature: gasnet_has_par,upcxx,uses_threads_support
AppArgs:        10 32
FileLimit:      1200 + 2000 * $THREADS$

TestName:       upc-arrval_upc-par
RequireFeature: gasnet_has_par,upcxx,uses_threads_support

TestName:       upc-arrval_upcxx-par
RequireFeature: gasnet_has_par,upcxx,uses_threads_support

# upcc -pthreads tests, require PAR UPC++ but not -uses-threads
#
TestName:       upc-pth_main_upc-par
RequireFeature: pthread_support,upcxx

TestName:       upc-pth_arrval_upc-par
RequireFeature: pthread_support,upcxx

