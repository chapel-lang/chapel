=========================================
Chapel third-party developer instructions
=========================================

For certain third-party packages the un-tarballed package contents are
in third-party/<package>/<package>-src/.  Version updates for those
should be done as follows, using GASNet as an example and assuming the
CWD is third-party/gasnet/:

1. un-tarball the new package version into the directory it specifies,
   for example GASNet-1.26.3
2. git rm -r gasnet-src
3. mv GASNet-1.26.3 gasnet-src
4. git add --force gasnet-src
   (the '--force' is needed so that it ignores our .gitignore)
5. commit
6. update the new sources by re-applying any needed patches and commit
   (some packages are patched and some not; third-party/<package>/README
   should say which is which)
7. PR, merge, etc.

For other third-party packages the un-tarballed package contents are in
third-party/<package>/<package>-<version>/.  This is our older layout
and we're moving away from it, but some packages still use it.  Version
updates are done as follows, using Qthreads as an example and assuming
the CWD is third-party/qthread/:

1. un-tarball the new package version into the directory it specifies,
   for example qthread-1.10
2. change Makefile.include to reference the new package dir
3. commit
4. update the new sources by re-applying any needed patches and commit
   (some packages are patched and some not; third-party/<package>/README
   should say which is which)
5. PR, merge, etc.
6. git rm the old package dir
7. PR, merge, etc.

(Note that Qthreads is not perfect here since it's not really released
in "versions" currently.  But as an example it's good enough.)



chpl-venv/
==========

README describes the use of the chpl-venv/ subdirectory to hold some
dependencies of chpldoc and the testing system.  As for those end-user
tools, chpl-venv is used to hold dependencies of the chplspell
developer tool.

See chplspell-requirements for a complete list of packages that are
installed.
