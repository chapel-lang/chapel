================
is* Type Queries
================

This README describes a set of type query functions
provided by the Types module in addition to the ones
documented in the Spec.

These functions:
* are 'param' procedures
* are not methods
* return a boolean
* are always available to a Chapel program

The naming and interface of these functions follow this pattern:

  // is the argument a 'record' type?
  proc isRecordType(type t) param ...
  proc isRecord(type t)     param return isRecordType(t);

  // is the type of the argument a 'record' type?
  proc isRecord(e)          param ...


(A) These queries check whether the argument is or has the
corresponding type:

  isVoid
  isBool
  isInt
  isUint
  isReal
  isImag
  isComplex
  isString

  isEnum
  isTuple
  isHomogeneousTuple  // see NOTE at end

  isClass
  isRecord
  isUnion

  isRange
  isDmap              // a dmap-wrapped distribution
  isDomain
  isArray

  isSync
  isSingle
  isAtomic


(B) These aggregate queries are also provided:

  isFloat      // real, imag
  isIntegral   // int, uint
  isNumeric    // int, uint, real, imag, complex

  isPrimitive  // primitive type as defined by the spec:
               //   void, bool, int, uint, real, imag, complex, string


(C) These queries indicate the kind of argument:

  isType(arg)   - true when the argument is a type, false otherwise
  isParam(arg)  - true when the argument is a param, false otherwise

There is no isTypeType or isParamType variants of these functions.


NOTE: isHomogeneousTuple(arg) is not defined when 'arg' is of a non-tuple
type. It is always defined if 'arg' itself is a type, whether it is
a tuple type or not.
