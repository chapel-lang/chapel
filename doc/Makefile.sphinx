# Makefile for Sphinx documentation

ifndef CHPL_MAKE_PYTHON
export CHPL_MAKE_PYTHON := $(shell $(CHPL_MAKE_HOME)/util/config/find-python.sh)
endif

CHPLDEPS = $(shell $(CHPL_MAKE_PYTHON) $(CHPL_MAKE_HOME)/util/chplenv/chpl_home_utils.py --chpldeps)
COPY_IF_DIFFERENT = $(CHPL_MAKE_PYTHON) $(CHPL_MAKE_HOME)/util/config/update-if-different --copy

# You can set these variables from the command line.
SPHINXOPTS    = -W -n
SPHINXBUILD = $(CHPL_MAKE_PYTHON) $(CHPLDEPS) sphinx-build
PAPER         =
SOURCEDIR     = rst
BUILDDIR      = ../build/doc
BUILDPATH     = $$CHPL_HOME/doc/$(BUILDDIR)

# Explicitly set author
export CHPLDOC_AUTHOR=Hewlett Packard Enterprise Development LP

# User-friendly check for sphinx-build
SPHINXERROR="Error - The '$(SPHINXBUILD)' command was not found. Make sure you \
have Sphinx installed, then set the SPHINXBUILD environment variable to point \
to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add \
the directory with the executable to your PATH. If you don't have Sphinx \
installed, grab it from http://sphinx-doc.org/"

# Internal variables.
PAPEROPT_a4     = -D latex_paper_size=a4
PAPEROPT_letter = -D latex_paper_size=letter
ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) $(SOURCEDIR)
# the i18n builder cannot share the environment and doctrees with the others
I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) $(SOURCEDIR)

.PHONY: help check-sphinxbuild clean-build html dirhtml singlehtml pickle json htmlhelp qthelp latex latexpdf text man changes linkcheck gettext

help-sphinx:
	@echo "Sphinx Help:"
	@echo "Please use \`make <target>' where <target> is one of the following:"
	@echo ""
	@echo "Special targets:"
	@echo "  html-release   html target moved with result moved into ./html"
	@echo "  html-dev       html-release target with no pre-reqs built"
	@echo "  check          check for broken links and cross-references"
	@echo ""
	@echo "Supported targets:"
	@echo "  html       to make standalone HTML files"
	@echo "  dirhtml    to make HTML files named index.html in directories"
	@echo "  singlehtml to make a single large HTML file"
	@echo "  text       to make text files"
	@echo "  man        to make manual pages"
	@echo "  check      to check all internal and external links for integrity"
	@echo ""
	@echo "Unsupported targets:"
	@echo "  pickle     to make pickle files"
	@echo "  json       to make JSON files"
	@echo "  htmlhelp   to make HTML files and a HTML help project"
	@echo "  qthelp     to make HTML files and a qthelp project"
	@echo "  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
	@echo "  latexpdf   to make LaTeX files and run them through pdflatex"
	@echo "  latexpdfja to make LaTeX files and run them through platex/dvipdfmx"
	@echo "  texinfo    to make Texinfo files"
	@echo "  info       to make Texinfo files and run them through makeinfo"
	@echo "  gettext    to make PO message catalogs"
	@echo "  changes    to make an overview of all changed/added/deprecated items"
	@echo "  xml        to make Docutils-native XML files"
	@echo "  pseudoxml  to make pseudoxml-XML files for display purposes"
	@echo ""

check-sphinxbuild:
	@echo
	@echo "Confirming that sphinx-build is available..."
	@if $(SPHINXBUILD) --version > /dev/null 2>&1 ; \
	then \
	  echo OK ; \
	else \
	  echo $(SPHINXERROR) ; \
	  exit 1 ; \
	fi

html-release: check-sphinxbuild source
	@echo
	@echo "Building HTML documentation"
	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
	@chmod -R ugo+rX $(BUILDDIR)
	@$(COPY_IF_DIFFERENT) util/versionButton.php $(BUILDDIR)/html/versionButton.php
	@echo "ErrorDocument 404 https://chapel-lang.org/docs/$(WEB_DOC_VERSION)/index.html" > $(BUILDDIR)/html/.htaccess
	@rm -Rf html
	@cp -R $(BUILDDIR)/html html
	@echo
	@echo "Build finished. The HTML pages are in "'$$CHPL_HOME'"/doc/html."

html-dev:
	@echo
	@echo "Building HTML documentation with no prerequisites (dev testing)"
	@echo "Warnings not treated as errors"
	$(SPHINXBUILD) -b html -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SOURCEDIR) $(BUILDDIR)/html
	@chmod -R ugo+rX $(BUILDDIR)
	rm -rf html
	cp -r $(BUILDDIR)/html .
	@echo
	@echo "Build finished. The HTML pages are in ./html."

html: check-sphinxbuild source
	@echo
	@echo "Building HTML documentation"
	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
	@chmod -R ugo+rX $(BUILDDIR)
	@echo
	@echo "Build finished. The HTML pages are in "'$(BUILDPATH)'"/html."

%.html: FORCE
	$(SPHINXBUILD) . build/html/$* && chmod -R ugo+rX build

check: check-sphinxbuild source
	@echo "Checking for broken links or cross-references"
	$(SPHINXBUILD) -n -b linkcheck -d $(BUILDDIR)/doctrees $(SOURCEDIR) $(BUILDDIR)/linkcheck
	@chmod -R ugo+rX $(BUILDDIR)
	@echo
	@echo "Link check complete; look for any errors in the above output " \
	      "or in "'$(BUILDPATH)'"/linkcheck/output.txt."

dirhtml: check-sphinxbuild source
	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
	@echo
	@echo "Build finished. The HTML pages are in "'$(BUILDPATH)'"/dirhtml."

singlehtml: check-sphinxbuild source
	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
	@echo
	@echo "Build finished. The HTML page is in "'$(BUILDPATH)'"/singlehtml."

pickle: check-sphinxbuild source
	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
	@echo
	@echo "Build finished; now you can process the pickle files."

json: check-sphinxbuild source
	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
	@echo
	@echo "Build finished; now you can process the JSON files."

htmlhelp: check-sphinxbuild source
	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
	@echo
	@echo "Build finished; now you can run HTML Help Workshop with the" \
	      ".hhp project file in "'$(BUILDPATH)'"/htmlhelp."

qthelp: check-sphinxbuild source
	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
	@echo
	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
	      ".qhcp project file in "'$(BUILDPATH)'"/qthelp, like this:"
	@echo "# qcollectiongenerator $(BUILDDIR)/qthelp/chpldoc.qhcp"
	@echo "To view the help file:"
	@echo "# assistant -collectionFile $(BUILDDIR)/qthelp/chpldoc.qhc"

latex: check-sphinxbuild source
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo
	@echo "Build finished; the LaTeX files are in "'$(BUILDPATH)'"/latex."
	@echo "Run \`make' in that directory to run these through (pdf)latex" \
	      "(use \`make latexpdf' here to do that automatically)."

latexpdf: check-sphinxbuild source
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo "Running LaTeX files through pdflatex..."
	$(MAKE) -C $(BUILDDIR)/latex all-pdf
	@echo "pdflatex finished; the PDF files are in "'$(BUILDPATH)'"/latex."

latexpdfja: check-sphinxbuild source
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo "Running LaTeX files through platex and dvipdfmx..."
	$(MAKE) -C $(BUILDDIR)/latex all-pdf-ja
	@echo "pdflatex finished; the PDF files are in "'$(BUILDPATH)'"/latex."

text: check-sphinxbuild source
	$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(BUILDDIR)/text
	@echo
	@echo "Build finished. The text files are in "'$(BUILDPATH)'"/text."

man: check-sphinxbuild source
	@echo
	@echo "Building man page documentation"
	$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(BUILDDIR)/man
	echo ".if n .pl 2000v" > $(BUILDDIR)/man/chapel.3
	cat $(BUILDDIR)/man/chapel.1 >> $(BUILDDIR)/man/chapel.3
	rm -f $(BUILDDIR)/man/chapel.1
	@echo
	@echo "Build finished. The manual pages are in "'$(BUILDPATH)'"/man."

texinfo: check-sphinxbuild source
	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
	@echo
	@echo "Build finished. The Texinfo files are in "'$(BUILDPATH)'"/texinfo."
	@echo "Run \`make' in that directory to run these through makeinfo" \
	      "(use \`make info' here to do that automatically)."

info: check-sphinxbuild source
	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
	@echo "Running Texinfo files through makeinfo..."
	make -C $(BUILDDIR)/texinfo info
	@echo "makeinfo finished; the Info files are in "'$(BUILDPATH)'"/texinfo."

gettext: check-sphinxbuild source
	$(SPHINXBUILD) -b gettext $(I18NSPHINXOPTS) $(BUILDDIR)/locale
	@echo
	@echo "Build finished. The message catalogs are in "'$(BUILDPATH)'"/locale."

changes: check-sphinxbuild source
	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
	@echo
	@echo "The overview file is in "'$(BUILDPATH)'"/changes."

linkcheck: check-sphinxbuild source
	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
	@echo
	@echo "Link check complete; look for any errors in the above output " \
	      "or in "'$(BUILDPATH)'"/linkcheck/output.txt."

xml: check-sphinxbuild source
	$(SPHINXBUILD) -b xml $(ALLSPHINXOPTS) $(BUILDDIR)/xml
	@echo
	@echo "Build finished. The XML files are in "'$(BUILDPATH)'"/xml."

pseudoxml: check-sphinxbuild source
	$(SPHINXBUILD) -b pseudoxml $(ALLSPHINXOPTS) $(BUILDDIR)/pseudoxml
	@echo
	@echo "Build finished. The pseudo-XML files are in "'$(BUILDPATH)'"/pseudoxml."

# Clean build

clean-build:
	@echo
	@echo "Cleaning all build files"
	rm -rf $(BUILDDIR)
	rm -rf html
