#!/bin/csh

#
# unsetenv normal Chapel environment variables
#
unsetenv CHPL_HOME
unsetenv CHPL_NIGHTLY_LOGDIR
unsetenv CHPL_DEVELOPER
unsetenv CHPL_HOST_PLATFORM
unsetenv CHPL_TARGET_PLATFORM
unsetenv CHPLDEVTMP

set mymake = $argv[1]

#
# execute actions specified in README
#
if ( $#argv == 0 ) then
    echo "usage: $argv[0] <make utility>"
    exit(1);
endif
source util/quickstart/setchplenv.csh
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: source of setchplenv.csh failed"
    exit($tmpstatus)
endif
$mymake
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: make failed"
    exit($tmpstatus)
endif
rehash   # required for csh only; if we convert this to bash, drop this
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: make failed"
    exit($tmpstatus)
endif
$mymake check
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: make check failed"
    exit($tmpstatus)
endif
chpl -o hello examples/hello.chpl
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: compilation of hello.chpl failed"
    exit($tmpstatus)
endif
./hello
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: execution of hello failed"
    exit($tmpstatus)
endif


#
# run make in examples directory
#
set nprocs = `python -c "import multiprocessing; print(multiprocessing.cpu_count())"`
cd examples
$mymake -j$nprocs
cd ..


#
# run test system on examples directory
#
cd examples
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: cd into examples failed"
    exit($tmpstatus)
endif
./start_test -logfile Logs/testReleaseHelp.log
set tmpstatus = $status
if ($tmpstatus != 0) then
    echo "ERROR: testing of examples failed"
    exit($tmpstatus)
endif

exit(0)
