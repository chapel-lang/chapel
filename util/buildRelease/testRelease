#!/usr/bin/env bash

# Converted from Perl to Bash. Original behavior preserved.
# Creates a test release tarball, unpacks it in a temp dir, runs tests, and cleans up on success.

set -e
set -x

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Keeping chplhomedir for parity with original (though unused later)
chplhomedir="$(cd "$script_dir/../.." && pwd)"

# Uniquifiers / meta (pid unused but kept for parity)
pid="$$"
user="$(whoami)"

chplhome="$CHPL_HOME"

# Determine base tmp directory
basetmpdir="${CHPL_NIGHTLY_TMPDIR:-${TMPDIR:-/tmp}}"
tmpdir="$basetmpdir/chapel-testRelease.$user.deleteme"

somethingfailed=0

mysystem() {
    local cmd="$1";
    local desc="$2";
    local fatal="$3";
    # Execute command
    eval "$cmd"
    local status=$?
    if [[ $status -ne 0 ]]; then
        somethingfailed=1
        echo "Error ${desc}: ${status}" >&2
        if [[ ${fatal:-0} -ne 0 ]]; then
            exit 1
        fi
    fi
    return $status
}

#
# make temp directory
#
mysystem "rm -rf $tmpdir" "removing previous tmp dir" 1
mysystem "mkdir -p $tmpdir > /dev/null" "creating temp dir" 1

#
# Remove previous tarball (non-fatal)
#
mysystem "rm -f $chplhome/tar/chapel-test.tar.gz" "deleting previous tarball" 0

#
# make release
#
mysystem "$chplhome/util/buildRelease/gen_release test" "creating release" 1

#
# copy release to temp directory, unpack, and run tests
#
mysystem "cp $chplhome/tar/chapel-test.tar.gz $tmpdir" "copying release" 1
mysystem "cd $tmpdir && gunzip chapel-test.tar.gz" "unzipping release" 1
mysystem "cd $tmpdir && tar xf chapel-test.tar" "untarring release" 1

# Run testReleaseHelp (capture chpl_make output first for clarity)
chpl_make_cmd_output="$("$chplhome"/util/chplenv/chpl_make.py)"
mysystem "cd $tmpdir/chapel-test && $chplhome/util/buildRelease/testReleaseHelp $chpl_make_cmd_output" "running testReleaseHelp script" 1

# Cleanup if everything succeeded
if [[ $somethingfailed -eq 0 ]]; then
    echo "Cleaning up"
    mysystem "rm -rf $tmpdir" "removing temp dir" 0
fi

exit 0
