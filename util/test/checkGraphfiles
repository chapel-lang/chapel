#!/usr/bin/env python
#
# Check that all .graph files are listed in $CHPL_HOME/test/*GRAPHFILES and
# that none of the .graph files listed have duplicate names
#

import sys, os, fnmatch
import fileReadHelp

# find chpl_home. default based on this file's current location from chpl_home
def_home = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..'))
chpl_home = os.getenv('CHPL_HOME', def_home)
testdir=os.path.join(chpl_home, 'test')

# find all the GRAPHFILES
graphfiles = [f for f in os.listdir(testdir) if f.endswith('GRAPHFILES') ]

# read all the .graph files listed in the GRAPHFILES
graphfiles_dot_graph_files = []
for graphfile in graphfiles:
    f = os.path.join(testdir, graphfile)
    graphfiles_dot_graph_files += fileReadHelp.ReadFileWithComments(f)

# get the absolute paths of the .graph files actually in the test dir
actual_dot_graph_files = []
for root, dirnames, filenames in os.walk(testdir):
    for filename in fnmatch.filter(filenames, '*.graph'):
        actual_dot_graph_files.append(os.path.join(root, filename))

# check that all the actual .graph files are listed in one of the GRAPHFILES
for g in actual_dot_graph_files:
    # get the name of the .graph file relative the test directory
    graphfilename = g[len(testdir)+1:]
    if graphfilename not in graphfiles_dot_graph_files:
        print('[Warning: {0} is missing from GRAPHFILES]'.format(graphfilename))

# check that all the .graph files listed in one of the GRAPHFILES exist
for g in graphfiles_dot_graph_files:
    # get the abs path for the .graph files listed in GRAPHFILES
    graphfilename = os.path.join(testdir, g)
    if graphfilename not in actual_dot_graph_files:
        print('[Warning: {0} listed in GRAPHFILES does not exist]'.format(graphfilename))

# check that no are no .graph files with duplicate names
graphset = {}
for g in actual_dot_graph_files:
    lowerbasename = os.path.basename(g).lower()
    if lowerbasename in graphset:
        print('[Warning: graph files must have unique, case insensitive, '
              'names: {0} and {1} do not]'.format(g, graphset[lowerbasename]))
    else:
        graphset[lowerbasename] = g

sys.exit(0)
