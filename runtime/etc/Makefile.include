# Copyright 2004-2018 Cray Inc.
# Other additional copyright holders may be indicated within.
# 
# The entirety of this work is licensed under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# 
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

CHPL_MAKE_HOST_TARGET = --target
include $(CHPL_MAKE_HOME)/make/Makefile.base


MAKE_COMP_GEN_CFLAGS =

# These Make ifdefs are used for printcompileline and printcflags
# in order to correctly set COMP_GEN_CFLAGS.
ifeq ($(COMP_GEN_WARN), 1)
  MAKE_COMP_GEN_CFLAGS += $(WARN_GEN_CFLAGS)
endif
MAKE_COMP_GEN_CFLAGS += $(SQUASH_WARN_GEN_CFLAGS)
ifeq ($(COMP_GEN_DEBUG), 1)
  MAKE_COMP_GEN_CFLAGS += $(DEBUG_CFLAGS)
  DEBUG = 1
else
  # no need for a NO_DEBUG_CFLAGS yet
  # MAKE_COMP_GEN_CFLAGS += $(NO_DEBUG_CFLAGS)
  DEBUG = 0
endif
ifeq ($(COMP_GEN_OPT), 1)
  MAKE_COMP_GEN_CFLAGS += $(OPT_CFLAGS)
  OPTIMIZE = 1
else
  MAKE_COMP_GEN_CFLAGS += $(NO_OPT_CFLAGS)
  OPTIMIZE = 0
endif
ifeq ($(COMP_GEN_SPECIALIZE), 1)
  MAKE_COMP_GEN_CFLAGS += $(SPECIALIZE_CFLAGS)
endif
# COMP_GEN_FLOAT_OPT = -1 -> IEEE strict
ifeq ($(COMP_GEN_FLOAT_OPT), -1)
  MAKE_COMP_GEN_CFLAGS += $(IEEE_FLOAT_GEN_CFLAGS)
endif
# COMP_GEN_FLOAT_OPT = 1 -> IEEE lax, optimize please
ifeq ($(COMP_GEN_FLOAT_OPT), 1)
  MAKE_COMP_GEN_CFLAGS += $(FAST_FLOAT_GEN_CFLAGS)
endif

COMP_GEN_CFLAGS = $(MAKE_COMP_GEN_CFLAGS) $(COMP_GEN_USER_CFLAGS)

include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.threads-$(CHPL_MAKE_THREADS)
-include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.tasks-$(CHPL_MAKE_TASKS)
include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.comm-$(CHPL_MAKE_COMM)
include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.mem-$(CHPL_MAKE_MEM)
-include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.unwind-$(CHPL_MAKE_UNWIND)
include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.gmp-$(CHPL_MAKE_GMP)
-include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.hwloc-$(CHPL_MAKE_HWLOC)
# Makefile.jemalloc-$(CHPL_MAKE_JEMALLOC) is included in Makefile.mem-jemalloc
include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.regexp-$(CHPL_MAKE_REGEXP)
include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.auxFilesys

# Get runtime headers and required -D flags.
# sets RUNTIME_INCLUDE_ROOT RUNTIME_CFLAGS RUNTIME_INCLS
include $(CHPL_MAKE_HOME)/runtime/make/Makefile.runtime.include

# RUNTIME_CFLAGS e.g. -DCHPL_TASKS_MODEL_H=... -DCHPL_THREADS_MODEL_H=...
#
# TODO (bradc): Note that the following results in all of our
# compiler-specific warning flags getting listed as part of GEN_FLAGS
# for the second time.  Ideally, we could separate all the aspects of
# the RUNTIME_CFLAGS that we need here (presumably, the -D's based on
# the above comment) from the overall RUNTIME_CFLAGS -- call it
# CHPL_DEFINE_FLAGS, say -- and only include those here.  I noticed
# this just before the release and it felt like too big a change to
# try and wedge in in the name of shorter compiler lines.
#
HEADER_CFLAGS = $(RUNTIME_CFLAGS)

GEN_CFLAGS += $(HEADER_CFLAGS)

GEN_LFLAGS += $(RUNTIME_LFLAGS)

CHPL_RT_INC_DIR = $(RUNTIME_INCLS)

ifndef CHPL_MAKE_RUNTIME_LIB
CHPL_MAKE_RUNTIME_LIB = $(CHPL_MAKE_HOME)/lib
endif

CHPL_RT_LIB_DIR = $(CHPL_MAKE_RUNTIME_LIB)/$(CHPL_MAKE_RUNTIME_SUBDIR)

x:
	@echo $(CHPL_MAKE_RUNTIME_LIB)

printincludesanddefines:
	@echo $(CHPL_MAKE_BASE_CFLAGS) $(RUNTIME_DEFS) $(RUNTIME_INCLS)

printcompileline:
	@echo $(CC) $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) $(CHPL_RT_INC_DIR)

printcxxcompileline:
	@echo $(CXX) $(CHPL_MAKE_BASE_CXXFLAGS) $(GEN_CXXFLAGS) $(COMP_GEN_CXXFLAGS) $(CHPL_RT_INC_DIR)

printcflags:
	@echo $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS)

printcxxflags:
	@echo $(CHPL_MAKE_BASE_CXXFLAGS) $(GEN_CXXFLAGS) $(COMP_GEN_CXXFLAGS)

printlibraries:
	@echo $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) -L$(CHPL_RT_LIB_DIR) \
	      -lchpl $(LIBS) -lm $(CHPL_MAKE_THIRD_PARTY_LINK_ARGS) $(CHPL_MAKE_BASE_LFLAGS)

printlinkline:
	@echo $(LD) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) -L$(CHPL_RT_LIB_DIR) \
	      -lchpl $(LIBS) -lm $(CHPL_MAKE_THIRD_PARTY_LINK_ARGS) $(CHPL_MAKE_BASE_LFLAGS)


printmaino:
	@echo $(CHPL_RT_LIB_DIR)/main.o

printllvminstall:
	@echo $(LLVM_INSTALL_DIR)

printclangcc:
	@echo $(CLANG_CC)

printclangcxx:
	@echo $(CLANG_CXX)

checkRtLibDir:
ifeq ($(wildcard $(CHPL_RT_LIB_DIR)),)
ifdef CHPL_DEVELOPER
	$(warning Expected runtime library in $(CHPL_RT_LIB_DIR))
endif
ifeq ($(CHPL_MODULE_HOME),$(CHPL_HOME))
	$(error The requested configuration is not included in the module. \
	        Please send the package maintainer the output of \
	        $$CHPL_HOME/util/printchplenv and request support for this \
	        configuration)
else
	$(error The runtime has not been built for this configuration. Check \
	        $$CHPL_HOME/util/printchplenv and try rebuilding with \
	        '$(CHPL_MAKE_MAKE)' from $$CHPL_HOME)
endif
endif
