NAME
  chpldoc - the Chapel documentation tool

SYNOPSIS
  chpldoc [-o directory]
          [--save-sphinx directory]
          [options] source-files...

DESCRIPTION

  chpldoc is a tool for generating HTML based documentation from Chapel
  source code and embedded comments. It does this by parsing Chapel
  source files and associating comments with symbols, then generating
  reStructuredText, and finally building the output documentation
  with Sphinx. Most users will not need to be aware of the use of
  reStructuredText as an intermediate format.

  Documentation Options

  -o, --output-dir <dirname>  Specify the directory name into which documentation
                    should be saved (defaults to 'docs' if unspecified).

  --save-sphinx <directory>  Save generated Sphinx project in directory.

  --comment-style <string>  Specify the opening comment character
                    sequence used to distinguish a documentation comment
                    from a normal one (defaults to '/*' if unspecified).

  --text-only       Specify that documents should use a text output file
                    format rather than HTML.

  Information Options

  -h, --help        Print a list of the command line options, indicating
                    the arguments that they expect and a brief summary of their 
                    purpose.

  --help-env        Print the command line option help message, listing
                    the environment variable equivalent for each flag (see
                    ENVIRONMENT VARIABLES FOR OPTIONS) and its current value.

  --help-settings   Print the command line option help message, listing
                    the current setting of each option as specified by
                    environment variables and other flags on the command line.

  --version         Print the version number of the compiler.

  --copyright       Print the compiler's copyright information.

  --license         Print the compiler's license information.

ENVIRONMENT VARIABLES FOR OPTIONS

  Most compiler command-line options have an environment variable that can
  be used to specify a default value. Use the --help-env option to list the 
  environment variable equivalent for each option. Command-line options 
  will always override environment variable settings in the event of a 
  conflict.

  If the environment variable equivalent is set to empty, it is considered
  unset. This does not apply to options expecting a string or a path.

  For options that can be used with or without the leading --no (they are
  shown with "[no-]" in the help text), the environment variable equivalent,
  when set to a non-empty string, has the following effect. When the first
  character of the string is one of:

    Y y T t 1 - same as passing the option without --no,

    N n F f 0 - same as passing the option with --no,

    anything else - generates an error.

  For the other options that enable, disable or toggle some feature, any
  non-empty value of the environment variable equivalent has the same effect
  as passing that option once.


ENVIRONMENT

  See $CHPL_HOME/doc/README.chplenv for detailed information about 
  general environment variable settings, legal values, and default
  settings. Run $CHPL_HOME/util/printchplenv to view your current
  settings (as explicitly set and inferred). Some of the most
  commonly-used environment variables are summarized here.

  CHPL_HOME           Specifies the location of the Chapel installation directory.

  CHPL_DEVELOPER      When set, build and compile in developer mode,
                      which generates line numbers in internal module
                      code and throws extra warning flags when
                      compiling the generated C code.


BUGS
  See $CHPL_HOME/STATUS for a list of known bugs and $CHPL_HOME/doc/README.bugs
  for instructions on reporting bugs.
SEE ALSO
  $CHPL_HOME/README for more information on how to get started with Chapel.
AUTHORS
  See $CHPL_HOME/CONTRIBUTORS for a list of contributors to Chapel.
COPYRIGHT
  Copyright (c) 2004-2015 Cray Inc. (See $CHPL_HOME/LICENSE for more details.)
