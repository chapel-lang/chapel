bug: Zippered iterator inlining may cause segfaults.

When CHPL_LOCALE_MODEL=numa, wide pointers are inserted. For this configuration,
this test used to fail when compiling the generated C code with output like:

  In file included from obj/_main.c:25:
  obj/DefaultSparse.c: In function ‘sparseShiftArray3’:
  obj/DefaultSparse.c:3976: error: used struct type value where scalar is required
  obj/DefaultSparse.c:3981: error: used struct type value where scalar is required
  obj/DefaultSparse.c:3994: error: used struct type value where scalar is required
  etc.

These failures occurred because the 'narrowWideReferences' pass turned this:
  if(_ref_T) // a pointer
into this:
  if(wide__ref_T) // a struct

This happened because the aforementioned pass sets variables to widen when it
doesn't know how to handle an expression. In this case, 'CondStmt' was
unhandled. The solution was to do nothing when encountering a 'CondStmt'.

Now, the test segfaults during execution when attempting to dereference a null
pointer:
DefaultSparse.c:4848:
  coerce_tmp5 = *(_ic__value2); // null _ref__real64

'_ic__value2' is set to NULL when declared, but is never initialized.

This problem is isolated to zippered iterator inlining.  With iterator inlining
turned off, the test runs as expected.  (See the companion test
genericArrayInClass-otharrs)

The solution probably involves rewriting how zippered iterator inlining is
implemented.  Any explicit initialization code probably needs to be broken off
and placed in a loop initialization clause.  In addition, if the yielded value
is not explicitly initialized, it probably needs to be initialized through a
call to the default constructor for its type.  The latter approach was not
attempted, because iterator inlining takes place after resolution, but the
insertion of default constructor calls needs to take place in or before
resolution.  Workarounds are possible (for example, storing a map of default
constructors for later use), but a better approach probably involves converting
zippered iteration to its inlined form prior to resolution.

