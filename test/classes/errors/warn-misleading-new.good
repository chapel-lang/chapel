warn-misleading-new.chpl:34: In function 'test2':
warn-misleading-new.chpl:36: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:36: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:36: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:37: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:37: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:37: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:38: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:38: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:38: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:41: In function 'test2n':
warn-misleading-new.chpl:43: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:43: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:43: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:44: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:44: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:44: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:45: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:45: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:45: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:48: In function 'test2nn':
warn-misleading-new.chpl:50: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:50: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:50: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:51: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:51: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:51: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:52: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:52: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:52: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:56: In function 'test3':
warn-misleading-new.chpl:61: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:61: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:61: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:62: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:62: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:62: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:63: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:63: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:63: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:66: In function 'test3n':
warn-misleading-new.chpl:71: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:71: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:71: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:72: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:72: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:72: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:73: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:73: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:73: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:76: In function 'test3nn':
warn-misleading-new.chpl:81: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:81: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:81: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:82: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:82: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:82: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:83: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:83: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:83: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:87: In function 'test4':
warn-misleading-new.chpl:95: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:95: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:95: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:96: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:96: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:96: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:97: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:97: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:97: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:100: In function 'test4n':
warn-misleading-new.chpl:108: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:108: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:108: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:109: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:109: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:109: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:110: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:110: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:110: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:113: In function 'test4nn':
warn-misleading-new.chpl:121: warning: here, 'x' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:121: note: if you meant to save the result of new, change the type of 'x' to not be 'borrowed'
warn-misleading-new.chpl:121: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:122: warning: here, 'y' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:122: note: if you meant to save the result of new, change the type of 'y' to not be 'borrowed'
warn-misleading-new.chpl:122: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:123: warning: here, 'z' is set to the result of borrowing from a 'new'
warn-misleading-new.chpl:123: note: if you meant to save the result of new, change the type of 'z' to not be 'borrowed'
warn-misleading-new.chpl:123: note: if you meant to refer to another variable storing the 'new', use an explicit variable, e.g. 'var myOwned = new C(); var myBorrowed = myOwned.borrow();'
warn-misleading-new.chpl:87: In function 'test4':
warn-misleading-new.chpl:95: error: Scoped variable x would outlive the value it is set to
warn-misleading-new.chpl:96: error: Scoped variable y would outlive the value it is set to
warn-misleading-new.chpl:97: error: Scoped variable z would outlive the value it is set to
warn-misleading-new.chpl:100: In function 'test4n':
warn-misleading-new.chpl:108: error: Scoped variable x would outlive the value it is set to
warn-misleading-new.chpl:109: error: Scoped variable y would outlive the value it is set to
warn-misleading-new.chpl:110: error: Scoped variable z would outlive the value it is set to
warn-misleading-new.chpl:113: In function 'test4nn':
warn-misleading-new.chpl:121: error: Scoped variable x would outlive the value it is set to
warn-misleading-new.chpl:122: error: Scoped variable y would outlive the value it is set to
warn-misleading-new.chpl:123: error: Scoped variable z would outlive the value it is set to
