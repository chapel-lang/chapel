AST dump for Atomics after pass buildDefaultFunctions.
Module use list: MemConsistency ChapelEnv 

{
  function chpl__init_Atomics[390159]() : void[4] "insert line file info" "module init"
  {
    (457303 return _void[47])
  }
  function chpl_atomic_thread_fence[42984](arg order[42981]:memory_order[179753]) : void[4] "extern" "local args" "no fn body" "no doc" "no return value for void"
  {
    (456285 return _void[47])
  }
  function chpl_atomic_signal_fence[42994](arg order[42991]:memory_order[179753]) : void[4] "extern" "local args" "no fn body" "no doc" "no return value for void"
  {
    (456287 return _void[47])
  }
  function atomic_fence[43006](arg order[43002]:memory_order[179753] =
  memory_order_seq_cst[180085]) : _unknown[43] "no doc" "no return value for void"
  {
    (43011 call chpl_atomic_thread_fence order[43002])
    unknown call_tmp[554237] "expr temp" "maybe param" "maybe type" "temp"
    (554240 'move' call_tmp[554237](43020 call _cond_test CHPL_CACHE_REMOTE[342]))
    if call_tmp[554237]
    {
      (43018 call chpl_rmem_consist_fence order[43002])
    }
    (456289 return _void[47])
  }
  function atomicFence[43040](param arg order[43036]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "inline" "no return value for void"
  {
    unknown call_tmp[554242] "expr temp" "maybe param" "maybe type" "temp"
    (554245 'move' call_tmp[554242](43046 call c_memory_order order[43036]))
    (43048 call atomic_fence call_tmp[554242])
    (456291 return _void[47])
  }
  function isSupported[43057](arg T[43055]:_any[170](?)) param : _unknown[43] "private"
  {
    unknown ret[456295] "RVV" "param" "temp"
    unknown tmp[393915] "maybe param" "temp"
    unknown tmp[393936] "maybe param" "temp"
    unknown tmp[393957] "maybe param" "temp"
    (393968 'move' tmp[393957](43061 call == T[43055] bool[10]))
    unknown call_tmp[554247] "expr temp" "maybe param" "maybe type" "temp"
    (554250 'move' call_tmp[554247](393970 call _cond_invalid tmp[393957]))
    if call_tmp[554247]
    {
      (393973 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[503244] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503245] "maybe param" "temp"
    unknown call_tmp[554252] "expr temp" "maybe param" "maybe type" "temp"
    (554255 'move' call_tmp[554252](393958 call isTrue tmp[393957]))
    (503250 'move' tmp[503245](503248 call _cond_test call_tmp[554252]))
    if tmp[503245]
    {
      (503255 'move' tmp[503244](503252 '_paramFoldLogical' tmp[503245] 1))
    }
    {
      unknown tmp[503257] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[554257] "expr temp" "maybe param" "maybe type" "temp"
      (554260 'move' call_tmp[554257](43066 call isInt T[43055]))
      (503259 'move' tmp[503257](393962 call isTrue call_tmp[554257]))
      (503264 'move' tmp[503244](503261 '_paramFoldLogical' tmp[503245] tmp[503257]))
    }
    (393947 'move' tmp[393936] tmp[503244])
    unknown call_tmp[554262] "expr temp" "maybe param" "maybe type" "temp"
    (554265 'move' call_tmp[554262](393949 call _cond_invalid tmp[393936]))
    if call_tmp[554262]
    {
      (393952 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[503271] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503272] "maybe param" "temp"
    unknown call_tmp[554267] "expr temp" "maybe param" "maybe type" "temp"
    (554270 'move' call_tmp[554267](393937 call isTrue tmp[393936]))
    (503277 'move' tmp[503272](503275 call _cond_test call_tmp[554267]))
    if tmp[503272]
    {
      (503282 'move' tmp[503271](503279 '_paramFoldLogical' tmp[503272] 1))
    }
    {
      unknown tmp[503284] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[554272] "expr temp" "maybe param" "maybe type" "temp"
      (554275 'move' call_tmp[554272](43072 call isUint T[43055]))
      (503286 'move' tmp[503284](393941 call isTrue call_tmp[554272]))
      (503291 'move' tmp[503271](503288 '_paramFoldLogical' tmp[503272] tmp[503284]))
    }
    (393926 'move' tmp[393915] tmp[503271])
    unknown call_tmp[554277] "expr temp" "maybe param" "maybe type" "temp"
    (554280 'move' call_tmp[554277](393928 call _cond_invalid tmp[393915]))
    if call_tmp[554277]
    {
      (393931 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[503298] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503299] "maybe param" "temp"
    unknown call_tmp[554282] "expr temp" "maybe param" "maybe type" "temp"
    (554285 'move' call_tmp[554282](393916 call isTrue tmp[393915]))
    (503304 'move' tmp[503299](503302 call _cond_test call_tmp[554282]))
    if tmp[503299]
    {
      (503309 'move' tmp[503298](503306 '_paramFoldLogical' tmp[503299] 1))
    }
    {
      unknown tmp[503311] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[554287] "expr temp" "maybe param" "maybe type" "temp"
      (554290 'move' call_tmp[554287](43078 call isReal T[43055]))
      (503313 'move' tmp[503311](393920 call isTrue call_tmp[554287]))
      (503318 'move' tmp[503298](503315 '_paramFoldLogical' tmp[503299] tmp[503311]))
    }
    (456300 'move' ret[456295](456299 'deref' tmp[503298]))
    (456297 return ret[456295])
  }
  function externT[43090](arg T[43088]:_any[170](?)) type : _unknown[43] "private"
  {
    unknown ret[456304] "RVV" "temp" "type variable"
    function =[699888](ref arg _arg1[699890]:atomic_bool[43096], arg _arg2[699891]:atomic_bool[43096]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699894 '=' _arg1[699890] _arg2[699891])
      (699898 return _void[47])
    }
    type atomic_bool[43096]
    function =[699900](ref arg _arg1[699902]:atomic_int_least8_t[43103], arg _arg2[699903]:atomic_int_least8_t[43103]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699906 '=' _arg1[699902] _arg2[699903])
      (699910 return _void[47])
    }
    type atomic_int_least8_t[43103]
    function =[699912](ref arg _arg1[699914]:atomic_int_least16_t[43109], arg _arg2[699915]:atomic_int_least16_t[43109]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699918 '=' _arg1[699914] _arg2[699915])
      (699922 return _void[47])
    }
    type atomic_int_least16_t[43109]
    function =[699924](ref arg _arg1[699926]:atomic_int_least32_t[43115], arg _arg2[699927]:atomic_int_least32_t[43115]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699930 '=' _arg1[699926] _arg2[699927])
      (699934 return _void[47])
    }
    type atomic_int_least32_t[43115]
    function =[699936](ref arg _arg1[699938]:atomic_int_least64_t[43121], arg _arg2[699939]:atomic_int_least64_t[43121]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699942 '=' _arg1[699938] _arg2[699939])
      (699946 return _void[47])
    }
    type atomic_int_least64_t[43121]
    function =[699948](ref arg _arg1[699950]:atomic_uint_least8_t[43127], arg _arg2[699951]:atomic_uint_least8_t[43127]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699954 '=' _arg1[699950] _arg2[699951])
      (699958 return _void[47])
    }
    type atomic_uint_least8_t[43127]
    function =[699960](ref arg _arg1[699962]:atomic_uint_least16_t[43133], arg _arg2[699963]:atomic_uint_least16_t[43133]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699966 '=' _arg1[699962] _arg2[699963])
      (699970 return _void[47])
    }
    type atomic_uint_least16_t[43133]
    function =[699972](ref arg _arg1[699974]:atomic_uint_least32_t[43139], arg _arg2[699975]:atomic_uint_least32_t[43139]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699978 '=' _arg1[699974] _arg2[699975])
      (699982 return _void[47])
    }
    type atomic_uint_least32_t[43139]
    function =[699984](ref arg _arg1[699986]:atomic_uint_least64_t[43145], arg _arg2[699987]:atomic_uint_least64_t[43145]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (699990 '=' _arg1[699986] _arg2[699987])
      (699994 return _void[47])
    }
    type atomic_uint_least64_t[43145]
    function =[699996](ref arg _arg1[699998]:atomic__real64[43151], arg _arg2[699999]:atomic__real64[43151]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (700002 '=' _arg1[699998] _arg2[699999])
      (700006 return _void[47])
    }
    type atomic__real64[43151]
    function =[700008](ref arg _arg1[700010]:atomic__real32[43157], arg _arg2[700011]:atomic__real32[43157]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort"
    {
      (700014 '=' _arg1[700010] _arg2[700011])
      (700018 return _void[47])
    }
    type atomic__real32[43157]
    {
      unknown tmp[43280] "expr temp" "maybe param" "maybe type" "temp"
      (43282 'move' tmp[43280] T[43088])
      unknown call_tmp[554292] "expr temp" "maybe param" "maybe type" "temp"
      (554295 'move' call_tmp[554292](43284 call == tmp[43280] bool[10]))
      unknown call_tmp[554297] "expr temp" "maybe param" "maybe type" "temp"
      (554300 'move' call_tmp[554297](43287 call _cond_test call_tmp[554292]))
      if call_tmp[554297]
      {
        (456309 'move' ret[456304](456308 'deref' atomic_bool[43096]))
        gotoReturn _end_externT[456302] _end_externT[456302]
      }
      {
        unknown call_tmp[554302] "expr temp" "maybe param" "maybe type" "temp"
        (554305 'move' call_tmp[554302](43172 call int(64)[13] 8))
        unknown call_tmp[554307] "expr temp" "maybe param" "maybe type" "temp"
        (554310 'move' call_tmp[554307](43290 call == tmp[43280] call_tmp[554302]))
        unknown call_tmp[554312] "expr temp" "maybe param" "maybe type" "temp"
        (554315 'move' call_tmp[554312](43293 call _cond_test call_tmp[554307]))
        if call_tmp[554312]
        {
          (456314 'move' ret[456304](456313 'deref' atomic_int_least8_t[43103]))
          gotoReturn _end_externT[456302] _end_externT[456302]
        }
        {
          unknown call_tmp[554317] "expr temp" "maybe param" "maybe type" "temp"
          (554320 'move' call_tmp[554317](43183 call int(64)[13] 16))
          unknown call_tmp[554322] "expr temp" "maybe param" "maybe type" "temp"
          (554325 'move' call_tmp[554322](43297 call == tmp[43280] call_tmp[554317]))
          unknown call_tmp[554327] "expr temp" "maybe param" "maybe type" "temp"
          (554330 'move' call_tmp[554327](43300 call _cond_test call_tmp[554322]))
          if call_tmp[554327]
          {
            (456319 'move' ret[456304](456318 'deref' atomic_int_least16_t[43109]))
            gotoReturn _end_externT[456302] _end_externT[456302]
          }
          {
            unknown call_tmp[554332] "expr temp" "maybe param" "maybe type" "temp"
            (554335 'move' call_tmp[554332](43194 call int(64)[13] 32))
            unknown call_tmp[554337] "expr temp" "maybe param" "maybe type" "temp"
            (554340 'move' call_tmp[554337](43304 call == tmp[43280] call_tmp[554332]))
            unknown call_tmp[554342] "expr temp" "maybe param" "maybe type" "temp"
            (554345 'move' call_tmp[554342](43307 call _cond_test call_tmp[554337]))
            if call_tmp[554342]
            {
              (456324 'move' ret[456304](456323 'deref' atomic_int_least32_t[43115]))
              gotoReturn _end_externT[456302] _end_externT[456302]
            }
            {
              unknown call_tmp[554347] "expr temp" "maybe param" "maybe type" "temp"
              (554350 'move' call_tmp[554347](43205 call int(64)[13] 64))
              unknown call_tmp[554352] "expr temp" "maybe param" "maybe type" "temp"
              (554355 'move' call_tmp[554352](43311 call == tmp[43280] call_tmp[554347]))
              unknown call_tmp[554357] "expr temp" "maybe param" "maybe type" "temp"
              (554360 'move' call_tmp[554357](43314 call _cond_test call_tmp[554352]))
              if call_tmp[554357]
              {
                (456329 'move' ret[456304](456328 'deref' atomic_int_least64_t[43121]))
                gotoReturn _end_externT[456302] _end_externT[456302]
              }
              {
                unknown call_tmp[554362] "expr temp" "maybe param" "maybe type" "temp"
                (554365 'move' call_tmp[554362](43216 call uint(64)[107] 8))
                unknown call_tmp[554367] "expr temp" "maybe param" "maybe type" "temp"
                (554370 'move' call_tmp[554367](43318 call == tmp[43280] call_tmp[554362]))
                unknown call_tmp[554372] "expr temp" "maybe param" "maybe type" "temp"
                (554375 'move' call_tmp[554372](43321 call _cond_test call_tmp[554367]))
                if call_tmp[554372]
                {
                  (456334 'move' ret[456304](456333 'deref' atomic_uint_least8_t[43127]))
                  gotoReturn _end_externT[456302] _end_externT[456302]
                }
                {
                  unknown call_tmp[554377] "expr temp" "maybe param" "maybe type" "temp"
                  (554380 'move' call_tmp[554377](43227 call uint(64)[107] 16))
                  unknown call_tmp[554382] "expr temp" "maybe param" "maybe type" "temp"
                  (554385 'move' call_tmp[554382](43325 call == tmp[43280] call_tmp[554377]))
                  unknown call_tmp[554387] "expr temp" "maybe param" "maybe type" "temp"
                  (554390 'move' call_tmp[554387](43328 call _cond_test call_tmp[554382]))
                  if call_tmp[554387]
                  {
                    (456339 'move' ret[456304](456338 'deref' atomic_uint_least16_t[43133]))
                    gotoReturn _end_externT[456302] _end_externT[456302]
                  }
                  {
                    unknown call_tmp[554392] "expr temp" "maybe param" "maybe type" "temp"
                    (554395 'move' call_tmp[554392](43238 call uint(64)[107] 32))
                    unknown call_tmp[554397] "expr temp" "maybe param" "maybe type" "temp"
                    (554400 'move' call_tmp[554397](43332 call == tmp[43280] call_tmp[554392]))
                    unknown call_tmp[554402] "expr temp" "maybe param" "maybe type" "temp"
                    (554405 'move' call_tmp[554402](43335 call _cond_test call_tmp[554397]))
                    if call_tmp[554402]
                    {
                      (456344 'move' ret[456304](456343 'deref' atomic_uint_least32_t[43139]))
                      gotoReturn _end_externT[456302] _end_externT[456302]
                    }
                    {
                      unknown call_tmp[554407] "expr temp" "maybe param" "maybe type" "temp"
                      (554410 'move' call_tmp[554407](43249 call uint(64)[107] 64))
                      unknown call_tmp[554412] "expr temp" "maybe param" "maybe type" "temp"
                      (554415 'move' call_tmp[554412](43339 call == tmp[43280] call_tmp[554407]))
                      unknown call_tmp[554417] "expr temp" "maybe param" "maybe type" "temp"
                      (554420 'move' call_tmp[554417](43342 call _cond_test call_tmp[554412]))
                      if call_tmp[554417]
                      {
                        (456349 'move' ret[456304](456348 'deref' atomic_uint_least64_t[43145]))
                        gotoReturn _end_externT[456302] _end_externT[456302]
                      }
                      {
                        unknown call_tmp[554422] "expr temp" "maybe param" "maybe type" "temp"
                        (554425 'move' call_tmp[554422](43260 call real(64)[16] 32))
                        unknown call_tmp[554427] "expr temp" "maybe param" "maybe type" "temp"
                        (554430 'move' call_tmp[554427](43346 call == tmp[43280] call_tmp[554422]))
                        unknown call_tmp[554432] "expr temp" "maybe param" "maybe type" "temp"
                        (554435 'move' call_tmp[554432](43349 call _cond_test call_tmp[554427]))
                        if call_tmp[554432]
                        {
                          (456354 'move' ret[456304](456353 'deref' atomic__real32[43157]))
                          gotoReturn _end_externT[456302] _end_externT[456302]
                        }
                        {
                          unknown call_tmp[554437] "expr temp" "maybe param" "maybe type" "temp"
                          (554440 'move' call_tmp[554437](43271 call real(64)[16] 64))
                          unknown call_tmp[554442] "expr temp" "maybe param" "maybe type" "temp"
                          (554445 'move' call_tmp[554442](43353 call == tmp[43280] call_tmp[554437]))
                          unknown call_tmp[554447] "expr temp" "maybe param" "maybe type" "temp"
                          (554450 'move' call_tmp[554447](43356 call _cond_test call_tmp[554442]))
                          if call_tmp[554447]
                          {
                            (456359 'move' ret[456304](456358 'deref' atomic__real64[43151]))
                            gotoReturn _end_externT[456302] _end_externT[456302]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[456302]
    (456306 return ret[456304])
  }
  function externTString[43367](arg T[43365]:_any[170](?)) param : _unknown[43] "private"
  {
    unknown ret[456365] "RVV" "param" "temp"
    unknown call_tmp[554452] "expr temp" "maybe param" "maybe type" "temp"
    (554455 'move' call_tmp[554452](43371 call == T[43365] bool[10]))
    unknown call_tmp[554457] "expr temp" "maybe param" "maybe type" "temp"
    (554460 'move' call_tmp[554457](43391 call _cond_test call_tmp[554452]))
    if call_tmp[554457]
    {
      (456370 'move' ret[456365](456369 'deref' "bool"))
      gotoReturn _end_externTString[456363] _end_externTString[456363]
    }
    unknown call_tmp[554462] "expr temp" "maybe param" "maybe type" "temp"
    (554465 'move' call_tmp[554462](43400 call isInt T[43365]))
    unknown call_tmp[554467] "expr temp" "maybe param" "maybe type" "temp"
    (554470 'move' call_tmp[554467](43446 call _cond_test call_tmp[554462]))
    if call_tmp[554467]
    {
      unknown call_tmp[554472] "expr temp" "maybe param" "maybe type" "temp"
      (554475 'move' call_tmp[554472](43420 call numBits T[43365]))
      unknown call_tmp[554477] "expr temp" "maybe param" "maybe type" "temp"
      (554480 'move' call_tmp[554477](43422 call _cast string[24] call_tmp[554472]))
      unknown call_tmp[554482] "expr temp" "maybe param" "maybe type" "temp"
      (554485 'move' call_tmp[554482](43424 call + "int_least" call_tmp[554477]))
      unknown call_tmp[554487] "expr temp" "maybe param" "maybe type" "temp"
      (554490 'move' call_tmp[554487](43442 call + call_tmp[554482] "_t"))
      (456375 'move' ret[456365](456374 'deref' call_tmp[554487]))
      gotoReturn _end_externTString[456363] _end_externTString[456363]
    }
    unknown call_tmp[554492] "expr temp" "maybe param" "maybe type" "temp"
    (554495 'move' call_tmp[554492](43454 call isUint T[43365]))
    unknown call_tmp[554497] "expr temp" "maybe param" "maybe type" "temp"
    (554500 'move' call_tmp[554497](43485 call _cond_test call_tmp[554492]))
    if call_tmp[554497]
    {
      unknown call_tmp[554502] "expr temp" "maybe param" "maybe type" "temp"
      (554505 'move' call_tmp[554502](43474 call numBits T[43365]))
      unknown call_tmp[554507] "expr temp" "maybe param" "maybe type" "temp"
      (554510 'move' call_tmp[554507](43476 call _cast string[24] call_tmp[554502]))
      unknown call_tmp[554512] "expr temp" "maybe param" "maybe type" "temp"
      (554515 'move' call_tmp[554512](43478 call + "uint_least" call_tmp[554507]))
      unknown call_tmp[554517] "expr temp" "maybe param" "maybe type" "temp"
      (554520 'move' call_tmp[554517](43481 call + call_tmp[554512] "_t"))
      (456380 'move' ret[456365](456379 'deref' call_tmp[554517]))
      gotoReturn _end_externTString[456363] _end_externTString[456363]
    }
    unknown call_tmp[554522] "expr temp" "maybe param" "maybe type" "temp"
    (554525 'move' call_tmp[554522](43493 call isReal T[43365]))
    unknown call_tmp[554527] "expr temp" "maybe param" "maybe type" "temp"
    (554530 'move' call_tmp[554527](43521 call _cond_test call_tmp[554522]))
    if call_tmp[554527]
    {
      unknown call_tmp[554532] "expr temp" "maybe param" "maybe type" "temp"
      (554535 'move' call_tmp[554532](43513 call numBits T[43365]))
      unknown call_tmp[554537] "expr temp" "maybe param" "maybe type" "temp"
      (554540 'move' call_tmp[554537](43515 call _cast string[24] call_tmp[554532]))
      unknown call_tmp[554542] "expr temp" "maybe param" "maybe type" "temp"
      (554545 'move' call_tmp[554542](43517 call + "_real" call_tmp[554537]))
      (456385 'move' ret[456365](456384 'deref' call_tmp[554542]))
      gotoReturn _end_externTString[456363] _end_externTString[456363]
    }
    label _end_externTString[456363]
    (456367 return ret[456365])
  }
  function externFunc[43534](param arg s[43531]:string[24], arg T[43536]:_any[170](?), param arg explicit[43539] :
  1 =
  1) param : _unknown[43] "private"
  {
    unknown ret[456391] "RVV" "param" "temp"
    unknown call_tmp[554547] "expr temp" "maybe param" "maybe type" "temp"
    (554550 'move' call_tmp[554547](43618 call _cond_test explicit[43539]))
    if call_tmp[554547]
    {
      unknown call_tmp[554552] "expr temp" "maybe param" "maybe type" "temp"
      (554555 'move' call_tmp[554552](43560 call + "atomic_" s[43531]))
      unknown call_tmp[554557] "expr temp" "maybe param" "maybe type" "temp"
      (554560 'move' call_tmp[554557](43578 call + call_tmp[554552] "_explicit_"))
      unknown call_tmp[554562] "expr temp" "maybe param" "maybe type" "temp"
      (554565 'move' call_tmp[554562](43583 call externTString T[43536]))
      unknown call_tmp[554567] "expr temp" "maybe param" "maybe type" "temp"
      (554570 'move' call_tmp[554567](43584 call + call_tmp[554557] call_tmp[554562]))
      (456396 'move' ret[456391](456395 'deref' call_tmp[554567]))
      gotoReturn _end_externFunc[456389] _end_externFunc[456389]
    }
    {
      unknown call_tmp[554572] "expr temp" "maybe param" "maybe type" "temp"
      (554575 'move' call_tmp[554572](43590 call + "atomic_" s[43531]))
      unknown call_tmp[554577] "expr temp" "maybe param" "maybe type" "temp"
      (554580 'move' call_tmp[554577](43608 call + call_tmp[554572] "_"))
      unknown call_tmp[554582] "expr temp" "maybe param" "maybe type" "temp"
      (554585 'move' call_tmp[554582](43613 call externTString T[43536]))
      unknown call_tmp[554587] "expr temp" "maybe param" "maybe type" "temp"
      (554590 'move' call_tmp[554587](43614 call + call_tmp[554577] call_tmp[554582]))
      (456401 'move' ret[456391](456400 'deref' call_tmp[554587]))
      gotoReturn _end_externFunc[456389] _end_externFunc[456389]
    }
    label _end_externFunc[456389]
    (456393 return ret[456391])
  }
  function chpl__processorAtomicType[43631](arg T[43629]:_any[170](?)) type : _unknown[43] "no doc"
  {
    unknown ret[456407] "RVV" "temp" "type variable"
    unknown call_tmp[554592] "expr temp" "maybe param" "maybe type" "temp"
    (554595 'move' call_tmp[554592](43635 call == T[43629] bool[10]))
    unknown call_tmp[554597] "expr temp" "maybe param" "maybe type" "temp"
    (554600 'move' call_tmp[554597](43682 call _cond_test call_tmp[554592]))
    if call_tmp[554597]
    {
      (456412 'move' ret[456407](456411 'deref' AtomicBool[45373]))
      gotoReturn _end_chpl__processorAtomicType[456405] _end_chpl__processorAtomicType[456405]
    }
    {
      unknown call_tmp[554602] "expr temp" "maybe param" "maybe type" "temp"
      (554605 'move' call_tmp[554602](43643 call isSupported T[43629]))
      unknown call_tmp[554607] "expr temp" "maybe param" "maybe type" "temp"
      (554610 'move' call_tmp[554607](43676 call _cond_test call_tmp[554602]))
      if call_tmp[554607]
      {
        unknown call_tmp[554612] "expr temp" "maybe param" "maybe type" "temp"
        (554615 'move' call_tmp[554612](43647 call AtomicT[48777](?) T[43629]))
        (456417 'move' ret[456407](456416 'deref' call_tmp[554612]))
        gotoReturn _end_chpl__processorAtomicType[456405] _end_chpl__processorAtomicType[456405]
      }
      {
        unknown call_tmp[554617] "expr temp" "maybe param" "maybe type" "temp"
        (554620 'move' call_tmp[554617](43669 call _cast string[24] T[43629]))
        unknown call_tmp[554622] "expr temp" "maybe param" "maybe type" "temp"
        (554625 'move' call_tmp[554622](43671 call + "Unsupported atomic type: " call_tmp[554617]))
        (43674 call compilerError call_tmp[554622])
      }
    }
    label _end_chpl__processorAtomicType[456405]
    (456409 return ret[456407])
  }
  function chpl__atomicType[43695](arg T[43693]:_any[170](?)) type : _unknown[43] "no doc"
  {
    unknown ret[456423] "RVV" "temp" "type variable"
    unknown call_tmp[554627] "expr temp" "maybe param" "maybe type" "temp"
    (554630 'move' call_tmp[554627](43699 call == CHPL_NETWORK_ATOMICS[42846] "none"))
    unknown call_tmp[554632] "expr temp" "maybe param" "maybe type" "temp"
    (554635 'move' call_tmp[554632](43715 call _cond_test call_tmp[554627]))
    if call_tmp[554632]
    {
      unknown call_tmp[554637] "expr temp" "maybe param" "maybe type" "temp"
      (554640 'move' call_tmp[554637](43704 call chpl__processorAtomicType T[43693]))
      (456428 'move' ret[456423](456427 'deref' call_tmp[554637]))
      gotoReturn _end_chpl__atomicType[456421] _end_chpl__atomicType[456421]
    }
    {
      unknown call_tmp[554642] "expr temp" "maybe param" "maybe type" "temp"
      (554645 'move' call_tmp[554642](43711 call chpl__networkAtomicType T[43693]))
      (456433 'move' ret[456423](456432 'deref' call_tmp[554642]))
      gotoReturn _end_chpl__atomicType[456421] _end_chpl__atomicType[456421]
    }
    label _end_chpl__atomicType[456421]
    (456425 return ret[456423])
  }
  function AtomicBool[45373].init_helper[43736](arg _mt[45377]:_MT[227], arg this[45375]:AtomicBool[45373], arg value[43733]:bool[10]) : _unknown[43] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[43767](ref arg obj[43764] :
    (43763 call externT bool[10]), arg value[43770]:bool[10], arg _chpl_cname[43778]:string[24] =
    (43757 call externFunc "init" bool[10](explicit = 0))) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[456439] "RVV" "temp"
      (456441 return ret[456439])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[554649] "expr temp" "maybe param" "maybe type" "temp"
    (554652 'move' call_tmp[554649](336474 call _v _mt[232] this[45375]))
    (43787 call atomic_init call_tmp[554649] value[43733])
    (456443 return _void[47])
  }
  function AtomicBool[45373].init[43793](arg _mt[45381]:_MT[227], ref arg this[45379]:AtomicBool[45373]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429789] "temp"
    unknown call_tmp[554654] "expr temp" "maybe param" "maybe type" "temp"
    (554657 'move' call_tmp[554654](429792 call externT bool[10]))
    (429794 'default init var' tmp[429789] call_tmp[554654])
    (429796 '.=' this[45379] c"_v" tmp[429789])
    const default[43804] "const" "insert auto destroy"
    (489198 'default init var' default[43804] bool[10])
    (43810 call(336482 call (partial) init_helper _mt[232] this[45379]) default[43804])
    (456445 return _void[47])
  }
  function AtomicBool[45373].init=[43820](arg _mt[45385]:_MT[227], ref arg this[45383]:AtomicBool[45373], arg other[43817]:AtomicBool[45373]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429800] "temp"
    unknown call_tmp[554661] "expr temp" "maybe param" "maybe type" "temp"
    (554664 'move' call_tmp[554661](429803 call externT bool[10]))
    (429805 'default init var' tmp[429800] call_tmp[554661])
    (429807 '.=' this[45383] c"_v" tmp[429800])
    unknown call_tmp[554670] "expr temp" "maybe param" "maybe type" "temp"
    (554673 'move' call_tmp[554670](43836 call(43832 call (partial) read _mt[232] other[43817])))
    (43838 call(336489 call (partial) init_helper _mt[232] this[45383]) call_tmp[554670])
    (456447 return _void[47])
  }
  function AtomicBool[45373].init=[43848](arg _mt[45389]:_MT[227], ref arg this[45387]:AtomicBool[45373], arg other[43845]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429811] "temp"
    unknown call_tmp[554675] "expr temp" "maybe param" "maybe type" "temp"
    (554678 'move' call_tmp[554675](429814 call externT bool[10]))
    (429816 'default init var' tmp[429811] call_tmp[554675])
    (429818 '.=' this[45387] c"_v" tmp[429811])
    (43861 call(336495 call (partial) init_helper _mt[232] this[45387]) other[43845])
    (456449 return _void[47])
  }
  function AtomicBool[45373].deinit[43867](arg _mt[45393]:_MT[227], arg this[45391]:AtomicBool[45373]) : _unknown[43] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[43900](ref arg obj[43897] :
    (43896 call externT bool[10]), arg _chpl_cname[43907]:string[24] =
    (43890 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[456453] "RVV" "temp"
      (456455 return ret[456453])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[43921] "const" "temp"
      unknown call_tmp[554682] "expr temp" "maybe param" "maybe type" "temp"
      (554685 'move' call_tmp[554682](43918 '_wide_get_locale' this[45391]))
      (43922 'move' tmp[43921](43919 'deref' call_tmp[554682]))
      unknown call_tmp[554689] "expr temp" "maybe param" "maybe type" "temp"
      (554692 'move' call_tmp[554689](336502 call _v _mt[232] this[45391]))
      (43916 call atomic_destroy call_tmp[554689])
    }
    (456457 return _void[47])
  }
  function AtomicBool[45373].read[43939](arg _mt[45397]:_MT[227], const arg this[45395]:AtomicBool[45373], param arg order[43935]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456467] "RVV" "temp"
    function atomic_load[43971](const  ref arg obj[43968] :
    (43967 call externT bool[10]), arg order[43974]:memory_order[179753], arg _chpl_cname[43982]:string[24] =
    (43961 call externFunc "load" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456461] "RVV" "temp"
      (456463 return ret[456461])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[43988] "insert auto destroy"
    (489200 'default init var' ret[43988] bool[10])
    {
      const tmp[44007] "const" "temp"
      unknown call_tmp[554694] "expr temp" "maybe param" "maybe type" "temp"
      (554697 'move' call_tmp[554694](44004 '_wide_get_locale' this[45395]))
      (44008 'move' tmp[44007](44005 'deref' call_tmp[554694]))
      unknown call_tmp[554701] "expr temp" "maybe param" "maybe type" "temp"
      (554704 'move' call_tmp[554701](336512 call _v _mt[232] this[45395]))
      unknown call_tmp[554706] "expr temp" "maybe param" "maybe type" "temp"
      (554709 'move' call_tmp[554706](43999 call c_memory_order order[43935]))
      unknown call_tmp[554711] "expr temp" "maybe param" "maybe type" "temp"
      (554714 'move' call_tmp[554711](44000 call atomic_load call_tmp[554701] call_tmp[554706]))
      (44001 call = ret[43988] call_tmp[554711])
    }
    (456473 'move' ret[456467](456472 'coerce' ret[43988] bool[10]))
    (456469 return ret[456467])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].write[44024](arg _mt[45401]:_MT[227], arg this[45399]:AtomicBool[45373], arg value[44021]:bool[10], param arg order[44031]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456483] "RVV" "temp"
    function atomic_store[44065](ref arg obj[44062] :
    (44061 call externT bool[10]), arg value[44068]:bool[10], arg order[44072]:memory_order[179753], arg _chpl_cname[44080]:string[24] =
    (44055 call externFunc "store" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456477] "RVV" "temp"
      (456479 return ret[456477])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[44099] "const" "temp"
      unknown call_tmp[554716] "expr temp" "maybe param" "maybe type" "temp"
      (554719 'move' call_tmp[554716](44096 '_wide_get_locale' this[45399]))
      (44100 'move' tmp[44099](44097 'deref' call_tmp[554716]))
      unknown call_tmp[554723] "expr temp" "maybe param" "maybe type" "temp"
      (554726 'move' call_tmp[554723](336523 call _v _mt[232] this[45399]))
      unknown call_tmp[554728] "expr temp" "maybe param" "maybe type" "temp"
      (554731 'move' call_tmp[554728](44093 call c_memory_order order[44031]))
      (44094 call atomic_store call_tmp[554723] value[44021] call_tmp[554728])
    }
    (456485 return ret[456483])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373].exchange[44113](arg _mt[45405]:_MT[227], arg this[45403]:AtomicBool[45373], arg value[44110]:bool[10], param arg order[44120]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456495] "RVV" "temp"
    function atomic_exchange[44154](ref arg obj[44151] :
    (44150 call externT bool[10]), arg value[44157]:bool[10], arg order[44161]:memory_order[179753], arg _chpl_cname[44169]:string[24] =
    (44144 call externFunc "exchange" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456489] "RVV" "temp"
      (456491 return ret[456489])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44175] "insert auto destroy"
    (489202 'default init var' ret[44175] bool[10])
    {
      const tmp[44195] "const" "temp"
      unknown call_tmp[554733] "expr temp" "maybe param" "maybe type" "temp"
      (554736 'move' call_tmp[554733](44192 '_wide_get_locale' this[45403]))
      (44196 'move' tmp[44195](44193 'deref' call_tmp[554733]))
      unknown call_tmp[554740] "expr temp" "maybe param" "maybe type" "temp"
      (554743 'move' call_tmp[554740](336535 call _v _mt[232] this[45403]))
      unknown call_tmp[554745] "expr temp" "maybe param" "maybe type" "temp"
      (554748 'move' call_tmp[554745](44187 call c_memory_order order[44120]))
      unknown call_tmp[554750] "expr temp" "maybe param" "maybe type" "temp"
      (554753 'move' call_tmp[554750](44188 call atomic_exchange call_tmp[554740] value[44110] call_tmp[554745]))
      (44189 call = ret[44175] call_tmp[554750])
    }
    (456501 'move' ret[456495](456500 'coerce' ret[44175] bool[10]))
    (456497 return ret[456495])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].compareAndSwap[44212](arg _mt[45409]:_MT[227], arg this[45407]:AtomicBool[45373], arg expected[44209]:bool[10], arg desired[44215]:bool[10], param arg order[44223]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456511] "RVV" "temp"
    function atomic_compare_exchange_strong[44257](ref arg obj[44254] :
    (44253 call externT bool[10]), arg expected[44260]:bool[10], arg desired[44264]:bool[10], arg order[44268]:memory_order[179753], arg _chpl_cname[44276]:string[24] =
    (44247 call externFunc "compare_exchange_strong" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456505] "RVV" "temp"
      (456507 return ret[456505])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44282] "insert auto destroy"
    (489204 'default init var' ret[44282] bool[10])
    {
      const tmp[44303] "const" "temp"
      unknown call_tmp[554755] "expr temp" "maybe param" "maybe type" "temp"
      (554758 'move' call_tmp[554755](44300 '_wide_get_locale' this[45407]))
      (44304 'move' tmp[44303](44301 'deref' call_tmp[554755]))
      unknown call_tmp[554762] "expr temp" "maybe param" "maybe type" "temp"
      (554765 'move' call_tmp[554762](336548 call _v _mt[232] this[45407]))
      unknown call_tmp[554767] "expr temp" "maybe param" "maybe type" "temp"
      (554770 'move' call_tmp[554767](44295 call c_memory_order order[44223]))
      unknown call_tmp[554772] "expr temp" "maybe param" "maybe type" "temp"
      (554775 'move' call_tmp[554772](44296 call atomic_compare_exchange_strong call_tmp[554762] expected[44209] desired[44215] call_tmp[554767]))
      (44297 call = ret[44282] call_tmp[554772])
    }
    (456517 'move' ret[456511](456516 'coerce' ret[44282] bool[10]))
    (456513 return ret[456511])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].testAndSet[44325](arg _mt[45413]:_MT[227], arg this[45411]:AtomicBool[45373], param arg order[44321]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456521] "RVV" "temp"
    unknown call_tmp[554779] "expr temp" "maybe param" "maybe type" "temp"
    (554782 'move' call_tmp[554779](44335 call(44329 call (partial) exchange _mt[232] this[45411]) 1 order[44321]))
    (456527 'move' ret[456521](456526 'coerce' call_tmp[554779] bool[10]))
    (456523 return ret[456521])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].clear[44353](arg _mt[45417]:_MT[227], arg this[45415]:AtomicBool[45373], param arg order[44349]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456531] "RVV" "temp"
    (44363 call(44357 call (partial) write _mt[232] this[45415]) 0 order[44349])
    (456533 return ret[456531])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373].waitFor[44375](arg _mt[45421]:_MT[227], const arg this[45419]:AtomicBool[45373], arg value[44372]:bool[10], param arg order[44382]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456537] "RVV" "temp"
    {
      const tmp[44466] "const" "temp"
      unknown call_tmp[554786] "expr temp" "maybe param" "maybe type" "temp"
      (554789 'move' call_tmp[554786](44463 '_wide_get_locale' this[45419]))
      (44467 'move' tmp[44466](44464 'deref' call_tmp[554786]))
      {
        {
          unknown tmp[44409] "temp"
          unknown call_tmp[554793] "expr temp" "maybe param" "maybe type" "temp"
          (554796 'move' call_tmp[554793](44444 call(44441 call (partial) read _mt[232] this[45419])(order = relaxed[180097])))
          unknown call_tmp[554798] "expr temp" "maybe param" "maybe type" "temp"
          (554801 'move' call_tmp[554798](44439 call != call_tmp[554793] value[44372]))
          (44451 'move' tmp[44409](44437 call _cond_test call_tmp[554798]))
          WhileDo
          {
            {
              (44406 call chpl_task_yield)
            }
            label _continueLabel[44412]
            unknown call_tmp[554805] "expr temp" "maybe param" "maybe type" "temp"
            (554808 'move' call_tmp[554805](44425 call(44422 call (partial) read _mt[232] this[45419])(order = relaxed[180097])))
            unknown call_tmp[554810] "expr temp" "maybe param" "maybe type" "temp"
            (554813 'move' call_tmp[554810](44420 call != call_tmp[554805] value[44372]))
            (44432 'move' tmp[44409](44418 call _cond_test call_tmp[554810]))
            tmp[44409]
          }
          label _breakLabel[44413]
        }
        unknown call_tmp[554815] "expr temp" "maybe param" "maybe type" "temp"
        (554818 'move' call_tmp[554815](44459 call c_memory_order order[44382]))
        (44461 call chpl_atomic_thread_fence call_tmp[554815])
      }
    }
    (456539 return ret[456537])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373].writeThis[44479](arg _mt[45425]:_MT[227], const arg this[45423]:AtomicBool[45373], arg x[44477]:_any[170](?)) : _unknown[43] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[554822] "expr temp" "maybe param" "maybe type" "temp"
    (554825 'move' call_tmp[554822](44484 call(336575 call (partial) read _mt[232] this[45423])))
    (44485 call <~> x[44477] call_tmp[554822])
    (456541 return _void[47])
  }
  function AtomicBool[45373].compareExchange[44497](arg _mt[45429]:_MT[227], arg this[45427]:AtomicBool[45373], arg expected[44494]:bool[10], arg desired[44500]:bool[10], param arg order[44508]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456545] "RVV" "temp"
    (44531 call compilerWarning "compareExchange is deprecated (and will be repurposed in a future release), use compareAndSwap")
    unknown call_tmp[554829] "expr temp" "maybe param" "maybe type" "temp"
    (554832 'move' call_tmp[554829](44544 call(44537 call (partial) compareAndSwap _mt[232] this[45427]) expected[44494] desired[44500] order[44508]))
    (456551 'move' ret[456545](456550 'coerce' call_tmp[554829] bool[10]))
    (456547 return ret[456545])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].compareExchangeWeak[44556](arg _mt[45433]:_MT[227], arg this[45431]:AtomicBool[45373], arg expected[44553]:bool[10], arg desired[44559]:bool[10], param arg order[44567]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456555] "RVV" "temp"
    (44592 call compilerWarning "compareExchangeWeak is deprecated (and will be repurposed in a future release), use compareAndSwap")
    unknown call_tmp[554836] "expr temp" "maybe param" "maybe type" "temp"
    (554839 'move' call_tmp[554836](44603 call(44596 call (partial) compareAndSwap _mt[232] this[45431]) expected[44553] desired[44559] order[44567]))
    (456561 'move' ret[456555](456560 'coerce' call_tmp[554836] bool[10]))
    (456557 return ret[456555])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].compareExchangeStrong[44615](arg _mt[45437]:_MT[227], arg this[45435]:AtomicBool[45373], arg expected[44612]:bool[10], arg desired[44618]:bool[10], param arg order[44626]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456565] "RVV" "temp"
    (44651 call compilerWarning "compareExchangeStrong is deprecated (and will be repurposed in a future release), use compareAndSwap")
    unknown call_tmp[554843] "expr temp" "maybe param" "maybe type" "temp"
    (554846 'move' call_tmp[554843](44662 call(44655 call (partial) compareAndSwap _mt[232] this[45435]) expected[44612] desired[44618] order[44626]))
    (456571 'move' ret[456565](456570 'coerce' call_tmp[554843] bool[10]))
    (456567 return ret[456565])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].read[44674](arg _mt[45441]:_MT[227], const arg this[45439]:AtomicBool[45373], arg order[44671]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456581] "RVV" "temp"
    (44695 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_load[44712](const  ref arg obj[44709] :
    (44708 call externT bool[10]), arg order[44715]:memory_order[179753], arg _chpl_cname[44723]:string[24] =
    (44702 call externFunc "load" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456575] "RVV" "temp"
      (456577 return ret[456575])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44728] "insert auto destroy"
    (489206 'default init var' ret[44728] bool[10])
    {
      const tmp[44744] "const" "temp"
      unknown call_tmp[554848] "expr temp" "maybe param" "maybe type" "temp"
      (554851 'move' call_tmp[554848](44741 '_wide_get_locale' this[45439]))
      (44745 'move' tmp[44744](44742 'deref' call_tmp[554848]))
      unknown call_tmp[554855] "expr temp" "maybe param" "maybe type" "temp"
      (554858 'move' call_tmp[554855](336602 call _v _mt[232] this[45439]))
      unknown call_tmp[554860] "expr temp" "maybe param" "maybe type" "temp"
      (554863 'move' call_tmp[554860](44737 call atomic_load call_tmp[554855] order[44671]))
      (44738 call = ret[44728] call_tmp[554860])
    }
    (456587 'move' ret[456581](456586 'coerce' ret[44728] bool[10]))
    (456583 return ret[456581])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].write[44761](arg _mt[45445]:_MT[227], arg this[45443]:AtomicBool[45373], arg value[44758]:bool[10], arg order[44764]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[456597] "RVV" "temp"
    (44771 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_store[44788](ref arg obj[44785] :
    (44784 call externT bool[10]), arg value[44791]:bool[10], arg order[44795]:memory_order[179753], arg _chpl_cname[44803]:string[24] =
    (44778 call externFunc "store" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456591] "RVV" "temp"
      (456593 return ret[456591])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[44818] "const" "temp"
      unknown call_tmp[554865] "expr temp" "maybe param" "maybe type" "temp"
      (554868 'move' call_tmp[554865](44815 '_wide_get_locale' this[45443]))
      (44819 'move' tmp[44818](44816 'deref' call_tmp[554865]))
      unknown call_tmp[554872] "expr temp" "maybe param" "maybe type" "temp"
      (554875 'move' call_tmp[554872](336612 call _v _mt[232] this[45443]))
      (44813 call atomic_store call_tmp[554872] value[44758] order[44764])
    }
    (456599 return ret[456597])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373].exchange[44832](arg _mt[45449]:_MT[227], arg this[45447]:AtomicBool[45373], arg value[44829]:bool[10], arg order[44835]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456609] "RVV" "temp"
    (44842 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_exchange[44859](ref arg obj[44856] :
    (44855 call externT bool[10]), arg value[44862]:bool[10], arg order[44866]:memory_order[179753], arg _chpl_cname[44874]:string[24] =
    (44849 call externFunc "exchange" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456603] "RVV" "temp"
      (456605 return ret[456603])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44879] "insert auto destroy"
    (489208 'default init var' ret[44879] bool[10])
    {
      const tmp[44896] "const" "temp"
      unknown call_tmp[554877] "expr temp" "maybe param" "maybe type" "temp"
      (554880 'move' call_tmp[554877](44893 '_wide_get_locale' this[45447]))
      (44897 'move' tmp[44896](44894 'deref' call_tmp[554877]))
      unknown call_tmp[554884] "expr temp" "maybe param" "maybe type" "temp"
      (554887 'move' call_tmp[554884](336623 call _v _mt[232] this[45447]))
      unknown call_tmp[554889] "expr temp" "maybe param" "maybe type" "temp"
      (554892 'move' call_tmp[554889](44889 call atomic_exchange call_tmp[554884] value[44829] order[44835]))
      (44890 call = ret[44879] call_tmp[554889])
    }
    (456615 'move' ret[456609](456614 'coerce' ret[44879] bool[10]))
    (456611 return ret[456609])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].compareExchange[44913](arg _mt[45453]:_MT[227], arg this[45451]:AtomicBool[45373], arg expected[44910]:bool[10], arg desired[44916]:bool[10], arg order[44920]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456619] "RVV" "temp"
    unknown call_tmp[554896] "expr temp" "maybe param" "maybe type" "temp"
    (554899 'move' call_tmp[554896](44934 call(44927 call (partial) compareExchangeStrong _mt[232] this[45451]) expected[44910] desired[44916] order[44920]))
    (456625 'move' ret[456619](456624 'coerce' call_tmp[554896] bool[10]))
    (456621 return ret[456619])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].compareExchangeWeak[44947](arg _mt[45457]:_MT[227], arg this[45455]:AtomicBool[45373], arg expected[44944]:bool[10], arg desired[44950]:bool[10], arg order[44954]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456635] "RVV" "temp"
    (44961 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_weak[44993](ref arg obj[44990] :
    (44989 call externT bool[10]), arg expected[44996]:bool[10], arg desired[45000]:bool[10], arg order[45004]:memory_order[179753], arg _chpl_cname[45012]:string[24] =
    (44983 call externFunc "compare_exchange_weak" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456629] "RVV" "temp"
      (456631 return ret[456629])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45017] "insert auto destroy"
    (489210 'default init var' ret[45017] bool[10])
    {
      const tmp[45035] "const" "temp"
      unknown call_tmp[554901] "expr temp" "maybe param" "maybe type" "temp"
      (554904 'move' call_tmp[554901](45032 '_wide_get_locale' this[45455]))
      (45036 'move' tmp[45035](45033 'deref' call_tmp[554901]))
      unknown call_tmp[554908] "expr temp" "maybe param" "maybe type" "temp"
      (554911 'move' call_tmp[554908](336640 call _v _mt[232] this[45455]))
      unknown call_tmp[554913] "expr temp" "maybe param" "maybe type" "temp"
      (554916 'move' call_tmp[554913](45028 call atomic_compare_exchange_weak call_tmp[554908] expected[44944] desired[44950] order[44954]))
      (45029 call = ret[45017] call_tmp[554913])
    }
    (456641 'move' ret[456635](456640 'coerce' ret[45017] bool[10]))
    (456637 return ret[456635])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].compareExchangeStrong[45052](arg _mt[45461]:_MT[227], arg this[45459]:AtomicBool[45373], arg expected[45049]:bool[10], arg desired[45055]:bool[10], arg order[45059]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456651] "RVV" "temp"
    (45066 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_strong[45083](ref arg obj[45080] :
    (45079 call externT bool[10]), arg expected[45086]:bool[10], arg desired[45090]:bool[10], arg order[45094]:memory_order[179753], arg _chpl_cname[45102]:string[24] =
    (45073 call externFunc "compare_exchange_strong" bool[10])) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456645] "RVV" "temp"
      (456647 return ret[456645])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45107] "insert auto destroy"
    (489212 'default init var' ret[45107] bool[10])
    {
      const tmp[45125] "const" "temp"
      unknown call_tmp[554918] "expr temp" "maybe param" "maybe type" "temp"
      (554921 'move' call_tmp[554918](45122 '_wide_get_locale' this[45459]))
      (45126 'move' tmp[45125](45123 'deref' call_tmp[554918]))
      unknown call_tmp[554925] "expr temp" "maybe param" "maybe type" "temp"
      (554928 'move' call_tmp[554925](336653 call _v _mt[232] this[45459]))
      unknown call_tmp[554930] "expr temp" "maybe param" "maybe type" "temp"
      (554933 'move' call_tmp[554930](45118 call atomic_compare_exchange_strong call_tmp[554925] expected[45049] desired[45055] order[45059]))
      (45119 call = ret[45107] call_tmp[554930])
    }
    (456657 'move' ret[456651](456656 'coerce' ret[45107] bool[10]))
    (456653 return ret[456651])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].testAndSet[45142](arg _mt[45465]:_MT[227], arg this[45463]:AtomicBool[45373], arg order[45139]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456661] "RVV" "temp"
    unknown call_tmp[554937] "expr temp" "maybe param" "maybe type" "temp"
    (554940 'move' call_tmp[554937](45152 call(45146 call (partial) exchange _mt[232] this[45463]) 1 order[45139]))
    (456667 'move' ret[456661](456666 'coerce' call_tmp[554937] bool[10]))
    (456663 return ret[456661])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].clear[45165](arg _mt[45469]:_MT[227], arg this[45467]:AtomicBool[45373], arg order[45162]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[456671] "RVV" "temp"
    (45175 call(45169 call (partial) write _mt[232] this[45467]) 0 order[45162])
    (456673 return ret[456671])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373].waitFor[45187](arg _mt[45473]:_MT[227], const arg this[45471]:AtomicBool[45373], arg value[45184]:bool[10], arg order[45190]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[456677] "RVV" "temp"
    (45197 call compilerWarning "memory_order is deprecated, use memoryOrder")
    {
      const tmp[45274] "const" "temp"
      unknown call_tmp[554944] "expr temp" "maybe param" "maybe type" "temp"
      (554947 'move' call_tmp[554944](45271 '_wide_get_locale' this[45471]))
      (45275 'move' tmp[45274](45272 'deref' call_tmp[554944]))
      {
        {
          unknown tmp[45220] "temp"
          unknown call_tmp[554951] "expr temp" "maybe param" "maybe type" "temp"
          (554954 'move' call_tmp[554951](45255 call(45252 call (partial) read _mt[232] this[45471])(order = relaxed[180097])))
          unknown call_tmp[554956] "expr temp" "maybe param" "maybe type" "temp"
          (554959 'move' call_tmp[554956](45250 call != call_tmp[554951] value[45184]))
          (45262 'move' tmp[45220](45248 call _cond_test call_tmp[554956]))
          WhileDo
          {
            {
              (45217 call chpl_task_yield)
            }
            label _continueLabel[45223]
            unknown call_tmp[554963] "expr temp" "maybe param" "maybe type" "temp"
            (554966 'move' call_tmp[554963](45236 call(45233 call (partial) read _mt[232] this[45471])(order = relaxed[180097])))
            unknown call_tmp[554968] "expr temp" "maybe param" "maybe type" "temp"
            (554971 'move' call_tmp[554968](45231 call != call_tmp[554963] value[45184]))
            (45243 'move' tmp[45220](45229 call _cond_test call_tmp[554968]))
            tmp[45220]
          }
          label _breakLabel[45224]
        }
        (45269 call chpl_atomic_thread_fence order[45190])
      }
    }
    (456679 return ret[456677])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373].peek[45284](arg _mt[45477]:_MT[227], const arg this[45475]:AtomicBool[45373]) : _unknown[43] "atomic type" "inline" "last resort" "method" "primary method"
  {
    unknown ret[456683] "RVV" "temp"
    (45307 call compilerWarning "Default usage of peek() is deprecated, use PeekPoke")
    unknown call_tmp[554975] "expr temp" "maybe param" "maybe type" "temp"
    (554978 'move' call_tmp[554975](45320 call(45311 call (partial) read _mt[232] this[45475])(order = relaxed[180097])))
    (456689 'move' ret[456683](456688 'coerce' call_tmp[554975] bool[10]))
    (456685 return ret[456683])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45373].poke[45332](arg _mt[45481]:_MT[227], arg this[45479]:AtomicBool[45373], arg value[45329]:bool[10]) : _unknown[43] "atomic type" "inline" "last resort" "method" "primary method" "no return value for void"
  {
    unknown ret[456693] "RVV" "temp"
    (45353 call compilerWarning "Default usage of poke() is deprecated, use PeekPoke")
    (45367 call(45357 call (partial) write _mt[232] this[45479]) value[45329](order = relaxed[180097]))
    (456695 return ret[456693])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45373]._v[700020](arg _mt[700022]:_MT[227], ref arg this[700024]:AtomicBool[45373]) ref : _unknown[43] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[700033] "RVV" "temp"
    unknown call_tmp[700040] "expr temp" "maybe param" "maybe type" "temp"
    (700043 'move' call_tmp[700040](700028 '.' this[700024] c"_v"))
    (700038 'move' ret[700033](700037 'addr of' call_tmp[700040]))
    (700035 return ret[700033])
  }
  function AtomicBool[45373].init=[700045](arg _mt[700048]:_MT[227], ref arg this[700049]:AtomicBool[45373], arg other[700050]:AtomicBool[45373]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method"
  {
    unknown call_tmp[700079] "maybe param" "maybe type" "temp"
    (700082 'move' call_tmp[700079](700058 call _v _mt[232] other[700050]))
    unknown call_tmp[700084] "maybe param" "maybe type" "temp"
    (700087 'move' call_tmp[700084](700067 call externT bool[10]))
    unknown tmp[700064] "temp"
    (700069 'init var' tmp[700064] call_tmp[700079] call_tmp[700084])
    (700071 'init field' this[700049] c"_v" tmp[700064])
    (700075 return _void[47])
  }
  function ==[700089](arg _arg1[700091]:AtomicBool[45373], arg _arg2[700092]:AtomicBool[45373]) : bool[10] "compiler generated" "last resort"
  {
    val ret[700121]:bool[10] "RVV" "temp"
    unknown call_tmp[700133] "expr temp" "maybe param" "maybe type" "temp"
    (700136 'move' call_tmp[700133](700102 call _v _mt[232] _arg1[700091]))
    unknown call_tmp[700138] "expr temp" "maybe param" "maybe type" "temp"
    (700141 'move' call_tmp[700138](700106 call _v _mt[232] _arg2[700092]))
    unknown call_tmp[700143] "expr temp" "maybe param" "maybe type" "temp"
    (700146 'move' call_tmp[700143](700110 call != call_tmp[700133] call_tmp[700138]))
    if call_tmp[700143]
    {
      (700126 'move' ret[700121](700125 'deref' 0))
      gotoReturn _end_==[700119] _end_==[700119]
    }
    (700131 'move' ret[700121](700130 'deref' 1))
    label _end_==[700119]
    (700123 return ret[700121])
  }
  where {
    unknown call_tmp[700148] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700151 'move' call_tmp[700148](700095 'typeof' _arg1[700091]))
    unknown call_tmp[700153] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700156 'move' call_tmp[700153](700097 'typeof' _arg2[700092]))
    (700099 call == call_tmp[700148] call_tmp[700153])
  }
  function !=[700158](arg _arg1[700160]:AtomicBool[45373], arg _arg2[700161]:AtomicBool[45373]) : bool[10] "compiler generated" "last resort"
  {
    val ret[700190]:bool[10] "RVV" "temp"
    unknown call_tmp[700202] "expr temp" "maybe param" "maybe type" "temp"
    (700205 'move' call_tmp[700202](700171 call _v _mt[232] _arg1[700160]))
    unknown call_tmp[700207] "expr temp" "maybe param" "maybe type" "temp"
    (700210 'move' call_tmp[700207](700175 call _v _mt[232] _arg2[700161]))
    unknown call_tmp[700212] "expr temp" "maybe param" "maybe type" "temp"
    (700215 'move' call_tmp[700212](700179 call != call_tmp[700202] call_tmp[700207]))
    if call_tmp[700212]
    {
      (700195 'move' ret[700190](700194 'deref' 1))
      gotoReturn _end_!=[700188] _end_!=[700188]
    }
    (700200 'move' ret[700190](700199 'deref' 0))
    label _end_!=[700188]
    (700192 return ret[700190])
  }
  where {
    unknown call_tmp[700217] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700220 'move' call_tmp[700217](700164 'typeof' _arg1[700160]))
    unknown call_tmp[700222] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700225 'move' call_tmp[700222](700166 'typeof' _arg2[700161]))
    (700168 call == call_tmp[700217] call_tmp[700222])
  }
  function chpl__defaultHash[700227](arg r[700229]:AtomicBool[45373]) : _unknown[43] "compiler generated" "last resort"
  {
    unknown ret[700241] "RVV" "temp"
    unknown call_tmp[700248] "expr temp" "maybe param" "maybe type" "temp"
    (700251 'move' call_tmp[700248](700231 call _v _mt[232] r[700229]))
    unknown call_tmp[700253] "expr temp" "maybe param" "maybe type" "temp"
    (700256 'move' call_tmp[700253](700235 call chpl__defaultHash call_tmp[700248]))
    (700246 'move' ret[700241](700245 'deref' call_tmp[700253]))
    (700243 return ret[700241])
  }
  type AtomicBool[45373] unknown _v[43727] "no doc"(43726 call externT bool[10])
  function AtomicT[48777](?).init_helper[45501](arg _mt[48781]:_MT[227], arg this[48779]:AtomicT[48777](?), arg value[45498] :
  (336683 call T _mt[232] this[48779])) : _unknown[43] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45519](ref arg obj[45516] :
    unknown call_tmp[554986] "expr temp" "maybe param" "maybe type" "temp", arg value[45522] :
    (336698 call T _mt[232] this[48779]), arg _chpl_cname[45530]:string[24] =
    unknown call_tmp[554995] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[456699] "RVV" "temp"
      (456701 return ret[456699])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[555002] "expr temp" "maybe param" "maybe type" "temp"
    (555005 'move' call_tmp[555002](336703 call _v _mt[232] this[48779]))
    (45539 call atomic_init call_tmp[555002] value[45498])
    (456703 return _void[47])
  }
  function AtomicT[48777](?).init[45547](arg _mt[48785]:_MT[227], ref arg this[48783]:AtomicT[48777](?), arg T[45545]:_any[170](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429822] "temp" "type variable"
    (429824 'move' tmp[429822] T[45545])
    (429826 'init field' this[48783] c"T" tmp[429822])
    unknown tmp[429830] "temp"
    unknown call_tmp[555007] "expr temp" "maybe param" "maybe type" "temp"
    (555010 'move' call_tmp[555007](429841 '.v' this[48783] c"T"))
    unknown call_tmp[555012] "expr temp" "maybe param" "maybe type" "temp"
    (555015 'move' call_tmp[555012](429833 call externT call_tmp[555007]))
    (429835 'default init var' tmp[429830] call_tmp[555012])
    (429837 '.=' this[48783] c"_v" tmp[429830])
    const default[45568] "const" "insert auto destroy"
    (489214 'default init var' default[45568] T[45545])
    (45574 call(336712 call (partial) init_helper _mt[232] this[48783]) default[45568])
    (456705 return _void[47])
  }
  function AtomicT[48777](?).init=[45585](arg _mt[48789]:_MT[227], ref arg this[48787]:AtomicT[48777](?), arg other[45582]:AtomicT[48777](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429844] "temp" "type variable"
    (429846 'move' tmp[429844](45592 call T _mt[232] other[45582]))
    (429848 'init field' this[48787] c"T" tmp[429844])
    unknown tmp[429852] "temp"
    unknown call_tmp[555021] "expr temp" "maybe param" "maybe type" "temp"
    (555024 'move' call_tmp[555021](429863 '.v' this[48787] c"T"))
    unknown call_tmp[555026] "expr temp" "maybe param" "maybe type" "temp"
    (555029 'move' call_tmp[555026](429855 call externT call_tmp[555021]))
    (429857 'default init var' tmp[429852] call_tmp[555026])
    (429859 '.=' this[48787] c"_v" tmp[429852])
    unknown call_tmp[555035] "expr temp" "maybe param" "maybe type" "temp"
    (555038 'move' call_tmp[555035](45612 call(45608 call (partial) read _mt[232] other[45582])))
    (45614 call(336721 call (partial) init_helper _mt[232] this[48787]) call_tmp[555035])
    (456707 return _void[47])
  }
  function AtomicT[48777](?).init=[45628](arg _mt[48793]:_MT[227], ref arg this[48791]:AtomicT[48777](?), arg other[45625] :
  unknown call_tmp[555040] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429866] "temp" "type variable"
    (429868 'move' tmp[429866](45635 'typeof' other[45625]))
    (429870 'init field' this[48791] c"T" tmp[429866])
    unknown tmp[429874] "temp"
    unknown call_tmp[555047] "expr temp" "maybe param" "maybe type" "temp"
    (555050 'move' call_tmp[555047](429885 '.v' this[48791] c"T"))
    unknown call_tmp[555052] "expr temp" "maybe param" "maybe type" "temp"
    (555055 'move' call_tmp[555052](429877 call externT call_tmp[555047]))
    (429879 'default init var' tmp[429874] call_tmp[555052])
    (429881 '.=' this[48791] c"_v" tmp[429874])
    (45650 call(336730 call (partial) init_helper _mt[232] this[48791]) other[45625])
    (456709 return _void[47])
  }
  function AtomicT[48777](?).deinit[45656](arg _mt[48797]:_MT[227], arg this[48795]:AtomicT[48777](?)) : _unknown[43] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[45674](ref arg obj[45671] :
    unknown call_tmp[555061] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[45681]:string[24] =
    unknown call_tmp[555068] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[456713] "RVV" "temp"
      (456715 return ret[456713])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[45695] "const" "temp"
      unknown call_tmp[555073] "expr temp" "maybe param" "maybe type" "temp"
      (555076 'move' call_tmp[555073](45692 '_wide_get_locale' this[48795]))
      (45696 'move' tmp[45695](45693 'deref' call_tmp[555073]))
      unknown call_tmp[555080] "expr temp" "maybe param" "maybe type" "temp"
      (555083 'move' call_tmp[555080](336747 call _v _mt[232] this[48795]))
      (45690 call atomic_destroy call_tmp[555080])
    }
    (456717 return _void[47])
  }
  function AtomicT[48777](?).read[45713](arg _mt[48801]:_MT[227], const arg this[48799]:AtomicT[48777](?), param arg order[45709]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456727] "RVV" "temp"
    function atomic_load[45730](const  ref arg obj[45727] :
    unknown call_tmp[555087] "expr temp" "maybe param" "maybe type" "temp", arg order[45733]:memory_order[179753], arg _chpl_cname[45741]:string[24] =
    unknown call_tmp[555094] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456721] "RVV" "temp"
      (456723 return ret[456721])
    }
    { scopeless type
      (336770 call T _mt[232] this[48799])
    }
    unknown ret[45747] "insert auto destroy"
    unknown call_tmp[555103] "expr temp" "maybe param" "maybe type" "temp"
    (555106 'move' call_tmp[555103](336775 call T _mt[232] this[48799]))
    (489216 'default init var' ret[45747] call_tmp[555103])
    {
      const tmp[45766] "const" "temp"
      unknown call_tmp[555108] "expr temp" "maybe param" "maybe type" "temp"
      (555111 'move' call_tmp[555108](45763 '_wide_get_locale' this[48799]))
      (45767 'move' tmp[45766](45764 'deref' call_tmp[555108]))
      unknown call_tmp[555115] "expr temp" "maybe param" "maybe type" "temp"
      (555118 'move' call_tmp[555115](336782 call _v _mt[232] this[48799]))
      unknown call_tmp[555120] "expr temp" "maybe param" "maybe type" "temp"
      (555123 'move' call_tmp[555120](45758 call c_memory_order order[45709]))
      unknown call_tmp[555125] "expr temp" "maybe param" "maybe type" "temp"
      (555128 'move' call_tmp[555125](45759 call atomic_load call_tmp[555115] call_tmp[555120]))
      (45760 call = ret[45747] call_tmp[555125])
    }
    unknown call_tmp[555132] "expr temp" "maybe param" "maybe type" "temp"
    (555135 'move' call_tmp[555132](456732 call T _mt[232] this[48799]))
    (456736 'move' ret[456727](456735 'coerce' ret[45747] call_tmp[555132]))
    (456729 return ret[456727])
  }
  { scopeless type
    (336754 call T _mt[232] this[48799])
  }
  function AtomicT[48777](?).write[45783](arg _mt[48805]:_MT[227], arg this[48803]:AtomicT[48777](?), arg value[45780] :
  (336789 call T _mt[232] this[48803]), param arg order[45790]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456746] "RVV" "temp"
    function atomic_store[45809](ref arg obj[45806] :
    unknown call_tmp[555143] "expr temp" "maybe param" "maybe type" "temp", arg value[45812] :
    (336806 call T _mt[232] this[48803]), arg order[45816]:memory_order[179753], arg _chpl_cname[45824]:string[24] =
    unknown call_tmp[555152] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456740] "RVV" "temp"
      (456742 return ret[456740])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[45843] "const" "temp"
      unknown call_tmp[555157] "expr temp" "maybe param" "maybe type" "temp"
      (555160 'move' call_tmp[555157](45840 '_wide_get_locale' this[48803]))
      (45844 'move' tmp[45843](45841 'deref' call_tmp[555157]))
      unknown call_tmp[555164] "expr temp" "maybe param" "maybe type" "temp"
      (555167 'move' call_tmp[555164](336813 call _v _mt[232] this[48803]))
      unknown call_tmp[555169] "expr temp" "maybe param" "maybe type" "temp"
      (555172 'move' call_tmp[555169](45837 call c_memory_order order[45790]))
      (45838 call atomic_store call_tmp[555164] value[45780] call_tmp[555169])
    }
    (456748 return ret[456746])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).exchange[45857](arg _mt[48809]:_MT[227], arg this[48807]:AtomicT[48777](?), arg value[45854] :
  (336820 call T _mt[232] this[48807]), param arg order[45864]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456758] "RVV" "temp"
    function atomic_exchange[45883](ref arg obj[45880] :
    unknown call_tmp[555178] "expr temp" "maybe param" "maybe type" "temp", arg value[45886] :
    (336842 call T _mt[232] this[48807]), arg order[45890]:memory_order[179753], arg _chpl_cname[45898]:string[24] =
    unknown call_tmp[555187] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456752] "RVV" "temp"
      (456754 return ret[456752])
    }
    { scopeless type
      (336848 call T _mt[232] this[48807])
    }
    unknown ret[45904] "insert auto destroy"
    unknown call_tmp[555196] "expr temp" "maybe param" "maybe type" "temp"
    (555199 'move' call_tmp[555196](336853 call T _mt[232] this[48807]))
    (489218 'default init var' ret[45904] call_tmp[555196])
    {
      const tmp[45924] "const" "temp"
      unknown call_tmp[555201] "expr temp" "maybe param" "maybe type" "temp"
      (555204 'move' call_tmp[555201](45921 '_wide_get_locale' this[48807]))
      (45925 'move' tmp[45924](45922 'deref' call_tmp[555201]))
      unknown call_tmp[555208] "expr temp" "maybe param" "maybe type" "temp"
      (555211 'move' call_tmp[555208](336860 call _v _mt[232] this[48807]))
      unknown call_tmp[555213] "expr temp" "maybe param" "maybe type" "temp"
      (555216 'move' call_tmp[555213](45916 call c_memory_order order[45864]))
      unknown call_tmp[555218] "expr temp" "maybe param" "maybe type" "temp"
      (555221 'move' call_tmp[555218](45917 call atomic_exchange call_tmp[555208] value[45854] call_tmp[555213]))
      (45918 call = ret[45904] call_tmp[555218])
    }
    unknown call_tmp[555225] "expr temp" "maybe param" "maybe type" "temp"
    (555228 'move' call_tmp[555225](456763 call T _mt[232] this[48807]))
    (456767 'move' ret[456758](456766 'coerce' ret[45904] call_tmp[555225]))
    (456760 return ret[456758])
  }
  { scopeless type
    (336827 call T _mt[232] this[48807])
  }
  function AtomicT[48777](?).compareAndSwap[45941](arg _mt[48813]:_MT[227], arg this[48811]:AtomicT[48777](?), arg expected[45938] :
  (336868 call T _mt[232] this[48811]), arg desired[45944] :
  (336873 call T _mt[232] this[48811]), param arg order[45952]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456777] "RVV" "temp"
    function atomic_compare_exchange_strong[45971](ref arg obj[45968] :
    unknown call_tmp[555238] "expr temp" "maybe param" "maybe type" "temp", arg expected[45974] :
    (336890 call T _mt[232] this[48811]), arg desired[45978] :
    (336895 call T _mt[232] this[48811]), arg order[45982]:memory_order[179753], arg _chpl_cname[45990]:string[24] =
    unknown call_tmp[555249] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456771] "RVV" "temp"
      (456773 return ret[456771])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45996] "insert auto destroy"
    (489220 'default init var' ret[45996] bool[10])
    {
      const tmp[46017] "const" "temp"
      unknown call_tmp[555254] "expr temp" "maybe param" "maybe type" "temp"
      (555257 'move' call_tmp[555254](46014 '_wide_get_locale' this[48811]))
      (46018 'move' tmp[46017](46015 'deref' call_tmp[555254]))
      unknown call_tmp[555261] "expr temp" "maybe param" "maybe type" "temp"
      (555264 'move' call_tmp[555261](336903 call _v _mt[232] this[48811]))
      unknown call_tmp[555266] "expr temp" "maybe param" "maybe type" "temp"
      (555269 'move' call_tmp[555266](46009 call c_memory_order order[45952]))
      unknown call_tmp[555271] "expr temp" "maybe param" "maybe type" "temp"
      (555274 'move' call_tmp[555271](46010 call atomic_compare_exchange_strong call_tmp[555261] expected[45938] desired[45944] call_tmp[555266]))
      (46011 call = ret[45996] call_tmp[555271])
    }
    (456783 'move' ret[456777](456782 'coerce' ret[45996] bool[10]))
    (456779 return ret[456777])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).fetchAdd[46034](arg _mt[48817]:_MT[227], arg this[48815]:AtomicT[48777](?), arg value[46031] :
  (336912 call T _mt[232] this[48815]), param arg order[46041]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456793] "RVV" "temp"
    function atomic_fetch_add[46075](ref arg obj[46072] :
    unknown call_tmp[555280] "expr temp" "maybe param" "maybe type" "temp", arg operand[46078] :
    (336934 call T _mt[232] this[48815]), arg order[46082]:memory_order[179753], arg _chpl_cname[46090]:string[24] =
    unknown call_tmp[555289] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456787] "RVV" "temp"
      (456789 return ret[456787])
    }
    { scopeless type
      (336940 call T _mt[232] this[48815])
    }
    unknown ret[46096] "insert auto destroy"
    unknown call_tmp[555298] "expr temp" "maybe param" "maybe type" "temp"
    (555301 'move' call_tmp[555298](336945 call T _mt[232] this[48815]))
    (489222 'default init var' ret[46096] call_tmp[555298])
    {
      const tmp[46116] "const" "temp"
      unknown call_tmp[555303] "expr temp" "maybe param" "maybe type" "temp"
      (555306 'move' call_tmp[555303](46113 '_wide_get_locale' this[48815]))
      (46117 'move' tmp[46116](46114 'deref' call_tmp[555303]))
      unknown call_tmp[555310] "expr temp" "maybe param" "maybe type" "temp"
      (555313 'move' call_tmp[555310](336952 call _v _mt[232] this[48815]))
      unknown call_tmp[555315] "expr temp" "maybe param" "maybe type" "temp"
      (555318 'move' call_tmp[555315](46108 call c_memory_order order[46041]))
      unknown call_tmp[555320] "expr temp" "maybe param" "maybe type" "temp"
      (555323 'move' call_tmp[555320](46109 call atomic_fetch_add call_tmp[555310] value[46031] call_tmp[555315]))
      (46110 call = ret[46096] call_tmp[555320])
    }
    unknown call_tmp[555327] "expr temp" "maybe param" "maybe type" "temp"
    (555330 'move' call_tmp[555327](456798 call T _mt[232] this[48815]))
    (456802 'move' ret[456793](456801 'coerce' ret[46096] call_tmp[555327]))
    (456795 return ret[456793])
  }
  { scopeless type
    (336919 call T _mt[232] this[48815])
  }
  function AtomicT[48777](?).add[46133](arg _mt[48821]:_MT[227], arg this[48819]:AtomicT[48777](?), arg value[46130] :
  (336960 call T _mt[232] this[48819]), param arg order[46140]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456812] "RVV" "temp"
    function atomic_fetch_add[46159](ref arg obj[46156] :
    unknown call_tmp[555338] "expr temp" "maybe param" "maybe type" "temp", arg operand[46162] :
    (336977 call T _mt[232] this[48819]), arg order[46166]:memory_order[179753], arg _chpl_cname[46174]:string[24] =
    unknown call_tmp[555347] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456806] "RVV" "temp"
      (456808 return ret[456806])
    }
    { scopeless type
      (336983 call T _mt[232] this[48819])
    }
    {
      const tmp[46193] "const" "temp"
      unknown call_tmp[555354] "expr temp" "maybe param" "maybe type" "temp"
      (555357 'move' call_tmp[555354](46190 '_wide_get_locale' this[48819]))
      (46194 'move' tmp[46193](46191 'deref' call_tmp[555354]))
      unknown call_tmp[555361] "expr temp" "maybe param" "maybe type" "temp"
      (555364 'move' call_tmp[555361](336989 call _v _mt[232] this[48819]))
      unknown call_tmp[555366] "expr temp" "maybe param" "maybe type" "temp"
      (555369 'move' call_tmp[555366](46187 call c_memory_order order[46140]))
      (46188 call atomic_fetch_add call_tmp[555361] value[46130] call_tmp[555366])
    }
    (456814 return ret[456812])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchSub[46207](arg _mt[48825]:_MT[227], arg this[48823]:AtomicT[48777](?), arg value[46204] :
  (336996 call T _mt[232] this[48823]), param arg order[46214]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456824] "RVV" "temp"
    function atomic_fetch_sub[46248](ref arg obj[46245] :
    unknown call_tmp[555375] "expr temp" "maybe param" "maybe type" "temp", arg operand[46251] :
    (337018 call T _mt[232] this[48823]), arg order[46255]:memory_order[179753], arg _chpl_cname[46263]:string[24] =
    unknown call_tmp[555384] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456818] "RVV" "temp"
      (456820 return ret[456818])
    }
    { scopeless type
      (337024 call T _mt[232] this[48823])
    }
    unknown ret[46269] "insert auto destroy"
    unknown call_tmp[555393] "expr temp" "maybe param" "maybe type" "temp"
    (555396 'move' call_tmp[555393](337029 call T _mt[232] this[48823]))
    (489224 'default init var' ret[46269] call_tmp[555393])
    {
      const tmp[46289] "const" "temp"
      unknown call_tmp[555398] "expr temp" "maybe param" "maybe type" "temp"
      (555401 'move' call_tmp[555398](46286 '_wide_get_locale' this[48823]))
      (46290 'move' tmp[46289](46287 'deref' call_tmp[555398]))
      unknown call_tmp[555405] "expr temp" "maybe param" "maybe type" "temp"
      (555408 'move' call_tmp[555405](337036 call _v _mt[232] this[48823]))
      unknown call_tmp[555410] "expr temp" "maybe param" "maybe type" "temp"
      (555413 'move' call_tmp[555410](46281 call c_memory_order order[46214]))
      unknown call_tmp[555415] "expr temp" "maybe param" "maybe type" "temp"
      (555418 'move' call_tmp[555415](46282 call atomic_fetch_sub call_tmp[555405] value[46204] call_tmp[555410]))
      (46283 call = ret[46269] call_tmp[555415])
    }
    unknown call_tmp[555422] "expr temp" "maybe param" "maybe type" "temp"
    (555425 'move' call_tmp[555422](456829 call T _mt[232] this[48823]))
    (456833 'move' ret[456824](456832 'coerce' ret[46269] call_tmp[555422]))
    (456826 return ret[456824])
  }
  { scopeless type
    (337003 call T _mt[232] this[48823])
  }
  function AtomicT[48777](?).sub[46306](arg _mt[48829]:_MT[227], arg this[48827]:AtomicT[48777](?), arg value[46303] :
  (337044 call T _mt[232] this[48827]), param arg order[46313]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456843] "RVV" "temp"
    function atomic_fetch_sub[46332](ref arg obj[46329] :
    unknown call_tmp[555433] "expr temp" "maybe param" "maybe type" "temp", arg operand[46335] :
    (337061 call T _mt[232] this[48827]), arg order[46339]:memory_order[179753], arg _chpl_cname[46347]:string[24] =
    unknown call_tmp[555442] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456837] "RVV" "temp"
      (456839 return ret[456837])
    }
    { scopeless type
      (337067 call T _mt[232] this[48827])
    }
    {
      const tmp[46366] "const" "temp"
      unknown call_tmp[555449] "expr temp" "maybe param" "maybe type" "temp"
      (555452 'move' call_tmp[555449](46363 '_wide_get_locale' this[48827]))
      (46367 'move' tmp[46366](46364 'deref' call_tmp[555449]))
      unknown call_tmp[555456] "expr temp" "maybe param" "maybe type" "temp"
      (555459 'move' call_tmp[555456](337073 call _v _mt[232] this[48827]))
      unknown call_tmp[555461] "expr temp" "maybe param" "maybe type" "temp"
      (555464 'move' call_tmp[555461](46360 call c_memory_order order[46313]))
      (46361 call atomic_fetch_sub call_tmp[555456] value[46303] call_tmp[555461])
    }
    (456845 return ret[456843])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchOr[46380](arg _mt[48833]:_MT[227], arg this[48831]:AtomicT[48777](?), arg value[46377] :
  (337080 call T _mt[232] this[48831]), param arg order[46387]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456855] "RVV" "temp"
    unknown call_tmp[555470] "expr temp" "maybe param" "maybe type" "temp"
    (555473 'move' call_tmp[555470](337092 call T _mt[232] this[48831]))
    unknown call_tmp[555475] "expr temp" "maybe param" "maybe type" "temp"
    (555478 'move' call_tmp[555475](46395 call isIntegral call_tmp[555470]))
    unknown call_tmp[555480] "expr temp" "maybe param" "maybe type" "temp"
    (555483 'move' call_tmp[555480](46396 call ! call_tmp[555475]))
    unknown call_tmp[555485] "expr temp" "maybe param" "maybe type" "temp"
    (555488 'move' call_tmp[555485](46418 call _cond_test call_tmp[555480]))
    if call_tmp[555485]
    {
      (46416 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[46453](ref arg obj[46450] :
    unknown call_tmp[555492] "expr temp" "maybe param" "maybe type" "temp", arg operand[46456] :
    (337107 call T _mt[232] this[48831]), arg order[46460]:memory_order[179753], arg _chpl_cname[46468]:string[24] =
    unknown call_tmp[555501] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456849] "RVV" "temp"
      (456851 return ret[456849])
    }
    { scopeless type
      (337113 call T _mt[232] this[48831])
    }
    unknown ret[46473] "insert auto destroy"
    unknown call_tmp[555510] "expr temp" "maybe param" "maybe type" "temp"
    (555513 'move' call_tmp[555510](337118 call T _mt[232] this[48831]))
    (489226 'default init var' ret[46473] call_tmp[555510])
    {
      const tmp[46493] "const" "temp"
      unknown call_tmp[555515] "expr temp" "maybe param" "maybe type" "temp"
      (555518 'move' call_tmp[555515](46490 '_wide_get_locale' this[48831]))
      (46494 'move' tmp[46493](46491 'deref' call_tmp[555515]))
      unknown call_tmp[555522] "expr temp" "maybe param" "maybe type" "temp"
      (555525 'move' call_tmp[555522](337125 call _v _mt[232] this[48831]))
      unknown call_tmp[555527] "expr temp" "maybe param" "maybe type" "temp"
      (555530 'move' call_tmp[555527](46485 call c_memory_order order[46387]))
      unknown call_tmp[555532] "expr temp" "maybe param" "maybe type" "temp"
      (555535 'move' call_tmp[555532](46486 call atomic_fetch_or call_tmp[555522] value[46377] call_tmp[555527]))
      (46487 call = ret[46473] call_tmp[555532])
    }
    unknown call_tmp[555539] "expr temp" "maybe param" "maybe type" "temp"
    (555542 'move' call_tmp[555539](456860 call T _mt[232] this[48831]))
    (456864 'move' ret[456855](456863 'coerce' ret[46473] call_tmp[555539]))
    (456857 return ret[456855])
  }
  { scopeless type
    (337087 call T _mt[232] this[48831])
  }
  function AtomicT[48777](?).or[46510](arg _mt[48837]:_MT[227], arg this[48835]:AtomicT[48777](?), arg value[46507] :
  (337133 call T _mt[232] this[48835]), param arg order[46517]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456874] "RVV" "temp"
    unknown call_tmp[555550] "expr temp" "maybe param" "maybe type" "temp"
    (555553 'move' call_tmp[555550](337140 call T _mt[232] this[48835]))
    unknown call_tmp[555555] "expr temp" "maybe param" "maybe type" "temp"
    (555558 'move' call_tmp[555555](46525 call isIntegral call_tmp[555550]))
    unknown call_tmp[555560] "expr temp" "maybe param" "maybe type" "temp"
    (555563 'move' call_tmp[555560](46526 call ! call_tmp[555555]))
    unknown call_tmp[555565] "expr temp" "maybe param" "maybe type" "temp"
    (555568 'move' call_tmp[555565](46548 call _cond_test call_tmp[555560]))
    if call_tmp[555565]
    {
      (46546 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[46568](ref arg obj[46565] :
    unknown call_tmp[555572] "expr temp" "maybe param" "maybe type" "temp", arg operand[46571] :
    (337155 call T _mt[232] this[48835]), arg order[46575]:memory_order[179753], arg _chpl_cname[46583]:string[24] =
    unknown call_tmp[555581] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456868] "RVV" "temp"
      (456870 return ret[456868])
    }
    { scopeless type
      (337161 call T _mt[232] this[48835])
    }
    {
      const tmp[46601] "const" "temp"
      unknown call_tmp[555588] "expr temp" "maybe param" "maybe type" "temp"
      (555591 'move' call_tmp[555588](46598 '_wide_get_locale' this[48835]))
      (46602 'move' tmp[46601](46599 'deref' call_tmp[555588]))
      unknown call_tmp[555595] "expr temp" "maybe param" "maybe type" "temp"
      (555598 'move' call_tmp[555595](337167 call _v _mt[232] this[48835]))
      unknown call_tmp[555600] "expr temp" "maybe param" "maybe type" "temp"
      (555603 'move' call_tmp[555600](46595 call c_memory_order order[46517]))
      (46596 call atomic_fetch_or call_tmp[555595] value[46507] call_tmp[555600])
    }
    (456876 return ret[456874])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchAnd[46615](arg _mt[48841]:_MT[227], arg this[48839]:AtomicT[48777](?), arg value[46612] :
  (337174 call T _mt[232] this[48839]), param arg order[46622]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456886] "RVV" "temp"
    unknown call_tmp[555609] "expr temp" "maybe param" "maybe type" "temp"
    (555612 'move' call_tmp[555609](337186 call T _mt[232] this[48839]))
    unknown call_tmp[555614] "expr temp" "maybe param" "maybe type" "temp"
    (555617 'move' call_tmp[555614](46630 call isIntegral call_tmp[555609]))
    unknown call_tmp[555619] "expr temp" "maybe param" "maybe type" "temp"
    (555622 'move' call_tmp[555619](46631 call ! call_tmp[555614]))
    unknown call_tmp[555624] "expr temp" "maybe param" "maybe type" "temp"
    (555627 'move' call_tmp[555624](46653 call _cond_test call_tmp[555619]))
    if call_tmp[555624]
    {
      (46651 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[46688](ref arg obj[46685] :
    unknown call_tmp[555631] "expr temp" "maybe param" "maybe type" "temp", arg operand[46691] :
    (337201 call T _mt[232] this[48839]), arg order[46695]:memory_order[179753], arg _chpl_cname[46703]:string[24] =
    unknown call_tmp[555640] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456880] "RVV" "temp"
      (456882 return ret[456880])
    }
    { scopeless type
      (337207 call T _mt[232] this[48839])
    }
    unknown ret[46708] "insert auto destroy"
    unknown call_tmp[555649] "expr temp" "maybe param" "maybe type" "temp"
    (555652 'move' call_tmp[555649](337212 call T _mt[232] this[48839]))
    (489228 'default init var' ret[46708] call_tmp[555649])
    {
      const tmp[46728] "const" "temp"
      unknown call_tmp[555654] "expr temp" "maybe param" "maybe type" "temp"
      (555657 'move' call_tmp[555654](46725 '_wide_get_locale' this[48839]))
      (46729 'move' tmp[46728](46726 'deref' call_tmp[555654]))
      unknown call_tmp[555661] "expr temp" "maybe param" "maybe type" "temp"
      (555664 'move' call_tmp[555661](337219 call _v _mt[232] this[48839]))
      unknown call_tmp[555666] "expr temp" "maybe param" "maybe type" "temp"
      (555669 'move' call_tmp[555666](46720 call c_memory_order order[46622]))
      unknown call_tmp[555671] "expr temp" "maybe param" "maybe type" "temp"
      (555674 'move' call_tmp[555671](46721 call atomic_fetch_and call_tmp[555661] value[46612] call_tmp[555666]))
      (46722 call = ret[46708] call_tmp[555671])
    }
    unknown call_tmp[555678] "expr temp" "maybe param" "maybe type" "temp"
    (555681 'move' call_tmp[555678](456891 call T _mt[232] this[48839]))
    (456895 'move' ret[456886](456894 'coerce' ret[46708] call_tmp[555678]))
    (456888 return ret[456886])
  }
  { scopeless type
    (337181 call T _mt[232] this[48839])
  }
  function AtomicT[48777](?).and[46745](arg _mt[48845]:_MT[227], arg this[48843]:AtomicT[48777](?), arg value[46742] :
  (337227 call T _mt[232] this[48843]), param arg order[46752]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456905] "RVV" "temp"
    unknown call_tmp[555689] "expr temp" "maybe param" "maybe type" "temp"
    (555692 'move' call_tmp[555689](337234 call T _mt[232] this[48843]))
    unknown call_tmp[555694] "expr temp" "maybe param" "maybe type" "temp"
    (555697 'move' call_tmp[555694](46760 call isIntegral call_tmp[555689]))
    unknown call_tmp[555699] "expr temp" "maybe param" "maybe type" "temp"
    (555702 'move' call_tmp[555699](46761 call ! call_tmp[555694]))
    unknown call_tmp[555704] "expr temp" "maybe param" "maybe type" "temp"
    (555707 'move' call_tmp[555704](46783 call _cond_test call_tmp[555699]))
    if call_tmp[555704]
    {
      (46781 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[46803](ref arg obj[46800] :
    unknown call_tmp[555711] "expr temp" "maybe param" "maybe type" "temp", arg operand[46806] :
    (337249 call T _mt[232] this[48843]), arg order[46810]:memory_order[179753], arg _chpl_cname[46818]:string[24] =
    unknown call_tmp[555720] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456899] "RVV" "temp"
      (456901 return ret[456899])
    }
    { scopeless type
      (337255 call T _mt[232] this[48843])
    }
    {
      const tmp[46836] "const" "temp"
      unknown call_tmp[555727] "expr temp" "maybe param" "maybe type" "temp"
      (555730 'move' call_tmp[555727](46833 '_wide_get_locale' this[48843]))
      (46837 'move' tmp[46836](46834 'deref' call_tmp[555727]))
      unknown call_tmp[555734] "expr temp" "maybe param" "maybe type" "temp"
      (555737 'move' call_tmp[555734](337261 call _v _mt[232] this[48843]))
      unknown call_tmp[555739] "expr temp" "maybe param" "maybe type" "temp"
      (555742 'move' call_tmp[555739](46830 call c_memory_order order[46752]))
      (46831 call atomic_fetch_and call_tmp[555734] value[46742] call_tmp[555739])
    }
    (456907 return ret[456905])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchXor[46850](arg _mt[48849]:_MT[227], arg this[48847]:AtomicT[48777](?), arg value[46847] :
  (337268 call T _mt[232] this[48847]), param arg order[46857]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456917] "RVV" "temp"
    unknown call_tmp[555748] "expr temp" "maybe param" "maybe type" "temp"
    (555751 'move' call_tmp[555748](337280 call T _mt[232] this[48847]))
    unknown call_tmp[555753] "expr temp" "maybe param" "maybe type" "temp"
    (555756 'move' call_tmp[555753](46865 call isIntegral call_tmp[555748]))
    unknown call_tmp[555758] "expr temp" "maybe param" "maybe type" "temp"
    (555761 'move' call_tmp[555758](46866 call ! call_tmp[555753]))
    unknown call_tmp[555763] "expr temp" "maybe param" "maybe type" "temp"
    (555766 'move' call_tmp[555763](46888 call _cond_test call_tmp[555758]))
    if call_tmp[555763]
    {
      (46886 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[46923](ref arg obj[46920] :
    unknown call_tmp[555770] "expr temp" "maybe param" "maybe type" "temp", arg operand[46926] :
    (337295 call T _mt[232] this[48847]), arg order[46930]:memory_order[179753], arg _chpl_cname[46938]:string[24] =
    unknown call_tmp[555779] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456911] "RVV" "temp"
      (456913 return ret[456911])
    }
    { scopeless type
      (337301 call T _mt[232] this[48847])
    }
    unknown ret[46943] "insert auto destroy"
    unknown call_tmp[555788] "expr temp" "maybe param" "maybe type" "temp"
    (555791 'move' call_tmp[555788](337306 call T _mt[232] this[48847]))
    (489230 'default init var' ret[46943] call_tmp[555788])
    {
      const tmp[46963] "const" "temp"
      unknown call_tmp[555793] "expr temp" "maybe param" "maybe type" "temp"
      (555796 'move' call_tmp[555793](46960 '_wide_get_locale' this[48847]))
      (46964 'move' tmp[46963](46961 'deref' call_tmp[555793]))
      unknown call_tmp[555800] "expr temp" "maybe param" "maybe type" "temp"
      (555803 'move' call_tmp[555800](337313 call _v _mt[232] this[48847]))
      unknown call_tmp[555805] "expr temp" "maybe param" "maybe type" "temp"
      (555808 'move' call_tmp[555805](46955 call c_memory_order order[46857]))
      unknown call_tmp[555810] "expr temp" "maybe param" "maybe type" "temp"
      (555813 'move' call_tmp[555810](46956 call atomic_fetch_xor call_tmp[555800] value[46847] call_tmp[555805]))
      (46957 call = ret[46943] call_tmp[555810])
    }
    unknown call_tmp[555817] "expr temp" "maybe param" "maybe type" "temp"
    (555820 'move' call_tmp[555817](456922 call T _mt[232] this[48847]))
    (456926 'move' ret[456917](456925 'coerce' ret[46943] call_tmp[555817]))
    (456919 return ret[456917])
  }
  { scopeless type
    (337275 call T _mt[232] this[48847])
  }
  function AtomicT[48777](?).xor[46980](arg _mt[48853]:_MT[227], arg this[48851]:AtomicT[48777](?), arg value[46977] :
  (337321 call T _mt[232] this[48851]), param arg order[46987]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456936] "RVV" "temp"
    unknown call_tmp[555828] "expr temp" "maybe param" "maybe type" "temp"
    (555831 'move' call_tmp[555828](337328 call T _mt[232] this[48851]))
    unknown call_tmp[555833] "expr temp" "maybe param" "maybe type" "temp"
    (555836 'move' call_tmp[555833](46995 call isIntegral call_tmp[555828]))
    unknown call_tmp[555838] "expr temp" "maybe param" "maybe type" "temp"
    (555841 'move' call_tmp[555838](46996 call ! call_tmp[555833]))
    unknown call_tmp[555843] "expr temp" "maybe param" "maybe type" "temp"
    (555846 'move' call_tmp[555843](47018 call _cond_test call_tmp[555838]))
    if call_tmp[555843]
    {
      (47016 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47038](ref arg obj[47035] :
    unknown call_tmp[555850] "expr temp" "maybe param" "maybe type" "temp", arg operand[47041] :
    (337343 call T _mt[232] this[48851]), arg order[47045]:memory_order[179753], arg _chpl_cname[47053]:string[24] =
    unknown call_tmp[555859] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456930] "RVV" "temp"
      (456932 return ret[456930])
    }
    { scopeless type
      (337349 call T _mt[232] this[48851])
    }
    {
      const tmp[47071] "const" "temp"
      unknown call_tmp[555866] "expr temp" "maybe param" "maybe type" "temp"
      (555869 'move' call_tmp[555866](47068 '_wide_get_locale' this[48851]))
      (47072 'move' tmp[47071](47069 'deref' call_tmp[555866]))
      unknown call_tmp[555873] "expr temp" "maybe param" "maybe type" "temp"
      (555876 'move' call_tmp[555873](337355 call _v _mt[232] this[48851]))
      unknown call_tmp[555878] "expr temp" "maybe param" "maybe type" "temp"
      (555881 'move' call_tmp[555878](47065 call c_memory_order order[46987]))
      (47066 call atomic_fetch_xor call_tmp[555873] value[46977] call_tmp[555878])
    }
    (456938 return ret[456936])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).waitFor[47085](arg _mt[48857]:_MT[227], const arg this[48855]:AtomicT[48777](?), arg value[47082] :
  (337362 call T _mt[232] this[48855]), param arg order[47092]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[456942] "RVV" "temp"
    {
      const tmp[47174] "const" "temp"
      unknown call_tmp[555885] "expr temp" "maybe param" "maybe type" "temp"
      (555888 'move' call_tmp[555885](47171 '_wide_get_locale' this[48855]))
      (47175 'move' tmp[47174](47172 'deref' call_tmp[555885]))
      {
        {
          unknown tmp[47117] "temp"
          unknown call_tmp[555892] "expr temp" "maybe param" "maybe type" "temp"
          (555895 'move' call_tmp[555892](47152 call(47149 call (partial) read _mt[232] this[48855])(order = relaxed[180097])))
          unknown call_tmp[555897] "expr temp" "maybe param" "maybe type" "temp"
          (555900 'move' call_tmp[555897](47147 call != call_tmp[555892] value[47082]))
          (47159 'move' tmp[47117](47145 call _cond_test call_tmp[555897]))
          WhileDo
          {
            {
              (47114 call chpl_task_yield)
            }
            label _continueLabel[47120]
            unknown call_tmp[555904] "expr temp" "maybe param" "maybe type" "temp"
            (555907 'move' call_tmp[555904](47133 call(47130 call (partial) read _mt[232] this[48855])(order = relaxed[180097])))
            unknown call_tmp[555909] "expr temp" "maybe param" "maybe type" "temp"
            (555912 'move' call_tmp[555909](47128 call != call_tmp[555904] value[47082]))
            (47140 'move' tmp[47117](47126 call _cond_test call_tmp[555909]))
            tmp[47117]
          }
          label _breakLabel[47121]
        }
        unknown call_tmp[555914] "expr temp" "maybe param" "maybe type" "temp"
        (555917 'move' call_tmp[555914](47167 call c_memory_order order[47092]))
        (47169 call chpl_atomic_thread_fence call_tmp[555914])
      }
    }
    (456944 return ret[456942])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).writeThis[47187](arg _mt[48861]:_MT[227], const arg this[48859]:AtomicT[48777](?), arg x[47185]:_any[170](?)) : _unknown[43] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[555921] "expr temp" "maybe param" "maybe type" "temp"
    (555924 'move' call_tmp[555921](47192 call(337377 call (partial) read _mt[232] this[48859])))
    (47193 call <~> x[47185] call_tmp[555921])
    (456946 return _void[47])
  }
  function AtomicT[48777](?).compareExchange[47205](arg _mt[48865]:_MT[227], arg this[48863]:AtomicT[48777](?), arg expected[47202] :
  (337382 call T _mt[232] this[48863]), arg desired[47208] :
  (337387 call T _mt[232] this[48863]), param arg order[47216]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456950] "RVV" "temp"
    (47224 call compilerWarning "compareExchange is deprecated (and will be repurposed in a future release), use compareAndSwap")
    unknown call_tmp[555932] "expr temp" "maybe param" "maybe type" "temp"
    (555935 'move' call_tmp[555932](47235 call(47228 call (partial) compareAndSwap _mt[232] this[48863]) expected[47202] desired[47208] order[47216]))
    (456956 'move' ret[456950](456955 'coerce' call_tmp[555932] bool[10]))
    (456952 return ret[456950])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).compareExchangeWeak[47247](arg _mt[48869]:_MT[227], arg this[48867]:AtomicT[48777](?), arg expected[47244] :
  (337398 call T _mt[232] this[48867]), arg desired[47250] :
  (337403 call T _mt[232] this[48867]), param arg order[47258]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456960] "RVV" "temp"
    (47266 call compilerWarning "compareExchangeWeak is deprecated (and will be repurposed in a future release), use compareAndSwap")
    unknown call_tmp[555943] "expr temp" "maybe param" "maybe type" "temp"
    (555946 'move' call_tmp[555943](47277 call(47270 call (partial) compareAndSwap _mt[232] this[48867]) expected[47244] desired[47250] order[47258]))
    (456966 'move' ret[456960](456965 'coerce' call_tmp[555943] bool[10]))
    (456962 return ret[456960])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).compareExchangeStrong[47289](arg _mt[48873]:_MT[227], arg this[48871]:AtomicT[48777](?), arg expected[47286] :
  (337414 call T _mt[232] this[48871]), arg desired[47292] :
  (337419 call T _mt[232] this[48871]), param arg order[47300]:memoryOrder[180099] =
  seqCst[180089]) : _unknown[43] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[456970] "RVV" "temp"
    (47308 call compilerWarning "compareExchangeStrong is deprecated (and will be repurposed in a future release), use compareAndSwap")
    unknown call_tmp[555954] "expr temp" "maybe param" "maybe type" "temp"
    (555957 'move' call_tmp[555954](47319 call(47312 call (partial) compareAndSwap _mt[232] this[48871]) expected[47286] desired[47292] order[47300]))
    (456976 'move' ret[456970](456975 'coerce' call_tmp[555954] bool[10]))
    (456972 return ret[456970])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).read[47331](arg _mt[48877]:_MT[227], const arg this[48875]:AtomicT[48777](?), arg order[47328]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[456986] "RVV" "temp"
    (47337 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_load[47354](const  ref arg obj[47351] :
    unknown call_tmp[555961] "expr temp" "maybe param" "maybe type" "temp", arg order[47357]:memory_order[179753], arg _chpl_cname[47365]:string[24] =
    unknown call_tmp[555968] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456980] "RVV" "temp"
      (456982 return ret[456980])
    }
    { scopeless type
      (337447 call T _mt[232] this[48875])
    }
    unknown ret[47370] "insert auto destroy"
    unknown call_tmp[555977] "expr temp" "maybe param" "maybe type" "temp"
    (555980 'move' call_tmp[555977](337452 call T _mt[232] this[48875]))
    (489232 'default init var' ret[47370] call_tmp[555977])
    {
      const tmp[47386] "const" "temp"
      unknown call_tmp[555982] "expr temp" "maybe param" "maybe type" "temp"
      (555985 'move' call_tmp[555982](47383 '_wide_get_locale' this[48875]))
      (47387 'move' tmp[47386](47384 'deref' call_tmp[555982]))
      unknown call_tmp[555989] "expr temp" "maybe param" "maybe type" "temp"
      (555992 'move' call_tmp[555989](337459 call _v _mt[232] this[48875]))
      unknown call_tmp[555994] "expr temp" "maybe param" "maybe type" "temp"
      (555997 'move' call_tmp[555994](47379 call atomic_load call_tmp[555989] order[47328]))
      (47380 call = ret[47370] call_tmp[555994])
    }
    unknown call_tmp[556001] "expr temp" "maybe param" "maybe type" "temp"
    (556004 'move' call_tmp[556001](456991 call T _mt[232] this[48875]))
    (456995 'move' ret[456986](456994 'coerce' ret[47370] call_tmp[556001]))
    (456988 return ret[456986])
  }
  { scopeless type
    (337431 call T _mt[232] this[48875])
  }
  function AtomicT[48777](?).write[47403](arg _mt[48881]:_MT[227], arg this[48879]:AtomicT[48777](?), arg value[47400] :
  (337466 call T _mt[232] this[48879]), arg order[47406]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457005] "RVV" "temp"
    (47413 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_store[47430](ref arg obj[47427] :
    unknown call_tmp[556012] "expr temp" "maybe param" "maybe type" "temp", arg value[47433] :
    (337482 call T _mt[232] this[48879]), arg order[47437]:memory_order[179753], arg _chpl_cname[47445]:string[24] =
    unknown call_tmp[556021] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[456999] "RVV" "temp"
      (457001 return ret[456999])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[47460] "const" "temp"
      unknown call_tmp[556026] "expr temp" "maybe param" "maybe type" "temp"
      (556029 'move' call_tmp[556026](47457 '_wide_get_locale' this[48879]))
      (47461 'move' tmp[47460](47458 'deref' call_tmp[556026]))
      unknown call_tmp[556033] "expr temp" "maybe param" "maybe type" "temp"
      (556036 'move' call_tmp[556033](337489 call _v _mt[232] this[48879]))
      (47455 call atomic_store call_tmp[556033] value[47400] order[47406])
    }
    (457007 return ret[457005])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).exchange[47474](arg _mt[48885]:_MT[227], arg this[48883]:AtomicT[48777](?), arg value[47471] :
  (337496 call T _mt[232] this[48883]), arg order[47477]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457017] "RVV" "temp"
    (47484 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_exchange[47501](ref arg obj[47498] :
    unknown call_tmp[556042] "expr temp" "maybe param" "maybe type" "temp", arg value[47504] :
    (337517 call T _mt[232] this[48883]), arg order[47508]:memory_order[179753], arg _chpl_cname[47516]:string[24] =
    unknown call_tmp[556051] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457011] "RVV" "temp"
      (457013 return ret[457011])
    }
    { scopeless type
      (337523 call T _mt[232] this[48883])
    }
    unknown ret[47521] "insert auto destroy"
    unknown call_tmp[556060] "expr temp" "maybe param" "maybe type" "temp"
    (556063 'move' call_tmp[556060](337528 call T _mt[232] this[48883]))
    (489234 'default init var' ret[47521] call_tmp[556060])
    {
      const tmp[47538] "const" "temp"
      unknown call_tmp[556065] "expr temp" "maybe param" "maybe type" "temp"
      (556068 'move' call_tmp[556065](47535 '_wide_get_locale' this[48883]))
      (47539 'move' tmp[47538](47536 'deref' call_tmp[556065]))
      unknown call_tmp[556072] "expr temp" "maybe param" "maybe type" "temp"
      (556075 'move' call_tmp[556072](337535 call _v _mt[232] this[48883]))
      unknown call_tmp[556077] "expr temp" "maybe param" "maybe type" "temp"
      (556080 'move' call_tmp[556077](47531 call atomic_exchange call_tmp[556072] value[47471] order[47477]))
      (47532 call = ret[47521] call_tmp[556077])
    }
    unknown call_tmp[556084] "expr temp" "maybe param" "maybe type" "temp"
    (556087 'move' call_tmp[556084](457022 call T _mt[232] this[48883]))
    (457026 'move' ret[457017](457025 'coerce' ret[47521] call_tmp[556084]))
    (457019 return ret[457017])
  }
  { scopeless type
    (337502 call T _mt[232] this[48883])
  }
  function AtomicT[48777](?).compareExchange[47555](arg _mt[48889]:_MT[227], arg this[48887]:AtomicT[48777](?), arg expected[47552] :
  (337543 call T _mt[232] this[48887]), arg desired[47558] :
  (337548 call T _mt[232] this[48887]), arg order[47562]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457030] "RVV" "temp"
    unknown call_tmp[556097] "expr temp" "maybe param" "maybe type" "temp"
    (556100 'move' call_tmp[556097](47574 call(47567 call (partial) compareExchangeStrong _mt[232] this[48887]) expected[47552] desired[47558] order[47562]))
    (457036 'move' ret[457030](457035 'coerce' call_tmp[556097] bool[10]))
    (457032 return ret[457030])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).compareExchangeWeak[47587](arg _mt[48893]:_MT[227], arg this[48891]:AtomicT[48777](?), arg expected[47584] :
  (337558 call T _mt[232] this[48891]), arg desired[47590] :
  (337563 call T _mt[232] this[48891]), arg order[47594]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457046] "RVV" "temp"
    (47601 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_weak[47618](ref arg obj[47615] :
    unknown call_tmp[556108] "expr temp" "maybe param" "maybe type" "temp", arg expected[47621] :
    (337579 call T _mt[232] this[48891]), arg desired[47625] :
    (337584 call T _mt[232] this[48891]), arg order[47629]:memory_order[179753], arg _chpl_cname[47637]:string[24] =
    unknown call_tmp[556119] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457040] "RVV" "temp"
      (457042 return ret[457040])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[47642] "insert auto destroy"
    (489236 'default init var' ret[47642] bool[10])
    {
      const tmp[47660] "const" "temp"
      unknown call_tmp[556124] "expr temp" "maybe param" "maybe type" "temp"
      (556127 'move' call_tmp[556124](47657 '_wide_get_locale' this[48891]))
      (47661 'move' tmp[47660](47658 'deref' call_tmp[556124]))
      unknown call_tmp[556131] "expr temp" "maybe param" "maybe type" "temp"
      (556134 'move' call_tmp[556131](337592 call _v _mt[232] this[48891]))
      unknown call_tmp[556136] "expr temp" "maybe param" "maybe type" "temp"
      (556139 'move' call_tmp[556136](47653 call atomic_compare_exchange_weak call_tmp[556131] expected[47584] desired[47590] order[47594]))
      (47654 call = ret[47642] call_tmp[556136])
    }
    (457052 'move' ret[457046](457051 'coerce' ret[47642] bool[10]))
    (457048 return ret[457046])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).compareExchangeStrong[47677](arg _mt[48897]:_MT[227], arg this[48895]:AtomicT[48777](?), arg expected[47674] :
  (337601 call T _mt[232] this[48895]), arg desired[47680] :
  (337606 call T _mt[232] this[48895]), arg order[47684]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457062] "RVV" "temp"
    (47691 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_strong[47708](ref arg obj[47705] :
    unknown call_tmp[556147] "expr temp" "maybe param" "maybe type" "temp", arg expected[47711] :
    (337622 call T _mt[232] this[48895]), arg desired[47715] :
    (337627 call T _mt[232] this[48895]), arg order[47719]:memory_order[179753], arg _chpl_cname[47727]:string[24] =
    unknown call_tmp[556158] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457056] "RVV" "temp"
      (457058 return ret[457056])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[47732] "insert auto destroy"
    (489238 'default init var' ret[47732] bool[10])
    {
      const tmp[47750] "const" "temp"
      unknown call_tmp[556163] "expr temp" "maybe param" "maybe type" "temp"
      (556166 'move' call_tmp[556163](47747 '_wide_get_locale' this[48895]))
      (47751 'move' tmp[47750](47748 'deref' call_tmp[556163]))
      unknown call_tmp[556170] "expr temp" "maybe param" "maybe type" "temp"
      (556173 'move' call_tmp[556170](337635 call _v _mt[232] this[48895]))
      unknown call_tmp[556175] "expr temp" "maybe param" "maybe type" "temp"
      (556178 'move' call_tmp[556175](47743 call atomic_compare_exchange_strong call_tmp[556170] expected[47674] desired[47680] order[47684]))
      (47744 call = ret[47732] call_tmp[556175])
    }
    (457068 'move' ret[457062](457067 'coerce' ret[47732] bool[10]))
    (457064 return ret[457062])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48777](?).fetchAdd[47767](arg _mt[48901]:_MT[227], arg this[48899]:AtomicT[48777](?), arg value[47764] :
  (337644 call T _mt[232] this[48899]), arg order[47770]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457078] "RVV" "temp"
    (47777 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_add[47794](ref arg obj[47791] :
    unknown call_tmp[556184] "expr temp" "maybe param" "maybe type" "temp", arg operand[47797] :
    (337665 call T _mt[232] this[48899]), arg order[47801]:memory_order[179753], arg _chpl_cname[47809]:string[24] =
    unknown call_tmp[556193] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457072] "RVV" "temp"
      (457074 return ret[457072])
    }
    { scopeless type
      (337671 call T _mt[232] this[48899])
    }
    unknown ret[47814] "insert auto destroy"
    unknown call_tmp[556202] "expr temp" "maybe param" "maybe type" "temp"
    (556205 'move' call_tmp[556202](337676 call T _mt[232] this[48899]))
    (489240 'default init var' ret[47814] call_tmp[556202])
    {
      const tmp[47831] "const" "temp"
      unknown call_tmp[556207] "expr temp" "maybe param" "maybe type" "temp"
      (556210 'move' call_tmp[556207](47828 '_wide_get_locale' this[48899]))
      (47832 'move' tmp[47831](47829 'deref' call_tmp[556207]))
      unknown call_tmp[556214] "expr temp" "maybe param" "maybe type" "temp"
      (556217 'move' call_tmp[556214](337683 call _v _mt[232] this[48899]))
      unknown call_tmp[556219] "expr temp" "maybe param" "maybe type" "temp"
      (556222 'move' call_tmp[556219](47824 call atomic_fetch_add call_tmp[556214] value[47764] order[47770]))
      (47825 call = ret[47814] call_tmp[556219])
    }
    unknown call_tmp[556226] "expr temp" "maybe param" "maybe type" "temp"
    (556229 'move' call_tmp[556226](457083 call T _mt[232] this[48899]))
    (457087 'move' ret[457078](457086 'coerce' ret[47814] call_tmp[556226]))
    (457080 return ret[457078])
  }
  { scopeless type
    (337650 call T _mt[232] this[48899])
  }
  function AtomicT[48777](?).add[47848](arg _mt[48905]:_MT[227], arg this[48903]:AtomicT[48777](?), arg value[47845] :
  (337691 call T _mt[232] this[48903]), arg order[47851]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457097] "RVV" "temp"
    (47858 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_add[47875](ref arg obj[47872] :
    unknown call_tmp[556237] "expr temp" "maybe param" "maybe type" "temp", arg operand[47878] :
    (337707 call T _mt[232] this[48903]), arg order[47882]:memory_order[179753], arg _chpl_cname[47890]:string[24] =
    unknown call_tmp[556246] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457091] "RVV" "temp"
      (457093 return ret[457091])
    }
    { scopeless type
      (337713 call T _mt[232] this[48903])
    }
    {
      const tmp[47905] "const" "temp"
      unknown call_tmp[556253] "expr temp" "maybe param" "maybe type" "temp"
      (556256 'move' call_tmp[556253](47902 '_wide_get_locale' this[48903]))
      (47906 'move' tmp[47905](47903 'deref' call_tmp[556253]))
      unknown call_tmp[556260] "expr temp" "maybe param" "maybe type" "temp"
      (556263 'move' call_tmp[556260](337719 call _v _mt[232] this[48903]))
      (47900 call atomic_fetch_add call_tmp[556260] value[47845] order[47851])
    }
    (457099 return ret[457097])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchSub[47919](arg _mt[48909]:_MT[227], arg this[48907]:AtomicT[48777](?), arg value[47916] :
  (337726 call T _mt[232] this[48907]), arg order[47922]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457109] "RVV" "temp"
    (47929 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_sub[47946](ref arg obj[47943] :
    unknown call_tmp[556269] "expr temp" "maybe param" "maybe type" "temp", arg operand[47949] :
    (337747 call T _mt[232] this[48907]), arg order[47953]:memory_order[179753], arg _chpl_cname[47961]:string[24] =
    unknown call_tmp[556278] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457103] "RVV" "temp"
      (457105 return ret[457103])
    }
    { scopeless type
      (337753 call T _mt[232] this[48907])
    }
    unknown ret[47966] "insert auto destroy"
    unknown call_tmp[556287] "expr temp" "maybe param" "maybe type" "temp"
    (556290 'move' call_tmp[556287](337758 call T _mt[232] this[48907]))
    (489242 'default init var' ret[47966] call_tmp[556287])
    {
      const tmp[47983] "const" "temp"
      unknown call_tmp[556292] "expr temp" "maybe param" "maybe type" "temp"
      (556295 'move' call_tmp[556292](47980 '_wide_get_locale' this[48907]))
      (47984 'move' tmp[47983](47981 'deref' call_tmp[556292]))
      unknown call_tmp[556299] "expr temp" "maybe param" "maybe type" "temp"
      (556302 'move' call_tmp[556299](337765 call _v _mt[232] this[48907]))
      unknown call_tmp[556304] "expr temp" "maybe param" "maybe type" "temp"
      (556307 'move' call_tmp[556304](47976 call atomic_fetch_sub call_tmp[556299] value[47916] order[47922]))
      (47977 call = ret[47966] call_tmp[556304])
    }
    unknown call_tmp[556311] "expr temp" "maybe param" "maybe type" "temp"
    (556314 'move' call_tmp[556311](457114 call T _mt[232] this[48907]))
    (457118 'move' ret[457109](457117 'coerce' ret[47966] call_tmp[556311]))
    (457111 return ret[457109])
  }
  { scopeless type
    (337732 call T _mt[232] this[48907])
  }
  function AtomicT[48777](?).sub[48000](arg _mt[48913]:_MT[227], arg this[48911]:AtomicT[48777](?), arg value[47997] :
  (337773 call T _mt[232] this[48911]), arg order[48003]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457128] "RVV" "temp"
    (48010 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_sub[48027](ref arg obj[48024] :
    unknown call_tmp[556322] "expr temp" "maybe param" "maybe type" "temp", arg operand[48030] :
    (337789 call T _mt[232] this[48911]), arg order[48034]:memory_order[179753], arg _chpl_cname[48042]:string[24] =
    unknown call_tmp[556331] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457122] "RVV" "temp"
      (457124 return ret[457122])
    }
    { scopeless type
      (337795 call T _mt[232] this[48911])
    }
    {
      const tmp[48057] "const" "temp"
      unknown call_tmp[556338] "expr temp" "maybe param" "maybe type" "temp"
      (556341 'move' call_tmp[556338](48054 '_wide_get_locale' this[48911]))
      (48058 'move' tmp[48057](48055 'deref' call_tmp[556338]))
      unknown call_tmp[556345] "expr temp" "maybe param" "maybe type" "temp"
      (556348 'move' call_tmp[556345](337801 call _v _mt[232] this[48911]))
      (48052 call atomic_fetch_sub call_tmp[556345] value[47997] order[48003])
    }
    (457130 return ret[457128])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchOr[48071](arg _mt[48917]:_MT[227], arg this[48915]:AtomicT[48777](?), arg value[48068] :
  (337808 call T _mt[232] this[48915]), arg order[48074]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457140] "RVV" "temp"
    (48081 call compilerWarning "memory_order is deprecated, use memoryOrder")
    unknown call_tmp[556354] "expr temp" "maybe param" "maybe type" "temp"
    (556357 'move' call_tmp[556354](337819 call T _mt[232] this[48915]))
    unknown call_tmp[556359] "expr temp" "maybe param" "maybe type" "temp"
    (556362 'move' call_tmp[556359](48087 call isIntegral call_tmp[556354]))
    unknown call_tmp[556364] "expr temp" "maybe param" "maybe type" "temp"
    (556367 'move' call_tmp[556364](48088 call ! call_tmp[556359]))
    unknown call_tmp[556369] "expr temp" "maybe param" "maybe type" "temp"
    (556372 'move' call_tmp[556369](48095 call _cond_test call_tmp[556364]))
    if call_tmp[556369]
    {
      (48093 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[48114](ref arg obj[48111] :
    unknown call_tmp[556376] "expr temp" "maybe param" "maybe type" "temp", arg operand[48117] :
    (337834 call T _mt[232] this[48915]), arg order[48121]:memory_order[179753], arg _chpl_cname[48129]:string[24] =
    unknown call_tmp[556385] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457134] "RVV" "temp"
      (457136 return ret[457134])
    }
    { scopeless type
      (337840 call T _mt[232] this[48915])
    }
    unknown ret[48134] "insert auto destroy"
    unknown call_tmp[556394] "expr temp" "maybe param" "maybe type" "temp"
    (556397 'move' call_tmp[556394](337845 call T _mt[232] this[48915]))
    (489244 'default init var' ret[48134] call_tmp[556394])
    {
      const tmp[48151] "const" "temp"
      unknown call_tmp[556399] "expr temp" "maybe param" "maybe type" "temp"
      (556402 'move' call_tmp[556399](48148 '_wide_get_locale' this[48915]))
      (48152 'move' tmp[48151](48149 'deref' call_tmp[556399]))
      unknown call_tmp[556406] "expr temp" "maybe param" "maybe type" "temp"
      (556409 'move' call_tmp[556406](337852 call _v _mt[232] this[48915]))
      unknown call_tmp[556411] "expr temp" "maybe param" "maybe type" "temp"
      (556414 'move' call_tmp[556411](48144 call atomic_fetch_or call_tmp[556406] value[48068] order[48074]))
      (48145 call = ret[48134] call_tmp[556411])
    }
    unknown call_tmp[556418] "expr temp" "maybe param" "maybe type" "temp"
    (556421 'move' call_tmp[556418](457145 call T _mt[232] this[48915]))
    (457149 'move' ret[457140](457148 'coerce' ret[48134] call_tmp[556418]))
    (457142 return ret[457140])
  }
  { scopeless type
    (337814 call T _mt[232] this[48915])
  }
  function AtomicT[48777](?).or[48168](arg _mt[48921]:_MT[227], arg this[48919]:AtomicT[48777](?), arg value[48165] :
  (337860 call T _mt[232] this[48919]), arg order[48171]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457159] "RVV" "temp"
    (48178 call compilerWarning "memory_order is deprecated, use memoryOrder")
    unknown call_tmp[556429] "expr temp" "maybe param" "maybe type" "temp"
    (556432 'move' call_tmp[556429](337866 call T _mt[232] this[48919]))
    unknown call_tmp[556434] "expr temp" "maybe param" "maybe type" "temp"
    (556437 'move' call_tmp[556434](48184 call isIntegral call_tmp[556429]))
    unknown call_tmp[556439] "expr temp" "maybe param" "maybe type" "temp"
    (556442 'move' call_tmp[556439](48185 call ! call_tmp[556434]))
    unknown call_tmp[556444] "expr temp" "maybe param" "maybe type" "temp"
    (556447 'move' call_tmp[556444](48192 call _cond_test call_tmp[556439]))
    if call_tmp[556444]
    {
      (48190 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[48211](ref arg obj[48208] :
    unknown call_tmp[556451] "expr temp" "maybe param" "maybe type" "temp", arg operand[48214] :
    (337881 call T _mt[232] this[48919]), arg order[48218]:memory_order[179753], arg _chpl_cname[48226]:string[24] =
    unknown call_tmp[556460] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457153] "RVV" "temp"
      (457155 return ret[457153])
    }
    { scopeless type
      (337887 call T _mt[232] this[48919])
    }
    {
      const tmp[48241] "const" "temp"
      unknown call_tmp[556467] "expr temp" "maybe param" "maybe type" "temp"
      (556470 'move' call_tmp[556467](48238 '_wide_get_locale' this[48919]))
      (48242 'move' tmp[48241](48239 'deref' call_tmp[556467]))
      unknown call_tmp[556474] "expr temp" "maybe param" "maybe type" "temp"
      (556477 'move' call_tmp[556474](337893 call _v _mt[232] this[48919]))
      (48236 call atomic_fetch_or call_tmp[556474] value[48165] order[48171])
    }
    (457161 return ret[457159])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchAnd[48255](arg _mt[48925]:_MT[227], arg this[48923]:AtomicT[48777](?), arg value[48252] :
  (337900 call T _mt[232] this[48923]), arg order[48258]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457171] "RVV" "temp"
    (48265 call compilerWarning "memory_order is deprecated, use memoryOrder")
    unknown call_tmp[556483] "expr temp" "maybe param" "maybe type" "temp"
    (556486 'move' call_tmp[556483](337911 call T _mt[232] this[48923]))
    unknown call_tmp[556488] "expr temp" "maybe param" "maybe type" "temp"
    (556491 'move' call_tmp[556488](48271 call isIntegral call_tmp[556483]))
    unknown call_tmp[556493] "expr temp" "maybe param" "maybe type" "temp"
    (556496 'move' call_tmp[556493](48272 call ! call_tmp[556488]))
    unknown call_tmp[556498] "expr temp" "maybe param" "maybe type" "temp"
    (556501 'move' call_tmp[556498](48279 call _cond_test call_tmp[556493]))
    if call_tmp[556498]
    {
      (48277 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[48298](ref arg obj[48295] :
    unknown call_tmp[556505] "expr temp" "maybe param" "maybe type" "temp", arg operand[48301] :
    (337926 call T _mt[232] this[48923]), arg order[48305]:memory_order[179753], arg _chpl_cname[48313]:string[24] =
    unknown call_tmp[556514] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457165] "RVV" "temp"
      (457167 return ret[457165])
    }
    { scopeless type
      (337932 call T _mt[232] this[48923])
    }
    unknown ret[48318] "insert auto destroy"
    unknown call_tmp[556523] "expr temp" "maybe param" "maybe type" "temp"
    (556526 'move' call_tmp[556523](337937 call T _mt[232] this[48923]))
    (489246 'default init var' ret[48318] call_tmp[556523])
    {
      const tmp[48335] "const" "temp"
      unknown call_tmp[556528] "expr temp" "maybe param" "maybe type" "temp"
      (556531 'move' call_tmp[556528](48332 '_wide_get_locale' this[48923]))
      (48336 'move' tmp[48335](48333 'deref' call_tmp[556528]))
      unknown call_tmp[556535] "expr temp" "maybe param" "maybe type" "temp"
      (556538 'move' call_tmp[556535](337944 call _v _mt[232] this[48923]))
      unknown call_tmp[556540] "expr temp" "maybe param" "maybe type" "temp"
      (556543 'move' call_tmp[556540](48328 call atomic_fetch_and call_tmp[556535] value[48252] order[48258]))
      (48329 call = ret[48318] call_tmp[556540])
    }
    unknown call_tmp[556547] "expr temp" "maybe param" "maybe type" "temp"
    (556550 'move' call_tmp[556547](457176 call T _mt[232] this[48923]))
    (457180 'move' ret[457171](457179 'coerce' ret[48318] call_tmp[556547]))
    (457173 return ret[457171])
  }
  { scopeless type
    (337906 call T _mt[232] this[48923])
  }
  function AtomicT[48777](?).and[48352](arg _mt[48929]:_MT[227], arg this[48927]:AtomicT[48777](?), arg value[48349] :
  (337952 call T _mt[232] this[48927]), arg order[48355]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457190] "RVV" "temp"
    (48362 call compilerWarning "memory_order is deprecated, use memoryOrder")
    unknown call_tmp[556558] "expr temp" "maybe param" "maybe type" "temp"
    (556561 'move' call_tmp[556558](337958 call T _mt[232] this[48927]))
    unknown call_tmp[556563] "expr temp" "maybe param" "maybe type" "temp"
    (556566 'move' call_tmp[556563](48368 call isIntegral call_tmp[556558]))
    unknown call_tmp[556568] "expr temp" "maybe param" "maybe type" "temp"
    (556571 'move' call_tmp[556568](48369 call ! call_tmp[556563]))
    unknown call_tmp[556573] "expr temp" "maybe param" "maybe type" "temp"
    (556576 'move' call_tmp[556573](48376 call _cond_test call_tmp[556568]))
    if call_tmp[556573]
    {
      (48374 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[48395](ref arg obj[48392] :
    unknown call_tmp[556580] "expr temp" "maybe param" "maybe type" "temp", arg operand[48398] :
    (337973 call T _mt[232] this[48927]), arg order[48402]:memory_order[179753], arg _chpl_cname[48410]:string[24] =
    unknown call_tmp[556589] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457184] "RVV" "temp"
      (457186 return ret[457184])
    }
    { scopeless type
      (337979 call T _mt[232] this[48927])
    }
    {
      const tmp[48425] "const" "temp"
      unknown call_tmp[556596] "expr temp" "maybe param" "maybe type" "temp"
      (556599 'move' call_tmp[556596](48422 '_wide_get_locale' this[48927]))
      (48426 'move' tmp[48425](48423 'deref' call_tmp[556596]))
      unknown call_tmp[556603] "expr temp" "maybe param" "maybe type" "temp"
      (556606 'move' call_tmp[556603](337985 call _v _mt[232] this[48927]))
      (48420 call atomic_fetch_and call_tmp[556603] value[48349] order[48355])
    }
    (457192 return ret[457190])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).fetchXor[48439](arg _mt[48933]:_MT[227], arg this[48931]:AtomicT[48777](?), arg value[48436] :
  (337992 call T _mt[232] this[48931]), arg order[48442]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc"
  {
    unknown ret[457202] "RVV" "temp"
    (48449 call compilerWarning "memory_order is deprecated, use memoryOrder")
    unknown call_tmp[556612] "expr temp" "maybe param" "maybe type" "temp"
    (556615 'move' call_tmp[556612](338003 call T _mt[232] this[48931]))
    unknown call_tmp[556617] "expr temp" "maybe param" "maybe type" "temp"
    (556620 'move' call_tmp[556617](48455 call isIntegral call_tmp[556612]))
    unknown call_tmp[556622] "expr temp" "maybe param" "maybe type" "temp"
    (556625 'move' call_tmp[556622](48456 call ! call_tmp[556617]))
    unknown call_tmp[556627] "expr temp" "maybe param" "maybe type" "temp"
    (556630 'move' call_tmp[556627](48463 call _cond_test call_tmp[556622]))
    if call_tmp[556627]
    {
      (48461 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[48482](ref arg obj[48479] :
    unknown call_tmp[556634] "expr temp" "maybe param" "maybe type" "temp", arg operand[48485] :
    (338018 call T _mt[232] this[48931]), arg order[48489]:memory_order[179753], arg _chpl_cname[48497]:string[24] =
    unknown call_tmp[556643] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457196] "RVV" "temp"
      (457198 return ret[457196])
    }
    { scopeless type
      (338024 call T _mt[232] this[48931])
    }
    unknown ret[48502] "insert auto destroy"
    unknown call_tmp[556652] "expr temp" "maybe param" "maybe type" "temp"
    (556655 'move' call_tmp[556652](338029 call T _mt[232] this[48931]))
    (489248 'default init var' ret[48502] call_tmp[556652])
    {
      const tmp[48519] "const" "temp"
      unknown call_tmp[556657] "expr temp" "maybe param" "maybe type" "temp"
      (556660 'move' call_tmp[556657](48516 '_wide_get_locale' this[48931]))
      (48520 'move' tmp[48519](48517 'deref' call_tmp[556657]))
      unknown call_tmp[556664] "expr temp" "maybe param" "maybe type" "temp"
      (556667 'move' call_tmp[556664](338036 call _v _mt[232] this[48931]))
      unknown call_tmp[556669] "expr temp" "maybe param" "maybe type" "temp"
      (556672 'move' call_tmp[556669](48512 call atomic_fetch_xor call_tmp[556664] value[48436] order[48442]))
      (48513 call = ret[48502] call_tmp[556669])
    }
    unknown call_tmp[556676] "expr temp" "maybe param" "maybe type" "temp"
    (556679 'move' call_tmp[556676](457207 call T _mt[232] this[48931]))
    (457211 'move' ret[457202](457210 'coerce' ret[48502] call_tmp[556676]))
    (457204 return ret[457202])
  }
  { scopeless type
    (337998 call T _mt[232] this[48931])
  }
  function AtomicT[48777](?).xor[48536](arg _mt[48937]:_MT[227], arg this[48935]:AtomicT[48777](?), arg value[48533] :
  (338044 call T _mt[232] this[48935]), arg order[48539]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457221] "RVV" "temp"
    (48546 call compilerWarning "memory_order is deprecated, use memoryOrder")
    unknown call_tmp[556687] "expr temp" "maybe param" "maybe type" "temp"
    (556690 'move' call_tmp[556687](338050 call T _mt[232] this[48935]))
    unknown call_tmp[556692] "expr temp" "maybe param" "maybe type" "temp"
    (556695 'move' call_tmp[556692](48552 call isIntegral call_tmp[556687]))
    unknown call_tmp[556697] "expr temp" "maybe param" "maybe type" "temp"
    (556700 'move' call_tmp[556697](48553 call ! call_tmp[556692]))
    unknown call_tmp[556702] "expr temp" "maybe param" "maybe type" "temp"
    (556705 'move' call_tmp[556702](48560 call _cond_test call_tmp[556697]))
    if call_tmp[556702]
    {
      (48558 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[48579](ref arg obj[48576] :
    unknown call_tmp[556709] "expr temp" "maybe param" "maybe type" "temp", arg operand[48582] :
    (338065 call T _mt[232] this[48935]), arg order[48586]:memory_order[179753], arg _chpl_cname[48594]:string[24] =
    unknown call_tmp[556718] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[457215] "RVV" "temp"
      (457217 return ret[457215])
    }
    { scopeless type
      (338071 call T _mt[232] this[48935])
    }
    {
      const tmp[48609] "const" "temp"
      unknown call_tmp[556725] "expr temp" "maybe param" "maybe type" "temp"
      (556728 'move' call_tmp[556725](48606 '_wide_get_locale' this[48935]))
      (48610 'move' tmp[48609](48607 'deref' call_tmp[556725]))
      unknown call_tmp[556732] "expr temp" "maybe param" "maybe type" "temp"
      (556735 'move' call_tmp[556732](338077 call _v _mt[232] this[48935]))
      (48604 call atomic_fetch_xor call_tmp[556732] value[48533] order[48539])
    }
    (457223 return ret[457221])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).waitFor[48623](arg _mt[48941]:_MT[227], const arg this[48939]:AtomicT[48777](?), arg value[48620] :
  (338084 call T _mt[232] this[48939]), arg order[48626]:memory_order[179753]) : _unknown[43] "atomic type" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[457227] "RVV" "temp"
    (48633 call compilerWarning "memory_order is deprecated, use memoryOrder")
    {
      const tmp[48710] "const" "temp"
      unknown call_tmp[556739] "expr temp" "maybe param" "maybe type" "temp"
      (556742 'move' call_tmp[556739](48707 '_wide_get_locale' this[48939]))
      (48711 'move' tmp[48710](48708 'deref' call_tmp[556739]))
      {
        {
          unknown tmp[48656] "temp"
          unknown call_tmp[556746] "expr temp" "maybe param" "maybe type" "temp"
          (556749 'move' call_tmp[556746](48691 call(48688 call (partial) read _mt[232] this[48939])(order = relaxed[180097])))
          unknown call_tmp[556751] "expr temp" "maybe param" "maybe type" "temp"
          (556754 'move' call_tmp[556751](48686 call != call_tmp[556746] value[48620]))
          (48698 'move' tmp[48656](48684 call _cond_test call_tmp[556751]))
          WhileDo
          {
            {
              (48653 call chpl_task_yield)
            }
            label _continueLabel[48659]
            unknown call_tmp[556758] "expr temp" "maybe param" "maybe type" "temp"
            (556761 'move' call_tmp[556758](48672 call(48669 call (partial) read _mt[232] this[48939])(order = relaxed[180097])))
            unknown call_tmp[556763] "expr temp" "maybe param" "maybe type" "temp"
            (556766 'move' call_tmp[556763](48667 call != call_tmp[556758] value[48620]))
            (48679 'move' tmp[48656](48665 call _cond_test call_tmp[556763]))
            tmp[48656]
          }
          label _breakLabel[48660]
        }
        (48705 call chpl_atomic_thread_fence order[48626])
      }
    }
    (457229 return ret[457227])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).peek[48720](arg _mt[48945]:_MT[227], const arg this[48943]:AtomicT[48777](?)) : _unknown[43] "atomic type" "inline" "last resort" "method" "primary method"
  {
    unknown ret[457233] "RVV" "temp"
    (48726 call compilerWarning "Default usage of peek() is deprecated, use PeekPoke")
    unknown call_tmp[556770] "expr temp" "maybe param" "maybe type" "temp"
    (556773 'move' call_tmp[556770](48739 call(48730 call (partial) read _mt[232] this[48943])(order = relaxed[180097])))
    unknown call_tmp[556777] "expr temp" "maybe param" "maybe type" "temp"
    (556780 'move' call_tmp[556777](457238 call T _mt[232] this[48943]))
    (457242 'move' ret[457233](457241 'coerce' call_tmp[556770] call_tmp[556777]))
    (457235 return ret[457233])
  }
  { scopeless type
    (338098 call T _mt[232] this[48943])
  }
  function AtomicT[48777](?).poke[48751](arg _mt[48949]:_MT[227], arg this[48947]:AtomicT[48777](?), arg value[48748] :
  (338105 call T _mt[232] this[48947])) : _unknown[43] "atomic type" "inline" "last resort" "method" "primary method" "no return value for void"
  {
    unknown ret[457246] "RVV" "temp"
    (48757 call compilerWarning "Default usage of poke() is deprecated, use PeekPoke")
    (48771 call(48761 call (partial) write _mt[232] this[48947]) value[48748](order = relaxed[180097]))
    (457248 return ret[457246])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48777](?).T[700258](arg _mt[700260]:_MT[227], arg this[700262]:AtomicT[48777](?)) type : _unknown[43] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[700279] "RVV" "temp" "type variable"
    unknown call_tmp[700293] "expr temp" "maybe param" "maybe type" "temp"
    (700296 'move' call_tmp[700293](700267 'is bound' this[700262] c"T"))
    if call_tmp[700293]
    {
      unknown call_tmp[700298] "expr temp" "maybe param" "maybe type" "temp"
      (700301 'move' call_tmp[700298](700266 '.v' this[700262] c"T"))
      (700284 'move' ret[700279](700283 'deref' call_tmp[700298]))
      gotoReturn _end_T[700277] _end_T[700277]
    }
    {
      (700289 'move' ret[700279](700288 'deref' _uninstantiated[247]))
      gotoReturn _end_T[700277] _end_T[700277]
    }
    label _end_T[700277]
    (700281 return ret[700279])
  }
  function AtomicT[48777](?).T[700303](arg _mt[700305]:_MT[227], arg this[700307]:AtomicT[48777](?)) type : _unknown[43] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[700324] "RVV" "temp" "type variable"
    unknown call_tmp[700338] "expr temp" "maybe param" "maybe type" "temp"
    (700341 'move' call_tmp[700338](700312 'is bound' this[700307] c"T"))
    if call_tmp[700338]
    {
      unknown call_tmp[700343] "expr temp" "maybe param" "maybe type" "temp"
      (700346 'move' call_tmp[700343](700311 '.v' this[700307] c"T"))
      (700329 'move' ret[700324](700328 'deref' call_tmp[700343]))
      gotoReturn _end_T[700322] _end_T[700322]
    }
    {
      (700334 'move' ret[700324](700333 'deref' _uninstantiated[247]))
      gotoReturn _end_T[700322] _end_T[700322]
    }
    label _end_T[700322]
    (700326 return ret[700324])
  }
  function AtomicT[48777](?)._v[700348](arg _mt[700350]:_MT[227], ref arg this[700352]:AtomicT[48777](?)) ref : _unknown[43] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[700361] "RVV" "temp"
    unknown call_tmp[700368] "expr temp" "maybe param" "maybe type" "temp"
    (700371 'move' call_tmp[700368](700356 '.' this[700352] c"_v"))
    (700366 'move' ret[700361](700365 'addr of' call_tmp[700368]))
    (700363 return ret[700361])
  }
  function AtomicT[48777](?).init=[700373](arg _mt[700376]:_MT[227], ref arg this[700377]:AtomicT[48777](?), arg other[700380] :
  (700379 'typeof' this[700377])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method"
  {
    unknown tmp[700405] "temp" "type variable"
    (700407 'move' tmp[700405](700389 call T _mt[232] other[700380]))
    (700409 'init field' this[700377] c"T" tmp[700405])
    unknown call_tmp[700433] "maybe param" "maybe type" "temp"
    (700436 'move' call_tmp[700433](700399 call _v _mt[232] other[700380]))
    unknown call_tmp[700438] "expr temp" "maybe param" "maybe type" "temp"
    (700441 'move' call_tmp[700438](700424 '.v' this[700377] c"T"))
    unknown call_tmp[700443] "maybe param" "maybe type" "temp"
    (700446 'move' call_tmp[700443](700416 call externT call_tmp[700438]))
    unknown tmp[700413] "temp"
    (700418 'init var' tmp[700413] call_tmp[700433] call_tmp[700443])
    (700420 'init field' this[700377] c"_v" tmp[700413])
    (700427 return _void[47])
  }
  function ==[700448](arg _arg1[700450]:AtomicT[48777](?), arg _arg2[700451]:AtomicT[48777](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[700494]:bool[10] "RVV" "temp"
    unknown call_tmp[700511] "expr temp" "maybe param" "maybe type" "temp"
    (700514 'move' call_tmp[700511](700461 call T _mt[232] _arg1[700450]))
    unknown call_tmp[700516] "expr temp" "maybe param" "maybe type" "temp"
    (700519 'move' call_tmp[700516](700465 call T _mt[232] _arg2[700451]))
    unknown call_tmp[700521] "expr temp" "maybe param" "maybe type" "temp"
    (700524 'move' call_tmp[700521](700469 call != call_tmp[700511] call_tmp[700516]))
    if call_tmp[700521]
    {
      (700499 'move' ret[700494](700498 'deref' 0))
      gotoReturn _end_==[700492] _end_==[700492]
    }
    unknown call_tmp[700526] "expr temp" "maybe param" "maybe type" "temp"
    (700529 'move' call_tmp[700526](700475 call _v _mt[232] _arg1[700450]))
    unknown call_tmp[700531] "expr temp" "maybe param" "maybe type" "temp"
    (700534 'move' call_tmp[700531](700479 call _v _mt[232] _arg2[700451]))
    unknown call_tmp[700536] "expr temp" "maybe param" "maybe type" "temp"
    (700539 'move' call_tmp[700536](700483 call != call_tmp[700526] call_tmp[700531]))
    if call_tmp[700536]
    {
      (700504 'move' ret[700494](700503 'deref' 0))
      gotoReturn _end_==[700492] _end_==[700492]
    }
    (700509 'move' ret[700494](700508 'deref' 1))
    label _end_==[700492]
    (700496 return ret[700494])
  }
  where {
    unknown call_tmp[700541] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700544 'move' call_tmp[700541](700454 'typeof' _arg1[700450]))
    unknown call_tmp[700546] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700549 'move' call_tmp[700546](700456 'typeof' _arg2[700451]))
    (700458 call == call_tmp[700541] call_tmp[700546])
  }
  function !=[700551](arg _arg1[700553]:AtomicT[48777](?), arg _arg2[700554]:AtomicT[48777](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[700597]:bool[10] "RVV" "temp"
    unknown call_tmp[700614] "expr temp" "maybe param" "maybe type" "temp"
    (700617 'move' call_tmp[700614](700564 call T _mt[232] _arg1[700553]))
    unknown call_tmp[700619] "expr temp" "maybe param" "maybe type" "temp"
    (700622 'move' call_tmp[700619](700568 call T _mt[232] _arg2[700554]))
    unknown call_tmp[700624] "expr temp" "maybe param" "maybe type" "temp"
    (700627 'move' call_tmp[700624](700572 call != call_tmp[700614] call_tmp[700619]))
    if call_tmp[700624]
    {
      (700602 'move' ret[700597](700601 'deref' 1))
      gotoReturn _end_!=[700595] _end_!=[700595]
    }
    unknown call_tmp[700629] "expr temp" "maybe param" "maybe type" "temp"
    (700632 'move' call_tmp[700629](700578 call _v _mt[232] _arg1[700553]))
    unknown call_tmp[700634] "expr temp" "maybe param" "maybe type" "temp"
    (700637 'move' call_tmp[700634](700582 call _v _mt[232] _arg2[700554]))
    unknown call_tmp[700639] "expr temp" "maybe param" "maybe type" "temp"
    (700642 'move' call_tmp[700639](700586 call != call_tmp[700629] call_tmp[700634]))
    if call_tmp[700639]
    {
      (700607 'move' ret[700597](700606 'deref' 1))
      gotoReturn _end_!=[700595] _end_!=[700595]
    }
    (700612 'move' ret[700597](700611 'deref' 0))
    label _end_!=[700595]
    (700599 return ret[700597])
  }
  where {
    unknown call_tmp[700644] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700647 'move' call_tmp[700644](700557 'typeof' _arg1[700553]))
    unknown call_tmp[700649] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (700652 'move' call_tmp[700649](700559 'typeof' _arg2[700554]))
    (700561 call == call_tmp[700644] call_tmp[700649])
  }
  function chpl__defaultHash[700654](arg r[700656]:AtomicT[48777](?)) : _unknown[43] "compiler generated" "last resort"
  {
    unknown ret[700677] "RVV" "temp"
    unknown call_tmp[700684] "expr temp" "maybe param" "maybe type" "temp"
    (700687 'move' call_tmp[700684](700664 call _v _mt[232] r[700656]))
    unknown call_tmp[700689] "expr temp" "maybe param" "maybe type" "temp"
    (700692 'move' call_tmp[700689](700668 call chpl__defaultHash call_tmp[700684]))
    unknown call_tmp[700694] "expr temp" "maybe param" "maybe type" "temp"
    (700697 'move' call_tmp[700694](700658 call T _mt[232] r[700656]))
    unknown call_tmp[700699] "expr temp" "maybe param" "maybe type" "temp"
    (700702 'move' call_tmp[700699](700662 call chpl__defaultHash call_tmp[700694]))
    unknown call_tmp[700704] "expr temp" "maybe param" "maybe type" "temp"
    (700707 'move' call_tmp[700704](700670 call chpl__defaultHashCombine call_tmp[700689] call_tmp[700699] 2))
    (700682 'move' ret[700677](700681 'deref' call_tmp[700704]))
    (700679 return ret[700677])
  }
  type AtomicT[48777](?) unknown T[45485] "no doc" "type variable" unknown _v[45492] "no doc"(45491 call externT T[45485])
  function =[48958](ref arg a[48955]:AtomicBool[45373], const  ref arg b[48961]:AtomicBool[45373]) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[556792] "expr temp" "maybe param" "maybe type" "temp"
    (556795 'move' call_tmp[556792](48973 call(48969 call (partial) read _mt[232] b[48961])))
    (48975 call(48965 call (partial) write _mt[232] a[48955]) call_tmp[556792])
    (457250 return _void[47])
  }
  function =[48986](ref arg a[48983]:AtomicBool[45373], arg b[48988]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (49010 call compilerError "Cannot directly assign atomic variables")
    (457252 return _void[47])
  }
  function =[49021](ref arg a[49018]:AtomicT[48777](?), const  ref arg b[49024]:AtomicT[48777](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[556801] "expr temp" "maybe param" "maybe type" "temp"
    (556804 'move' call_tmp[556801](49036 call(49032 call (partial) read _mt[232] b[49024])))
    (49038 call(49028 call (partial) write _mt[232] a[49018]) call_tmp[556801])
    (457254 return _void[47])
  }
  function =[49049](ref arg a[49046]:AtomicT[48777](?), arg b[49051]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (49056 call compilerError "Cannot directly assign atomic variables")
    (457256 return _void[47])
  }
  function +[49067](arg a[49064]:AtomicT[48777](?), arg b[49069]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[457260] "RVV" "temp"
    (49089 call compilerError "Cannot directly add atomic variables")
    (457265 'move' ret[457260](457264 'deref' a[49064]))
    (457262 return ret[457260])
  }
  function -[49103](arg a[49100]:AtomicT[48777](?), arg b[49105]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[457269] "RVV" "temp"
    (49127 call compilerError "Cannot directly subtract atomic variables")
    (457274 'move' ret[457269](457273 'deref' a[49100]))
    (457271 return ret[457269])
  }
  function *[49141](arg a[49138]:AtomicT[48777](?), arg b[49143]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[457278] "RVV" "temp"
    (49163 call compilerError "Cannot directly multiply atomic variables")
    (457283 'move' ret[457278](457282 'deref' a[49138]))
    (457280 return ret[457278])
  }
  function /[49177](arg a[49174]:AtomicT[48777](?), arg b[49179]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[457287] "RVV" "temp"
    (49199 call compilerError "Cannot directly divide atomic variables")
    (457292 'move' ret[457287](457291 'deref' a[49174]))
    (457289 return ret[457287])
  }
  function %[49213](arg a[49210]:AtomicT[48777](?), arg b[49215]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[457296] "RVV" "temp"
    (49220 call compilerError "Cannot directly divide atomic variables")
    (457301 'move' ret[457296](457300 'deref' a[49210]))
    (457298 return ret[457296])
  }
  (329323 'used modules list'(42971 'use' MemConsistency[179748])(42976 'use' ChapelEnv[42343]))
}