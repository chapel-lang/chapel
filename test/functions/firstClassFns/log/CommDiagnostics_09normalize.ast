AST dump for CommDiagnostics after pass normalize.
Module use list: ChapelStandard Reflection 

{
  function chpl__init_CommDiagnostics[390324]() : void[4] "insert line file info" "module init"
  {
    (493718 'init var' commDiagsPrintUnstable[208944] 0)
    {
    }
    (493732 'move' commDiagnostics[209215](493731 call chpl_commDiagnostics[209205]))
    (493738 'init var' printInitVerboseComm[209554] 0)
    (493740 'init var' printInitCommCounts[209558] 0)
    (481816 return _void[47])
  }
  unknown commDiagsPrintUnstable[208944] "config" "param"
  function chpl_commDiagnostics[209205].writeThis[209030](arg _mt[209209]:_MT[227], arg this[209207]:chpl_commDiagnostics[209205], arg c[209028]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown first[209038] "insert auto destroy"
    (493720 'init var' first[209038] 1)
    (209043 call <~> c[209028] "(")
    {
      unknown i[209135] "insert auto destroy"
      (493722 'init var' i[209135] 0)
      unknown tmp[209136] "maybe param" "temp"
      unknown call_tmp[653030] "expr temp" "maybe param" "maybe type" "temp"
      (653033 'move' call_tmp[653030](209050 call numFields chpl_commDiagnostics[209205]))
      (209148 'move' tmp[209136](209146 call chpl_compute_low_param_loop_bound 1 call_tmp[653030]))
      unknown tmp[209137] "maybe param" "temp"
      unknown call_tmp[653035] "expr temp" "maybe param" "maybe type" "temp"
      (653038 'move' call_tmp[653035](209153 call numFields chpl_commDiagnostics[209205]))
      (209157 'move' tmp[209137](209155 call chpl_compute_high_param_loop_bound 1 call_tmp[653035]))
      unknown tmp[209138] "maybe param" "temp"
      (209160 'move' tmp[209138] 1)
      ParamForLoop
      { i[209135] tmp[209136] tmp[209137] tmp[209138]
        {
          unknown call_tmp[653040] "expr temp" "maybe param" "maybe type" "temp" "type variable"
          (653043 'move' call_tmp[653040](209055 'typeof' this[209207]))
          unknown call_tmp[653045] "maybe param" "maybe type" "temp"
          (653048 'move' call_tmp[653045](209058 call getFieldName call_tmp[653040] i[209135]))
          unknown name[209059] "param"
          (493724 'init var' name[209059] call_tmp[653045])
          unknown call_tmp[653050] "maybe param" "maybe type" "temp"
          (653053 'move' call_tmp[653050](209067 call getField this[209207] i[209135]))
          const val[209068] "const" "insert auto destroy"
          (493726 'init var' val[209068] call_tmp[653050])
          unknown call_tmp[653055] "expr temp" "maybe param" "maybe type" "temp"
          (653058 'move' call_tmp[653055](209073 call != val[209068] 0))
          unknown call_tmp[653060] "expr temp" "maybe param" "maybe type" "temp"
          (653063 'move' call_tmp[653060](209131 call _cond_test call_tmp[653055]))
          if call_tmp[653060]
          {
            unknown tmp[406389] "maybe param" "temp"
            (406400 'move' tmp[406389] commDiagsPrintUnstable[208944])
            unknown call_tmp[653065] "expr temp" "maybe param" "maybe type" "temp"
            (653068 'move' call_tmp[653065](406402 call _cond_invalid tmp[406389]))
            if call_tmp[653065]
            {
              (406405 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[523233] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[523234] "maybe param" "temp"
            unknown call_tmp[653070] "expr temp" "maybe param" "maybe type" "temp"
            (653073 'move' call_tmp[653070](406390 call isTrue tmp[406389]))
            (523239 'move' tmp[523234](523237 call _cond_test call_tmp[653070]))
            if tmp[523234]
            {
              (523244 'move' tmp[523233](523241 '_paramFoldLogical' tmp[523234] 1))
            }
            {
              unknown tmp[523246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[653075] "expr temp" "maybe param" "maybe type" "temp"
              (653078 'move' call_tmp[653075](209093 call != name[209059] "amo"))
              (523248 'move' tmp[523246](406394 call isTrue call_tmp[653075]))
              (523253 'move' tmp[523233](523250 '_paramFoldLogical' tmp[523234] tmp[523246]))
            }
            unknown call_tmp[653080] "expr temp" "maybe param" "maybe type" "temp"
            (653083 'move' call_tmp[653080](209126 call _cond_test tmp[523233]))
            if call_tmp[653080]
            {
              unknown call_tmp[653085] "expr temp" "maybe param" "maybe type" "temp"
              (653088 'move' call_tmp[653085](209108 call _cond_test first[209038]))
              if call_tmp[653085]
              {
                (209100 call = first[209038] 0)
              }
              {
                (209105 call <~> c[209028] ", ")
              }
              unknown call_tmp[653090] "expr temp" "maybe param" "maybe type" "temp"
              (653093 'move' call_tmp[653090](209117 call <~> c[209028] name[209059]))
              unknown call_tmp[653095] "expr temp" "maybe param" "maybe type" "temp"
              (653098 'move' call_tmp[653095](209120 call <~> call_tmp[653090] " = "))
              (209123 call <~> call_tmp[653095] val[209068])
            }
          }
        }
      }
      label _unused_continueLabel[209140]
      label _breakLabel[209139]
    }
    unknown call_tmp[653100] "expr temp" "maybe param" "maybe type" "temp"
    (653103 'move' call_tmp[653100](209192 call _cond_test first[209038]))
    if call_tmp[653100]
    {
      (209189 call <~> c[209028] "<no communication>")
    }
    (209199 call <~> c[209028] ")")
    (481756 return _void[47])
    (329515 'used modules list'(209034 'use' Reflection[211223]))
  }
  type chpl_commDiagnostics[209205] val get[208953]:uint(64)[107](208952 call uint(64)[107] 64) val get_nb[208960]:uint(64)[107](208959 call uint(64)[107] 64) val put[208967]:uint(64)[107](208966 call uint(64)[107] 64) val put_nb[208974]:uint(64)[107](208973 call uint(64)[107] 64) val test_nb[208981]:uint(64)[107](208980 call uint(64)[107] 64) val wait_nb[208988]:uint(64)[107](208987 call uint(64)[107] 64) val try_nb[208995]:uint(64)[107](208994 call uint(64)[107] 64) val amo[209002]:uint(64)[107](209001 call uint(64)[107] 64) val execute_on[209009]:uint(64)[107](209008 call uint(64)[107] 64) val execute_on_fast[209016]:uint(64)[107](209015 call uint(64)[107] 64) val execute_on_nb[209023]:uint(64)[107](209022 call uint(64)[107] 64)
  unknown commDiagnostics[209215] "insert auto destroy" "type variable" chpl_commDiagnostics[209205]
  function chpl_comm_startVerbose[209224](arg print_unstable[209221]:bool[10]) : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481758 return _void[47])
  }
  function chpl_comm_stopVerbose[209230]() : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481760 return _void[47])
  }
  function chpl_comm_startVerboseHere[209240](arg print_unstable[209237]:bool[10]) : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481762 return _void[47])
  }
  function chpl_comm_stopVerboseHere[209246]() : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481764 return _void[47])
  }
  function chpl_comm_startDiagnostics[209256](arg print_unstable[209253]:bool[10]) : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481766 return _void[47])
  }
  function chpl_comm_stopDiagnostics[209262]() : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481768 return _void[47])
  }
  function chpl_comm_startDiagnosticsHere[209272](arg print_unstable[209269]:bool[10]) : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481770 return _void[47])
  }
  function chpl_comm_stopDiagnosticsHere[209278]() : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481772 return _void[47])
  }
  function chpl_comm_resetDiagnosticsHere[209284]() : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481774 return _void[47])
  }
  function chpl_comm_getDiagnosticsHere[209294](out arg cd[209291] :
  commDiagnostics[209215]) : void[4] "extern" "local args" "no fn body" "private" "no return value for void"
  {
    (481776 return _void[47])
  }
  function startVerboseComm[209300]() : _unknown[43] "no return value for void"
  {
    (209305 call chpl_comm_startVerbose commDiagsPrintUnstable[208944])
    (481778 return _void[47])
  }
  function stopVerboseComm[209312]() : _unknown[43] "no return value for void"
  {
    (209316 call chpl_comm_stopVerbose)
    (481780 return _void[47])
  }
  function startVerboseCommHere[209323]() : _unknown[43] "no return value for void"
  {
    (209328 call chpl_comm_startVerboseHere commDiagsPrintUnstable[208944])
    (481782 return _void[47])
  }
  function stopVerboseCommHere[209335]() : _unknown[43] "no return value for void"
  {
    (209339 call chpl_comm_stopVerboseHere)
    (481784 return _void[47])
  }
  function startCommDiagnostics[209346]() : _unknown[43] "no return value for void"
  {
    (209351 call chpl_comm_startDiagnostics commDiagsPrintUnstable[208944])
    (481786 return _void[47])
  }
  function stopCommDiagnostics[209358]() : _unknown[43] "no return value for void"
  {
    (209362 call chpl_comm_stopDiagnostics)
    (481788 return _void[47])
  }
  function startCommDiagnosticsHere[209369]() : _unknown[43] "no return value for void"
  {
    (209374 call chpl_comm_startDiagnosticsHere commDiagsPrintUnstable[208944])
    (481790 return _void[47])
  }
  function stopCommDiagnosticsHere[209381]() : _unknown[43] "no return value for void"
  {
    (209385 call chpl_comm_stopDiagnosticsHere)
    (481792 return _void[47])
  }
  function resetCommDiagnostics[209392]() : _unknown[43] "no return value for void"
  {
    {
      unknown _indexOfInterest[209409] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[209410] "expr temp" "temp"
      (209419 'move' _iterator[209410](209417 call _getIterator Locales[111767]))
      Defer
      {
        {
          (209435 call _freeIterator _iterator[209410])
        }
      }
      { scopeless type
        (209424 'move' _indexOfInterest[209409](209421 call iteratorIndex _iterator[209410]))
      }
      ForLoop
      {
        unknown loc[209428] "index var" "insert auto destroy"
        (209430 'move' loc[209428] _indexOfInterest[209409])
        {
          const tmp[209404] "const" "temp"
          unknown call_tmp[653105] "expr temp" "maybe param" "maybe type" "temp"
          (653108 'move' call_tmp[653105](209401 '_wide_get_locale' loc[209428]))
          (209405 'move' tmp[209404](209402 'deref' call_tmp[653105]))
          (209399 call resetCommDiagnosticsHere)
        }
        label _continueLabel[209414]
        _indexOfInterest[209409]
        _iterator[209410]
      }
      label _breakLabel[209415]
    }
    (481794 return _void[47])
  }
  function resetCommDiagnosticsHere[209447]() : _unknown[43] "inline" "no return value for void"
  {
    (209451 call chpl_comm_resetDiagnosticsHere)
    (481796 return _void[47])
  }
  function getCommDiagnostics[209458]() : _unknown[43]
  {
    unknown ret[481800] "RVV" "temp"
    unknown D[209467] "insert auto destroy"
    unknown call_tmp[653110] "expr temp" "maybe param" "maybe type" "temp"
    (653113 'move' call_tmp[653110](209463 call chpl__ensureDomainExpr LocaleSpace[111774]))
    unknown call_tmp[653115] "expr temp" "maybe param" "maybe type" "temp"
    (653118 'move' call_tmp[653115](209465 call chpl__buildArrayRuntimeType call_tmp[653110] commDiagnostics[209215]))
    (493734 'default init var' D[209467] call_tmp[653115])
    {
      unknown _indexOfInterest[209496] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[209497] "expr temp" "temp"
      (209506 'move' _iterator[209497](209504 call _getIterator Locales[111767]))
      Defer
      {
        {
          (209522 call _freeIterator _iterator[209497])
        }
      }
      { scopeless type
        (209511 'move' _indexOfInterest[209496](209508 call iteratorIndex _iterator[209497]))
      }
      ForLoop
      {
        unknown loc[209515] "index var" "insert auto destroy"
        (209517 'move' loc[209515] _indexOfInterest[209496])
        {
          const tmp[209491] "const" "temp"
          unknown call_tmp[653120] "expr temp" "maybe param" "maybe type" "temp"
          (653123 'move' call_tmp[653120](209488 '_wide_get_locale' loc[209515]))
          (209492 'move' tmp[209491](209489 'deref' call_tmp[653120]))
          {
            unknown call_tmp[653127] "expr temp" "maybe param" "maybe type" "temp"
            (653130 'move' call_tmp[653127](209476 call id _mt[232] loc[209515]))
            unknown call_tmp[653132] "expr temp" "maybe param" "maybe type" "temp"
            (653135 'move' call_tmp[653132](209480 call D[209467] call_tmp[653127]))
            unknown call_tmp[653137] "expr temp" "maybe param" "maybe type" "temp"
            (653140 'move' call_tmp[653137](209483 call getCommDiagnosticsHere))
            (209484 call = call_tmp[653132] call_tmp[653137])
          }
        }
        label _continueLabel[209501]
        _indexOfInterest[209496]
        _iterator[209497]
      }
      label _breakLabel[209502]
    }
    (481805 'move' ret[481800](481804 'deref' D[209467]))
    (481802 return ret[481800])
  }
  function getCommDiagnosticsHere[209536]() : _unknown[43]
  {
    unknown ret[481809] "RVV" "temp"
    unknown cd[209539] "insert auto destroy"
    (493736 'default init var' cd[209539] commDiagnostics[209215])
    (209546 call chpl_comm_getDiagnosticsHere cd[209539])
    (481814 'move' ret[481809](481813 'deref' cd[209539]))
    (481811 return ret[481809])
  }
  unknown printInitVerboseComm[209554] "config" "param"
  unknown printInitCommCounts[209558] "config" "param"
  (329513 'used modules list'(328312 'use' ChapelStandard[19734]))
}