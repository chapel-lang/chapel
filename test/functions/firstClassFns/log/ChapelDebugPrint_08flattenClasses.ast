AST dump for ChapelDebugPrint after pass flattenClasses.
Module use list: ChapelStandard 

{
  function chpl_debug_stringify[181127](arg args[181124]:_any[170](?) ...) : _unknown[43]
  {
    unknown str[181146] ""
    {
      unknown i[181188] 0
      unknown tmp[181189] "maybe param" "temp"
      (181201 'move' tmp[181189](181199 call chpl_compute_low_param_loop_bound 1(181152 call . args[181124] c"size")))
      unknown tmp[181190] "maybe param" "temp"
      (181211 'move' tmp[181190](181209 call chpl_compute_high_param_loop_bound 1(181206 call . args[181124] c"size")))
      unknown tmp[181191] "maybe param" "temp"
      (181214 'move' tmp[181191] 1)
      ParamForLoop
      { i[181188] tmp[181189] tmp[181190] tmp[181191]
        {
          unknown tmp[181161](181160 call args[181124] i[181188])
          if(181184 call _cond_test(181168 call _can_stringify_direct tmp[181161]))
          {
            (181174 call += str[181146](181173 call stringify tmp[181161]))
          }
          {
            (181180 call += str[181146] "\?")
          }
        }
      }
      label _unused_continueLabel[181193]
      label _breakLabel[181192]
    }
    (181226 return str[181146])
  }
  { scopeless type
    string[24]
  }
  function chpl_debug_writeln[181237](arg args[181234]:_any[170](?) ...) : _unknown[43] "no return value for void"
  {
    function printf[181245](arg fmt[181242] :
    c_string[19], arg f[181248] :
    c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    unknown str[181259](181258 call chpl_debug_stringify(181256 'expand_tuple' args[181234]))
    (181286 call printf "%s\n"(181285 call(181281 call . str[181259] c"c_str")))
  }
  unknown chpl__testParFlag[181291] "config" "no doc" "param" 0
  unknown chpl__testParOn[181295] "no doc" 0
  function chpl__testParStart[181300]() : _unknown[43] "no doc" "no return value for void"
  {
    (181304 call = chpl__testParOn[181295] 1)
  }
  function chpl__testParStop[181312]() : _unknown[43] "no doc" "no return value for void"
  {
    (181316 call = chpl__testParOn[181295] 0)
  }
  function chpl__testPar[181328](arg args[181325]:_any[170](?) ...) : _unknown[43] "no doc" "no return value for void"
  {
    if(181419 call _cond_test(181332 call && chpl__testParFlag[181291] chpl__testParOn[181295]))
    {
      const file_cs[181341] "const"(181340 'chpl_lookupFilename'(181339 '_get_user_file')) c_string[19]
      const file[181349] "const"(181347 call _cast string[24] file_cs[181341])
      const line[181355] "const"(181354 '_get_user_line')
      unknown str[181363](181362 call chpl_debug_stringify(181360 'expand_tuple' args[181325]))
      function printf[181372](arg fmt[181369] :
      c_string[19], arg f[181375] :
      c_string[19], arg ln[181379] :
      c_int[209569], arg s[181383] :
      c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
      }
      (181417 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[181341](181409 call _cast c_int[209569] line[181355])(181416 call(181412 call . str[181363] c"c_str")))
    }
  }
  function chpl__testParWriteln[181432](arg args[181429]:_any[170](?) ...) : _unknown[43] "no doc" "no return value for void"
  {
    if(181503 call _cond_test(181436 call && chpl__testParFlag[181291] chpl__testParOn[181295]))
    {
      const file_cs[181445] "const"(181444 'chpl_lookupFilename'(181443 '_get_user_file')) c_string[19]
      const file[181453] "const"(181451 call _cast string[24] file_cs[181445])
      const line[181459] "const"(181458 '_get_user_line')
      (181501 call writeln "CHPL TEST PAR (" file[181453] ":" line[181459] "): "(181500 'expand_tuple' args[181429]))
    }
  }
  (329472 'used modules list'(181118 'use' ChapelStandard[19734]))
}