AST dump for SharedObject after pass normalize.
Module use list: OwnedObject HaltWrappers 

{
  function chpl__init_SharedObject[390153]() : void[4] "insert line file info" "module init"
  {
    (456281 return _void[47])
  }
  function ReferenceCount[40246].init[40183](arg _mt[40250]:_MT[227], arg this[40248]:ReferenceCount[40246]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[429481] "temporary of super field" "temp"
    (429489 'move' super_tmp[429481](429482 '.v' this[40248] c"super"))
    (429485 call init _mt[232] super_tmp[429481])
    unknown tmp[429452] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[442816] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[552448] "expr temp" "maybe param" "maybe type" "temp"
      (552451 'move' call_tmp[552448](429454 '.v' this[40248] c"super"))
      (442820 'move' call_type_tmp[442816](429457 'typeof' call_tmp[552448]))
    }
    (429458 'move' tmp[429452] call_type_tmp[442816])
    unknown call_tmp[552453] "maybe param" "maybe type" "temp"
    (552456 'move' call_tmp[552453](429463 'cast' tmp[429452] this[40248]))
    unknown chpl__thisAsParent[429460] "insert auto destroy" "temp"
    (489068 'init var' chpl__thisAsParent[429460] call_tmp[552453] tmp[429452])
    (429466 'setcid' chpl__thisAsParent[429460])
    unknown tmp[429468] "temp"
    unknown call_tmp[552458] "expr temp" "maybe param" "maybe type" "temp"
    (552461 'move' call_tmp[552458](429471 call chpl__atomicType int(64)[13]))
    (429473 'default init var' tmp[429468] call_tmp[552458])
    (429475 '.=' this[40248] c"count" tmp[429468])
    (429480 'setcid' this[40248])
    unknown call_tmp[552465] "expr temp" "maybe param" "maybe type" "temp"
    (552468 'move' call_tmp[552465](336082 call count _mt[232] this[40248]))
    (40201 call(40196 call (partial) write _mt[232] call_tmp[552465]) 1)
    (456098 return _void[47])
  }
  function ReferenceCount[40246].retain[40207](arg _mt[40254]:_MT[227], arg this[40252]:ReferenceCount[40246]) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[552474] "expr temp" "maybe param" "maybe type" "temp"
    (552477 'move' call_tmp[552474](336087 call count _mt[232] this[40252]))
    (40215 call(40210 call (partial) add _mt[232] call_tmp[552474]) 1)
    (456100 return _void[47])
  }
  function ReferenceCount[40246].release[40222](arg _mt[40258]:_MT[227], arg this[40256]:ReferenceCount[40246]) : _unknown[43] "method" "primary method"
  {
    unknown ret[456104] "RVV" "temp"
    unknown call_tmp[552483] "expr temp" "maybe param" "maybe type" "temp"
    (552486 'move' call_tmp[552483](336092 call count _mt[232] this[40256]))
    unknown call_tmp[552490] "maybe param" "maybe type" "temp"
    (552493 'move' call_tmp[552490](40232 call(40227 call (partial) fetchSub _mt[232] call_tmp[552483]) 1))
    unknown oldValue[40233] "insert auto destroy"
    (489070 'init var' oldValue[40233] call_tmp[552490])
    unknown call_tmp[552495] "expr temp" "maybe param" "maybe type" "temp"
    (552498 'move' call_tmp[552495](40239 call - oldValue[40233] 1))
    (456109 'move' ret[456104](456108 'deref' call_tmp[552495]))
    (456106 return ret[456104])
  }
  type ReferenceCount[40246] val super[330963]:object[253] "super class" unknown count[40178](40176 call chpl__atomicType int(64)[13])
  type unmanaged ReferenceCount?[389761]
  type anymanaged ReferenceCount?[389757](?)
  type anymanaged ReferenceCount[336102](?)
  function _shared[41357](?).chpl_forwarding_expr2[40275](arg _mt[41361]:_MT[227], arg this[41359]:_shared[41357](?)) : _unknown[43] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[456113] "RVV" "temp"
    (456117 'move' ret[456113](40274 call(336098 call (partial) borrow _mt[232] this[41359])))
    (456115 return ret[456113])
  }
  function _shared[41357](?).init[40291](arg _mt[41365]:_MT[227], ref arg this[41363]:_shared[41357](?), arg chpl_t[40289]:_any[170](?)) : void[4] "leaves this nil" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[552502] "expr temp" "maybe param" "maybe type" "temp"
    (552505 'move' call_tmp[552502](40296 call isClass chpl_t[40289]))
    unknown call_tmp[552507] "expr temp" "maybe param" "maybe type" "temp"
    (552510 'move' call_tmp[552507](40297 call ! call_tmp[552502]))
    unknown call_tmp[552512] "expr temp" "maybe param" "maybe type" "temp"
    (552515 'move' call_tmp[552512](40319 call _cond_test call_tmp[552507]))
    if call_tmp[552512]
    {
      (40317 call compilerError "shared only works with classes")
    }
    unknown tmp[429492] "temp" "type variable"
    (429494 'move' tmp[429492](40332 call _to_borrowed chpl_t[40289]))
    (429496 'init field' this[41363] c"chpl_t" tmp[429492])
    unknown call_tmp[552517] "expr temp" "maybe param" "maybe type" "temp"
    (552520 'move' call_tmp[552517](429510 '.v' this[41363] c"chpl_t"))
    unknown call_tmp[552522] "maybe param" "maybe type" "temp"
    (552525 'move' call_tmp[552522](429502 'to nilable class' call_tmp[552517]))
    unknown tmp[429500] "temp"
    (429504 'init var' tmp[429500] nil[38] call_tmp[552522])
    (429506 'init field' this[41363] c"chpl_p" tmp[429500])
    unknown tmp[429513] "temp"
    (429516 'init var' tmp[429513] nil[38] unmanaged ReferenceCount?[389761])
    (429518 'init field' this[41363] c"chpl_pn" tmp[429513])
    (456119 return _void[47])
  }
  function _shared[41357](?).init[40362](arg _mt[41369]:_MT[227], ref arg this[41367]:_shared[41357](?), arg p[40359]:borrowed[200](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (40382 call compilerError "cannot initialize shared from a borrow")
    unknown call_tmp[552529] "expr temp" "maybe param" "maybe type" "temp"
    (552532 'move' call_tmp[552529](40392 call _to_unmanaged p[40359]))
    (40394 call(40386 call (partial) init _mt[232] this[41367]) call_tmp[552529])
    (456121 return _void[47])
  }
  function _shared[41357](?).init[40404](arg _mt[41373]:_MT[227], ref arg this[41371]:_shared[41357](?), arg p[40401]:unmanaged[209](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[429522] "temp" "type variable"
    unknown call_tmp[552534] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552537 'move' call_tmp[552534](40412 'typeof' p[40401]))
    (429524 'move' tmp[429522](40414 call _to_borrowed call_tmp[552534]))
    (429526 'init field' this[41371] c"chpl_t" tmp[429522])
    unknown rc[40423] "insert auto destroy"
    (489072 'init var' rc[40423] nil[38] unmanaged ReferenceCount?[389761])
    unknown call_tmp[552539] "expr temp" "maybe param" "maybe type" "temp"
    (552542 'move' call_tmp[552539](40428 call != p[40401] nil[38]))
    unknown call_tmp[552544] "expr temp" "maybe param" "maybe type" "temp"
    (552547 'move' call_tmp[552544](40439 call _cond_test call_tmp[552539]))
    if call_tmp[552544]
    {
      unknown call_tmp[552549] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (552552 'move' call_tmp[552549](691313 'new' anymanaged ReferenceCount[336102](?)(_chpl_manager = unmanaged[209](?))))
      (40436 call = rc[40423] call_tmp[552549])
    }
    unknown call_tmp[552554] "maybe param" "maybe type" "temp"
    (552557 'move' call_tmp[552554](40451 call _to_borrowed p[40401]))
    unknown call_tmp[552559] "expr temp" "maybe param" "maybe type" "temp"
    (552562 'move' call_tmp[552559](429540 '.v' this[41371] c"chpl_t"))
    unknown call_tmp[552564] "maybe param" "maybe type" "temp"
    (552567 'move' call_tmp[552564](429532 'to nilable class' call_tmp[552559]))
    unknown tmp[429530] "temp"
    (429534 'init var' tmp[429530] call_tmp[552554] call_tmp[552564])
    (429536 'init field' this[41371] c"chpl_p" tmp[429530])
    unknown tmp[429543] "temp"
    (429546 'init var' tmp[429543] rc[40423] unmanaged ReferenceCount?[389761])
    (429548 'init field' this[41371] c"chpl_pn" tmp[429543])
    (456123 return _void[47])
  }
  function _shared[41357](?).init[40479](arg _mt[41377]:_MT[227], ref arg this[41375]:_shared[41357](?), arg p[40476]:_any[170](?)) : void[4] "method" "primary method" "no return value for void"
  {
    (40510 call compilerError "shared only works with classes")
    unknown tmp[429558] "temp" "type variable"
    (429560 'move' tmp[429558](429552 'typeof' p[40476]))
    (429562 'init field' this[41375] c"chpl_t" tmp[429558])
    unknown call_tmp[552569] "expr temp" "maybe param" "maybe type" "temp"
    (552572 'move' call_tmp[552569](429576 '.v' this[41375] c"chpl_t"))
    unknown call_tmp[552574] "maybe param" "maybe type" "temp"
    (552577 'move' call_tmp[552574](429568 'to nilable class' call_tmp[552569]))
    unknown tmp[429566] "temp"
    (429570 'init var' tmp[429566] p[40476] call_tmp[552574])
    (429572 'init field' this[41375] c"chpl_p" tmp[429566])
    val tmp[429580]:unmanaged ReferenceCount?[389761] "temp"
    (429583 'default init var' tmp[429580] unmanaged ReferenceCount?[389761])
    (429585 '.=' this[41375] c"chpl_pn" tmp[429580])
    (456125 return _void[47])
  }
  where {
    unknown tmp[393642] "maybe param" "temp"
    unknown tmp[393663] "maybe param" "temp"
    unknown call_tmp[552579] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552582 'move' call_tmp[552579](429554 'typeof' p[40476]))
    unknown call_tmp[552584] "expr temp" "maybe param" "maybe type" "temp"
    (552587 'move' call_tmp[552584](40484 call isClass call_tmp[552579]))
    (393674 'move' tmp[393663](40486 call == call_tmp[552584] 0))
    unknown call_tmp[552589] "expr temp" "maybe param" "maybe type" "temp"
    (552592 'move' call_tmp[552589](393676 call _cond_invalid tmp[393663]))
    if call_tmp[552589]
    {
      (393679 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[502862] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[502863] "maybe param" "temp"
    unknown call_tmp[552594] "expr temp" "maybe param" "maybe type" "temp"
    (552597 'move' call_tmp[552594](393664 call isTrue tmp[393663]))
    (502868 'move' tmp[502863](502866 call _cond_test call_tmp[552594]))
    if tmp[502863]
    {
      unknown tmp[502870] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552599] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (552602 'move' call_tmp[552599](429556 'typeof' p[40476]))
      unknown call_tmp[552604] "expr temp" "maybe param" "maybe type" "temp"
      (552607 'move' call_tmp[552604](328433 'is_subtype' _shared[41357](?) call_tmp[552599]))
      unknown call_tmp[552609] "expr temp" "maybe param" "maybe type" "temp"
      (552612 'move' call_tmp[552609](40494 call == call_tmp[552604] 0))
      (502872 'move' tmp[502870](393667 call isTrue call_tmp[552609]))
      (502877 'move' tmp[502862](502874 '_paramFoldLogical' tmp[502863] tmp[502870]))
    }
    {
      (502882 'move' tmp[502862](502879 '_paramFoldLogical' tmp[502863] 0))
    }
    (393653 'move' tmp[393642] tmp[502862])
    unknown call_tmp[552614] "expr temp" "maybe param" "maybe type" "temp"
    (552617 'move' call_tmp[552614](393655 call _cond_invalid tmp[393642]))
    if call_tmp[552614]
    {
      (393658 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[502889] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[502890] "maybe param" "temp"
    unknown call_tmp[552619] "expr temp" "maybe param" "maybe type" "temp"
    (552622 'move' call_tmp[552619](393643 call isTrue tmp[393642]))
    (502895 'move' tmp[502890](502893 call _cond_test call_tmp[552619]))
    if tmp[502890]
    {
      unknown tmp[502897] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552624] "expr temp" "maybe param" "maybe type" "temp"
      (552627 'move' call_tmp[552624](40501 call isIterator p[40476]))
      unknown call_tmp[552629] "expr temp" "maybe param" "maybe type" "temp"
      (552632 'move' call_tmp[552629](40503 call == call_tmp[552624] 0))
      (502899 'move' tmp[502897](393646 call isTrue call_tmp[552629]))
      (502904 'move' tmp[502889](502901 '_paramFoldLogical' tmp[502890] tmp[502897]))
    }
    {
      (502909 'move' tmp[502889](502906 '_paramFoldLogical' tmp[502890] 0))
    }
    (691765 call _statementLevelSymbol tmp[502889])
  }
  function _shared[41357](?).init[40538](arg _mt[41381]:_MT[227], ref arg this[41379]:_shared[41357](?), in arg take[40535]:_owned[39039](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[552636] "maybe param" "maybe type" "temp"
    (552639 'move' call_tmp[552636](40545 call(40541 call (partial) release _mt[232] take[40535])))
    unknown p[40546] "insert auto destroy"
    (489074 'init var' p[40546] call_tmp[552636])
    unknown tmp[429589] "temp" "type variable"
    unknown tmp[502916] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[502917] "maybe param" "temp"
    unknown call_tmp[552641] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552644 'move' call_tmp[552641](40555 'typeof' this[41379]))
    unknown call_tmp[552648] "expr temp" "maybe param" "maybe type" "temp"
    (552651 'move' call_tmp[552648](40556 call chpl_t _mt[232] call_tmp[552641]))
    unknown call_tmp[552653] "expr temp" "maybe param" "maybe type" "temp"
    (552656 'move' call_tmp[552653](40560 call == call_tmp[552648] ?[249]))
    (502922 'move' tmp[502917](502920 call _cond_test call_tmp[552653]))
    if tmp[502917]
    {
      unknown tmp[502924] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552658] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (552661 'move' call_tmp[552658](40564 'typeof' p[40546]))
      (502926 'move' tmp[502924](40566 call _to_borrowed call_tmp[552658]))
      (502931 'move' tmp[502916](502928 '_paramFoldLogical' tmp[502917] tmp[502924]))
    }
    {
      unknown tmp[502933] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552663] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (552666 'move' call_tmp[552663](40568 'typeof' this[41379]))
      (502935 'move' tmp[502933](40569 call chpl_t _mt[232] call_tmp[552663]))
      (502940 'move' tmp[502916](502937 '_paramFoldLogical' tmp[502917] tmp[502933]))
    }
    (429591 'move' tmp[429589] tmp[502916])
    (429593 'init field' this[41379] c"chpl_t" tmp[429589])
    unknown call_tmp[552670] "expr temp" "maybe param" "maybe type" "temp"
    (552673 'move' call_tmp[552670](40581 call isClass p[40546]))
    unknown call_tmp[552675] "expr temp" "maybe param" "maybe type" "temp"
    (552678 'move' call_tmp[552675](40582 call ! call_tmp[552670]))
    unknown call_tmp[552680] "expr temp" "maybe param" "maybe type" "temp"
    (552683 'move' call_tmp[552680](40589 call _cond_test call_tmp[552675]))
    if call_tmp[552680]
    {
      (40587 call compilerError "shared only works with classes")
    }
    unknown rc[40598] "insert auto destroy"
    (489076 'init var' rc[40598] nil[38] unmanaged ReferenceCount?[389761])
    unknown call_tmp[552685] "expr temp" "maybe param" "maybe type" "temp"
    (552688 'move' call_tmp[552685](40603 call != p[40546] nil[38]))
    unknown call_tmp[552690] "expr temp" "maybe param" "maybe type" "temp"
    (552693 'move' call_tmp[552690](40614 call _cond_test call_tmp[552685]))
    if call_tmp[552690]
    {
      unknown call_tmp[552695] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (552698 'move' call_tmp[552695](691314 'new' anymanaged ReferenceCount[336102](?)(_chpl_manager = unmanaged[209](?))))
      (40611 call = rc[40598] call_tmp[552695])
    }
    unknown call_tmp[552700] "expr temp" "maybe param" "maybe type" "temp"
    (552703 'move' call_tmp[552700](429607 '.v' this[41379] c"chpl_t"))
    unknown call_tmp[552705] "maybe param" "maybe type" "temp"
    (552708 'move' call_tmp[552705](429599 'to nilable class' call_tmp[552700]))
    unknown tmp[429597] "temp"
    (429601 'init var' tmp[429597] p[40546] call_tmp[552705])
    (429603 'init field' this[41379] c"chpl_p" tmp[429597])
    unknown tmp[429610] "temp"
    (429613 'init var' tmp[429610] rc[40598] unmanaged ReferenceCount?[389761])
    (429615 'init field' this[41379] c"chpl_pn" tmp[429610])
    (456127 return _void[47])
  }
  function _shared[41357](?).init[40650](arg _mt[41385]:_MT[227], ref arg this[41383]:_shared[41357](?), arg _private[40647]:bool[10], arg t[40652]:_any[170](?), ref arg src[40658]:_shared[41357](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[429628] "temp" "type variable"
    (429630 'move' tmp[429628] t[40652])
    (429632 'init field' this[41383] c"chpl_t" tmp[429628])
    unknown call_tmp[552710] "expr temp" "maybe param" "maybe type" "temp"
    (552713 'move' call_tmp[552710](40682 call _to_unmanaged t[40652]))
    unknown call_tmp[552715] "expr temp" "maybe param" "maybe type" "temp"
    (552718 'move' call_tmp[552715](40684 call _to_nilable call_tmp[552710]))
    unknown call_tmp[552722] "expr temp" "maybe param" "maybe type" "temp"
    (552725 'move' call_tmp[552722](40675 call chpl_p _mt[232] src[40658]))
    unknown call_tmp[552727] "maybe param" "maybe type" "temp"
    (552730 'move' call_tmp[552727](40685 call _cast call_tmp[552715] call_tmp[552722]))
    unknown call_tmp[552732] "expr temp" "maybe param" "maybe type" "temp"
    (552735 'move' call_tmp[552732](429646 '.v' this[41383] c"chpl_t"))
    unknown call_tmp[552737] "maybe param" "maybe type" "temp"
    (552740 'move' call_tmp[552737](429638 'to nilable class' call_tmp[552732]))
    unknown tmp[429636] "temp"
    (429640 'init var' tmp[429636] call_tmp[552727] call_tmp[552737])
    (429642 'init field' this[41383] c"chpl_p" tmp[429636])
    unknown call_tmp[552744] "maybe param" "maybe type" "temp"
    (552747 'move' call_tmp[552744](40695 call chpl_pn _mt[232] src[40658]))
    unknown tmp[429649] "temp"
    (429652 'init var' tmp[429649] call_tmp[552744] unmanaged ReferenceCount?[389761])
    (429654 'init field' this[41383] c"chpl_pn" tmp[429649])
    unknown call_tmp[552751] "expr temp" "maybe param" "maybe type" "temp"
    (552754 'move' call_tmp[552751](40702 call chpl_p _mt[232] src[40658]))
    (40706 call = call_tmp[552751] nil[38])
    unknown call_tmp[552758] "expr temp" "maybe param" "maybe type" "temp"
    (552761 'move' call_tmp[552758](40710 call chpl_pn _mt[232] src[40658]))
    (40714 call = call_tmp[552758] nil[38])
    (456129 return _void[47])
  }
  function _shared[41357](?).init[40725](arg _mt[41389]:_MT[227], ref arg this[41387]:_shared[41357](?), arg _private[40722]:bool[10], arg t[40727]:_any[170](?), arg p[40729]:_any[170](?), arg pn[40731]:_any[170](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[552763] "expr temp" "maybe param" "maybe type" "temp"
    (552766 'move' call_tmp[552763](40738 call _to_unmanaged t[40727]))
    unknown call_tmp[552768] "expr temp" "maybe param" "maybe type" "temp"
    (552771 'move' call_tmp[552768](40740 call _to_nilable call_tmp[552763]))
    unknown call_tmp[552773] "maybe param" "maybe type" "temp"
    (552776 'move' call_tmp[552773](40741 call _cast call_tmp[552768] p[40729]))
    unknown ptr[40743] "insert auto destroy"
    (489078 'init var' ptr[40743] call_tmp[552773])
    unknown count[40748] "insert auto destroy"
    (489080 'init var' count[40748] pn[40731])
    unknown call_tmp[552778] "expr temp" "maybe param" "maybe type" "temp"
    (552781 'move' call_tmp[552778](40753 call != ptr[40743] nil[38]))
    unknown call_tmp[552783] "expr temp" "maybe param" "maybe type" "temp"
    (552786 'move' call_tmp[552783](40771 call _cond_test call_tmp[552778]))
    if call_tmp[552783]
    {
      unknown call_tmp[552788] "expr temp" "maybe param" "maybe type" "temp"
      (552791 'move' call_tmp[552788](40756 call postfix! count[40748]))
      (40762 call(40758 call (partial) retain _mt[232] call_tmp[552788]))
    }
    {
      (40767 call = count[40748] nil[38])
    }
    unknown tmp[429658] "temp" "type variable"
    (429660 'move' tmp[429658] t[40727])
    (429662 'init field' this[41387] c"chpl_t" tmp[429658])
    unknown call_tmp[552795] "expr temp" "maybe param" "maybe type" "temp"
    (552798 'move' call_tmp[552795](429676 '.v' this[41387] c"chpl_t"))
    unknown call_tmp[552800] "maybe param" "maybe type" "temp"
    (552803 'move' call_tmp[552800](429668 'to nilable class' call_tmp[552795]))
    unknown tmp[429666] "temp"
    (429670 'init var' tmp[429666] ptr[40743] call_tmp[552800])
    (429672 'init field' this[41387] c"chpl_p" tmp[429666])
    unknown tmp[429679] "temp"
    (429682 'init var' tmp[429679] count[40748] unmanaged ReferenceCount?[389761])
    (429684 'init field' this[41387] c"chpl_pn" tmp[429679])
    (456131 return _void[47])
  }
  function _shared[41357](?).init=[40807](arg _mt[41393]:_MT[227], ref arg this[41391]:_shared[41357](?), in arg take[40804]:_owned[39039](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[393684] "maybe param" "temp"
    unknown tmp[393705] "maybe param" "temp"
    unknown call_tmp[552805] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552808 'move' call_tmp[552805](40811 'typeof' this[41391]))
    (393716 'move' tmp[393705](40813 call isNonNilableClass call_tmp[552805]))
    unknown call_tmp[552810] "expr temp" "maybe param" "maybe type" "temp"
    (552813 'move' call_tmp[552810](393718 call _cond_invalid tmp[393705]))
    if call_tmp[552810]
    {
      (393721 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[502947] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[502948] "maybe param" "temp"
    unknown call_tmp[552815] "expr temp" "maybe param" "maybe type" "temp"
    (552818 'move' call_tmp[552815](393706 call isTrue tmp[393705]))
    (502953 'move' tmp[502948](502951 call _cond_test call_tmp[552815]))
    if tmp[502948]
    {
      unknown tmp[502955] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552820] "expr temp" "maybe param" "maybe type" "temp"
      (552823 'move' call_tmp[552820](40817 call isNilableClass take[40804]))
      (502957 'move' tmp[502955](393709 call isTrue call_tmp[552820]))
      (502962 'move' tmp[502947](502959 '_paramFoldLogical' tmp[502948] tmp[502955]))
    }
    {
      (502967 'move' tmp[502947](502964 '_paramFoldLogical' tmp[502948] 0))
    }
    (393695 'move' tmp[393684] tmp[502947])
    unknown call_tmp[552825] "expr temp" "maybe param" "maybe type" "temp"
    (552828 'move' call_tmp[552825](393697 call _cond_invalid tmp[393684]))
    if call_tmp[552825]
    {
      (393700 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[502974] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[502975] "maybe param" "temp"
    unknown call_tmp[552830] "expr temp" "maybe param" "maybe type" "temp"
    (552833 'move' call_tmp[552830](393685 call isTrue tmp[393684]))
    (502980 'move' tmp[502975](502978 call _cond_test call_tmp[552830]))
    if tmp[502975]
    {
      unknown tmp[502982] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552835] "expr temp" "maybe param" "maybe type" "temp"
      (552838 'move' call_tmp[552835](40821 call ! 0))
      (502984 'move' tmp[502982](393688 call isTrue call_tmp[552835]))
      (502989 'move' tmp[502974](502986 '_paramFoldLogical' tmp[502975] tmp[502982]))
    }
    {
      (502994 'move' tmp[502974](502991 '_paramFoldLogical' tmp[502975] 0))
    }
    unknown call_tmp[552840] "expr temp" "maybe param" "maybe type" "temp"
    (552843 'move' call_tmp[552840](40847 call _cond_test tmp[502974]))
    if call_tmp[552840]
    {
      (40845 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    (40859 call(40854 call (partial) init _mt[232] this[41391]) take[40804])
    (456133 return _void[47])
  }
  function _shared[41357](?).init=[40872](arg _mt[41397]:_MT[227], ref arg this[41395]:_shared[41357](?), const  ref arg src[40869]:_shared[41357](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[393726] "maybe param" "temp"
    unknown tmp[393747] "maybe param" "temp"
    unknown call_tmp[552847] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552850 'move' call_tmp[552847](40876 'typeof' this[41395]))
    (393758 'move' tmp[393747](40878 call isNonNilableClass call_tmp[552847]))
    unknown call_tmp[552852] "expr temp" "maybe param" "maybe type" "temp"
    (552855 'move' call_tmp[552852](393760 call _cond_invalid tmp[393747]))
    if call_tmp[552852]
    {
      (393763 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[503001] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503002] "maybe param" "temp"
    unknown call_tmp[552857] "expr temp" "maybe param" "maybe type" "temp"
    (552860 'move' call_tmp[552857](393748 call isTrue tmp[393747]))
    (503007 'move' tmp[503002](503005 call _cond_test call_tmp[552857]))
    if tmp[503002]
    {
      unknown tmp[503009] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552862] "expr temp" "maybe param" "maybe type" "temp"
      (552865 'move' call_tmp[552862](40882 call isNilableClass src[40869]))
      (503011 'move' tmp[503009](393751 call isTrue call_tmp[552862]))
      (503016 'move' tmp[503001](503013 '_paramFoldLogical' tmp[503002] tmp[503009]))
    }
    {
      (503021 'move' tmp[503001](503018 '_paramFoldLogical' tmp[503002] 0))
    }
    (393737 'move' tmp[393726] tmp[503001])
    unknown call_tmp[552867] "expr temp" "maybe param" "maybe type" "temp"
    (552870 'move' call_tmp[552867](393739 call _cond_invalid tmp[393726]))
    if call_tmp[552867]
    {
      (393742 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[503028] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503029] "maybe param" "temp"
    unknown call_tmp[552872] "expr temp" "maybe param" "maybe type" "temp"
    (552875 'move' call_tmp[552872](393727 call isTrue tmp[393726]))
    (503034 'move' tmp[503029](503032 call _cond_test call_tmp[552872]))
    if tmp[503029]
    {
      unknown tmp[503036] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[552877] "expr temp" "maybe param" "maybe type" "temp"
      (552880 'move' call_tmp[552877](40886 call ! 0))
      (503038 'move' tmp[503036](393730 call isTrue call_tmp[552877]))
      (503043 'move' tmp[503028](503040 '_paramFoldLogical' tmp[503029] tmp[503036]))
    }
    {
      (503048 'move' tmp[503028](503045 '_paramFoldLogical' tmp[503029] 0))
    }
    unknown call_tmp[552882] "expr temp" "maybe param" "maybe type" "temp"
    (552885 'move' call_tmp[552882](40895 call _cond_test tmp[503028]))
    if call_tmp[552882]
    {
      (40893 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    unknown call_tmp[552887] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552890 'move' call_tmp[552887](40908 'typeof' this[41395]))
    unknown call_tmp[552894] "expr temp" "maybe param" "maybe type" "temp"
    (552897 'move' call_tmp[552894](40909 call chpl_t _mt[232] call_tmp[552887]))
    unknown call_tmp[552901] "expr temp" "maybe param" "maybe type" "temp"
    (552904 'move' call_tmp[552901](40903 call chpl_t _mt[232] src[40869]))
    unknown call_tmp[552906] "expr temp" "maybe param" "maybe type" "temp"
    (552909 'move' call_tmp[552906](328434 'is_coercible' call_tmp[552894] call_tmp[552901]))
    unknown call_tmp[552911] "expr temp" "maybe param" "maybe type" "temp"
    (552914 'move' call_tmp[552911](40914 call == call_tmp[552906] 0))
    unknown call_tmp[552916] "expr temp" "maybe param" "maybe type" "temp"
    (552919 'move' call_tmp[552916](40933 call _cond_test call_tmp[552911]))
    if call_tmp[552916]
    {
      unknown call_tmp[552921] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (552924 'move' call_tmp[552921](40920 'typeof' src[40869]))
      unknown call_tmp[552926] "expr temp" "maybe param" "maybe type" "temp"
      (552929 'move' call_tmp[552926](40922 call _cast string[24] call_tmp[552921]))
      unknown call_tmp[552931] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (552934 'move' call_tmp[552931](40926 'typeof' this[41395]))
      unknown call_tmp[552936] "expr temp" "maybe param" "maybe type" "temp"
      (552939 'move' call_tmp[552936](40928 call _cast string[24] call_tmp[552931]))
      (40931 call compilerError "cannot coerce '" call_tmp[552926] "' to '" call_tmp[552936] "' in initialization")
    }
    unknown tmp[429697] "temp" "type variable"
    unknown call_tmp[552941] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (552944 'move' call_tmp[552941](40943 'typeof' this[41395]))
    (429699 'move' tmp[429697](40944 call chpl_t _mt[232] call_tmp[552941]))
    (429701 'init field' this[41395] c"chpl_t" tmp[429697])
    unknown call_tmp[552950] "maybe param" "maybe type" "temp"
    (552953 'move' call_tmp[552950](40955 call chpl_p _mt[232] src[40869]))
    unknown call_tmp[552955] "expr temp" "maybe param" "maybe type" "temp"
    (552958 'move' call_tmp[552955](429715 '.v' this[41395] c"chpl_t"))
    unknown call_tmp[552960] "maybe param" "maybe type" "temp"
    (552963 'move' call_tmp[552960](429707 'to nilable class' call_tmp[552955]))
    unknown tmp[429705] "temp"
    (429709 'init var' tmp[429705] call_tmp[552950] call_tmp[552960])
    (429711 'init field' this[41395] c"chpl_p" tmp[429705])
    unknown call_tmp[552967] "maybe param" "maybe type" "temp"
    (552970 'move' call_tmp[552967](40966 call chpl_pn _mt[232] src[40869]))
    unknown tmp[429718] "temp"
    (429721 'init var' tmp[429718] call_tmp[552967] unmanaged ReferenceCount?[389761])
    (429723 'init field' this[41395] c"chpl_pn" tmp[429718])
    unknown call_tmp[552974] "expr temp" "maybe param" "maybe type" "temp"
    (552977 'move' call_tmp[552974](40980 call chpl_pn _mt[232] this[41395]))
    unknown call_tmp[552979] "expr temp" "maybe param" "maybe type" "temp"
    (552982 'move' call_tmp[552979](40984 call != call_tmp[552974] nil[38]))
    unknown call_tmp[552984] "expr temp" "maybe param" "maybe type" "temp"
    (552987 'move' call_tmp[552984](40998 call _cond_test call_tmp[552979]))
    if call_tmp[552984]
    {
      unknown call_tmp[552991] "expr temp" "maybe param" "maybe type" "temp"
      (552994 'move' call_tmp[552991](40987 call chpl_pn _mt[232] this[41395]))
      unknown call_tmp[552996] "expr temp" "maybe param" "maybe type" "temp"
      (552999 'move' call_tmp[552996](40990 call postfix! call_tmp[552991]))
      (40996 call(40992 call (partial) retain _mt[232] call_tmp[552996]))
    }
    (456135 return _void[47])
  }
  function _shared[41357](?).init=[41011](arg _mt[41401]:_MT[227], ref arg this[41399]:_shared[41357](?), arg src[41008]:borrowed[200](?)) : void[4] "method" "primary method" "no return value for void"
  {
    (41031 call compilerError "cannot create a shared variable from a borrowed class instance")
    unknown tmp[429727] "temp" "type variable"
    (429729 'move' tmp[429727] int(64)[13])
    (429731 'init field' this[41399] c"chpl_t" tmp[429727])
    unknown tmp[429736] "temp"
    unknown call_tmp[553003] "expr temp" "maybe param" "maybe type" "temp"
    (553006 'move' call_tmp[553003](429746 '.v' this[41399] c"chpl_t"))
    unknown call_tmp[553008] "expr temp" "maybe param" "maybe type" "temp"
    (553011 'move' call_tmp[553008](429738 'to nilable class' call_tmp[553003]))
    (429740 'default init var' tmp[429736] call_tmp[553008])
    (429742 '.=' this[41399] c"chpl_p" tmp[429736])
    val tmp[429749]:unmanaged ReferenceCount?[389761] "temp"
    (429752 'default init var' tmp[429749] unmanaged ReferenceCount?[389761])
    (429754 '.=' this[41399] c"chpl_pn" tmp[429749])
    (456137 return _void[47])
  }
  function _shared[41357](?).init=[41050](arg _mt[41405]:_MT[227], ref arg this[41403]:_shared[41357](?), arg src[41047]:unmanaged[209](?)) : void[4] "method" "primary method" "no return value for void"
  {
    (41070 call compilerError "cannot create a shared variable from an unmanaged class instance")
    unknown tmp[429758] "temp" "type variable"
    (429760 'move' tmp[429758] int(64)[13])
    (429762 'init field' this[41403] c"chpl_t" tmp[429758])
    unknown tmp[429767] "temp"
    unknown call_tmp[553013] "expr temp" "maybe param" "maybe type" "temp"
    (553016 'move' call_tmp[553013](429777 '.v' this[41403] c"chpl_t"))
    unknown call_tmp[553018] "expr temp" "maybe param" "maybe type" "temp"
    (553021 'move' call_tmp[553018](429769 'to nilable class' call_tmp[553013]))
    (429771 'default init var' tmp[429767] call_tmp[553018])
    (429773 '.=' this[41403] c"chpl_p" tmp[429767])
    val tmp[429780]:unmanaged ReferenceCount?[389761] "temp"
    (429783 'default init var' tmp[429780] unmanaged ReferenceCount?[389761])
    (429785 '.=' this[41403] c"chpl_pn" tmp[429780])
    (456139 return _void[47])
  }
  function _shared[41357](?).init=[41089](arg _mt[41409]:_MT[227], ref arg this[41407]:_shared[41357](?), arg src[41086]:_nilType[36]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[553025] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (553028 'move' call_tmp[553025](41096 'typeof' this[41407]))
    unknown call_tmp[553032] "expr temp" "maybe param" "maybe type" "temp"
    (553035 'move' call_tmp[553032](41097 call chpl_t _mt[232] call_tmp[553025]))
    (41101 call(41092 call (partial) init _mt[232] this[41407]) call_tmp[553032])
    unknown tmp[393768] "maybe param" "temp"
    unknown call_tmp[553039] "expr temp" "maybe param" "maybe type" "temp"
    (553042 'move' call_tmp[553039](336199 call chpl_t _mt[232] this[41407]))
    unknown call_tmp[553044] "expr temp" "maybe param" "maybe type" "temp"
    (553047 'move' call_tmp[553044](41107 call _to_nilable call_tmp[553039]))
    unknown call_tmp[553051] "expr temp" "maybe param" "maybe type" "temp"
    (553054 'move' call_tmp[553051](336204 call chpl_t _mt[232] this[41407]))
    (393779 'move' tmp[393768](41109 call != call_tmp[553044] call_tmp[553051]))
    unknown call_tmp[553056] "expr temp" "maybe param" "maybe type" "temp"
    (553059 'move' call_tmp[553056](393781 call _cond_invalid tmp[393768]))
    if call_tmp[553056]
    {
      (393784 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[503055] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503056] "maybe param" "temp"
    unknown call_tmp[553061] "expr temp" "maybe param" "maybe type" "temp"
    (553064 'move' call_tmp[553061](393769 call isTrue tmp[393768]))
    (503061 'move' tmp[503056](503059 call _cond_test call_tmp[553061]))
    if tmp[503056]
    {
      unknown tmp[503063] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[553066] "expr temp" "maybe param" "maybe type" "temp"
      (553069 'move' call_tmp[553066](41112 call ! 0))
      (503065 'move' tmp[503063](393772 call isTrue call_tmp[553066]))
      (503070 'move' tmp[503055](503067 '_paramFoldLogical' tmp[503056] tmp[503063]))
    }
    {
      (503075 'move' tmp[503055](503072 '_paramFoldLogical' tmp[503056] 0))
    }
    unknown call_tmp[553071] "expr temp" "maybe param" "maybe type" "temp"
    (553074 'move' call_tmp[553071](41137 call _cond_test tmp[503055]))
    if call_tmp[553071]
    {
      (41134 call compilerError "Assigning non-nilable shared to nil")
    }
    (456141 return _void[47])
  }
  function _shared[41357](?).deinit[41145](arg _mt[41413]:_MT[227], arg this[41411]:_shared[41357](?)) : _unknown[43] "destructor" "method" "primary method" "no return value for void"
  {
    (41149 call(336209 call (partial) clear _mt[232] this[41411]))
    (456143 return _void[47])
  }
  function _shared[41357](?).retain[41160](arg _mt[41417]:_MT[227], ref arg this[41415]:_shared[41357](?), arg newPtr[41157]:unmanaged[209](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[553080] "expr temp" "maybe param" "maybe type" "temp"
    (553083 'move' call_tmp[553080](336215 call chpl_t _mt[232] this[41415]))
    unknown call_tmp[553085] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (553088 'move' call_tmp[553085](41164 'typeof' newPtr[41157]))
    unknown call_tmp[553090] "expr temp" "maybe param" "maybe type" "temp"
    (553093 'move' call_tmp[553090](328435 'is_coercible' call_tmp[553080] call_tmp[553085]))
    unknown call_tmp[553095] "expr temp" "maybe param" "maybe type" "temp"
    (553098 'move' call_tmp[553095](41168 call ! call_tmp[553090]))
    unknown call_tmp[553100] "expr temp" "maybe param" "maybe type" "temp"
    (553103 'move' call_tmp[553100](41200 call _cond_test call_tmp[553095]))
    if call_tmp[553100]
    {
      unknown call_tmp[553105] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (553108 'move' call_tmp[553105](41173 'typeof' newPtr[41157]))
      unknown call_tmp[553110] "expr temp" "maybe param" "maybe type" "temp"
      (553113 'move' call_tmp[553110](41175 call _cast string[24] call_tmp[553105]))
      unknown call_tmp[553115] "expr temp" "maybe param" "maybe type" "temp"
      (553118 'move' call_tmp[553115](41177 call + "cannot retain '" call_tmp[553110]))
      unknown call_tmp[553120] "expr temp" "maybe param" "maybe type" "temp"
      (553123 'move' call_tmp[553120](41180 call + call_tmp[553115] "' "))
      unknown call_tmp[553125] "expr temp" "maybe param" "maybe type" "temp"
      (553128 'move' call_tmp[553125](41183 call + call_tmp[553120] "(expected '"))
      unknown call_tmp[553132] "expr temp" "maybe param" "maybe type" "temp"
      (553135 'move' call_tmp[553132](336221 call chpl_t _mt[232] this[41415]))
      unknown call_tmp[553137] "expr temp" "maybe param" "maybe type" "temp"
      (553140 'move' call_tmp[553137](41188 call _to_unmanaged call_tmp[553132]))
      unknown call_tmp[553142] "expr temp" "maybe param" "maybe type" "temp"
      (553145 'move' call_tmp[553142](41190 call _cast string[24] call_tmp[553137]))
      unknown call_tmp[553147] "expr temp" "maybe param" "maybe type" "temp"
      (553150 'move' call_tmp[553147](41192 call + call_tmp[553125] call_tmp[553142]))
      unknown call_tmp[553152] "expr temp" "maybe param" "maybe type" "temp"
      (553155 'move' call_tmp[553152](41195 call + call_tmp[553147] "')"))
      (41198 call compilerError call_tmp[553152])
    }
    (41208 call(336225 call (partial) clear _mt[232] this[41415]))
    unknown call_tmp[553161] "expr temp" "maybe param" "maybe type" "temp"
    (553164 'move' call_tmp[553161](41211 call chpl_p _mt[232] this[41415]))
    (41215 call = call_tmp[553161] newPtr[41157])
    unknown call_tmp[553166] "expr temp" "maybe param" "maybe type" "temp"
    (553169 'move' call_tmp[553166](41220 call != newPtr[41157] nil[38]))
    unknown call_tmp[553171] "expr temp" "maybe param" "maybe type" "temp"
    (553174 'move' call_tmp[553171](41235 call _cond_test call_tmp[553166]))
    if call_tmp[553171]
    {
      unknown call_tmp[553178] "expr temp" "maybe param" "maybe type" "temp"
      (553181 'move' call_tmp[553178](41223 call chpl_pn _mt[232] this[41415]))
      unknown call_tmp[553183] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (553186 'move' call_tmp[553183](691315 'new' anymanaged ReferenceCount[336102](?)(_chpl_manager = unmanaged[209](?))))
      (41231 call = call_tmp[553178] call_tmp[553183])
    }
    (456145 return _void[47])
  }
  function _shared[41357](?).clear[41243](arg _mt[41421]:_MT[227], ref arg this[41419]:_shared[41357](?)) : _unknown[43] "leaves this nil" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[553190] "expr temp" "maybe param" "maybe type" "temp"
    (553193 'move' call_tmp[553190](336235 call chpl_p _mt[232] this[41419]))
    unknown call_tmp[553195] "expr temp" "maybe param" "maybe type" "temp"
    (553198 'move' call_tmp[553195](41248 call isClass call_tmp[553190]))
    unknown call_tmp[553200] "expr temp" "maybe param" "maybe type" "temp"
    (553203 'move' call_tmp[553200](41308 call _cond_test call_tmp[553195]))
    if call_tmp[553200]
    {
      unknown tmp[393789] "maybe param" "temp"
      unknown call_tmp[553207] "expr temp" "maybe param" "maybe type" "temp"
      (553210 'move' call_tmp[553207](336240 call chpl_p _mt[232] this[41419]))
      (393800 'move' tmp[393789](41251 call != call_tmp[553207] nil[38]))
      unknown call_tmp[553212] "expr temp" "maybe param" "maybe type" "temp"
      (553215 'move' call_tmp[553212](393802 call _cond_invalid tmp[393789]))
      if call_tmp[553212]
      {
        (393805 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[503082] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[503083] "maybe param" "temp"
      unknown call_tmp[553217] "expr temp" "maybe param" "maybe type" "temp"
      (553220 'move' call_tmp[553217](393790 call isTrue tmp[393789]))
      (503088 'move' tmp[503083](503086 call _cond_test call_tmp[553217]))
      if tmp[503083]
      {
        unknown tmp[503090] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[553224] "expr temp" "maybe param" "maybe type" "temp"
        (553227 'move' call_tmp[553224](336245 call chpl_pn _mt[232] this[41419]))
        unknown call_tmp[553229] "expr temp" "maybe param" "maybe type" "temp"
        (553232 'move' call_tmp[553229](41255 call != call_tmp[553224] nil[38]))
        (503092 'move' tmp[503090](393793 call isTrue call_tmp[553229]))
        (503097 'move' tmp[503082](503094 '_paramFoldLogical' tmp[503083] tmp[503090]))
      }
      {
        (503102 'move' tmp[503082](503099 '_paramFoldLogical' tmp[503083] 0))
      }
      unknown call_tmp[553234] "expr temp" "maybe param" "maybe type" "temp"
      (553237 'move' call_tmp[553234](41293 call _cond_test tmp[503082]))
      if call_tmp[553234]
      {
        unknown call_tmp[553241] "expr temp" "maybe param" "maybe type" "temp"
        (553244 'move' call_tmp[553241](336250 call chpl_pn _mt[232] this[41419]))
        unknown call_tmp[553246] "expr temp" "maybe param" "maybe type" "temp"
        (553249 'move' call_tmp[553246](41260 call postfix! call_tmp[553241]))
        unknown call_tmp[553253] "maybe param" "maybe type" "temp"
        (553256 'move' call_tmp[553253](41266 call(41262 call (partial) release _mt[232] call_tmp[553246])))
        unknown count[41267] "insert auto destroy"
        (489082 'init var' count[41267] call_tmp[553253])
        unknown call_tmp[553258] "expr temp" "maybe param" "maybe type" "temp"
        (553261 'move' call_tmp[553258](41273 call == count[41267] 0))
        unknown call_tmp[553263] "expr temp" "maybe param" "maybe type" "temp"
        (553266 'move' call_tmp[553263](41289 call _cond_test call_tmp[553258]))
        if call_tmp[553263]
        {
          unknown call_tmp[553270] "expr temp" "maybe param" "maybe type" "temp"
          (553273 'move' call_tmp[553270](336256 call chpl_p _mt[232] this[41419]))
          unknown call_tmp[553275] "expr temp" "maybe param" "maybe type" "temp"
          (553278 'move' call_tmp[553275](41278 call _to_unmanaged call_tmp[553270]))
          (41280 call chpl__delete call_tmp[553275])
          unknown call_tmp[553282] "expr temp" "maybe param" "maybe type" "temp"
          (553285 'move' call_tmp[553282](336261 call chpl_pn _mt[232] this[41419]))
          (41286 call chpl__delete call_tmp[553282])
        }
      }
      unknown call_tmp[553289] "expr temp" "maybe param" "maybe type" "temp"
      (553292 'move' call_tmp[553289](336266 call chpl_p _mt[232] this[41419]))
      (41300 call = call_tmp[553289] nil[38])
      unknown call_tmp[553296] "expr temp" "maybe param" "maybe type" "temp"
      (553299 'move' call_tmp[553296](336271 call chpl_pn _mt[232] this[41419]))
      (41305 call = call_tmp[553296] nil[38])
    }
    (456147 return _void[47])
  }
  function _shared[41357](?).borrow[41317](arg _mt[41425]:_MT[227], arg this[41423]:_shared[41357](?)) : _unknown[43] "nil from this" "method" "primary method"
  {
    unknown ret[456151] "RVV" "temp"
    unknown call_tmp[553303] "expr temp" "maybe param" "maybe type" "temp"
    (553306 'move' call_tmp[553303](336276 call chpl_t _mt[232] this[41423]))
    unknown call_tmp[553308] "expr temp" "maybe param" "maybe type" "temp"
    (553311 'move' call_tmp[553308](41322 call _to_nilable call_tmp[553303]))
    unknown call_tmp[553315] "expr temp" "maybe param" "maybe type" "temp"
    (553318 'move' call_tmp[553315](336281 call chpl_t _mt[232] this[41423]))
    unknown call_tmp[553320] "expr temp" "maybe param" "maybe type" "temp"
    (553323 'move' call_tmp[553320](41324 call == call_tmp[553308] call_tmp[553315]))
    unknown call_tmp[553325] "expr temp" "maybe param" "maybe type" "temp"
    (553328 'move' call_tmp[553325](41348 call _cond_test call_tmp[553320]))
    if call_tmp[553325]
    {
      unknown call_tmp[553332] "expr temp" "maybe param" "maybe type" "temp"
      (553335 'move' call_tmp[553332](336286 call chpl_p _mt[232] this[41423]))
      (456156 'move' ret[456151](456155 'deref' call_tmp[553332]))
      gotoReturn _end_borrow[456149] _end_borrow[456149]
    }
    {
      unknown call_tmp[553337] "expr temp" "maybe param" "maybe type" "temp"
      (553340 'move' call_tmp[553337](41344 call _cond_test 0))
      if call_tmp[553337]
      {
        unknown call_tmp[553344] "expr temp" "maybe param" "maybe type" "temp"
        (553347 'move' call_tmp[553344](336292 call chpl_p _mt[232] this[41423]))
        unknown call_tmp[553349] "expr temp" "maybe param" "maybe type" "temp"
        (553352 'move' call_tmp[553349](41334 call _to_nonnil call_tmp[553344]))
        (456161 'move' ret[456151](456160 'deref' call_tmp[553349]))
        gotoReturn _end_borrow[456149] _end_borrow[456149]
      }
      {
        unknown call_tmp[553356] "expr temp" "maybe param" "maybe type" "temp"
        (553359 'move' call_tmp[553356](336297 call chpl_p _mt[232] this[41423]))
        unknown call_tmp[553361] "expr temp" "maybe param" "maybe type" "temp"
        (553364 'move' call_tmp[553361](41339 call postfix! call_tmp[553356]))
        (456166 'move' ret[456151](456165 'deref' call_tmp[553361]))
        gotoReturn _end_borrow[456149] _end_borrow[456149]
      }
    }
    label _end_borrow[456149]
    (456153 return ret[456151])
  }
  type _shared[41357](?) unknown chpl_t[40262] "no doc" "type variable" unknown chpl_p[40269] "no doc" "owned"(40268 'to nilable class' chpl_t[40262]) val chpl_pn[40284]:unmanaged ReferenceCount?[389761] "no doc" "owned" unmanaged ReferenceCount?[389761] forwarding ( )
  type managed _shared[389774](?)
  type managed _shared?[389770](?)
  function =[41434](ref arg lhs[41431]:_shared[41357](?), arg rhs[41437]:_shared[41357](?)) : _unknown[43] "assignop" "no return value for void"
  {
    unknown call_tmp[553368] "expr temp" "maybe param" "maybe type" "temp"
    (553371 'move' call_tmp[553368](41456 call chpl_pn _mt[232] rhs[41437]))
    unknown call_tmp[553373] "expr temp" "maybe param" "maybe type" "temp"
    (553376 'move' call_tmp[553373](41460 call != call_tmp[553368] nil[38]))
    unknown call_tmp[553378] "expr temp" "maybe param" "maybe type" "temp"
    (553381 'move' call_tmp[553378](41474 call _cond_test call_tmp[553373]))
    if call_tmp[553378]
    {
      unknown call_tmp[553385] "expr temp" "maybe param" "maybe type" "temp"
      (553388 'move' call_tmp[553385](41463 call chpl_pn _mt[232] rhs[41437]))
      unknown call_tmp[553390] "expr temp" "maybe param" "maybe type" "temp"
      (553393 'move' call_tmp[553390](41466 call postfix! call_tmp[553385]))
      (41472 call(41468 call (partial) retain _mt[232] call_tmp[553390]))
    }
    (41485 call(41481 call (partial) clear _mt[232] lhs[41431]))
    unknown call_tmp[553401] "expr temp" "maybe param" "maybe type" "temp"
    (553404 'move' call_tmp[553401](41488 call chpl_p _mt[232] lhs[41431]))
    unknown call_tmp[553408] "expr temp" "maybe param" "maybe type" "temp"
    (553411 'move' call_tmp[553408](41492 call chpl_p _mt[232] rhs[41437]))
    (41495 call = call_tmp[553401] call_tmp[553408])
    unknown call_tmp[553415] "expr temp" "maybe param" "maybe type" "temp"
    (553418 'move' call_tmp[553415](41499 call chpl_pn _mt[232] lhs[41431]))
    unknown call_tmp[553422] "expr temp" "maybe param" "maybe type" "temp"
    (553425 'move' call_tmp[553422](41503 call chpl_pn _mt[232] rhs[41437]))
    (41506 call = call_tmp[553415] call_tmp[553422])
    (456170 return _void[47])
  }
  where {
    unknown tmp[393810] "maybe param" "temp"
    (393821 'move' tmp[393810] 0)
    unknown call_tmp[553427] "expr temp" "maybe param" "maybe type" "temp"
    (553430 'move' call_tmp[553427](393823 call _cond_invalid tmp[393810]))
    if call_tmp[553427]
    {
      (393826 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[503136] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503137] "maybe param" "temp"
    unknown call_tmp[553432] "expr temp" "maybe param" "maybe type" "temp"
    (553435 'move' call_tmp[553432](393811 call isTrue tmp[393810]))
    (503142 'move' tmp[503137](503140 call _cond_test call_tmp[553432]))
    if tmp[503137]
    {
      (503147 'move' tmp[503136](503144 '_paramFoldLogical' tmp[503137] 1))
    }
    {
      unknown tmp[393831] "maybe param" "temp"
      (393842 'move' tmp[393831](41444 call isNonNilableClass lhs[41431]))
      unknown call_tmp[553437] "expr temp" "maybe param" "maybe type" "temp"
      (553440 'move' call_tmp[553437](393844 call _cond_invalid tmp[393831]))
      if call_tmp[553437]
      {
        (393847 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[503109] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[503110] "maybe param" "temp"
      unknown call_tmp[553442] "expr temp" "maybe param" "maybe type" "temp"
      (553445 'move' call_tmp[553442](393832 call isTrue tmp[393831]))
      (503115 'move' tmp[503110](503113 call _cond_test call_tmp[553442]))
      if tmp[503110]
      {
        unknown tmp[503117] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[553447] "expr temp" "maybe param" "maybe type" "temp"
        (553450 'move' call_tmp[553447](41448 call isNilableClass rhs[41437]))
        (503119 'move' tmp[503117](393835 call isTrue call_tmp[553447]))
        (503124 'move' tmp[503109](503121 '_paramFoldLogical' tmp[503110] tmp[503117]))
      }
      {
        (503129 'move' tmp[503109](503126 '_paramFoldLogical' tmp[503110] 0))
      }
      unknown tmp[503149] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[553452] "expr temp" "maybe param" "maybe type" "temp"
      (553455 'move' call_tmp[553452](41451 call ! tmp[503109]))
      (503151 'move' tmp[503149](393815 call isTrue call_tmp[553452]))
      (503156 'move' tmp[503136](503153 '_paramFoldLogical' tmp[503137] tmp[503149]))
    }
    (691767 call _statementLevelSymbol tmp[503136])
  }
  function =[41518](ref arg lhs[41515]:_shared[41357](?), in arg rhs[41521]:_owned[39039](?)) : _unknown[43] "assignop" "no return value for void"
  {
    unknown call_tmp[553461] "expr temp" "maybe param" "maybe type" "temp"
    (553464 'move' call_tmp[553461](41545 call(41541 call (partial) release _mt[232] rhs[41521])))
    (41547 call(41537 call (partial) retain _mt[232] lhs[41515]) call_tmp[553461])
    (456172 return _void[47])
  }
  where {
    unknown tmp[393852] "maybe param" "temp"
    (393863 'move' tmp[393852](41527 call isNonNilableClass lhs[41515]))
    unknown call_tmp[553466] "expr temp" "maybe param" "maybe type" "temp"
    (553469 'move' call_tmp[553466](393865 call _cond_invalid tmp[393852]))
    if call_tmp[553466]
    {
      (393868 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[503163] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503164] "maybe param" "temp"
    unknown call_tmp[553471] "expr temp" "maybe param" "maybe type" "temp"
    (553474 'move' call_tmp[553471](393853 call isTrue tmp[393852]))
    (503169 'move' tmp[503164](503167 call _cond_test call_tmp[553471]))
    if tmp[503164]
    {
      unknown tmp[503171] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[553476] "expr temp" "maybe param" "maybe type" "temp"
      (553479 'move' call_tmp[553476](41531 call isNilableClass rhs[41521]))
      (503173 'move' tmp[503171](393856 call isTrue call_tmp[553476]))
      (503178 'move' tmp[503163](503175 '_paramFoldLogical' tmp[503164] tmp[503171]))
    }
    {
      (503183 'move' tmp[503163](503180 '_paramFoldLogical' tmp[503164] 0))
    }
    (41534 call ! tmp[503163])
  }
  function =[41559](ref arg lhs[41556]:_shared[41357](?), arg rhs[41562]:_nilType[36]) : _unknown[43] "assignop" "no doc" "no return value for void"
  {
    (41579 call(41575 call (partial) clear _mt[232] lhs[41556]))
    (456174 return _void[47])
  }
  where {
    unknown tmp[393873] "maybe param" "temp"
    (393884 'move' tmp[393873] 0)
    unknown call_tmp[553483] "expr temp" "maybe param" "maybe type" "temp"
    (553486 'move' call_tmp[553483](393886 call _cond_invalid tmp[393873]))
    if call_tmp[553483]
    {
      (393889 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[503190] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503191] "maybe param" "temp"
    unknown call_tmp[553488] "expr temp" "maybe param" "maybe type" "temp"
    (553491 'move' call_tmp[553488](393874 call isTrue tmp[393873]))
    (503196 'move' tmp[503191](503194 call _cond_test call_tmp[553488]))
    if tmp[503191]
    {
      (503201 'move' tmp[503190](503198 '_paramFoldLogical' tmp[503191] 1))
    }
    {
      unknown tmp[503203] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[553493] "expr temp" "maybe param" "maybe type" "temp"
      (553496 'move' call_tmp[553493](41569 call isNonNilableClass lhs[41556]))
      unknown call_tmp[553498] "expr temp" "maybe param" "maybe type" "temp"
      (553501 'move' call_tmp[553498](41570 call ! call_tmp[553493]))
      (503205 'move' tmp[503203](393878 call isTrue call_tmp[553498]))
      (503210 'move' tmp[503190](503207 '_paramFoldLogical' tmp[503191] tmp[503203]))
    }
    (691769 call _statementLevelSymbol tmp[503190])
  }
  function <=>[41591](ref arg lhs[41588]:_shared[41357](?), ref arg rhs[41594]:_shared[41357](?)) : _unknown[43] "no return value for void"
  {
    unknown call_tmp[553505] "expr temp" "maybe param" "maybe type" "temp"
    (553508 'move' call_tmp[553505](41598 call chpl_pn _mt[232] lhs[41588]))
    unknown call_tmp[553512] "expr temp" "maybe param" "maybe type" "temp"
    (553515 'move' call_tmp[553512](41602 call chpl_pn _mt[232] rhs[41594]))
    (41605 call <=> call_tmp[553505] call_tmp[553512])
    unknown call_tmp[553519] "expr temp" "maybe param" "maybe type" "temp"
    (553522 'move' call_tmp[553519](41610 call chpl_p _mt[232] lhs[41588]))
    unknown call_tmp[553526] "expr temp" "maybe param" "maybe type" "temp"
    (553529 'move' call_tmp[553526](41614 call chpl_p _mt[232] rhs[41594]))
    (41617 call <=> call_tmp[553519] call_tmp[553526])
    (456176 return _void[47])
  }
  function chpl__autoDestroy[41628](ref arg x[41625]:_shared[41357](?)) : _unknown[43] "auto destroy fn" "no doc" "no return value for void"
  {
    unknown call_tmp[553531] "expr temp" "maybe param" "maybe type" "temp"
    (553534 'move' call_tmp[553531](41635 'deref' x[41625]))
    (41636 'call destructor' call_tmp[553531])
    (456178 return _void[47])
  }
  function _shared[41357](?).readWriteThis[41646](arg _mt[41651]:_MT[227], arg this[41648]:_shared[41357](?) :
  _shared[41357](?), arg f[41644]:_any[170](?)) : _unknown[43] "method" "no doc" "no return value for void"
  {
    unknown call_tmp[553538] "expr temp" "maybe param" "maybe type" "temp"
    (553541 'move' call_tmp[553538](41655 call chpl_p _mt[232] this[41648]))
    (41658 call <~> f[41644] call_tmp[553538])
    (456180 return _void[47])
  }
  function _cast[41670](arg t[41667]:borrowed[200](?), const  ref arg x[41673]:_shared[41357](?)) : _unknown[43] "inline" "no doc"
  {
    unknown ret[456184] "RVV" "temp"
    unknown call_tmp[553545] "expr temp" "maybe param" "maybe type" "temp"
    (553548 'move' call_tmp[553545](41691 call(41687 call (partial) borrow _mt[232] x[41673])))
    (456189 'move' ret[456184](456188 'deref' call_tmp[553545]))
    (456186 return ret[456184])
  }
  where {
    unknown call_tmp[553552] "expr temp" "maybe param" "maybe type" "temp"
    (553555 'move' call_tmp[553552](41680 call chpl_t _mt[232] x[41673]))
    (328436 'is_subtype' call_tmp[553552] t[41667])
  }
  function _cast[41707](arg t[41704]:managed _shared?[389770](?), in arg x[41712]:managed _shared[389774](?)) : _unknown[43] "inline" "no doc"
  {
    unknown ret[456193] "RVV" "temp"
    unknown call_tmp[553559] "expr temp" "maybe param" "maybe type" "temp"
    (553562 'move' call_tmp[553559](41734 call chpl_t _mt[232] t[41704]))
    unknown call_tmp[553564] "expr temp" "maybe param" "maybe type" "temp"
    (553567 'move' call_tmp[553564](41738 call _to_nilable call_tmp[553559]))
    unknown call_tmp[553569] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553572 'move' call_tmp[553569](691316 'new' _shared[41357](?) 1 call_tmp[553564] x[41712]))
    (456198 'move' ret[456193](456197 'deref' call_tmp[553569]))
    (456195 return ret[456193])
  }
  where {
    unknown call_tmp[553576] "expr temp" "maybe param" "maybe type" "temp"
    (553579 'move' call_tmp[553576](41723 call chpl_t _mt[232] t[41704]))
    unknown call_tmp[553581] "expr temp" "maybe param" "maybe type" "temp"
    (553584 'move' call_tmp[553581](41727 call _to_nonnil call_tmp[553576]))
    unknown call_tmp[553588] "expr temp" "maybe param" "maybe type" "temp"
    (553591 'move' call_tmp[553588](41717 call chpl_t _mt[232] x[41712]))
    (328437 'is_subtype' call_tmp[553581] call_tmp[553588])
  }
  function _cast[41757](arg t[41754]:managed _shared?[389770](?), in arg x[41763]:managed _shared?[389770](?)) : _unknown[43] "inline" "no doc"
  {
    unknown ret[456202] "RVV" "temp"
    unknown call_tmp[553595] "expr temp" "maybe param" "maybe type" "temp"
    (553598 'move' call_tmp[553595](41781 call chpl_t _mt[232] t[41754]))
    unknown call_tmp[553600] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553603 'move' call_tmp[553600](691317 'new' _shared[41357](?) 1 call_tmp[553595] x[41763]))
    (456207 'move' ret[456202](456206 'deref' call_tmp[553600]))
    (456204 return ret[456202])
  }
  where {
    unknown call_tmp[553607] "expr temp" "maybe param" "maybe type" "temp"
    (553610 'move' call_tmp[553607](41773 call chpl_t _mt[232] t[41754]))
    unknown call_tmp[553614] "expr temp" "maybe param" "maybe type" "temp"
    (553617 'move' call_tmp[553614](41768 call chpl_t _mt[232] x[41763]))
    (328438 'is_subtype' call_tmp[553607] call_tmp[553614])
  }
  function _cast[41801](arg t[41798]:managed _shared[389774](?), in arg x[41806]:managed _shared[389774](?)) : _unknown[43] "inline" "no doc"
  {
    unknown ret[456211] "RVV" "temp"
    unknown call_tmp[553621] "expr temp" "maybe param" "maybe type" "temp"
    (553624 'move' call_tmp[553621](41824 call chpl_t _mt[232] t[41798]))
    unknown call_tmp[553626] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553629 'move' call_tmp[553626](691318 'new' _shared[41357](?) 1 call_tmp[553621] x[41806]))
    (456216 'move' ret[456211](456215 'deref' call_tmp[553626]))
    (456213 return ret[456211])
  }
  where {
    unknown call_tmp[553633] "expr temp" "maybe param" "maybe type" "temp"
    (553636 'move' call_tmp[553633](41816 call chpl_t _mt[232] t[41798]))
    unknown call_tmp[553640] "expr temp" "maybe param" "maybe type" "temp"
    (553643 'move' call_tmp[553640](41811 call chpl_t _mt[232] x[41806]))
    (328439 'is_subtype' call_tmp[553633] call_tmp[553640])
  }
  function _cast[41844](arg t[41841]:managed _shared[389774](?), in arg x[41850]:managed _shared?[389770](?)) : _unknown[43] throws "inline" "no doc"
  {
    unknown ret[456220] "RVV" "temp"
    unknown call_tmp[553647] "expr temp" "maybe param" "maybe type" "temp"
    (553650 'move' call_tmp[553647](41868 call chpl_p _mt[232] x[41850]))
    unknown call_tmp[553652] "expr temp" "maybe param" "maybe type" "temp"
    (553655 'move' call_tmp[553652](41872 call == call_tmp[553647] nil[38]))
    unknown call_tmp[553657] "expr temp" "maybe param" "maybe type" "temp"
    (553660 'move' call_tmp[553657](41883 call _cond_test call_tmp[553652]))
    if call_tmp[553657]
    {
      unknown call_tmp[553662] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (553665 'move' call_tmp[553662](691319 'new' anymanaged NilClassError[333101](?)(_chpl_manager = _owned[39039](?))))
      unknown call_tmp[553667] "expr temp" "maybe param" "maybe type" "temp"
      (553670 'move' call_tmp[553667](442651 call chpl_fix_thrown_error call_tmp[553662]))
      (41880 'throw' call_tmp[553667])
    }
    unknown call_tmp[553674] "expr temp" "maybe param" "maybe type" "temp"
    (553677 'move' call_tmp[553674](41893 call chpl_t _mt[232] t[41841]))
    unknown call_tmp[553679] "expr temp" "maybe param" "maybe type" "temp"
    (553682 'move' call_tmp[553679](41897 call _to_nonnil call_tmp[553674]))
    unknown call_tmp[553684] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553687 'move' call_tmp[553684](691320 'new' _shared[41357](?) 1 call_tmp[553679] x[41850]))
    (456225 'move' ret[456220](456224 'deref' call_tmp[553684]))
    (456222 return ret[456220])
  }
  where {
    unknown call_tmp[553691] "expr temp" "maybe param" "maybe type" "temp"
    (553694 'move' call_tmp[553691](41863 call chpl_t _mt[232] t[41841]))
    unknown call_tmp[553698] "expr temp" "maybe param" "maybe type" "temp"
    (553701 'move' call_tmp[553698](41856 call chpl_t _mt[232] x[41850]))
    unknown call_tmp[553703] "expr temp" "maybe param" "maybe type" "temp"
    (553706 'move' call_tmp[553703](41860 call _to_nonnil call_tmp[553698]))
    (328440 'is_subtype' call_tmp[553691] call_tmp[553703])
  }
  function _cast[41914](arg t[41911]:managed _shared[389774](?), const  ref arg x[41920]:managed _shared?[389770](?)) : _unknown[43] throws "inline"
  {
    unknown ret[456229] "RVV" "temp"
    unknown call_tmp[553710] "expr temp" "maybe param" "maybe type" "temp"
    (553713 'move' call_tmp[553710](41938 call chpl_p _mt[232] x[41920]))
    unknown call_tmp[553715] "expr temp" "maybe param" "maybe type" "temp"
    (553718 'move' call_tmp[553715](41942 call == call_tmp[553710] nil[38]))
    unknown call_tmp[553720] "expr temp" "maybe param" "maybe type" "temp"
    (553723 'move' call_tmp[553720](41953 call _cond_test call_tmp[553715]))
    if call_tmp[553720]
    {
      unknown call_tmp[553725] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (553728 'move' call_tmp[553725](691321 'new' anymanaged NilClassError[333101](?)(_chpl_manager = _owned[39039](?))))
      unknown call_tmp[553730] "expr temp" "maybe param" "maybe type" "temp"
      (553733 'move' call_tmp[553730](442653 call chpl_fix_thrown_error call_tmp[553725]))
      (41950 'throw' call_tmp[553730])
    }
    unknown call_tmp[553737] "expr temp" "maybe param" "maybe type" "temp"
    (553740 'move' call_tmp[553737](41965 call chpl_t _mt[232] t[41911]))
    unknown call_tmp[553742] "expr temp" "maybe param" "maybe type" "temp"
    (553745 'move' call_tmp[553742](41969 call _to_unmanaged call_tmp[553737]))
    unknown call_tmp[553747] "expr temp" "maybe param" "maybe type" "temp"
    (553750 'move' call_tmp[553747](41971 call _to_nonnil call_tmp[553742]))
    unknown call_tmp[553754] "expr temp" "maybe param" "maybe type" "temp"
    (553757 'move' call_tmp[553754](41959 call chpl_p _mt[232] x[41920]))
    unknown call_tmp[553759] "maybe param" "maybe type" "temp"
    (553762 'move' call_tmp[553759](41972 call _cast call_tmp[553747] call_tmp[553754]))
    unknown p[41975] "insert auto destroy"
    (489084 'init var' p[41975] call_tmp[553759])
    unknown call_tmp[553764] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (553767 'move' call_tmp[553764](41983 'typeof' p[41975]))
    unknown call_tmp[553769] "expr temp" "maybe param" "maybe type" "temp"
    (553772 'move' call_tmp[553769](41985 call _to_borrowed call_tmp[553764]))
    unknown call_tmp[553776] "expr temp" "maybe param" "maybe type" "temp"
    (553779 'move' call_tmp[553776](41988 call chpl_pn _mt[232] x[41920]))
    unknown call_tmp[553781] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553784 'move' call_tmp[553781](691322 'new' _shared[41357](?) 1 call_tmp[553769] p[41975] call_tmp[553776]))
    (456234 'move' ret[456229](456233 'deref' call_tmp[553781]))
    (456231 return ret[456229])
  }
  where {
    unknown call_tmp[553788] "expr temp" "maybe param" "maybe type" "temp"
    (553791 'move' call_tmp[553788](41931 call chpl_t _mt[232] x[41920]))
    unknown call_tmp[553793] "expr temp" "maybe param" "maybe type" "temp"
    (553796 'move' call_tmp[553793](41935 call _to_nonnil call_tmp[553788]))
    unknown call_tmp[553800] "expr temp" "maybe param" "maybe type" "temp"
    (553803 'move' call_tmp[553800](41925 call chpl_t _mt[232] t[41911]))
    (328441 'is_proper_subtype' call_tmp[553793] call_tmp[553800])
  }
  function _cast[42006](arg t[42003]:managed _shared[389774](?), const  ref arg x[42011]:managed _shared[389774](?)) : _unknown[43] throws "inline"
  {
    unknown ret[456238] "RVV" "temp"
    unknown call_tmp[553807] "expr temp" "maybe param" "maybe type" "temp"
    (553810 'move' call_tmp[553807](42032 call chpl_t _mt[232] t[42003]))
    unknown call_tmp[553812] "expr temp" "maybe param" "maybe type" "temp"
    (553815 'move' call_tmp[553812](42036 call _to_unmanaged call_tmp[553807]))
    unknown call_tmp[553817] "expr temp" "maybe param" "maybe type" "temp"
    (553820 'move' call_tmp[553817](42038 call _to_nonnil call_tmp[553812]))
    unknown call_tmp[553824] "expr temp" "maybe param" "maybe type" "temp"
    (553827 'move' call_tmp[553824](42026 call chpl_p _mt[232] x[42011]))
    unknown call_tmp[553829] "maybe param" "maybe type" "temp"
    (553832 'move' call_tmp[553829](42039 call _cast call_tmp[553817] call_tmp[553824]))
    unknown p[42042] "insert auto destroy"
    (489086 'init var' p[42042] call_tmp[553829])
    unknown call_tmp[553834] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (553837 'move' call_tmp[553834](42051 'typeof' p[42042]))
    unknown call_tmp[553839] "expr temp" "maybe param" "maybe type" "temp"
    (553842 'move' call_tmp[553839](42053 call _to_borrowed call_tmp[553834]))
    unknown call_tmp[553846] "expr temp" "maybe param" "maybe type" "temp"
    (553849 'move' call_tmp[553846](42056 call chpl_pn _mt[232] x[42011]))
    unknown call_tmp[553851] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553854 'move' call_tmp[553851](691323 'new' _shared[41357](?) 1 call_tmp[553839] p[42042] call_tmp[553846]))
    (456243 'move' ret[456238](456242 'deref' call_tmp[553851]))
    (456240 return ret[456238])
  }
  where {
    unknown call_tmp[553858] "expr temp" "maybe param" "maybe type" "temp"
    (553861 'move' call_tmp[553858](42021 call chpl_t _mt[232] x[42011]))
    unknown call_tmp[553865] "expr temp" "maybe param" "maybe type" "temp"
    (553868 'move' call_tmp[553865](42016 call chpl_t _mt[232] t[42003]))
    (328442 'is_proper_subtype' call_tmp[553858] call_tmp[553865])
  }
  function _cast[42075](arg t[42072]:managed _shared?[389770](?), const  ref arg x[42081]:managed _shared?[389770](?)) : _unknown[43] "inline"
  {
    unknown ret[456247] "RVV" "temp"
    unknown call_tmp[553872] "expr temp" "maybe param" "maybe type" "temp"
    (553875 'move' call_tmp[553872](42102 call chpl_t _mt[232] t[42072]))
    unknown call_tmp[553877] "expr temp" "maybe param" "maybe type" "temp"
    (553880 'move' call_tmp[553877](42106 call _to_unmanaged call_tmp[553872]))
    unknown call_tmp[553882] "expr temp" "maybe param" "maybe type" "temp"
    (553885 'move' call_tmp[553882](42108 call _to_nilable call_tmp[553877]))
    unknown call_tmp[553889] "expr temp" "maybe param" "maybe type" "temp"
    (553892 'move' call_tmp[553889](42096 call chpl_p _mt[232] x[42081]))
    unknown call_tmp[553894] "maybe param" "maybe type" "temp"
    (553897 'move' call_tmp[553894](42109 call _cast call_tmp[553882] call_tmp[553889]))
    unknown p[42111] "insert auto destroy"
    (489088 'init var' p[42111] call_tmp[553894])
    unknown call_tmp[553899] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (553902 'move' call_tmp[553899](42120 'typeof' p[42111]))
    unknown call_tmp[553904] "expr temp" "maybe param" "maybe type" "temp"
    (553907 'move' call_tmp[553904](42122 call _to_borrowed call_tmp[553899]))
    unknown call_tmp[553911] "expr temp" "maybe param" "maybe type" "temp"
    (553914 'move' call_tmp[553911](42125 call chpl_pn _mt[232] x[42081]))
    unknown call_tmp[553916] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553919 'move' call_tmp[553916](691324 'new' _shared[41357](?) 1 call_tmp[553904] p[42111] call_tmp[553911]))
    (456252 'move' ret[456247](456251 'deref' call_tmp[553916]))
    (456249 return ret[456247])
  }
  where {
    unknown call_tmp[553923] "expr temp" "maybe param" "maybe type" "temp"
    (553926 'move' call_tmp[553923](42091 call chpl_t _mt[232] x[42081]))
    unknown call_tmp[553930] "expr temp" "maybe param" "maybe type" "temp"
    (553933 'move' call_tmp[553930](42086 call chpl_t _mt[232] t[42072]))
    (328443 'is_proper_subtype' call_tmp[553923] call_tmp[553930])
  }
  function _cast[42144](arg t[42141]:managed _shared?[389770](?), const  ref arg x[42149]:managed _shared[389774](?)) : _unknown[43] "inline"
  {
    unknown ret[456256] "RVV" "temp"
    unknown call_tmp[553937] "expr temp" "maybe param" "maybe type" "temp"
    (553940 'move' call_tmp[553937](42173 call chpl_t _mt[232] t[42141]))
    unknown call_tmp[553942] "expr temp" "maybe param" "maybe type" "temp"
    (553945 'move' call_tmp[553942](42177 call _to_unmanaged call_tmp[553937]))
    unknown call_tmp[553947] "expr temp" "maybe param" "maybe type" "temp"
    (553950 'move' call_tmp[553947](42179 call _to_nilable call_tmp[553942]))
    unknown call_tmp[553954] "expr temp" "maybe param" "maybe type" "temp"
    (553957 'move' call_tmp[553954](42167 call chpl_p _mt[232] x[42149]))
    unknown call_tmp[553959] "maybe param" "maybe type" "temp"
    (553962 'move' call_tmp[553959](42180 call _cast call_tmp[553947] call_tmp[553954]))
    unknown p[42182] "insert auto destroy"
    (489090 'init var' p[42182] call_tmp[553959])
    unknown call_tmp[553964] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (553967 'move' call_tmp[553964](42191 'typeof' p[42182]))
    unknown call_tmp[553969] "expr temp" "maybe param" "maybe type" "temp"
    (553972 'move' call_tmp[553969](42193 call _to_borrowed call_tmp[553964]))
    unknown call_tmp[553976] "expr temp" "maybe param" "maybe type" "temp"
    (553979 'move' call_tmp[553976](42196 call chpl_pn _mt[232] x[42149]))
    unknown call_tmp[553981] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (553984 'move' call_tmp[553981](691325 'new' _shared[41357](?) 1 call_tmp[553969] p[42182] call_tmp[553976]))
    (456261 'move' ret[456256](456260 'deref' call_tmp[553981]))
    (456258 return ret[456256])
  }
  where {
    unknown call_tmp[553988] "expr temp" "maybe param" "maybe type" "temp"
    (553991 'move' call_tmp[553988](42160 call chpl_t _mt[232] x[42149]))
    unknown call_tmp[553993] "expr temp" "maybe param" "maybe type" "temp"
    (553996 'move' call_tmp[553993](42164 call _to_nilable call_tmp[553988]))
    unknown call_tmp[554000] "expr temp" "maybe param" "maybe type" "temp"
    (554003 'move' call_tmp[554000](42154 call chpl_t _mt[232] t[42141]))
    (328444 'is_proper_subtype' call_tmp[553993] call_tmp[554000])
  }
  function _cast[42212](arg t[42209]:_shared[41357](?), arg x[42215]:_nilType[36]) : _unknown[43] "inline" "no doc"
  {
    unknown ret[456265] "RVV" "temp"
    unknown tmp[393894] "maybe param" "temp"
    unknown call_tmp[554007] "expr temp" "maybe param" "maybe type" "temp"
    (554010 'move' call_tmp[554007](42220 call chpl_t _mt[232] t[42209]))
    unknown call_tmp[554012] "expr temp" "maybe param" "maybe type" "temp"
    (554015 'move' call_tmp[554012](42224 call _to_nilable call_tmp[554007]))
    unknown call_tmp[554019] "expr temp" "maybe param" "maybe type" "temp"
    (554022 'move' call_tmp[554019](42226 call chpl_t _mt[232] t[42209]))
    (393905 'move' tmp[393894](42229 call != call_tmp[554012] call_tmp[554019]))
    unknown call_tmp[554024] "expr temp" "maybe param" "maybe type" "temp"
    (554027 'move' call_tmp[554024](393907 call _cond_invalid tmp[393894]))
    if call_tmp[554024]
    {
      (393910 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[503217] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[503218] "maybe param" "temp"
    unknown call_tmp[554029] "expr temp" "maybe param" "maybe type" "temp"
    (554032 'move' call_tmp[554029](393895 call isTrue tmp[393894]))
    (503223 'move' tmp[503218](503221 call _cond_test call_tmp[554029]))
    if tmp[503218]
    {
      unknown tmp[503225] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[554034] "expr temp" "maybe param" "maybe type" "temp"
      (554037 'move' call_tmp[554034](42232 call ! 0))
      (503227 'move' tmp[503225](393898 call isTrue call_tmp[554034]))
      (503232 'move' tmp[503217](503229 '_paramFoldLogical' tmp[503218] tmp[503225]))
    }
    {
      (503237 'move' tmp[503217](503234 '_paramFoldLogical' tmp[503218] 0))
    }
    unknown call_tmp[554039] "expr temp" "maybe param" "maybe type" "temp"
    (554042 'move' call_tmp[554039](42256 call _cond_test tmp[503217]))
    if call_tmp[554039]
    {
      (42254 call compilerError "Illegal cast from nil to non-nilable shared type")
    }
    unknown tmp[42263] "insert auto destroy"
    (489092 'default init var' tmp[42263] t[42209])
    (456270 'move' ret[456265](456269 'deref' tmp[42263]))
    (456267 return ret[456265])
  }
  function postfix![42277](arg x[42274]:_shared[41357](?)) : _unknown[43] "always propagate line file info" "inline" "no doc"
  {
    unknown ret[456274] "RVV" "temp"
    unknown call_tmp[554044] "expr temp" "maybe param" "maybe type" "temp"
    (554047 'move' call_tmp[554044](42324 call _cond_test 1))
    if call_tmp[554044]
    {
      unknown call_tmp[554051] "expr temp" "maybe param" "maybe type" "temp"
      (554054 'move' call_tmp[554051](42287 call chpl_t _mt[232] x[42274]))
      unknown call_tmp[554056] "expr temp" "maybe param" "maybe type" "temp"
      (554059 'move' call_tmp[554056](42291 call _to_nilable call_tmp[554051]))
      unknown call_tmp[554063] "expr temp" "maybe param" "maybe type" "temp"
      (554066 'move' call_tmp[554063](42293 call chpl_t _mt[232] x[42274]))
      unknown call_tmp[554068] "expr temp" "maybe param" "maybe type" "temp"
      (554071 'move' call_tmp[554068](42296 call == call_tmp[554056] call_tmp[554063]))
      unknown call_tmp[554073] "expr temp" "maybe param" "maybe type" "temp"
      (554076 'move' call_tmp[554073](42319 call _cond_test call_tmp[554068]))
      if call_tmp[554073]
      {
        unknown call_tmp[554080] "expr temp" "maybe param" "maybe type" "temp"
        (554083 'move' call_tmp[554080](42299 call chpl_p _mt[232] x[42274]))
        unknown call_tmp[554085] "expr temp" "maybe param" "maybe type" "temp"
        (554088 'move' call_tmp[554085](42303 call == call_tmp[554080] nil[38]))
        unknown call_tmp[554090] "expr temp" "maybe param" "maybe type" "temp"
        (554093 'move' call_tmp[554090](42314 call _cond_test call_tmp[554085]))
        if call_tmp[554090]
        {
          (42311 call nilCheckHalt module=[244] HaltWrappers[197622] "argument to ! is nil")
        }
      }
    }
    unknown call_tmp[554097] "expr temp" "maybe param" "maybe type" "temp"
    (554100 'move' call_tmp[554097](42330 call chpl_p _mt[232] x[42274]))
    unknown call_tmp[554102] "expr temp" "maybe param" "maybe type" "temp"
    (554105 'move' call_tmp[554102](42334 call _to_nonnil call_tmp[554097]))
    (456279 'move' ret[456274](456278 'deref' call_tmp[554102]))
    (456276 return ret[456274])
    (329319 'used modules list'(42281 'use' HaltWrappers[197622] 'only' ))
  }
  (329317 'used modules list'(40171 'use' OwnedObject[38104]))
}