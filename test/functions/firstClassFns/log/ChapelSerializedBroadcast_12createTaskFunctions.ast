AST dump for ChapelSerializedBroadcast after pass createTaskFunctions.
Module use list: ChapelLocale CPtr 

{
  function chpl__init_ChapelSerializedBroadcast[390249]() : void[4] "insert line file info" "module init"
  {
    (492888 'init var' chpl__enableSerializedGlobals[169599] 1)
    (472997 return _void[47])
  }
  unknown chpl__enableSerializedGlobals[169599] "config" "param"
  function chpl_get_global_serialize_table[169608](arg idx[169605]:int(64)[13]) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
  {
    unknown ret[472989] "RVV" "temp"
    (472991 return ret[472989])
  }
  { scopeless type
    c_void_ptr[141]
  }
  function chpl__broadcastGlobal[169621](ref arg localeZeroGlobal[169618]:_any[170](?), arg id[169624]:int(64)[13]) : _unknown[43] "no return value for void"
  {
    unknown tmp[403953] "maybe param" "temp"
    (403964 'move' tmp[403953](169631 call isArray localeZeroGlobal[169618]))
    unknown call_tmp[629892] "expr temp" "maybe param" "maybe type" "temp"
    (629895 'move' call_tmp[629892](403966 call _cond_invalid tmp[403953]))
    if call_tmp[629892]
    {
      (403969 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[519264] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[519265] "maybe param" "temp"
    unknown call_tmp[629897] "expr temp" "maybe param" "maybe type" "temp"
    (629900 'move' call_tmp[629897](403954 call isTrue tmp[403953]))
    (519270 'move' tmp[519265](519268 call _cond_test call_tmp[629897]))
    if tmp[519265]
    {
      unknown tmp[519272] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[629902] "expr temp" "maybe param" "maybe type" "temp"
      (629905 'move' call_tmp[629902](169635 call chpl__isArrayView localeZeroGlobal[169618]))
      (519274 'move' tmp[519272](403957 call isTrue call_tmp[629902]))
      (519279 'move' tmp[519264](519276 '_paramFoldLogical' tmp[519265] tmp[519272]))
    }
    {
      (519284 'move' tmp[519264](519281 '_paramFoldLogical' tmp[519265] 0))
    }
    unknown call_tmp[629907] "expr temp" "maybe param" "maybe type" "temp"
    (629910 'move' call_tmp[629907](169948 call _cond_test tmp[519264]))
    if call_tmp[629907]
    {
      (169656 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      unknown call_tmp[629914] "maybe param" "maybe type" "temp"
      (629917 'move' call_tmp[629914](169664 call(169660 call (partial) chpl__serialize _mt[232] localeZeroGlobal[169618])))
      const data[169665] "const" "insert auto destroy"
      (492890 'init var' data[169665] call_tmp[629914])
      unknown call_tmp[629919] "expr temp" "maybe param" "maybe type" "temp"
      (629922 'move' call_tmp[629919](360087 call here[92085]))
      unknown call_tmp[629926] "maybe param" "maybe type" "temp"
      (629929 'move' call_tmp[629926](169670 call id _mt[232] call_tmp[629919]))
      const root[169673] "const" "insert auto destroy"
      (492892 'init var' root[169673] call_tmp[629926])
      {
        unknown tmpIter[169740] "expr temp" "maybe ref" "no copy" "temp"
        (169743 'move' tmpIter[169740] Locales[111767])
        unknown isRngDomArr[169929] "maybe param" "temp"
        unknown tmp[403911] "maybe param" "temp"
        (403922 'move' tmp[403911](169931 call isBoundedRange tmpIter[169740]))
        unknown call_tmp[629931] "expr temp" "maybe param" "maybe type" "temp"
        (629934 'move' call_tmp[629931](403924 call _cond_invalid tmp[403911]))
        if call_tmp[629931]
        {
          (403927 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[519318] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[519319] "maybe param" "temp"
        unknown call_tmp[629936] "expr temp" "maybe param" "maybe type" "temp"
        (629939 'move' call_tmp[629936](403912 call isTrue tmp[403911]))
        (519324 'move' tmp[519319](519322 call _cond_test call_tmp[629936]))
        if tmp[519319]
        {
          (519329 'move' tmp[519318](519326 '_paramFoldLogical' tmp[519319] 1))
        }
        {
          unknown tmp[403932] "maybe param" "temp"
          (403943 'move' tmp[403932](169934 call isDomain tmpIter[169740]))
          unknown call_tmp[629941] "expr temp" "maybe param" "maybe type" "temp"
          (629944 'move' call_tmp[629941](403945 call _cond_invalid tmp[403932]))
          if call_tmp[629941]
          {
            (403948 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[519291] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[519292] "maybe param" "temp"
          unknown call_tmp[629946] "expr temp" "maybe param" "maybe type" "temp"
          (629949 'move' call_tmp[629946](403933 call isTrue tmp[403932]))
          (519297 'move' tmp[519292](519295 call _cond_test call_tmp[629946]))
          if tmp[519292]
          {
            (519302 'move' tmp[519291](519299 '_paramFoldLogical' tmp[519292] 1))
          }
          {
            unknown tmp[519304] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[629951] "expr temp" "maybe param" "maybe type" "temp"
            (629954 'move' call_tmp[629951](169937 call isArray tmpIter[169740]))
            (519306 'move' tmp[519304](403937 call isTrue call_tmp[629951]))
            (519311 'move' tmp[519291](519308 '_paramFoldLogical' tmp[519292] tmp[519304]))
          }
          unknown tmp[519331] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (519333 'move' tmp[519331](403916 call isTrue tmp[519291]))
          (519338 'move' tmp[519318](519335 '_paramFoldLogical' tmp[519319] tmp[519331]))
        }
        (169944 'move' isRngDomArr[169929] tmp[519318])
        if isRngDomArr[169929]
        {
          const _coforallCount[169796] "const" "end count" "temp"
          (169865 'move' _coforallCount[169796](169862 call _endCountAlloc 1))
          unknown numTasks[169797] "temp"
          (169849 'move' numTasks[169797](169845 call size _mt[232] tmpIter[169740]))
          (169840 call _upEndCount _coforallCount[169796] 1 numTasks[169797])
          (169837 call chpl_resetTaskSpawn numTasks[169797])
          unknown _indexOfInterest[169804] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[169805] "expr temp" "temp"
          (169814 'move' _iterator[169805](169812 call _getIterator tmpIter[169740]))
          Defer
          {
            {
              (169830 call _freeIterator _iterator[169805])
            }
          }
          { scopeless type
            (169819 'move' _indexOfInterest[169804](169816 call iteratorIndex _iterator[169805]))
          }
          ForLoop
          {
            unknown loc[169823] "coforall index var" "index var" "insert auto destroy"
            (169825 'move' loc[169823] _indexOfInterest[169804])
            (767449 call coforall_fn[767447] root[169673] localeZeroGlobal[169618] data[169665] id[169624])
            function coforall_fn[767447](arg root[767454], arg localeZeroGlobal[767457]:_any[170](?), arg data[767460], arg id[767463]:int(64)[13]) : void[4] "cobegin or coforall"
            {
              {
                const tmp[169746] "const" "temp"
                unknown call_tmp[629958] "expr temp" "maybe param" "maybe type" "temp"
                (629961 'move' call_tmp[629958](169751 '_wide_get_locale' loc[169823]))
                (169748 'move' tmp[169746](169750 'deref' call_tmp[629958]))
                {
                  unknown call_tmp[629963] "expr temp" "maybe param" "maybe type" "temp"
                  (629966 'move' call_tmp[629963](360103 call here[92085]))
                  unknown call_tmp[629970] "expr temp" "maybe param" "maybe type" "temp"
                  (629973 'move' call_tmp[629970](169759 call id _mt[232] call_tmp[629963]))
                  unknown call_tmp[629975] "expr temp" "maybe param" "maybe type" "temp"
                  (629978 'move' call_tmp[629975](169757 call != call_tmp[629970] root[767454]))
                  unknown call_tmp[629980] "expr temp" "maybe param" "maybe type" "temp"
                  (629983 'move' call_tmp[629980](169755 call _cond_test call_tmp[629975]))
                  if call_tmp[629980]
                  {
                    unknown call_tmp[629985] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (629988 'move' call_tmp[629985](169767 'typeof' localeZeroGlobal[767457]))
                    unknown call_tmp[629992] "maybe param" "maybe type" "temp"
                    (629995 'move' call_tmp[629992](169770 call(169766 call (partial) chpl__deserialize _mt[232] call_tmp[629985]) data[767460]))
                    unknown temp[169764] "no auto destroy" "no copy"
                    (492894 'init var' temp[169764] call_tmp[629992])
                    unknown call_tmp[629997] "maybe param" "maybe type" "temp"
                    (630000 'move' call_tmp[629997](169775 call chpl_get_global_serialize_table id[767463]))
                    const destVoidPtr[169773] "const" "insert auto destroy"
                    (492896 'init var' destVoidPtr[169773] call_tmp[629997])
                    unknown call_tmp[630002] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (630005 'move' call_tmp[630002](169783 'typeof' localeZeroGlobal[767457]))
                    unknown call_tmp[630007] "expr temp" "maybe param" "maybe type" "temp"
                    (630010 'move' call_tmp[630007](169782 call c_ptr[193070](?) call_tmp[630002]))
                    unknown call_tmp[630012] "maybe param" "maybe type" "temp"
                    (630015 'move' call_tmp[630012](169780 call _cast call_tmp[630007] destVoidPtr[169773]))
                    const dest[169778] "const" "insert auto destroy"
                    (492898 'init var' dest[169778] call_tmp[630012])
                    unknown call_tmp[630019] "expr temp" "maybe param" "maybe type" "temp"
                    (630022 'move' call_tmp[630019](169792 call(169789 call (partial) deref _mt[232] dest[169778])))
                    (169787 '=' call_tmp[630019] temp[169764])
                  }
                }
              }
              (169799 call _downEndCount _coforallCount[169796] nil[38])
              (767452 return _void[47])
            }
            {
            }
            label _continueLabel[169809]
            _indexOfInterest[169804]
            _iterator[169805]
          }
          label _breakLabel[169810]
          Defer
          {
            {
              (169852 call _endCountFree _coforallCount[169796])
            }
          }
          (169857 call _waitEndCount _coforallCount[169796] 1 numTasks[169797])
        }
        {
          const _coforallCount[169869] "const" "end count" "temp"
          (169926 'move' _coforallCount[169869](169923 call _endCountAlloc 1))
          unknown _indexOfInterest[169877] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[169878] "expr temp" "temp"
          (169887 'move' _iterator[169878](169885 call _getIterator tmpIter[169740]))
          Defer
          {
            {
              (169903 call _freeIterator _iterator[169878])
            }
          }
          { scopeless type
            (169892 'move' _indexOfInterest[169877](169889 call iteratorIndex _iterator[169878]))
          }
          ForLoop
          {
            unknown loc[169896] "coforall index var" "index var" "insert auto destroy"
            (169898 'move' loc[169896] _indexOfInterest[169877])
            (169910 call _upEndCount _coforallCount[169869] 1)
            (767468 call coforall_fn[767466] root[169673] localeZeroGlobal[169618] data[169665] id[169624])
            function coforall_fn[767466](arg root[767473], arg localeZeroGlobal[767476]:_any[170](?), arg data[767479], arg id[767482]:int(64)[13]) : void[4] "cobegin or coforall"
            {
              {
                const tmp[169735] "const" "temp"
                unknown call_tmp[630024] "expr temp" "maybe param" "maybe type" "temp"
                (630027 'move' call_tmp[630024](169732 '_wide_get_locale' loc[169896]))
                (169736 'move' tmp[169735](169733 'deref' call_tmp[630024]))
                {
                  unknown call_tmp[630029] "expr temp" "maybe param" "maybe type" "temp"
                  (630032 'move' call_tmp[630029](360091 call here[92085]))
                  unknown call_tmp[630036] "expr temp" "maybe param" "maybe type" "temp"
                  (630039 'move' call_tmp[630036](169680 call id _mt[232] call_tmp[630029]))
                  unknown call_tmp[630041] "expr temp" "maybe param" "maybe type" "temp"
                  (630044 'move' call_tmp[630041](169684 call != call_tmp[630036] root[767473]))
                  unknown call_tmp[630046] "expr temp" "maybe param" "maybe type" "temp"
                  (630049 'move' call_tmp[630046](169727 call _cond_test call_tmp[630041]))
                  if call_tmp[630046]
                  {
                    unknown call_tmp[630051] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (630054 'move' call_tmp[630051](169687 'typeof' localeZeroGlobal[767476]))
                    unknown call_tmp[630058] "maybe param" "maybe type" "temp"
                    (630061 'move' call_tmp[630058](169693 call(169688 call (partial) chpl__deserialize _mt[232] call_tmp[630051]) data[767479]))
                    unknown temp[169694] "no auto destroy" "no copy"
                    (492900 'init var' temp[169694] call_tmp[630058])
                    unknown call_tmp[630063] "maybe param" "maybe type" "temp"
                    (630066 'move' call_tmp[630063](169701 call chpl_get_global_serialize_table id[767482]))
                    const destVoidPtr[169702] "const" "insert auto destroy"
                    (492902 'init var' destVoidPtr[169702] call_tmp[630063])
                    unknown call_tmp[630068] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (630071 'move' call_tmp[630068](169708 'typeof' localeZeroGlobal[767476]))
                    unknown call_tmp[630073] "expr temp" "maybe param" "maybe type" "temp"
                    (630076 'move' call_tmp[630073](169710 call c_ptr[193070](?) call_tmp[630068]))
                    unknown call_tmp[630078] "maybe param" "maybe type" "temp"
                    (630081 'move' call_tmp[630078](169711 call _cast call_tmp[630073] destVoidPtr[169702]))
                    const dest[169713] "const" "insert auto destroy"
                    (492904 'init var' dest[169713] call_tmp[630078])
                    unknown call_tmp[630085] "expr temp" "maybe param" "maybe type" "temp"
                    (630088 'move' call_tmp[630085](169723 call(169719 call (partial) deref _mt[232] dest[169713])))
                    (169725 '=' call_tmp[630085] temp[169694])
                  }
                }
              }
              (169872 call _downEndCount _coforallCount[169869] nil[38])
              (767471 return _void[47])
            }
            {
            }
            label _continueLabel[169882]
            _indexOfInterest[169877]
            _iterator[169878]
          }
          label _breakLabel[169883]
          Defer
          {
            {
              (169914 call _endCountFree _coforallCount[169869])
            }
          }
          (169919 call _waitEndCount _coforallCount[169869] 1)
        }
      }
    }
    (472993 return _void[47])
  }
  where {
    (691687 call _statementLevelSymbol chpl__enableSerializedGlobals[169599])
  }
  function chpl__destroyBroadcastedGlobal[169960](ref arg localeZeroGlobal[169958]:_any[170](?), arg id[169963]:int(64)[13]) : _unknown[43] "no return value for void"
  {
    unknown globalType[169969] "insert auto destroy" "type variable"(169968 'typeof' localeZeroGlobal[169958])
    (492908 'move' globalType[169969](492906 'typeof' localeZeroGlobal[169958]))
    unknown call_tmp[630090] "expr temp" "maybe param" "maybe type" "temp"
    (630093 'move' call_tmp[630090](360116 call here[92085]))
    unknown call_tmp[630097] "maybe param" "maybe type" "temp"
    (630100 'move' call_tmp[630097](169974 call id _mt[232] call_tmp[630090]))
    const root[169977] "const" "insert auto destroy"
    (492910 'init var' root[169977] call_tmp[630097])
    {
      unknown tmpIter[170035] "expr temp" "maybe ref" "no copy" "temp"
      (170038 'move' tmpIter[170035] Locales[111767])
      unknown isRngDomArr[170217] "maybe param" "temp"
      unknown tmp[403974] "maybe param" "temp"
      (403985 'move' tmp[403974](170219 call isBoundedRange tmpIter[170035]))
      unknown call_tmp[630102] "expr temp" "maybe param" "maybe type" "temp"
      (630105 'move' call_tmp[630102](403987 call _cond_invalid tmp[403974]))
      if call_tmp[630102]
      {
        (403990 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[519372] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[519373] "maybe param" "temp"
      unknown call_tmp[630107] "expr temp" "maybe param" "maybe type" "temp"
      (630110 'move' call_tmp[630107](403975 call isTrue tmp[403974]))
      (519378 'move' tmp[519373](519376 call _cond_test call_tmp[630107]))
      if tmp[519373]
      {
        (519383 'move' tmp[519372](519380 '_paramFoldLogical' tmp[519373] 1))
      }
      {
        unknown tmp[403995] "maybe param" "temp"
        (404006 'move' tmp[403995](170222 call isDomain tmpIter[170035]))
        unknown call_tmp[630112] "expr temp" "maybe param" "maybe type" "temp"
        (630115 'move' call_tmp[630112](404008 call _cond_invalid tmp[403995]))
        if call_tmp[630112]
        {
          (404011 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[519345] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[519346] "maybe param" "temp"
        unknown call_tmp[630117] "expr temp" "maybe param" "maybe type" "temp"
        (630120 'move' call_tmp[630117](403996 call isTrue tmp[403995]))
        (519351 'move' tmp[519346](519349 call _cond_test call_tmp[630117]))
        if tmp[519346]
        {
          (519356 'move' tmp[519345](519353 '_paramFoldLogical' tmp[519346] 1))
        }
        {
          unknown tmp[519358] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[630122] "expr temp" "maybe param" "maybe type" "temp"
          (630125 'move' call_tmp[630122](170225 call isArray tmpIter[170035]))
          (519360 'move' tmp[519358](404000 call isTrue call_tmp[630122]))
          (519365 'move' tmp[519345](519362 '_paramFoldLogical' tmp[519346] tmp[519358]))
        }
        unknown tmp[519385] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (519387 'move' tmp[519385](403979 call isTrue tmp[519345]))
        (519392 'move' tmp[519372](519389 '_paramFoldLogical' tmp[519373] tmp[519385]))
      }
      (170232 'move' isRngDomArr[170217] tmp[519372])
      if isRngDomArr[170217]
      {
        const _coforallCount[170084] "const" "end count" "temp"
        (170153 'move' _coforallCount[170084](170150 call _endCountAlloc 1))
        unknown numTasks[170085] "temp"
        (170137 'move' numTasks[170085](170133 call size _mt[232] tmpIter[170035]))
        (170128 call _upEndCount _coforallCount[170084] 1 numTasks[170085])
        (170125 call chpl_resetTaskSpawn numTasks[170085])
        unknown _indexOfInterest[170092] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[170093] "expr temp" "temp"
        (170102 'move' _iterator[170093](170100 call _getIterator tmpIter[170035]))
        Defer
        {
          {
            (170118 call _freeIterator _iterator[170093])
          }
        }
        { scopeless type
          (170107 'move' _indexOfInterest[170092](170104 call iteratorIndex _iterator[170093]))
        }
        ForLoop
        {
          unknown loc[170111] "coforall index var" "index var" "insert auto destroy"
          (170113 'move' loc[170111] _indexOfInterest[170092])
          (767487 call coforall_fn[767485] root[169977] id[169963])
          function coforall_fn[767485](arg root[767492], arg id[767495]:int(64)[13]) : void[4] "cobegin or coforall"
          {
            {
              const tmp[170041] "const" "temp"
              unknown call_tmp[630129] "expr temp" "maybe param" "maybe type" "temp"
              (630132 'move' call_tmp[630129](170046 '_wide_get_locale' loc[170111]))
              (170043 'move' tmp[170041](170045 'deref' call_tmp[630129]))
              {
                unknown call_tmp[630134] "expr temp" "maybe param" "maybe type" "temp"
                (630137 'move' call_tmp[630134](360130 call here[92085]))
                unknown call_tmp[630141] "expr temp" "maybe param" "maybe type" "temp"
                (630144 'move' call_tmp[630141](170054 call id _mt[232] call_tmp[630134]))
                unknown call_tmp[630146] "expr temp" "maybe param" "maybe type" "temp"
                (630149 'move' call_tmp[630146](170052 call != call_tmp[630141] root[767492]))
                unknown call_tmp[630151] "expr temp" "maybe param" "maybe type" "temp"
                (630154 'move' call_tmp[630151](170050 call _cond_test call_tmp[630146]))
                if call_tmp[630151]
                {
                  unknown call_tmp[630156] "maybe param" "maybe type" "temp"
                  (630159 'move' call_tmp[630156](170061 call chpl_get_global_serialize_table id[767495]))
                  const voidPtr[170059] "const" "insert auto destroy"
                  (492912 'init var' voidPtr[170059] call_tmp[630156])
                  unknown call_tmp[630161] "expr temp" "maybe param" "maybe type" "temp"
                  (630164 'move' call_tmp[630161](170068 call c_ptr[193070](?) globalType[169969]))
                  unknown call_tmp[630166] "maybe param" "maybe type" "temp"
                  (630169 'move' call_tmp[630166](170066 call _cast call_tmp[630161] voidPtr[170059]))
                  unknown ptr[170064] "insert auto destroy"
                  (492914 'init var' ptr[170064] call_tmp[630166])
                  unknown call_tmp[630173] "maybe param" "maybe type" "temp"
                  (630176 'move' call_tmp[630173](170077 call(170074 call (partial) deref _mt[232] ptr[170064])))
                  unknown temp[170072] "no auto destroy" "no copy"
                  (492916 'init var' temp[170072] call_tmp[630173])
                  (170080 call chpl__autoDestroy temp[170072])
                }
              }
            }
            (170087 call _downEndCount _coforallCount[170084] nil[38])
            (767490 return _void[47])
          }
          {
          }
          label _continueLabel[170097]
          _indexOfInterest[170092]
          _iterator[170093]
        }
        label _breakLabel[170098]
        Defer
        {
          {
            (170140 call _endCountFree _coforallCount[170084])
          }
        }
        (170145 call _waitEndCount _coforallCount[170084] 1 numTasks[170085])
      }
      {
        const _coforallCount[170157] "const" "end count" "temp"
        (170214 'move' _coforallCount[170157](170211 call _endCountAlloc 1))
        unknown _indexOfInterest[170165] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[170166] "expr temp" "temp"
        (170175 'move' _iterator[170166](170173 call _getIterator tmpIter[170035]))
        Defer
        {
          {
            (170191 call _freeIterator _iterator[170166])
          }
        }
        { scopeless type
          (170180 'move' _indexOfInterest[170165](170177 call iteratorIndex _iterator[170166]))
        }
        ForLoop
        {
          unknown loc[170184] "coforall index var" "index var" "insert auto destroy"
          (170186 'move' loc[170184] _indexOfInterest[170165])
          (170198 call _upEndCount _coforallCount[170157] 1)
          (767500 call coforall_fn[767498] root[169977] id[169963])
          function coforall_fn[767498](arg root[767505], arg id[767508]:int(64)[13]) : void[4] "cobegin or coforall"
          {
            {
              const tmp[170030] "const" "temp"
              unknown call_tmp[630178] "expr temp" "maybe param" "maybe type" "temp"
              (630181 'move' call_tmp[630178](170027 '_wide_get_locale' loc[170184]))
              (170031 'move' tmp[170030](170028 'deref' call_tmp[630178]))
              {
                unknown call_tmp[630183] "expr temp" "maybe param" "maybe type" "temp"
                (630186 'move' call_tmp[630183](360120 call here[92085]))
                unknown call_tmp[630190] "expr temp" "maybe param" "maybe type" "temp"
                (630193 'move' call_tmp[630190](169984 call id _mt[232] call_tmp[630183]))
                unknown call_tmp[630195] "expr temp" "maybe param" "maybe type" "temp"
                (630198 'move' call_tmp[630195](169988 call != call_tmp[630190] root[767505]))
                unknown call_tmp[630200] "expr temp" "maybe param" "maybe type" "temp"
                (630203 'move' call_tmp[630200](170022 call _cond_test call_tmp[630195]))
                if call_tmp[630200]
                {
                  unknown call_tmp[630205] "maybe param" "maybe type" "temp"
                  (630208 'move' call_tmp[630205](169993 call chpl_get_global_serialize_table id[767508]))
                  const voidPtr[169994] "const" "insert auto destroy"
                  (492918 'init var' voidPtr[169994] call_tmp[630205])
                  unknown call_tmp[630210] "expr temp" "maybe param" "maybe type" "temp"
                  (630213 'move' call_tmp[630210](170002 call c_ptr[193070](?) globalType[169969]))
                  unknown call_tmp[630215] "maybe param" "maybe type" "temp"
                  (630218 'move' call_tmp[630215](170003 call _cast call_tmp[630210] voidPtr[169994]))
                  unknown ptr[170005] "insert auto destroy"
                  (492920 'init var' ptr[170005] call_tmp[630215])
                  unknown call_tmp[630222] "maybe param" "maybe type" "temp"
                  (630225 'move' call_tmp[630222](170013 call(170009 call (partial) deref _mt[232] ptr[170005])))
                  unknown temp[170014] "no auto destroy" "no copy"
                  (492922 'init var' temp[170014] call_tmp[630222])
                  (170020 call chpl__autoDestroy temp[170014])
                }
              }
            }
            (170160 call _downEndCount _coforallCount[170157] nil[38])
            (767503 return _void[47])
          }
          {
          }
          label _continueLabel[170170]
          _indexOfInterest[170165]
          _iterator[170166]
        }
        label _breakLabel[170171]
        Defer
        {
          {
            (170202 call _endCountFree _coforallCount[170157])
          }
        }
        (170207 call _waitEndCount _coforallCount[170157] 1)
      }
    }
    (472995 return _void[47])
  }
  where {
    (691689 call _statementLevelSymbol chpl__enableSerializedGlobals[169599])
  }
  (329447 'used modules list'(169591 'use' ChapelLocale[90191])(169596 'use' CPtr[192958]))
}