AST dump for DefaultRectangular after pass createTaskFunctions.
Module use list: DSIUtil ChapelArray ChapelDistribution ChapelRange SysBasic SysError ChapelDebugPrint ChapelLocks OwnedObject IO DefaultSparse DefaultAssociative DefaultOpaque ExternalArray RangeChunk 

{
  function chpl__init_DefaultRectangular[390204]() : void[4] "insert line file info" "module init"
  {
    (581462 'move' call_tmp[581459](490302 call chpl_config_has_value c"dataParTasksPerLocale" c"Built-in"))
    (581467 'move' call_tmp[581464](490305 call ! call_tmp[581459]))
    if call_tmp[581464]
    {
      (490300 'noop')
      (490321 'init var' tmp[490295] 0)
    }
    {
      unknown call_tmp[581469] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (581472 'move' call_tmp[581469](490309 'typeof' tmp[490295]))
      unknown call_tmp[581474] "expr temp" "maybe param" "maybe type" "temp"
      (581477 'move' call_tmp[581474](490312 call chpl_config_get_value c"dataParTasksPerLocale" c"Built-in"))
      (490317 'move' tmp[490295](490315 call _command_line_cast c"dataParTasksPerLocale" call_tmp[581469] call_tmp[581474]))
    }
    (490297 'move' dataParTasksPerLocale[92471] tmp[490295])
    (581482 'move' call_tmp[581479](490330 call chpl_config_has_value c"dataParIgnoreRunningTasks" c"Built-in"))
    (581487 'move' call_tmp[581484](490333 call ! call_tmp[581479]))
    if call_tmp[581484]
    {
      (490328 'noop')
      (490349 'init var' tmp[490323] 0)
    }
    {
      unknown call_tmp[581489] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (581492 'move' call_tmp[581489](490337 'typeof' tmp[490323]))
      unknown call_tmp[581494] "expr temp" "maybe param" "maybe type" "temp"
      (581497 'move' call_tmp[581494](490340 call chpl_config_get_value c"dataParIgnoreRunningTasks" c"Built-in"))
      (490345 'move' tmp[490323](490343 call _command_line_cast c"dataParIgnoreRunningTasks" call_tmp[581489] call_tmp[581494]))
    }
    (490325 'move' dataParIgnoreRunningTasks[92476] tmp[490323])
    (581502 'move' call_tmp[581499](490358 call chpl_config_has_value c"dataParMinGranularity" c"Built-in"))
    (581507 'move' call_tmp[581504](490361 call ! call_tmp[581499]))
    if call_tmp[581504]
    {
      (490356 'noop')
      (490377 'init var' tmp[490351] 1 int(64)[13])
    }
    {
      unknown call_tmp[581509] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (581512 'move' call_tmp[581509](490365 'typeof' tmp[490351]))
      unknown call_tmp[581514] "expr temp" "maybe param" "maybe type" "temp"
      (581517 'move' call_tmp[581514](490368 call chpl_config_get_value c"dataParMinGranularity" c"Built-in"))
      (490373 'move' tmp[490351](490371 call _command_line_cast c"dataParMinGranularity" call_tmp[581509] call_tmp[581514]))
    }
    (490353 'move' dataParMinGranularity[92481] tmp[490351])
    (581522 'move' call_tmp[581519](92486 call < dataParTasksPerLocale[92471] 0))
    (581527 'move' call_tmp[581524](92508 call _cond_test call_tmp[581519]))
    if call_tmp[581524]
    {
      (92506 call halt "dataParTasksPerLocale must be >= 0")
    }
    (581532 'move' call_tmp[581529](92515 call <= dataParMinGranularity[92481] 0))
    (581537 'move' call_tmp[581534](92537 call _cond_test call_tmp[581529]))
    if call_tmp[581534]
    {
      (92535 call halt "dataParMinGranularity must be > 0")
    }
    (490379 'init var' debugDefaultDist[92581] 0)
    (490381 'init var' debugDefaultDistBulkTransfer[92585] 0)
    (490383 'init var' debugDataPar[92589] 0)
    (490385 'init var' debugDataParNuma[92593] 0)
    (490387 'init var' defaultDoRADOpt[92597] 1)
    (490389 'init var' defaultDisableLazyRADOpt[92601] 0)
    (490391 'init var' earlyShiftData[92605] 1)
    (490393 'init var' usePollyArrayIndex[92609] 0)
    (490395 'init var' defaultStorageOrder[92626] RMO[92613])
    (490397 'init var' storageOrder[92630] defaultStorageOrder[92626])
    (581741 'move' call_tmp[581738](691383 'new' anymanaged DefaultDist[345861](?)(_chpl_manager = unmanaged[209](?))))
    (581746 'move' call_tmp[581743](93212 call chpl__buildDistValue call_tmp[581738]))
    (490425 'init var' defaultDist[93214] call_tmp[581743])
    (491062 'init var' debugDRScan[110659] 0)
    (466415 return _void[47])
  }
  unknown tmp[490295] "temp"
  const dataParTasksPerLocale[92471] "config" "const" "insert auto destroy"
  unknown call_tmp[581459] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581464] "expr temp" "maybe param" "maybe type" "temp"
  unknown tmp[490323] "temp"
  const dataParIgnoreRunningTasks[92476] "config" "const" "insert auto destroy"
  unknown call_tmp[581479] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581484] "expr temp" "maybe param" "maybe type" "temp"
  unknown tmp[490351] "temp"
  const dataParMinGranularity[92481] "config" "const" "insert auto destroy"
  unknown call_tmp[581499] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581504] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581519] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581524] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581529] "expr temp" "maybe param" "maybe type" "temp"
  unknown call_tmp[581534] "expr temp" "maybe param" "maybe type" "temp"
  unknown debugDefaultDist[92581] "config" "param"
  unknown debugDefaultDistBulkTransfer[92585] "config" "param"
  unknown debugDataPar[92589] "config" "param"
  unknown debugDataParNuma[92593] "config" "param"
  unknown defaultDoRADOpt[92597] "config" "param"
  unknown defaultDisableLazyRADOpt[92601] "config" "param"
  unknown earlyShiftData[92605] "config" "param"
  unknown usePollyArrayIndex[92609] "config" "param"
  type ArrayStorageOrder[92617] def RMO[92613]:ArrayStorageOrder[92617] def CMO[92615]:ArrayStorageOrder[92617]
  unknown defaultStorageOrder[92626] "config" "param"
  unknown storageOrder[92630] "param"
  function polly_array_index[92641](arg arguments[92637]:int(64)[13] ...) : _unknown[43] "lineno ok" "llvm readnone"
  {
    unknown ret[465024] "RVV" "temp"
    unknown call_tmp[581541] "expr temp" "maybe param" "maybe type" "temp"
    (581544 'move' call_tmp[581541](92645 call size _mt[232] arguments[92637]))
    unknown call_tmp[581546] "expr temp" "maybe param" "maybe type" "temp"
    (581549 'move' call_tmp[581546](92649 call - call_tmp[581541] 1))
    unknown call_tmp[581551] "maybe param" "maybe type" "temp"
    (581554 'move' call_tmp[581551](92652 call / call_tmp[581546] 2))
    unknown rank[92654] "param"
    (490399 'init var' rank[92654] call_tmp[581551])
    unknown blkStart[92659] "param"
    (490401 'init var' blkStart[92659] 2)
    unknown call_tmp[581556] "expr temp" "maybe param" "maybe type" "temp"
    (581559 'move' call_tmp[581556](92664 call + 2 rank[92654]))
    unknown call_tmp[581561] "maybe param" "maybe type" "temp"
    (581564 'move' call_tmp[581561](92667 call - call_tmp[581556] 1))
    unknown blkEnd[92669] "param"
    (490403 'init var' blkEnd[92669] call_tmp[581561])
    unknown call_tmp[581566] "maybe param" "maybe type" "temp"
    (581569 'move' call_tmp[581566](92674 call + blkEnd[92669] 1))
    unknown indStart[92676] "param"
    (490405 'init var' indStart[92676] call_tmp[581566])
    unknown call_tmp[581571] "expr temp" "maybe param" "maybe type" "temp"
    (581574 'move' call_tmp[581571](92681 call + indStart[92676] rank[92654]))
    unknown call_tmp[581576] "maybe param" "maybe type" "temp"
    (581579 'move' call_tmp[581576](92684 call - call_tmp[581571] 1))
    unknown indEnd[92686] "param"
    (490407 'init var' indEnd[92686] call_tmp[581576])
    unknown call_tmp[581581] "maybe param" "maybe type" "temp"
    (581584 'move' call_tmp[581581](92692 call arguments[92637] 1))
    unknown offset[92693] "insert auto destroy"
    (490409 'init var' offset[92693] call_tmp[581581])
    unknown blk[92700] "insert auto destroy"
    unknown call_tmp[581586] "expr temp" "maybe param" "maybe type" "temp"
    (581589 'move' call_tmp[581586](92698 call * rank[92654] int(64)[13]))
    (490411 'default init var' blk[92700] call_tmp[581586])
    unknown ind[92707] "insert auto destroy"
    unknown call_tmp[581591] "expr temp" "maybe param" "maybe type" "temp"
    (581594 'move' call_tmp[581591](92705 call * rank[92654] int(64)[13]))
    (490413 'default init var' ind[92707] call_tmp[581591])
    unknown call_tmp[581596] "expr temp" "maybe param" "maybe type" "temp"
    (581599 'move' call_tmp[581596](92713 call blk[92700] rank[92654]))
    (92715 call = call_tmp[581596] 1)
    {
      unknown i[92753] "insert auto destroy"
      (490415 'init var' i[92753] 0)
      unknown tmp[92754] "maybe param" "temp"
      unknown call_tmp[581601] "expr temp" "maybe param" "maybe type" "temp"
      (581604 'move' call_tmp[581601](92721 call - rank[92654] 1))
      (92765 'move' tmp[92754](92763 call chpl_compute_low_param_loop_bound 1 call_tmp[581601]))
      unknown tmp[92755] "maybe param" "temp"
      unknown call_tmp[581606] "expr temp" "maybe param" "maybe type" "temp"
      (581609 'move' call_tmp[581606](92770 call - rank[92654] 1))
      (92775 'move' tmp[92755](92773 call chpl_compute_high_param_loop_bound 1 call_tmp[581606]))
      unknown tmp[92756] "maybe param" "temp"
      (92778 'move' tmp[92756](92726 call - 1))
      ParamForLoop
      { i[92753] tmp[92754] tmp[92755] tmp[92756]
        unknown call_tmp[581611] "expr temp" "maybe param" "maybe type" "temp"
        (581614 'move' call_tmp[581611](92733 call blk[92700] i[92753]))
        unknown call_tmp[581616] "expr temp" "maybe param" "maybe type" "temp"
        (581619 'move' call_tmp[581616](92737 call + i[92753] 1))
        unknown call_tmp[581621] "expr temp" "maybe param" "maybe type" "temp"
        (581624 'move' call_tmp[581621](92740 call blk[92700] call_tmp[581616]))
        unknown call_tmp[581626] "expr temp" "maybe param" "maybe type" "temp"
        (581629 'move' call_tmp[581626](92744 call + blkStart[92659] i[92753]))
        unknown call_tmp[581631] "expr temp" "maybe param" "maybe type" "temp"
        (581634 'move' call_tmp[581631](92747 call arguments[92637] call_tmp[581626]))
        unknown call_tmp[581636] "expr temp" "maybe param" "maybe type" "temp"
        (581639 'move' call_tmp[581636](92748 call * call_tmp[581621] call_tmp[581631]))
        (92750 call = call_tmp[581611] call_tmp[581636])
      }
      label _unused_continueLabel[92758]
      label _breakLabel[92757]
    }
    {
      unknown j[92811] "insert auto destroy"
      (490417 'init var' j[92811] 0)
      unknown tmp[92812] "maybe param" "temp"
      (92824 'move' tmp[92812](92822 call chpl_compute_low_param_loop_bound 1 rank[92654]))
      unknown tmp[92813] "maybe param" "temp"
      (92831 'move' tmp[92813](92829 call chpl_compute_high_param_loop_bound 1 rank[92654]))
      unknown tmp[92814] "maybe param" "temp"
      (92834 'move' tmp[92814] 1)
      ParamForLoop
      { j[92811] tmp[92812] tmp[92813] tmp[92814]
        {
          unknown call_tmp[581641] "expr temp" "maybe param" "maybe type" "temp"
          (581644 'move' call_tmp[581641](92796 call ind[92707] j[92811]))
          unknown call_tmp[581646] "expr temp" "maybe param" "maybe type" "temp"
          (581649 'move' call_tmp[581646](92800 call + indStart[92676] j[92811]))
          unknown call_tmp[581651] "expr temp" "maybe param" "maybe type" "temp"
          (581654 'move' call_tmp[581651](92803 call - call_tmp[581646] 1))
          unknown call_tmp[581656] "expr temp" "maybe param" "maybe type" "temp"
          (581659 'move' call_tmp[581656](92806 call arguments[92637] call_tmp[581651]))
          (92807 call = call_tmp[581641] call_tmp[581656])
        }
      }
      label _unused_continueLabel[92816]
      label _breakLabel[92815]
    }
    unknown ret[92847] "insert auto destroy"
    (490419 'init var' ret[92847] offset[92693] int(64)[13])
    {
      unknown i[92869] "insert auto destroy"
      (490421 'init var' i[92869] 0)
      unknown tmp[92870] "maybe param" "temp"
      (92882 'move' tmp[92870](92880 call chpl_compute_low_param_loop_bound 1 rank[92654]))
      unknown tmp[92871] "maybe param" "temp"
      (92889 'move' tmp[92871](92887 call chpl_compute_high_param_loop_bound 1 rank[92654]))
      unknown tmp[92872] "maybe param" "temp"
      (92892 'move' tmp[92872] 1)
      ParamForLoop
      { i[92869] tmp[92870] tmp[92871] tmp[92872]
        {
          unknown call_tmp[581661] "expr temp" "maybe param" "maybe type" "temp"
          (581664 'move' call_tmp[581661](92858 call ind[92707] i[92869]))
          unknown call_tmp[581666] "expr temp" "maybe param" "maybe type" "temp"
          (581669 'move' call_tmp[581666](92862 call blk[92700] i[92869]))
          unknown call_tmp[581671] "expr temp" "maybe param" "maybe type" "temp"
          (581674 'move' call_tmp[581671](92863 call * call_tmp[581661] call_tmp[581666]))
          (92865 call += ret[92847] call_tmp[581671])
        }
      }
      label _unused_continueLabel[92874]
      label _breakLabel[92873]
    }
    (465030 'move' ret[465024](465029 'coerce' ret[92847] int(64)[13]))
    (465026 return ret[465024])
  }
  { scopeless type
    int(64)[13]
  }
  function DefaultDist[93150].dsiNewRectangularDom[92918](arg _mt[93154]:_MT[227], arg this[93152]:DefaultDist[93150], param arg rank[92915]:int(64)[13], arg idxType[92920]:_any[170](?), param arg stridable[92923]:bool[10], arg inds[92926]:_any[170](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465034] "RVV" "temp"
    unknown call_tmp[581676] "expr temp" "maybe param" "maybe type" "temp"
    (581679 'move' call_tmp[581676](92936 call _to_unmanaged this[93152]))
    unknown call_tmp[581681] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (581684 'move' call_tmp[581681](691379 'new' anymanaged DefaultRectangularDom[339767](?) rank[92915] idxType[92920] stridable[92923] call_tmp[581676](_chpl_manager = unmanaged[209](?))))
    const dom[92940] "const" "insert auto destroy"
    (490423 'init var' dom[92940] call_tmp[581681])
    (92952 call(92947 call (partial) dsiSetIndices _mt[232] dom[92940]) inds[92926])
    (465039 'move' ret[465034](465038 'deref' dom[92940]))
    (465036 return ret[465034])
  }
  function DefaultDist[93150].dsiNewAssociativeDom[92963](arg _mt[93158]:_MT[227], arg this[93156]:DefaultDist[93150], arg idxType[92961]:_any[170](?), param arg parSafe[92966]:bool[10]) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465043] "RVV" "temp"
    unknown call_tmp[581688] "expr temp" "maybe param" "maybe type" "temp"
    (581691 'move' call_tmp[581688](92976 call _to_unmanaged this[93156]))
    unknown call_tmp[581693] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (581696 'move' call_tmp[581693](691380 'new' anymanaged DefaultAssociativeDom[345836](?) idxType[92961] parSafe[92966] call_tmp[581688](_chpl_manager = unmanaged[209](?))))
    (465048 'move' ret[465043](465047 'deref' call_tmp[581693]))
    (465045 return ret[465043])
  }
  function DefaultDist[93150].dsiNewOpaqueDom[92989](arg _mt[93162]:_MT[227], arg this[93160]:DefaultDist[93150], arg idxType[92987]:_any[170](?), param arg parSafe[92992]:bool[10]) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465052] "RVV" "temp"
    unknown call_tmp[581698] "expr temp" "maybe param" "maybe type" "temp"
    (581701 'move' call_tmp[581698](92999 call _to_unmanaged this[93160]))
    unknown call_tmp[581703] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (581706 'move' call_tmp[581703](691381 'new' anymanaged DefaultOpaqueDom[345843](?) call_tmp[581698] parSafe[92992](_chpl_manager = unmanaged[209](?))))
    (465057 'move' ret[465052](465056 'deref' call_tmp[581703]))
    (465054 return ret[465052])
  }
  function DefaultDist[93150].dsiNewSparseDom[93016](arg _mt[93166]:_MT[227], arg this[93164]:DefaultDist[93150], param arg rank[93013]:int(64)[13], arg idxType[93018]:_any[170](?), arg dom[93021]:_domain[123390](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465061] "RVV" "temp"
    unknown call_tmp[581708] "expr temp" "maybe param" "maybe type" "temp"
    (581711 'move' call_tmp[581708](93031 call _to_unmanaged this[93164]))
    unknown call_tmp[581713] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (581716 'move' call_tmp[581713](691382 'new' anymanaged DefaultSparseDom[345850](?) rank[93013] idxType[93018] call_tmp[581708] dom[93021](_chpl_manager = unmanaged[209](?))))
    (465066 'move' ret[465061](465065 'deref' call_tmp[581713]))
    (465063 return ret[465061])
  }
  function DefaultDist[93150].dsiIndexToLocale[93045](arg _mt[93170]:_MT[227], arg this[93168]:DefaultDist[93150], arg ind[93043]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465070] "RVV" "temp"
    unknown call_tmp[581718] "expr temp" "maybe param" "maybe type" "temp"
    (581721 'move' call_tmp[581718](93048 '_wide_get_locale' this[93168]))
    unknown call_tmp[581723] "expr temp" "maybe param" "maybe type" "temp"
    (581726 'move' call_tmp[581723](93049 call chpl_localeID_to_locale call_tmp[581718]))
    (465075 'move' ret[465070](465074 'deref' call_tmp[581723]))
    (465072 return ret[465070])
  }
  function DefaultDist[93150].dsiClone[93058](arg _mt[93174]:_MT[227], arg this[93172]:DefaultDist[93150]) : _unknown[43] "method" "primary method"
  {
    unknown ret[465079] "RVV" "temp"
    unknown call_tmp[581728] "expr temp" "maybe param" "maybe type" "temp"
    (581731 'move' call_tmp[581728](93063 call _to_unmanaged this[93172]))
    (465084 'move' ret[465079](465083 'deref' call_tmp[581728]))
    (465081 return ret[465079])
  }
  function DefaultDist[93150].dsiAssign[93077](arg _mt[93178]:_MT[227], arg this[93176]:DefaultDist[93150], arg other[93074] :
  unknown call_tmp[581733] "expr temp" "maybe param" "maybe type" "temp" "type variable") : _unknown[43] "method" "primary method" "no return value for void"
  {
    (465086 return _void[47])
  }
  function DefaultDist[93150].dsiEqualDMaps[93089](arg _mt[93182]:_MT[227], arg this[93180]:DefaultDist[93150], arg d[93086]:unmanaged DefaultDist[389849]) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465090] "RVV" "param" "temp"
    (465095 'move' ret[465090](465094 'deref' 1))
    (465092 return ret[465090])
  }
  function DefaultDist[93150].dsiEqualDMaps[93101](arg _mt[93186]:_MT[227], arg this[93184]:DefaultDist[93150], arg d[93099]:_any[170](?)) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465099] "RVV" "param" "temp"
    (465104 'move' ret[465099](465103 'deref' 0))
    (465101 return ret[465099])
  }
  function DefaultDist[93150].trackDomains[93111](arg _mt[93190]:_MT[227], arg this[93188]:DefaultDist[93150]) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465108] "RVV" "param" "temp"
    (465113 'move' ret[465108](465112 'deref' 0))
    (465110 return ret[465108])
  }
  function DefaultDist[93150].dsiTrackDomains[93121](arg _mt[93194]:_MT[227], arg this[93192]:DefaultDist[93150]) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465117] "RVV" "temp"
    (465122 'move' ret[465117](465121 'deref' 0))
    (465119 return ret[465117])
  }
  function DefaultDist[93150].singleton[93131](arg _mt[93198]:_MT[227], arg this[93196]:DefaultDist[93150]) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465126] "RVV" "param" "temp"
    (465131 'move' ret[465126](465130 'deref' 1))
    (465128 return ret[465126])
  }
  function DefaultDist[93150].dsiIsLayout[93141](arg _mt[93202]:_MT[227], arg this[93200]:DefaultDist[93150]) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465135] "RVV" "param" "temp"
    (465140 'move' ret[465135](465139 'deref' 1))
    (465137 return ret[465135])
  }
  function DefaultDist[93150].super[710960](arg _mt[710962]:_MT[227], arg this[710964]:DefaultDist[93150]) : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[710973] "RVV" "temp"
    unknown call_tmp[710980] "expr temp" "maybe param" "maybe type" "temp"
    (710983 'move' call_tmp[710980](710968 '.v' this[710964] c"super"))
    (710978 'move' ret[710973](710977 'deref' call_tmp[710980]))
    (710975 return ret[710973])
  }
  function DefaultDist[93150].init[710985](arg _mt[710987]:_MT[227], arg this[710988]:DefaultDist[93150], in arg _doms[711164] :
  (711160 call LinkedList[275404](?) unmanaged BaseDom[389803]) =
  _typeDefaultT[239], in arg _domsLock[711169]:chpl_LocalSpinlock[180469] =
  _typeDefaultT[239], in arg _free_when_no_doms[711174]:bool[10] =
  _typeDefaultT[239], in arg pid[711183]:int(64)[13] =
  (711178 'default init field' "BaseDist" "pid" int(64)[13] nullPid[111825])) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[711188] "temporary of super field" "temp"
    (711190 'move' super_tmp[711188](711187 '.v' this[710988] c"super"))
    (710998 call(710996 call (partial) init _mt[232] super_tmp[711188]) _doms[711164] _domsLock[711169] _free_when_no_doms[711174] pid[711183])
    unknown tmp[711193] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[711211] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[711223] "expr temp" "maybe param" "maybe type" "temp"
      (711226 'move' call_tmp[711223](711195 '.v' this[710988] c"super"))
      (711215 'move' call_type_tmp[711211](711198 'typeof' call_tmp[711223]))
    }
    (711199 'move' tmp[711193] call_type_tmp[711211])
    unknown call_tmp[711228] "maybe param" "maybe type" "temp"
    (711231 'move' call_tmp[711228](711204 'cast' tmp[711193] this[710988]))
    unknown chpl__thisAsParent[711201] "insert auto destroy" "temp"
    (711219 'init var' chpl__thisAsParent[711201] call_tmp[711228] tmp[711193])
    (711207 'setcid' chpl__thisAsParent[711201])
    (711209 'setcid' this[710988])
    (711217 return _void[47])
  }
  function DefaultDist[93150].deinit[711233](arg _mt[711235]:_MT[227], arg this[711237]:DefaultDist[93150]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (711239 return _void[47])
  }
  function DefaultDist[93150].writeThis[711242](arg _mt[711246]:_MT[227], arg this[711244]:DefaultDist[93150], arg f[711245]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (711251 call writeThisDefaultImpl f[711245] this[711244])
    (711255 return _void[47])
  }
  function DefaultDist[93150].readThis[711257](arg _mt[711261]:_MT[227], arg this[711259]:DefaultDist[93150], arg f[711260]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (711265 call readThisDefaultImpl f[711260] this[711259])
    (711270 return _void[47])
  }
  type DefaultDist[93150] val super[331009]:BaseDist[142349] "super class"
  type unmanaged DefaultDist[389849]
  type anymanaged DefaultDist[345861](?)
  unknown call_tmp[581738] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
  unknown call_tmp[581743] "maybe param" "maybe type" "temp"
  unknown defaultDist[93214] "insert auto destroy" "locale private"
  function chpl_defaultDistInitPrivate[93219]() : _unknown[43] "no return value for void"
  {
    unknown call_tmp[581750] "expr temp" "maybe param" "maybe type" "temp"
    (581753 'move' call_tmp[581750](93222 call _value _mt[232] defaultDist[93214]))
    unknown call_tmp[581755] "expr temp" "maybe param" "maybe type" "temp"
    (581758 'move' call_tmp[581755](93226 call == call_tmp[581750] nil[38]))
    unknown call_tmp[581760] "expr temp" "maybe param" "maybe type" "temp"
    (581763 'move' call_tmp[581760](93257 call _cond_test call_tmp[581755]))
    if call_tmp[581760]
    {
      unknown call_tmp[581765] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (581768 'move' call_tmp[581765](691384 'new' anymanaged DefaultDist[345861](?)(_chpl_manager = unmanaged[209](?))))
      unknown call_tmp[581770] "maybe param" "maybe type" "temp"
      (581773 'move' call_tmp[581770](93235 call chpl__buildDistValue call_tmp[581765]))
      const nd[93237] "const" "insert auto destroy"
      (490427 'init var' nd[93237] call_tmp[581770])
      unknown call_tmp[581777] "expr temp" "maybe param" "maybe type" "temp"
      (581780 'move' call_tmp[581777](93252 call(93248 call (partial) clone _mt[232] nd[93237])))
      (93255 'move' defaultDist[93214](93254 call chpl__autoCopy call_tmp[581777]))
    }
    (465142 return _void[47])
  }
  function DefaultRectangularDom[99677](?).linksDistribution[93289](arg _mt[99681]:_MT[227], arg this[99679]:DefaultRectangularDom[99677](?)) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465146] "RVV" "param" "temp"
    (465151 'move' ret[465146](465150 'deref' 0))
    (465148 return ret[465146])
  }
  function DefaultRectangularDom[99677](?).dsiLinksDistribution[93299](arg _mt[99685]:_MT[227], arg this[99683]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465155] "RVV" "temp"
    (465160 'move' ret[465155](465159 'deref' 0))
    (465157 return ret[465155])
  }
  function anymanaged anynil DefaultRectangularDom[389605](?).isDefaultRectangular[93309](arg _mt[99689]:_MT[227], arg this[99687]:anymanaged anynil DefaultRectangularDom[389605](?)) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465164] "RVV" "param" "temp"
    (465169 'move' ret[465164](465168 'deref' 1))
    (465166 return ret[465164])
  }
  function DefaultRectangularDom[99677](?).isDefaultRectangular[93319](arg _mt[99693]:_MT[227], arg this[99691]:DefaultRectangularDom[99677](?)) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465173] "RVV" "param" "temp"
    (465178 'move' ret[465173](465177 'deref' 1))
    (465175 return ret[465173])
  }
  function DefaultRectangularDom[99677](?).init[93331](arg _mt[99697]:_MT[227], arg this[99695]:DefaultRectangularDom[99677](?), param arg rank[93329]:_any[170](?), arg idxType[93333]:_any[170](?), param arg stridable[93335]:_any[170](?), arg dist[93337]:_any[170](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[435964] "temporary of super field" "temp"
    (435966 'move' super_tmp[435964](435963 '.v' this[99695] c"super"))
    (93347 call(93340 call (partial) init _mt[232] super_tmp[435964]) rank[93329] idxType[93333] stridable[93335])
    unknown tmp[435969] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[443301] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[581784] "expr temp" "maybe param" "maybe type" "temp"
      (581787 'move' call_tmp[581784](435971 '.v' this[99695] c"super"))
      (443305 'move' call_type_tmp[443301](435974 'typeof' call_tmp[581784]))
    }
    (435975 'move' tmp[435969] call_type_tmp[443301])
    unknown call_tmp[581789] "maybe param" "maybe type" "temp"
    (581792 'move' call_tmp[581789](435980 'cast' tmp[435969] this[99695]))
    unknown chpl__thisAsParent[435977] "insert auto destroy" "temp"
    (490429 'init var' chpl__thisAsParent[435977] call_tmp[581789] tmp[435969])
    (435983 'setcid' chpl__thisAsParent[435977])
    unknown tmp[435985] "temp"
    (435988 'init var' tmp[435985] dist[93337] unmanaged DefaultDist[389849])
    (435990 'init field' this[99695] c"dist" tmp[435985])
    unknown tmp[435995] "temp"
    unknown call_tmp[581794] "expr temp" "maybe param" "maybe type" "temp"
    (581797 'move' call_tmp[581794](436011 '.v' this[99695] c"rank"))
    unknown call_tmp[581799] "expr temp" "maybe param" "maybe type" "temp"
    (581802 'move' call_tmp[581799](436014 '.v' this[99695] c"idxType"))
    unknown call_tmp[581804] "expr temp" "maybe param" "maybe type" "temp"
    (581807 'move' call_tmp[581804](436017 '.v' this[99695] c"stridable"))
    unknown call_tmp[581809] "expr temp" "maybe param" "maybe type" "temp"
    (581812 'move' call_tmp[581809](436001 call range[66183](?) call_tmp[581799] bounded[66079] call_tmp[581804]))
    unknown call_tmp[581814] "expr temp" "maybe param" "maybe type" "temp"
    (581817 'move' call_tmp[581814](435998 call * call_tmp[581794] call_tmp[581809]))
    (436005 'default init var' tmp[435995] call_tmp[581814])
    (436007 '.=' this[99695] c"ranges" tmp[435995])
    (436020 'setcid' this[99695])
    (465180 return _void[47])
  }
  function DefaultRectangularDom[99677](?).intIdxType[93364](arg _mt[99701]:_MT[227], arg this[99699]:DefaultRectangularDom[99677](?)) type : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465184] "RVV" "temp" "type variable"
    unknown call_tmp[581821] "expr temp" "maybe param" "maybe type" "temp"
    (581824 'move' call_tmp[581821](345889 call idxType _mt[232] this[99699]))
    unknown call_tmp[581826] "expr temp" "maybe param" "maybe type" "temp"
    (581829 'move' call_tmp[581826](93369 call chpl__idxTypeToIntIdxType call_tmp[581821]))
    (465189 'move' ret[465184](465188 'deref' call_tmp[581826]))
    (465186 return ret[465184])
  }
  function DefaultRectangularDom[99677](?).dsiMyDist[93377](arg _mt[99705]:_MT[227], arg this[99703]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465193] "RVV" "temp"
    unknown call_tmp[581833] "expr temp" "maybe param" "maybe type" "temp"
    (581836 'move' call_tmp[581833](345894 call dist _mt[232] this[99703]))
    (465198 'move' ret[465193](465197 'deref' call_tmp[581833]))
    (465195 return ret[465193])
  }
  function DefaultRectangularDom[99677](?).chpl__serialize[93407](arg _mt[99709]:_MT[227], arg this[99707]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465202] "RVV" "temp"
    unknown call_tmp[581840] "expr temp" "maybe param" "maybe type" "temp"
    (581843 'move' call_tmp[581840](345902 call rank _mt[232] this[99707]))
    unknown call_tmp[581847] "expr temp" "maybe param" "maybe type" "temp"
    (581850 'move' call_tmp[581847](345907 call idxType _mt[232] this[99707]))
    unknown call_tmp[581854] "expr temp" "maybe param" "maybe type" "temp"
    (581857 'move' call_tmp[581854](345912 call stridable _mt[232] this[99707]))
    unknown call_tmp[581861] "expr temp" "maybe param" "maybe type" "temp"
    (581864 'move' call_tmp[581861](93416 call(345916 call (partial) dsiDims _mt[232] this[99707])))
    unknown call_tmp[581866] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (581869 'move' call_tmp[581866](691385 'new' _serialized_domain[93402](?) call_tmp[581840] call_tmp[581847] call_tmp[581854] call_tmp[581861] 1))
    (465207 'move' ret[465202](465206 'deref' call_tmp[581866]))
    (465204 return ret[465202])
  }
  function anymanaged anynil DefaultRectangularDom[389605](?).chpl__deserialize[93429](arg _mt[99713]:_MT[227], arg this[99711]:anymanaged anynil DefaultRectangularDom[389605](?), arg data[93427]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465211] "RVV" "temp"
    unknown call_tmp[581875] "expr temp" "maybe param" "maybe type" "temp"
    (581878 'move' call_tmp[581875](93438 call rank _mt[232] data[93427]))
    unknown call_tmp[581882] "expr temp" "maybe param" "maybe type" "temp"
    (581885 'move' call_tmp[581882](93443 call idxType _mt[232] data[93427]))
    unknown call_tmp[581889] "expr temp" "maybe param" "maybe type" "temp"
    (581892 'move' call_tmp[581889](93447 call stridable _mt[232] data[93427]))
    unknown call_tmp[581896] "expr temp" "maybe param" "maybe type" "temp"
    (581899 'move' call_tmp[581896](93453 call dims _mt[232] data[93427]))
    unknown call_tmp[581901] "expr temp" "maybe param" "maybe type" "temp"
    (581904 'move' call_tmp[581901](93456 call(93434 call (partial) newRectangularDom _mt[232] defaultDist[93214]) call_tmp[581875] call_tmp[581882] call_tmp[581889] call_tmp[581896]))
    (465216 'move' ret[465211](465215 'deref' call_tmp[581901]))
    (465213 return ret[465211])
  }
  function DefaultRectangularDom[99677](?).dsiDisplayRepresentation[93464](arg _mt[99717]:_MT[227], arg this[99715]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[581908] "expr temp" "maybe param" "maybe type" "temp"
    (581911 'move' call_tmp[581908](345926 call ranges _mt[232] this[99715]))
    (93485 call writeln "ranges = " call_tmp[581908])
    (465218 return _void[47])
  }
  function DefaultRectangularDom[99677](?).dsiGetIndices[93492](arg _mt[99721]:_MT[227], arg this[99719]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465222] "RVV" "temp"
    unknown call_tmp[581915] "expr temp" "maybe param" "maybe type" "temp"
    (581918 'move' call_tmp[581915](345931 call ranges _mt[232] this[99719]))
    (465227 'move' ret[465222](465226 'deref' call_tmp[581915]))
    (465224 return ret[465222])
  }
  function DefaultRectangularDom[99677](?).dsiSetIndices[93504](arg _mt[99725]:_MT[227], arg this[99723]:DefaultRectangularDom[99677](?), arg x[93502]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[581922] "expr temp" "maybe param" "maybe type" "temp"
    (581925 'move' call_tmp[581922](345936 call ranges _mt[232] this[99723]))
    (93508 call = call_tmp[581922] x[93502])
    (465229 return _void[47])
  }
  function DefaultRectangularDom[99677](?).dsiAssignDomain[93520](arg _mt[99729]:_MT[227], arg this[99727]:DefaultRectangularDom[99677](?), arg rhs[93517]:_domain[123390](?), arg lhsPrivate[93523]:bool[10]) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (93530 call chpl_assignDomainWithGetSetIndices this[99727] rhs[93517])
    (465231 return _void[47])
  }
  function DefaultRectangularDom[99677](?).these_help[93541](arg _mt[99733]:_MT[227], arg this[99731]:DefaultRectangularDom[99677](?), param arg d[93538]:int(64)[13]) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465235] "RVV" "temp"
    unknown call_tmp[581929] "expr temp" "maybe param" "maybe type" "temp"
    (581932 'move' call_tmp[581929](345946 call rank _mt[232] this[99731]))
    unknown call_tmp[581934] "expr temp" "maybe param" "maybe type" "temp"
    (581937 'move' call_tmp[581934](93545 call == d[93538] call_tmp[581929]))
    unknown call_tmp[581939] "expr temp" "maybe param" "maybe type" "temp"
    (581942 'move' call_tmp[581939](93777 call _cond_test call_tmp[581934]))
    if call_tmp[581939]
    {
      {
        unknown _indexOfInterest[93555] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[93556] "expr temp" "temp"
        unknown call_tmp[581946] "expr temp" "maybe param" "maybe type" "temp"
        (581949 'move' call_tmp[581946](93551 call(345951 call (partial) ranges _mt[232] this[99731]) d[93538]))
        (93565 'move' _iterator[93556](93563 call _getIterator call_tmp[581946]))
        Defer
        {
          {
            (93582 call _freeIterator _iterator[93556])
          }
        }
        { scopeless type
          (93571 'move' _indexOfInterest[93555](93568 call iteratorIndex _iterator[93556]))
        }
        ForLoop
        {
          unknown i[93575] "index var" "insert auto destroy"
          (93577 'move' i[93575] _indexOfInterest[93555])
          unknown yret[465239] "YVV" "temp"
          (465242 'move' yret[465239](465241 'deref' i[93575]))
          (465244 yield yret[465239])
          label _continueLabel[93560]
          _indexOfInterest[93555]
          _iterator[93556]
        }
        label _breakLabel[93561]
      }
    }
    {
      unknown call_tmp[581953] "expr temp" "maybe param" "maybe type" "temp"
      (581956 'move' call_tmp[581953](345959 call rank _mt[232] this[99731]))
      unknown call_tmp[581958] "expr temp" "maybe param" "maybe type" "temp"
      (581961 'move' call_tmp[581958](93593 call - call_tmp[581953] 1))
      unknown call_tmp[581963] "expr temp" "maybe param" "maybe type" "temp"
      (581966 'move' call_tmp[581963](93595 call == d[93538] call_tmp[581958]))
      unknown call_tmp[581968] "expr temp" "maybe param" "maybe type" "temp"
      (581971 'move' call_tmp[581968](93773 call _cond_test call_tmp[581963]))
      if call_tmp[581968]
      {
        {
          unknown _indexOfInterest[93648] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[93649] "expr temp" "temp"
          unknown call_tmp[581975] "expr temp" "maybe param" "maybe type" "temp"
          (581978 'move' call_tmp[581975](93601 call(345964 call (partial) ranges _mt[232] this[99731]) d[93538]))
          (93658 'move' _iterator[93649](93656 call _getIterator call_tmp[581975]))
          Defer
          {
            {
              (93675 call _freeIterator _iterator[93649])
            }
          }
          { scopeless type
            (93664 'move' _indexOfInterest[93648](93661 call iteratorIndex _iterator[93649]))
          }
          ForLoop
          {
            unknown i[93668] "index var" "insert auto destroy"
            (93670 'move' i[93668] _indexOfInterest[93648])
            {
              unknown _indexOfInterest[93614] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[93615] "expr temp" "temp"
              unknown call_tmp[581984] "expr temp" "maybe param" "maybe type" "temp"
              (581987 'move' call_tmp[581984](345976 call rank _mt[232] this[99731]))
              unknown call_tmp[581989] "expr temp" "maybe param" "maybe type" "temp"
              (581992 'move' call_tmp[581989](93606 call(345971 call (partial) these_help _mt[232] this[99731]) call_tmp[581984]))
              (93624 'move' _iterator[93615](93622 call _getIterator call_tmp[581989]))
              Defer
              {
                {
                  (93641 call _freeIterator _iterator[93615])
                }
              }
              { scopeless type
                (93630 'move' _indexOfInterest[93614](93627 call iteratorIndex _iterator[93615]))
              }
              ForLoop
              {
                unknown j[93634] "index var" "insert auto destroy"
                (93636 'move' j[93634] _indexOfInterest[93614])
                unknown yret[465246] "YVV" "temp"
                unknown call_tmp[581994] "expr temp" "maybe param" "maybe type" "temp"
                (581997 'move' call_tmp[581994](93610 call _build_tuple i[93668] j[93634]))
                (465249 'move' yret[465246](465248 'deref' call_tmp[581994]))
                (465251 yield yret[465246])
                label _continueLabel[93619]
                _indexOfInterest[93614]
                _iterator[93615]
              }
              label _breakLabel[93620]
            }
            label _continueLabel[93653]
            _indexOfInterest[93648]
            _iterator[93649]
          }
          label _breakLabel[93654]
        }
      }
      {
        {
          unknown _indexOfInterest[93738] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[93739] "expr temp" "temp"
          unknown call_tmp[582001] "expr temp" "maybe param" "maybe type" "temp"
          (582004 'move' call_tmp[582001](93687 call(345983 call (partial) ranges _mt[232] this[99731]) d[93538]))
          (93748 'move' _iterator[93739](93746 call _getIterator call_tmp[582001]))
          Defer
          {
            {
              (93765 call _freeIterator _iterator[93739])
            }
          }
          { scopeless type
            (93754 'move' _indexOfInterest[93738](93751 call iteratorIndex _iterator[93739]))
          }
          ForLoop
          {
            unknown i[93758] "index var" "insert auto destroy"
            (93760 'move' i[93758] _indexOfInterest[93738])
            {
              unknown _indexOfInterest[93704] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[93705] "expr temp" "temp"
              unknown call_tmp[582008] "expr temp" "maybe param" "maybe type" "temp"
              (582011 'move' call_tmp[582008](93692 call + d[93538] 1))
              unknown call_tmp[582013] "expr temp" "maybe param" "maybe type" "temp"
              (582016 'move' call_tmp[582013](93695 call(345988 call (partial) these_help _mt[232] this[99731]) call_tmp[582008]))
              (93714 'move' _iterator[93705](93712 call _getIterator call_tmp[582013]))
              Defer
              {
                {
                  (93731 call _freeIterator _iterator[93705])
                }
              }
              { scopeless type
                (93720 'move' _indexOfInterest[93704](93717 call iteratorIndex _iterator[93705]))
              }
              ForLoop
              {
                unknown j[93724] "index var" "insert auto destroy"
                (93726 'move' j[93724] _indexOfInterest[93704])
                unknown yret[465253] "YVV" "temp"
                unknown call_tmp[582018] "expr temp" "maybe param" "maybe type" "temp"
                (582021 'move' call_tmp[582018](93700 call _build_tuple i[93758](93698 'expand_tuple' j[93724])))
                (465256 'move' yret[465253](465255 'deref' call_tmp[582018]))
                (465258 yield yret[465253])
                label _continueLabel[93709]
                _indexOfInterest[93704]
                _iterator[93705]
              }
              label _breakLabel[93710]
            }
            label _continueLabel[93743]
            _indexOfInterest[93738]
            _iterator[93739]
          }
          label _breakLabel[93744]
        }
      }
    }
    (465237 return ret[465235])
  }
  function DefaultRectangularDom[99677](?).these_help[93791](arg _mt[99737]:_MT[227], arg this[99735]:DefaultRectangularDom[99677](?), param arg d[93788]:int(64)[13], arg block[93793]:_any[170](?)) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465262] "RVV" "temp"
    unknown call_tmp[582025] "expr temp" "maybe param" "maybe type" "temp"
    (582028 'move' call_tmp[582025](93797 call size _mt[232] block[93793]))
    unknown call_tmp[582030] "expr temp" "maybe param" "maybe type" "temp"
    (582033 'move' call_tmp[582030](93800 call == d[93788] call_tmp[582025]))
    unknown call_tmp[582035] "expr temp" "maybe param" "maybe type" "temp"
    (582038 'move' call_tmp[582035](94040 call _cond_test call_tmp[582030]))
    if call_tmp[582035]
    {
      {
        unknown _indexOfInterest[93810] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[93811] "expr temp" "temp"
        unknown call_tmp[582040] "expr temp" "maybe param" "maybe type" "temp"
        (582043 'move' call_tmp[582040](93806 call block[93793] d[93788]))
        (93820 'move' _iterator[93811](93818 call _getIterator call_tmp[582040]))
        Defer
        {
          {
            (93837 call _freeIterator _iterator[93811])
          }
        }
        { scopeless type
          (93826 'move' _indexOfInterest[93810](93823 call iteratorIndex _iterator[93811]))
        }
        ForLoop
        {
          unknown i[93830] "index var" "insert auto destroy"
          (93832 'move' i[93830] _indexOfInterest[93810])
          unknown yret[465266] "YVV" "temp"
          (465269 'move' yret[465266](465268 'deref' i[93830]))
          (465271 yield yret[465266])
          label _continueLabel[93815]
          _indexOfInterest[93810]
          _iterator[93811]
        }
        label _breakLabel[93816]
      }
    }
    {
      unknown call_tmp[582047] "expr temp" "maybe param" "maybe type" "temp"
      (582050 'move' call_tmp[582047](93847 call size _mt[232] block[93793]))
      unknown call_tmp[582052] "expr temp" "maybe param" "maybe type" "temp"
      (582055 'move' call_tmp[582052](93851 call - call_tmp[582047] 1))
      unknown call_tmp[582057] "expr temp" "maybe param" "maybe type" "temp"
      (582060 'move' call_tmp[582057](93853 call == d[93788] call_tmp[582052]))
      unknown call_tmp[582062] "expr temp" "maybe param" "maybe type" "temp"
      (582065 'move' call_tmp[582062](94036 call _cond_test call_tmp[582057]))
      if call_tmp[582062]
      {
        {
          unknown _indexOfInterest[93910] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[93911] "expr temp" "temp"
          unknown call_tmp[582067] "expr temp" "maybe param" "maybe type" "temp"
          (582070 'move' call_tmp[582067](93859 call block[93793] d[93788]))
          (93920 'move' _iterator[93911](93918 call _getIterator call_tmp[582067]))
          Defer
          {
            {
              (93937 call _freeIterator _iterator[93911])
            }
          }
          { scopeless type
            (93926 'move' _indexOfInterest[93910](93923 call iteratorIndex _iterator[93911]))
          }
          ForLoop
          {
            unknown i[93930] "index var" "insert auto destroy"
            (93932 'move' i[93930] _indexOfInterest[93910])
            {
              unknown _indexOfInterest[93876] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[93877] "expr temp" "temp"
              unknown call_tmp[582076] "expr temp" "maybe param" "maybe type" "temp"
              (582079 'move' call_tmp[582076](93863 call size _mt[232] block[93793]))
              unknown call_tmp[582081] "expr temp" "maybe param" "maybe type" "temp"
              (582084 'move' call_tmp[582081](93868 call(346004 call (partial) these_help _mt[232] this[99735]) call_tmp[582076] block[93793]))
              (93886 'move' _iterator[93877](93884 call _getIterator call_tmp[582081]))
              Defer
              {
                {
                  (93903 call _freeIterator _iterator[93877])
                }
              }
              { scopeless type
                (93892 'move' _indexOfInterest[93876](93889 call iteratorIndex _iterator[93877]))
              }
              ForLoop
              {
                unknown j[93896] "index var" "insert auto destroy"
                (93898 'move' j[93896] _indexOfInterest[93876])
                unknown yret[465273] "YVV" "temp"
                unknown call_tmp[582086] "expr temp" "maybe param" "maybe type" "temp"
                (582089 'move' call_tmp[582086](93872 call _build_tuple i[93930] j[93896]))
                (465276 'move' yret[465273](465275 'deref' call_tmp[582086]))
                (465278 yield yret[465273])
                label _continueLabel[93881]
                _indexOfInterest[93876]
                _iterator[93877]
              }
              label _breakLabel[93882]
            }
            label _continueLabel[93915]
            _indexOfInterest[93910]
            _iterator[93911]
          }
          label _breakLabel[93916]
        }
      }
      {
        {
          unknown _indexOfInterest[94001] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[94002] "expr temp" "temp"
          unknown call_tmp[582091] "expr temp" "maybe param" "maybe type" "temp"
          (582094 'move' call_tmp[582091](93949 call block[93793] d[93788]))
          (94011 'move' _iterator[94002](94009 call _getIterator call_tmp[582091]))
          Defer
          {
            {
              (94028 call _freeIterator _iterator[94002])
            }
          }
          { scopeless type
            (94017 'move' _indexOfInterest[94001](94014 call iteratorIndex _iterator[94002]))
          }
          ForLoop
          {
            unknown i[94021] "index var" "insert auto destroy"
            (94023 'move' i[94021] _indexOfInterest[94001])
            {
              unknown _indexOfInterest[93967] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[93968] "expr temp" "temp"
              unknown call_tmp[582098] "expr temp" "maybe param" "maybe type" "temp"
              (582101 'move' call_tmp[582098](93954 call + d[93788] 1))
              unknown call_tmp[582103] "expr temp" "maybe param" "maybe type" "temp"
              (582106 'move' call_tmp[582103](93958 call(346014 call (partial) these_help _mt[232] this[99735]) call_tmp[582098] block[93793]))
              (93977 'move' _iterator[93968](93975 call _getIterator call_tmp[582103]))
              Defer
              {
                {
                  (93994 call _freeIterator _iterator[93968])
                }
              }
              { scopeless type
                (93983 'move' _indexOfInterest[93967](93980 call iteratorIndex _iterator[93968]))
              }
              ForLoop
              {
                unknown j[93987] "index var" "insert auto destroy"
                (93989 'move' j[93987] _indexOfInterest[93967])
                unknown yret[465280] "YVV" "temp"
                unknown call_tmp[582108] "expr temp" "maybe param" "maybe type" "temp"
                (582111 'move' call_tmp[582108](93963 call _build_tuple i[94021](93961 'expand_tuple' j[93987])))
                (465283 'move' yret[465280](465282 'deref' call_tmp[582108]))
                (465285 yield yret[465280])
                label _continueLabel[93972]
                _indexOfInterest[93967]
                _iterator[93968]
              }
              label _breakLabel[93973]
            }
            label _continueLabel[94006]
            _indexOfInterest[94001]
            _iterator[94002]
          }
          label _breakLabel[94007]
        }
      }
    }
    (465264 return ret[465262])
  }
  function DefaultRectangularDom[99677](?).these[94054](arg _mt[99741]:_MT[227], arg this[99739]:DefaultRectangularDom[99677](?), arg tasksPerLocale[94051] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[94057] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[94061] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481], arg offset[94073] :
  unknown call_tmp[692124] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[582115] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465289] "RVV" "temp"
    unknown call_tmp[582141] "expr temp" "maybe param" "maybe type" "temp"
    (582144 'move' call_tmp[582141](346039 call rank _mt[232] this[99739]))
    unknown call_tmp[582146] "expr temp" "maybe param" "maybe type" "temp"
    (582149 'move' call_tmp[582146](94078 call == call_tmp[582141] 1))
    unknown call_tmp[582151] "expr temp" "maybe param" "maybe type" "temp"
    (582154 'move' call_tmp[582151](94166 call _cond_test call_tmp[582146]))
    if call_tmp[582151]
    {
      {
        unknown _indexOfInterest[94088] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[94089] "expr temp" "temp"
        unknown call_tmp[582158] "expr temp" "maybe param" "maybe type" "temp"
        (582161 'move' call_tmp[582158](94084 call(346044 call (partial) ranges _mt[232] this[99739]) 1))
        (94098 'move' _iterator[94089](94096 call _getIterator call_tmp[582158]))
        Defer
        {
          {
            (94115 call _freeIterator _iterator[94089])
          }
        }
        { scopeless type
          (94104 'move' _indexOfInterest[94088](94101 call iteratorIndex _iterator[94089]))
        }
        ForLoop
        {
          unknown i[94108] "index var" "insert auto destroy"
          (94110 'move' i[94108] _indexOfInterest[94088])
          unknown yret[465293] "YVV" "temp"
          (465296 'move' yret[465293](465295 'deref' i[94108]))
          (465298 yield yret[465293])
          label _continueLabel[94093]
          _indexOfInterest[94088]
          _iterator[94089]
        }
        label _breakLabel[94094]
      }
    }
    {
      {
        unknown _indexOfInterest[94131] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[94132] "expr temp" "temp"
        unknown call_tmp[582165] "expr temp" "maybe param" "maybe type" "temp"
        (582168 'move' call_tmp[582165](94127 call(346049 call (partial) these_help _mt[232] this[99739]) 1))
        (94141 'move' _iterator[94132](94139 call _getIterator call_tmp[582165]))
        Defer
        {
          {
            (94158 call _freeIterator _iterator[94132])
          }
        }
        { scopeless type
          (94147 'move' _indexOfInterest[94131](94144 call iteratorIndex _iterator[94132]))
        }
        ForLoop
        {
          unknown i[94151] "index var" "insert auto destroy"
          (94153 'move' i[94151] _indexOfInterest[94131])
          unknown yret[465300] "YVV" "temp"
          (465303 'move' yret[465300](465302 'deref' i[94151]))
          (465305 yield yret[465300])
          label _continueLabel[94136]
          _indexOfInterest[94131]
          _iterator[94132]
        }
        label _breakLabel[94137]
      }
    }
    (465291 return ret[465289])
  }
  function DefaultRectangularDom[99677](?).these[94179](arg _mt[99745]:_MT[227], arg this[99743]:DefaultRectangularDom[99677](?), param arg tag[94176]:iterKind[697], arg tasksPerLocale[94182] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[94186] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[94190] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481], arg offset[94202] :
  unknown call_tmp[692168] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[582172] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465309] "RVV" "temp"
    unknown call_tmp[582196] "expr temp" "maybe param" "maybe type" "temp"
    (582199 'move' call_tmp[582196](94234 call _cond_test chpl__testParFlag[181291]))
    if call_tmp[582196]
    {
      unknown call_tmp[582203] "expr temp" "maybe param" "maybe type" "temp"
      (582206 'move' call_tmp[582203](346075 call ranges _mt[232] this[99743]))
      (94232 call chpl__testPar "default rectangular domain standalone invoked on " call_tmp[582203])
    }
    unknown call_tmp[582208] "expr temp" "maybe param" "maybe type" "temp"
    (582211 'move' call_tmp[582208](94261 call _cond_test debugDefaultDist[92581]))
    if call_tmp[582208]
    {
      (94259 call chpl_debug_writeln "*** In domain standalone code:")
    }
    const numTasks[94278] "const" "insert auto destroy"
    unknown tmp[510024] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510025] "maybe param" "temp"
    unknown call_tmp[582213] "expr temp" "maybe param" "maybe type" "temp"
    (582216 'move' call_tmp[582213](94268 call == tasksPerLocale[94182] 0))
    (510030 'move' tmp[510025](510028 call _cond_test call_tmp[582213]))
    if tmp[510025]
    {
      unknown tmp[510032] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[582218] "expr temp" "maybe param" "maybe type" "temp"
      (582221 'move' call_tmp[582218](346080 call here[92085]))
      (510034 'move' tmp[510032](94271 call maxTaskPar _mt[232] call_tmp[582218]))
      (510039 'move' tmp[510024](510036 '_paramFoldLogical' tmp[510025] tmp[510032]))
    }
    {
      (510044 'move' tmp[510024](510041 '_paramFoldLogical' tmp[510025] tasksPerLocale[94182]))
    }
    (490431 'init var' numTasks[94278] tmp[510024])
    unknown call_tmp[582225] "expr temp" "maybe param" "maybe type" "temp"
    (582228 'move' call_tmp[582225](94338 call _cond_test debugDefaultDist[92581]))
    if call_tmp[582225]
    {
      (94335 call chpl_debug_writeln "    numTasks=" numTasks[94278] " (" ignoreRunning[94186] "), minIndicesPerTask=" minIndicesPerTask[94190])
    }
    const tmp[94367] "const" "no auto destroy" "no copy" "temp"
    unknown tmp[510051] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510052] "maybe param" "temp"
    unknown call_tmp[582230] "expr temp" "maybe param" "maybe type" "temp"
    (582233 'move' call_tmp[582230](94349 'task_get_serial'))
    (510057 'move' tmp[510052](510055 call _cond_test call_tmp[582230]))
    if tmp[510052]
    {
      unknown tmp[510059] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[582235] "expr temp" "maybe param" "maybe type" "temp"
      (582238 'move' call_tmp[582235](94352 call - 1))
      (510061 'move' tmp[510059](94355 call _build_tuple 1 call_tmp[582235]))
      (510066 'move' tmp[510051](510063 '_paramFoldLogical' tmp[510052] tmp[510059]))
    }
    {
      unknown tmp[510068] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[582242] "expr temp" "maybe param" "maybe type" "temp"
      (582245 'move' call_tmp[582242](346092 call ranges _mt[232] this[99743]))
      (510070 'move' tmp[510068](94363 call _computeChunkStuff numTasks[94278] ignoreRunning[94186] minIndicesPerTask[94190] call_tmp[582242]))
      (510075 'move' tmp[510051](510072 '_paramFoldLogical' tmp[510052] tmp[510068]))
    }
    (490433 'init var' tmp[94367] tmp[510051])
    (94374 call _check_tuple_var_decl tmp[94367] 2)
    unknown call_tmp[582247] "maybe param" "maybe type" "temp"
    (582250 'move' call_tmp[582247](94368 call tmp[94367] 1))
    const numChunks[94342] "const" "insert auto destroy"
    (490435 'init var' numChunks[94342] call_tmp[582247])
    unknown call_tmp[582252] "maybe param" "maybe type" "temp"
    (582255 'move' call_tmp[582252](94371 call tmp[94367] 2))
    const parDim[94344] "const" "insert auto destroy"
    (490437 'init var' parDim[94344] call_tmp[582252])
    unknown call_tmp[582257] "expr temp" "maybe param" "maybe type" "temp"
    (582260 'move' call_tmp[582257](94459 call _cond_test debugDefaultDist[92581]))
    if call_tmp[582257]
    {
      unknown call_tmp[582264] "expr temp" "maybe param" "maybe type" "temp"
      (582267 'move' call_tmp[582264](94452 call(346101 call (partial) ranges _mt[232] this[99743]) parDim[94344]))
      unknown call_tmp[582271] "expr temp" "maybe param" "maybe type" "temp"
      (582274 'move' call_tmp[582271](94453 call length _mt[232] call_tmp[582264]))
      (94456 call chpl_debug_writeln "    numChunks=" numChunks[94342] " parDim=" parDim[94344] " ranges(" parDim[94344] ").length=" call_tmp[582271])
    }
    unknown call_tmp[582276] "expr temp" "maybe param" "maybe type" "temp"
    (582279 'move' call_tmp[582276](94545 call _cond_test debugDataPar[92589]))
    if call_tmp[582276]
    {
      unknown call_tmp[582283] "expr temp" "maybe param" "maybe type" "temp"
      (582286 'move' call_tmp[582283](346113 call ranges _mt[232] this[99743]))
      (94542 call chpl_debug_writeln "### numTasksPerLoc = " numTasks[94278] "\n" "### ignoreRunning = " ignoreRunning[94186] "\n" "### minIndicesPerTask = " minIndicesPerTask[94190] "\n" "### numChunks = " numChunks[94342] " (parDim = " parDim[94344] ")\n" "### nranges = " call_tmp[582283])
    }
    unknown call_tmp[582288] "expr temp" "maybe param" "maybe type" "temp"
    (582291 'move' call_tmp[582288](94551 call <= numChunks[94342] 1))
    unknown call_tmp[582293] "expr temp" "maybe param" "maybe type" "temp"
    (582296 'move' call_tmp[582293](95214 call _cond_test call_tmp[582288]))
    if call_tmp[582293]
    {
      {
        unknown _indexOfInterest[94562] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[94563] "expr temp" "temp"
        unknown call_tmp[582300] "expr temp" "maybe param" "maybe type" "temp"
        (582303 'move' call_tmp[582300](94557 call(346118 call (partial) these_help _mt[232] this[99743]) 1))
        (94572 'move' _iterator[94563](94570 call _getIterator call_tmp[582300]))
        Defer
        {
          {
            (94589 call _freeIterator _iterator[94563])
          }
        }
        { scopeless type
          (94578 'move' _indexOfInterest[94562](94575 call iteratorIndex _iterator[94563]))
        }
        ForLoop
        {
          unknown i[94582] "index var" "insert auto destroy"
          (94584 'move' i[94582] _indexOfInterest[94562])
          {
            unknown yret[465313] "YVV" "temp"
            (465316 'move' yret[465313](465315 'deref' i[94582]))
            (465318 yield yret[465313])
          }
          label _continueLabel[94567]
          _indexOfInterest[94562]
          _iterator[94563]
        }
        label _breakLabel[94568]
      }
    }
    {
      unknown call_tmp[582305] "expr temp" "maybe param" "maybe type" "temp"
      (582308 'move' call_tmp[582305](94620 call _cond_test debugDefaultDist[92581]))
      if call_tmp[582305]
      {
        unknown call_tmp[582312] "expr temp" "maybe param" "maybe type" "temp"
        (582315 'move' call_tmp[582312](346125 call ranges _mt[232] this[99743]))
        (94617 call chpl_debug_writeln "*** DI: ranges = " call_tmp[582312])
      }
      {
        unknown tmpIter[94872] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[582317] "expr temp" "maybe param" "maybe type" "temp"
        (582320 'move' call_tmp[582317](94627 call chpl_build_low_bounded_range 0))
        (94875 'move' tmpIter[94872](94630 call # call_tmp[582317] numChunks[94342]))
        unknown isRngDomArr[95195] "maybe param" "temp"
        unknown tmp[397905] "maybe param" "temp"
        (397916 'move' tmp[397905](95197 call isBoundedRange tmpIter[94872]))
        unknown call_tmp[582322] "expr temp" "maybe param" "maybe type" "temp"
        (582325 'move' call_tmp[582322](397918 call _cond_invalid tmp[397905]))
        if call_tmp[582322]
        {
          (397921 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[510109] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[510110] "maybe param" "temp"
        unknown call_tmp[582327] "expr temp" "maybe param" "maybe type" "temp"
        (582330 'move' call_tmp[582327](397906 call isTrue tmp[397905]))
        (510115 'move' tmp[510110](510113 call _cond_test call_tmp[582327]))
        if tmp[510110]
        {
          (510120 'move' tmp[510109](510117 '_paramFoldLogical' tmp[510110] 1))
        }
        {
          unknown tmp[397926] "maybe param" "temp"
          (397937 'move' tmp[397926](95200 call isDomain tmpIter[94872]))
          unknown call_tmp[582332] "expr temp" "maybe param" "maybe type" "temp"
          (582335 'move' call_tmp[582332](397939 call _cond_invalid tmp[397926]))
          if call_tmp[582332]
          {
            (397942 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[510082] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[510083] "maybe param" "temp"
          unknown call_tmp[582337] "expr temp" "maybe param" "maybe type" "temp"
          (582340 'move' call_tmp[582337](397927 call isTrue tmp[397926]))
          (510088 'move' tmp[510083](510086 call _cond_test call_tmp[582337]))
          if tmp[510083]
          {
            (510093 'move' tmp[510082](510090 '_paramFoldLogical' tmp[510083] 1))
          }
          {
            unknown tmp[510095] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[582342] "expr temp" "maybe param" "maybe type" "temp"
            (582345 'move' call_tmp[582342](95203 call isArray tmpIter[94872]))
            (510097 'move' tmp[510095](397931 call isTrue call_tmp[582342]))
            (510102 'move' tmp[510082](510099 '_paramFoldLogical' tmp[510083] tmp[510095]))
          }
          unknown tmp[510122] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (510124 'move' tmp[510122](397910 call isTrue tmp[510082]))
          (510129 'move' tmp[510109](510126 '_paramFoldLogical' tmp[510110] tmp[510122]))
        }
        (95210 'move' isRngDomArr[95195] tmp[510109])
        if isRngDomArr[95195]
        {
          const _coforallCount[95062] "const" "end count" "temp"
          (95131 'move' _coforallCount[95062](95128 call _endCountAlloc 1))
          unknown numTasks[95063] "temp"
          (95115 'move' numTasks[95063](95111 call size _mt[232] tmpIter[94872]))
          (95106 call _upEndCount _coforallCount[95062] 1 numTasks[95063])
          (95103 call chpl_resetTaskSpawn numTasks[95063])
          unknown _indexOfInterest[95070] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[95071] "expr temp" "temp"
          (95080 'move' _iterator[95071](95078 call _getIterator tmpIter[94872]))
          Defer
          {
            {
              (95096 call _freeIterator _iterator[95071])
            }
          }
          { scopeless type
            (95085 'move' _indexOfInterest[95070](95082 call iteratorIndex _iterator[95071]))
          }
          ForLoop
          {
            unknown chunk[95089] "coforall index var" "index var" "insert auto destroy"
            (95091 'move' chunk[95089] _indexOfInterest[95070])
            (767009 call coforall_fn[767007] parDim[94344] numChunks[94342])
            function coforall_fn[767007](arg parDim[767014], arg numChunks[767017]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[582351] "maybe param" "maybe type" "temp"
                (582354 'move' call_tmp[582351](346204 call ranges _mt[232] this[99743]))
                unknown block[94878] "insert auto destroy"
                (490439 'init var' block[94878] call_tmp[582351])
                const len[94881] "const" "insert auto destroy"
                unknown tmp[510136] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                unknown tmp[510137] "maybe param" "temp"
                unknown call_tmp[582358] "expr temp" "maybe param" "maybe type" "temp"
                (582361 'move' call_tmp[582358](94887 call(346209 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                unknown call_tmp[582365] "expr temp" "maybe param" "maybe type" "temp"
                (582368 'move' call_tmp[582365](94885 call stridable _mt[232] call_tmp[582358]))
                unknown call_tmp[582370] "expr temp" "maybe param" "maybe type" "temp"
                (582373 'move' call_tmp[582370](94883 call ! call_tmp[582365]))
                (510142 'move' tmp[510137](510140 call _cond_test call_tmp[582370]))
                if tmp[510137]
                {
                  unknown tmp[510144] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                  unknown call_tmp[582377] "expr temp" "maybe param" "maybe type" "temp"
                  (582380 'move' call_tmp[582377](94894 call(346215 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                  (510146 'move' tmp[510144](94892 call length _mt[232] call_tmp[582377]))
                  (510151 'move' tmp[510136](510148 '_paramFoldLogical' tmp[510137] tmp[510144]))
                }
                {
                  unknown tmp[510153] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                  unknown call_tmp[582386] "expr temp" "maybe param" "maybe type" "temp"
                  (582389 'move' call_tmp[582386](94906 call(346221 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                  unknown call_tmp[582393] "expr temp" "maybe param" "maybe type" "temp"
                  (582396 'move' call_tmp[582393](94904 call length _mt[232] call_tmp[582386]))
                  unknown call_tmp[582398] "expr temp" "maybe param" "maybe type" "temp"
                  (582401 'move' call_tmp[582398](94901 call _cast uint(64)[107] call_tmp[582393]))
                  unknown call_tmp[582405] "expr temp" "maybe param" "maybe type" "temp"
                  (582408 'move' call_tmp[582405](94917 call(346227 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                  unknown call_tmp[582412] "expr temp" "maybe param" "maybe type" "temp"
                  (582415 'move' call_tmp[582412](94915 call stride _mt[232] call_tmp[582405]))
                  unknown call_tmp[582417] "expr temp" "maybe param" "maybe type" "temp"
                  (582420 'move' call_tmp[582417](94913 call abs call_tmp[582412]))
                  unknown call_tmp[582422] "expr temp" "maybe param" "maybe type" "temp"
                  (582425 'move' call_tmp[582422](94910 call _cast uint(64)[107] call_tmp[582417]))
                  (510155 'move' tmp[510153](94899 call * call_tmp[582398] call_tmp[582422]))
                  (510160 'move' tmp[510136](510157 '_paramFoldLogical' tmp[510137] tmp[510153]))
                }
                (490441 'init var' len[94881] tmp[510136])
                unknown call_tmp[582429] "expr temp" "maybe param" "maybe type" "temp"
                (582432 'move' call_tmp[582429](94932 call(346236 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                unknown call_tmp[582436] "expr temp" "maybe param" "maybe type" "temp"
                (582439 'move' call_tmp[582436](94930 call _high _mt[232] call_tmp[582429]))
                unknown call_tmp[582443] "expr temp" "maybe param" "maybe type" "temp"
                (582446 'move' call_tmp[582443](94938 call(346242 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                unknown call_tmp[582450] "expr temp" "maybe param" "maybe type" "temp"
                (582453 'move' call_tmp[582450](94936 call _low _mt[232] call_tmp[582443]))
                unknown call_tmp[582457] "expr temp" "maybe param" "maybe type" "temp"
                (582460 'move' call_tmp[582457](94944 call(346248 call (partial) ranges _mt[232] this[99743]) parDim[767014]))
                unknown call_tmp[582464] "expr temp" "maybe param" "maybe type" "temp"
                (582467 'move' call_tmp[582464](94942 call _low _mt[232] call_tmp[582457]))
                unknown call_tmp[582469] "maybe param" "maybe type" "temp"
                (582472 'move' call_tmp[582469](94925 call _computeBlock len[94881] numChunks[767017] chunk[95089] call_tmp[582436] call_tmp[582450] call_tmp[582464]))
                const tmp[94923] "const" "insert auto destroy" "no copy" "temp"
                (490443 'init var' tmp[94923] call_tmp[582469])
                (94949 call _check_tuple_var_decl tmp[94923] 2)
                unknown call_tmp[582474] "maybe param" "maybe type" "temp"
                (582477 'move' call_tmp[582474](94954 call tmp[94923] 1))
                const lo[94952] "const" "insert auto destroy"
                (490445 'init var' lo[94952] call_tmp[582474])
                unknown call_tmp[582479] "maybe param" "maybe type" "temp"
                (582482 'move' call_tmp[582479](94959 call tmp[94923] 2))
                const hi[94957] "const" "insert auto destroy"
                (490447 'init var' hi[94957] call_tmp[582479])
                unknown call_tmp[582484] "expr temp" "maybe param" "maybe type" "temp"
                (582487 'move' call_tmp[582484](94967 call block[94878] parDim[767014]))
                unknown call_tmp[582491] "expr temp" "maybe param" "maybe type" "temp"
                (582494 'move' call_tmp[582491](94965 call stridable _mt[232] call_tmp[582484]))
                unknown call_tmp[582496] "expr temp" "maybe param" "maybe type" "temp"
                (582499 'move' call_tmp[582496](94963 call _cond_test call_tmp[582491]))
                if call_tmp[582496]
                {
                  unknown call_tmp[582501] "expr temp" "maybe param" "maybe type" "temp"
                  (582504 'move' call_tmp[582501](94975 call block[94878] parDim[767014]))
                  unknown call_tmp[582506] "expr temp" "maybe param" "maybe type" "temp"
                  (582509 'move' call_tmp[582506](94982 call chpl_build_bounded_range lo[94952] hi[94957]))
                  unknown call_tmp[582511] "expr temp" "maybe param" "maybe type" "temp"
                  (582514 'move' call_tmp[582511](94988 call block[94878] parDim[767014]))
                  unknown call_tmp[582518] "expr temp" "maybe param" "maybe type" "temp"
                  (582521 'move' call_tmp[582518](94986 call stride _mt[232] call_tmp[582511]))
                  unknown call_tmp[582523] "expr temp" "maybe param" "maybe type" "temp"
                  (582526 'move' call_tmp[582523](94980 call chpl_by call_tmp[582506] call_tmp[582518]))
                  unknown call_tmp[582528] "expr temp" "maybe param" "maybe type" "temp"
                  (582531 'move' call_tmp[582528](94996 call block[94878] parDim[767014]))
                  unknown call_tmp[582535] "expr temp" "maybe param" "maybe type" "temp"
                  (582538 'move' call_tmp[582535](94994 call alignment _mt[232] call_tmp[582528]))
                  unknown call_tmp[582540] "expr temp" "maybe param" "maybe type" "temp"
                  (582543 'move' call_tmp[582540](94992 call chpl__idxToInt call_tmp[582535]))
                  unknown call_tmp[582545] "expr temp" "maybe param" "maybe type" "temp"
                  (582548 'move' call_tmp[582545](94978 call chpl_align call_tmp[582523] call_tmp[582540]))
                  (94973 call = call_tmp[582501] call_tmp[582545])
                }
                {
                  unknown call_tmp[582550] "expr temp" "maybe param" "maybe type" "temp"
                  (582553 'move' call_tmp[582550](95004 call block[94878] parDim[767014]))
                  unknown call_tmp[582555] "expr temp" "maybe param" "maybe type" "temp"
                  (582558 'move' call_tmp[582555](95007 call chpl_build_bounded_range lo[94952] hi[94957]))
                  (95002 call = call_tmp[582550] call_tmp[582555])
                }
                unknown call_tmp[582560] "expr temp" "maybe param" "maybe type" "temp"
                (582563 'move' call_tmp[582560](95012 call _cond_test debugDefaultDist[92581]))
                if call_tmp[582560]
                {
                  (95016 call chpl_debug_writeln "*** DI[" chunk[95089] "]: block = " block[94878])
                }
                {
                  unknown _indexOfInterest[95023] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[95025] "expr temp" "temp"
                  unknown call_tmp[582567] "expr temp" "maybe param" "maybe type" "temp"
                  (582570 'move' call_tmp[582567](95032 call(346270 call (partial) these_help _mt[232] this[99743]) 1 block[94878]))
                  (95027 'move' _iterator[95025](95030 call _getIterator call_tmp[582567]))
                  Defer
                  {
                    {
                      (95037 call _freeIterator _iterator[95025])
                    }
                  }
                  { scopeless type
                    (95041 'move' _indexOfInterest[95023](95044 call iteratorIndex _iterator[95025]))
                  }
                  ForLoop
                  {
                    unknown i[95049] "index var" "insert auto destroy"
                    (95051 'move' i[95049] _indexOfInterest[95023])
                    {
                      unknown yret[465320] "YVV" "temp"
                      (465323 'move' yret[465320](465322 'deref' i[95049]))
                      (465325 yield yret[465320])
                    }
                    label _continueLabel[95057]
                    _indexOfInterest[95023]
                    _iterator[95025]
                  }
                  label _breakLabel[95059]
                }
              }
              (95065 call _downEndCount _coforallCount[95062] nil[38])
              (767012 return _void[47])
            }
            {
            }
            label _continueLabel[95075]
            _indexOfInterest[95070]
            _iterator[95071]
          }
          label _breakLabel[95076]
          Defer
          {
            {
              (95118 call _endCountFree _coforallCount[95062])
            }
          }
          (95123 call _waitEndCount _coforallCount[95062] 1 numTasks[95063])
        }
        {
          const _coforallCount[95135] "const" "end count" "temp"
          (95192 'move' _coforallCount[95135](95189 call _endCountAlloc 1))
          unknown _indexOfInterest[95143] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[95144] "expr temp" "temp"
          (95153 'move' _iterator[95144](95151 call _getIterator tmpIter[94872]))
          Defer
          {
            {
              (95169 call _freeIterator _iterator[95144])
            }
          }
          { scopeless type
            (95158 'move' _indexOfInterest[95143](95155 call iteratorIndex _iterator[95144]))
          }
          ForLoop
          {
            unknown chunk[95162] "coforall index var" "index var" "insert auto destroy"
            (95164 'move' chunk[95162] _indexOfInterest[95143])
            (95176 call _upEndCount _coforallCount[95135] 1)
            (767022 call coforall_fn[767020] parDim[94344] numChunks[94342])
            function coforall_fn[767020](arg parDim[767027], arg numChunks[767030]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[582574] "maybe param" "maybe type" "temp"
                (582577 'move' call_tmp[582574](346131 call ranges _mt[232] this[99743]))
                unknown block[94633] "insert auto destroy"
                (490449 'init var' block[94633] call_tmp[582574])
                const len[94681] "const" "insert auto destroy"
                unknown tmp[510167] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                unknown tmp[510168] "maybe param" "temp"
                unknown call_tmp[582581] "expr temp" "maybe param" "maybe type" "temp"
                (582584 'move' call_tmp[582581](94640 call(346136 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                unknown call_tmp[582588] "expr temp" "maybe param" "maybe type" "temp"
                (582591 'move' call_tmp[582588](94641 call stridable _mt[232] call_tmp[582581]))
                unknown call_tmp[582593] "expr temp" "maybe param" "maybe type" "temp"
                (582596 'move' call_tmp[582593](94644 call ! call_tmp[582588]))
                (510173 'move' tmp[510168](510171 call _cond_test call_tmp[582593]))
                if tmp[510168]
                {
                  unknown tmp[510175] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                  unknown call_tmp[582600] "expr temp" "maybe param" "maybe type" "temp"
                  (582603 'move' call_tmp[582600](94649 call(346142 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                  (510177 'move' tmp[510175](94650 call length _mt[232] call_tmp[582600]))
                  (510182 'move' tmp[510167](510179 '_paramFoldLogical' tmp[510168] tmp[510175]))
                }
                {
                  unknown tmp[510184] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                  unknown call_tmp[582609] "expr temp" "maybe param" "maybe type" "temp"
                  (582612 'move' call_tmp[582609](94656 call(346148 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                  unknown call_tmp[582616] "expr temp" "maybe param" "maybe type" "temp"
                  (582619 'move' call_tmp[582616](94657 call length _mt[232] call_tmp[582609]))
                  unknown call_tmp[582621] "expr temp" "maybe param" "maybe type" "temp"
                  (582624 'move' call_tmp[582621](94661 call _cast uint(64)[107] call_tmp[582616]))
                  unknown call_tmp[582628] "expr temp" "maybe param" "maybe type" "temp"
                  (582631 'move' call_tmp[582628](94667 call(346154 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                  unknown call_tmp[582635] "expr temp" "maybe param" "maybe type" "temp"
                  (582638 'move' call_tmp[582635](94668 call stride _mt[232] call_tmp[582628]))
                  unknown call_tmp[582640] "expr temp" "maybe param" "maybe type" "temp"
                  (582643 'move' call_tmp[582640](94672 call abs call_tmp[582635]))
                  unknown call_tmp[582645] "expr temp" "maybe param" "maybe type" "temp"
                  (582648 'move' call_tmp[582645](94674 call _cast uint(64)[107] call_tmp[582640]))
                  (510186 'move' tmp[510184](94676 call * call_tmp[582621] call_tmp[582645]))
                  (510191 'move' tmp[510167](510188 '_paramFoldLogical' tmp[510168] tmp[510184]))
                }
                (490451 'init var' len[94681] tmp[510167])
                unknown call_tmp[582652] "expr temp" "maybe param" "maybe type" "temp"
                (582655 'move' call_tmp[582652](94697 call(346163 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                unknown call_tmp[582659] "expr temp" "maybe param" "maybe type" "temp"
                (582662 'move' call_tmp[582659](94698 call _high _mt[232] call_tmp[582652]))
                unknown call_tmp[582666] "expr temp" "maybe param" "maybe type" "temp"
                (582669 'move' call_tmp[582666](94704 call(346169 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                unknown call_tmp[582673] "expr temp" "maybe param" "maybe type" "temp"
                (582676 'move' call_tmp[582673](94705 call _low _mt[232] call_tmp[582666]))
                unknown call_tmp[582680] "expr temp" "maybe param" "maybe type" "temp"
                (582683 'move' call_tmp[582680](94711 call(346175 call (partial) ranges _mt[232] this[99743]) parDim[767027]))
                unknown call_tmp[582687] "expr temp" "maybe param" "maybe type" "temp"
                (582690 'move' call_tmp[582687](94712 call _low _mt[232] call_tmp[582680]))
                unknown call_tmp[582692] "maybe param" "maybe type" "temp"
                (582695 'move' call_tmp[582692](94715 call _computeBlock len[94681] numChunks[767030] chunk[95162] call_tmp[582659] call_tmp[582673] call_tmp[582687]))
                const tmp[94716] "const" "insert auto destroy" "no copy" "temp"
                (490453 'init var' tmp[94716] call_tmp[582692])
                (94723 call _check_tuple_var_decl tmp[94716] 2)
                unknown call_tmp[582697] "maybe param" "maybe type" "temp"
                (582700 'move' call_tmp[582697](94717 call tmp[94716] 1))
                const lo[94684] "const" "insert auto destroy"
                (490455 'init var' lo[94684] call_tmp[582697])
                unknown call_tmp[582702] "maybe param" "maybe type" "temp"
                (582705 'move' call_tmp[582702](94720 call tmp[94716] 2))
                const hi[94686] "const" "insert auto destroy"
                (490457 'init var' hi[94686] call_tmp[582702])
                unknown call_tmp[582707] "expr temp" "maybe param" "maybe type" "temp"
                (582710 'move' call_tmp[582707](94731 call block[94633] parDim[767027]))
                unknown call_tmp[582714] "expr temp" "maybe param" "maybe type" "temp"
                (582717 'move' call_tmp[582714](94732 call stridable _mt[232] call_tmp[582707]))
                unknown call_tmp[582719] "expr temp" "maybe param" "maybe type" "temp"
                (582722 'move' call_tmp[582719](94778 call _cond_test call_tmp[582714]))
                if call_tmp[582719]
                {
                  unknown call_tmp[582724] "expr temp" "maybe param" "maybe type" "temp"
                  (582727 'move' call_tmp[582724](94738 call block[94633] parDim[767027]))
                  unknown call_tmp[582729] "expr temp" "maybe param" "maybe type" "temp"
                  (582732 'move' call_tmp[582729](94741 call chpl_build_bounded_range lo[94684] hi[94686]))
                  unknown call_tmp[582734] "expr temp" "maybe param" "maybe type" "temp"
                  (582737 'move' call_tmp[582734](94746 call block[94633] parDim[767027]))
                  unknown call_tmp[582741] "expr temp" "maybe param" "maybe type" "temp"
                  (582744 'move' call_tmp[582741](94747 call stride _mt[232] call_tmp[582734]))
                  unknown call_tmp[582746] "expr temp" "maybe param" "maybe type" "temp"
                  (582749 'move' call_tmp[582746](94750 call chpl_by call_tmp[582729] call_tmp[582741]))
                  unknown call_tmp[582751] "expr temp" "maybe param" "maybe type" "temp"
                  (582754 'move' call_tmp[582751](94756 call block[94633] parDim[767027]))
                  unknown call_tmp[582758] "expr temp" "maybe param" "maybe type" "temp"
                  (582761 'move' call_tmp[582758](94757 call alignment _mt[232] call_tmp[582751]))
                  unknown call_tmp[582763] "expr temp" "maybe param" "maybe type" "temp"
                  (582766 'move' call_tmp[582763](94761 call chpl__idxToInt call_tmp[582758]))
                  unknown call_tmp[582768] "expr temp" "maybe param" "maybe type" "temp"
                  (582771 'move' call_tmp[582768](94762 call chpl_align call_tmp[582746] call_tmp[582763]))
                  (94764 call = call_tmp[582724] call_tmp[582768])
                }
                {
                  unknown call_tmp[582773] "expr temp" "maybe param" "maybe type" "temp"
                  (582776 'move' call_tmp[582773](94770 call block[94633] parDim[767027]))
                  unknown call_tmp[582778] "expr temp" "maybe param" "maybe type" "temp"
                  (582781 'move' call_tmp[582778](94773 call chpl_build_bounded_range lo[94684] hi[94686]))
                  (94775 call = call_tmp[582773] call_tmp[582778])
                }
                unknown call_tmp[582783] "expr temp" "maybe param" "maybe type" "temp"
                (582786 'move' call_tmp[582783](94824 call _cond_test debugDefaultDist[92581]))
                if call_tmp[582783]
                {
                  (94821 call chpl_debug_writeln "*** DI[" chunk[95162] "]: block = " block[94633])
                }
                {
                  unknown _indexOfInterest[94838] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[94839] "expr temp" "temp"
                  unknown call_tmp[582790] "expr temp" "maybe param" "maybe type" "temp"
                  (582793 'move' call_tmp[582790](94833 call(346197 call (partial) these_help _mt[232] this[99743]) 1 block[94633]))
                  (94848 'move' _iterator[94839](94846 call _getIterator call_tmp[582790]))
                  Defer
                  {
                    {
                      (94865 call _freeIterator _iterator[94839])
                    }
                  }
                  { scopeless type
                    (94854 'move' _indexOfInterest[94838](94851 call iteratorIndex _iterator[94839]))
                  }
                  ForLoop
                  {
                    unknown i[94858] "index var" "insert auto destroy"
                    (94860 'move' i[94858] _indexOfInterest[94838])
                    {
                      unknown yret[465327] "YVV" "temp"
                      (465330 'move' yret[465327](465329 'deref' i[94858]))
                      (465332 yield yret[465327])
                    }
                    label _continueLabel[94843]
                    _indexOfInterest[94838]
                    _iterator[94839]
                  }
                  label _breakLabel[94844]
                }
              }
              (95138 call _downEndCount _coforallCount[95135] nil[38])
              (767025 return _void[47])
            }
            {
            }
            label _continueLabel[95148]
            _indexOfInterest[95143]
            _iterator[95144]
          }
          label _breakLabel[95149]
          Defer
          {
            {
              (95180 call _endCountFree _coforallCount[95135])
            }
          }
          (95185 call _waitEndCount _coforallCount[95135] 1)
        }
      }
    }
    (465311 return ret[465309])
  }
  where {
    (94210 call == tag[94176] standalone[695])
  }
  function DefaultRectangularDom[99677](?).these[95227](arg _mt[99749]:_MT[227], arg this[99747]:DefaultRectangularDom[99677](?), param arg tag[95224]:iterKind[697], arg tasksPerLocale[95230] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[95234] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[95238] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481], arg offset[95250] :
  unknown call_tmp[692212] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[582797] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465336] "RVV" "temp"
    unknown call_tmp[582821] "expr temp" "maybe param" "maybe type" "temp"
    (582824 'move' call_tmp[582821](346294 call here[92085]))
    unknown call_tmp[582828] "maybe param" "maybe type" "temp"
    (582831 'move' call_tmp[582828](95265 call(95261 call (partial) getChildCount _mt[232] call_tmp[582821])))
    const numSublocs[95266] "const" "insert auto destroy"
    (490459 'init var' numSublocs[95266] call_tmp[582828])
    unknown tmp[398115] "maybe param" "temp"
    (398126 'move' tmp[398115] localeModelHasSublocales[180486])
    unknown call_tmp[582833] "expr temp" "maybe param" "maybe type" "temp"
    (582836 'move' call_tmp[582833](398128 call _cond_invalid tmp[398115]))
    if call_tmp[582833]
    {
      (398131 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[510198] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510199] "maybe param" "temp"
    unknown call_tmp[582838] "expr temp" "maybe param" "maybe type" "temp"
    (582841 'move' call_tmp[582838](398116 call isTrue tmp[398115]))
    (510204 'move' tmp[510199](510202 call _cond_test call_tmp[582838]))
    if tmp[510199]
    {
      unknown tmp[510206] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[582843] "expr temp" "maybe param" "maybe type" "temp"
      (582846 'move' call_tmp[582843](95273 call != numSublocs[95266] 0))
      (510208 'move' tmp[510206](398119 call isTrue call_tmp[582843]))
      (510213 'move' tmp[510198](510210 '_paramFoldLogical' tmp[510199] tmp[510206]))
    }
    {
      (510218 'move' tmp[510198](510215 '_paramFoldLogical' tmp[510199] 0))
    }
    unknown call_tmp[582848] "expr temp" "maybe param" "maybe type" "temp"
    (582851 'move' call_tmp[582848](97813 call _cond_test tmp[510198]))
    if call_tmp[582848]
    {
      unknown dptpl[95289] "insert auto destroy"
      unknown tmp[510225] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510226] "maybe param" "temp"
      unknown call_tmp[582853] "expr temp" "maybe param" "maybe type" "temp"
      (582856 'move' call_tmp[582853](95279 call == tasksPerLocale[95230] 0))
      (510231 'move' tmp[510226](510229 call _cond_test call_tmp[582853]))
      if tmp[510226]
      {
        unknown tmp[510233] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[582858] "expr temp" "maybe param" "maybe type" "temp"
        (582861 'move' call_tmp[582858](346299 call here[92085]))
        (510235 'move' tmp[510233](95282 call maxTaskPar _mt[232] call_tmp[582858]))
        (510240 'move' tmp[510225](510237 '_paramFoldLogical' tmp[510226] tmp[510233]))
      }
      {
        (510245 'move' tmp[510225](510242 '_paramFoldLogical' tmp[510226] tasksPerLocale[95230]))
      }
      (490461 'init var' dptpl[95289] tmp[510225])
      unknown call_tmp[582865] "expr temp" "maybe param" "maybe type" "temp"
      (582868 'move' call_tmp[582865](95294 call ! ignoreRunning[95234]))
      unknown call_tmp[582870] "expr temp" "maybe param" "maybe type" "temp"
      (582873 'move' call_tmp[582870](95328 call _cond_test call_tmp[582865]))
      if call_tmp[582870]
      {
        unknown call_tmp[582875] "expr temp" "maybe param" "maybe type" "temp"
        (582878 'move' call_tmp[582875](346303 call here[92085]))
        unknown call_tmp[582882] "expr temp" "maybe param" "maybe type" "temp"
        (582885 'move' call_tmp[582882](95301 call(95297 call (partial) runningTasks _mt[232] call_tmp[582875])))
        unknown call_tmp[582887] "maybe param" "maybe type" "temp"
        (582890 'move' call_tmp[582887](95303 call - call_tmp[582882] 1))
        const otherTasks[95305] "const" "insert auto destroy"
        (490463 'init var' otherTasks[95305] call_tmp[582887])
        unknown tmp[510252] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[510253] "maybe param" "temp"
        unknown call_tmp[582892] "expr temp" "maybe param" "maybe type" "temp"
        (582895 'move' call_tmp[582892](95312 call < otherTasks[95305] dptpl[95289]))
        (510258 'move' tmp[510253](510256 call _cond_test call_tmp[582892]))
        if tmp[510253]
        {
          unknown tmp[510260] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[582897] "expr temp" "maybe param" "maybe type" "temp"
          (582900 'move' call_tmp[582897](95316 call - dptpl[95289] otherTasks[95305]))
          (510262 'move' tmp[510260](95319 call _cast int(64)[13] call_tmp[582897]))
          (510267 'move' tmp[510252](510264 '_paramFoldLogical' tmp[510253] tmp[510260]))
        }
        {
          (510272 'move' tmp[510252](510269 '_paramFoldLogical' tmp[510253] 1))
        }
        (95325 call = dptpl[95289] tmp[510252])
      }
      unknown call_tmp[582902] "maybe param" "maybe type" "temp"
      (582905 'move' call_tmp[582902](95336 call min numSublocs[95266] dptpl[95289]))
      const numSublocTasks[95337] "const" "insert auto destroy"
      (490465 'init var' numSublocTasks[95337] call_tmp[582902])
      const tmp[95366] "const" "no auto destroy" "no copy" "temp"
      unknown tmp[510279] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510280] "maybe param" "temp"
      unknown call_tmp[582907] "expr temp" "maybe param" "maybe type" "temp"
      (582910 'move' call_tmp[582907](95347 'task_get_serial'))
      (510285 'move' tmp[510280](510283 call _cond_test call_tmp[582907]))
      if tmp[510280]
      {
        unknown tmp[510287] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[582912] "expr temp" "maybe param" "maybe type" "temp"
        (582915 'move' call_tmp[582912](95350 call - 1))
        (510289 'move' tmp[510287](95353 call _build_tuple 1 call_tmp[582912]))
        (510294 'move' tmp[510279](510291 '_paramFoldLogical' tmp[510280] tmp[510287]))
      }
      {
        unknown tmp[510296] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[582919] "expr temp" "maybe param" "maybe type" "temp"
        (582922 'move' call_tmp[582919](346316 call ranges _mt[232] this[99747]))
        (510298 'move' tmp[510296](95362 call _computeChunkStuff numSublocTasks[95337](ignoreRunning = 1) minIndicesPerTask[95238] call_tmp[582919]))
        (510303 'move' tmp[510279](510300 '_paramFoldLogical' tmp[510280] tmp[510296]))
      }
      (490467 'init var' tmp[95366] tmp[510279])
      (95373 call _check_tuple_var_decl tmp[95366] 2)
      unknown call_tmp[582924] "maybe param" "maybe type" "temp"
      (582927 'move' call_tmp[582924](95367 call tmp[95366] 1))
      const numChunks[95340] "const" "insert auto destroy"
      (490469 'init var' numChunks[95340] call_tmp[582924])
      unknown call_tmp[582929] "maybe param" "maybe type" "temp"
      (582932 'move' call_tmp[582929](95370 call tmp[95366] 2))
      const parDim[95342] "const" "insert auto destroy"
      (490471 'init var' parDim[95342] call_tmp[582929])
      unknown call_tmp[582934] "expr temp" "maybe param" "maybe type" "temp"
      (582937 'move' call_tmp[582934](95403 call _cond_test debugDataParNuma[92593]))
      if call_tmp[582934]
      {
        unknown call_tmp[582941] "expr temp" "maybe param" "maybe type" "temp"
        (582944 'move' call_tmp[582941](346328 call ranges _mt[232] this[99747]))
        (95400 call chpl_debug_writeln "### numSublocs = " numSublocs[95266] "\n" "### numTasksPerSubloc = " numSublocTasks[95337] "\n" "### ignoreRunning = " ignoreRunning[95234] "\n" "### minIndicesPerTask = " minIndicesPerTask[95238] "\n" "### numChunks = " numChunks[95340] " (parDim = " parDim[95342] ")\n" "### nranges = " call_tmp[582941])
      }
      unknown call_tmp[582946] "expr temp" "maybe param" "maybe type" "temp"
      (582949 'move' call_tmp[582946](95409 call == numChunks[95340] 1))
      unknown call_tmp[582951] "expr temp" "maybe param" "maybe type" "temp"
      (582954 'move' call_tmp[582951](97107 call _cond_test call_tmp[582946]))
      if call_tmp[582951]
      {
        unknown call_tmp[582958] "expr temp" "maybe param" "maybe type" "temp"
        (582961 'move' call_tmp[582958](346334 call rank _mt[232] this[99747]))
        unknown call_tmp[582963] "expr temp" "maybe param" "maybe type" "temp"
        (582966 'move' call_tmp[582963](95413 call == call_tmp[582958] 1))
        unknown call_tmp[582968] "expr temp" "maybe param" "maybe type" "temp"
        (582971 'move' call_tmp[582968](95509 call _cond_test call_tmp[582963]))
        if call_tmp[582968]
        {
          unknown yret[465340] "YVV" "temp"
          unknown call_tmp[582973] "expr temp" "maybe param" "maybe type" "temp"
          (582976 'move' call_tmp[582973](95418 call offset[95250] 1))
          unknown call_tmp[582978] "expr temp" "maybe param" "maybe type" "temp"
          (582981 'move' call_tmp[582978](95419 call chpl_build_low_bounded_range call_tmp[582973]))
          unknown call_tmp[582985] "expr temp" "maybe param" "maybe type" "temp"
          (582988 'move' call_tmp[582985](95424 call(346340 call (partial) ranges _mt[232] this[99747]) 1))
          unknown call_tmp[582992] "expr temp" "maybe param" "maybe type" "temp"
          (582995 'move' call_tmp[582992](95425 call length _mt[232] call_tmp[582985]))
          unknown call_tmp[582997] "expr temp" "maybe param" "maybe type" "temp"
          (583000 'move' call_tmp[582997](95428 call # call_tmp[582978] call_tmp[582992]))
          unknown call_tmp[583002] "expr temp" "maybe param" "maybe type" "temp"
          (583005 'move' call_tmp[583002](95430 call _build_tuple call_tmp[582997]))
          (465343 'move' yret[465340](465342 'deref' call_tmp[583002]))
          (465345 yield yret[465340])
        }
        {
          unknown block[95442] "insert auto destroy"
          unknown call_tmp[583009] "expr temp" "maybe param" "maybe type" "temp"
          (583012 'move' call_tmp[583009](346345 call rank _mt[232] this[99747]))
          unknown call_tmp[583016] "expr temp" "maybe param" "maybe type" "temp"
          (583019 'move' call_tmp[583016](346350 call intIdxType _mt[232] this[99747]))
          unknown call_tmp[583021] "expr temp" "maybe param" "maybe type" "temp"
          (583024 'move' call_tmp[583021](95439 call range[66183](?) call_tmp[583016]))
          unknown call_tmp[583026] "expr temp" "maybe param" "maybe type" "temp"
          (583029 'move' call_tmp[583026](95440 call * call_tmp[583009] call_tmp[583021]))
          (490473 'default init var' block[95442] call_tmp[583026])
          {
            unknown i[95472] "insert auto destroy"
            (490475 'init var' i[95472] 0)
            unknown tmp[95473] "maybe param" "temp"
            unknown call_tmp[583033] "expr temp" "maybe param" "maybe type" "temp"
            (583036 'move' call_tmp[583033](346355 call rank _mt[232] this[99747]))
            (95485 'move' tmp[95473](95483 call chpl_compute_low_param_loop_bound 1 call_tmp[583033]))
            unknown tmp[95474] "maybe param" "temp"
            unknown call_tmp[583040] "expr temp" "maybe param" "maybe type" "temp"
            (583043 'move' call_tmp[583040](346370 call rank _mt[232] this[99747]))
            (95492 'move' tmp[95474](95490 call chpl_compute_high_param_loop_bound 1 call_tmp[583040]))
            unknown tmp[95475] "maybe param" "temp"
            (95495 'move' tmp[95475] 1)
            ParamForLoop
            { i[95472] tmp[95473] tmp[95474] tmp[95475]
              unknown call_tmp[583045] "expr temp" "maybe param" "maybe type" "temp"
              (583048 'move' call_tmp[583045](95453 call block[95442] i[95472]))
              unknown call_tmp[583050] "expr temp" "maybe param" "maybe type" "temp"
              (583053 'move' call_tmp[583050](95457 call offset[95250] i[95472]))
              unknown call_tmp[583055] "expr temp" "maybe param" "maybe type" "temp"
              (583058 'move' call_tmp[583055](95458 call chpl_build_low_bounded_range call_tmp[583050]))
              unknown call_tmp[583062] "expr temp" "maybe param" "maybe type" "temp"
              (583065 'move' call_tmp[583062](95463 call(346364 call (partial) ranges _mt[232] this[99747]) i[95472]))
              unknown call_tmp[583069] "expr temp" "maybe param" "maybe type" "temp"
              (583072 'move' call_tmp[583069](95464 call length _mt[232] call_tmp[583062]))
              unknown call_tmp[583074] "expr temp" "maybe param" "maybe type" "temp"
              (583077 'move' call_tmp[583074](95467 call # call_tmp[583055] call_tmp[583069]))
              (95469 call = call_tmp[583045] call_tmp[583074])
            }
            label _unused_continueLabel[95477]
            label _breakLabel[95476]
          }
          unknown yret[465347] "YVV" "temp"
          (465350 'move' yret[465347](465349 'deref' block[95442]))
          (465352 yield yret[465347])
        }
      }
      {
        {
          unknown tmpIter[96283] "expr temp" "maybe ref" "no copy" "temp"
          unknown call_tmp[583079] "expr temp" "maybe param" "maybe type" "temp"
          (583082 'move' call_tmp[583079](95516 call chpl_build_low_bounded_range 0))
          (96286 'move' tmpIter[96283](95519 call # call_tmp[583079] numChunks[95340]))
          unknown isRngDomArr[97087] "maybe param" "temp"
          unknown tmp[398031] "maybe param" "temp"
          (398042 'move' tmp[398031](97089 call isBoundedRange tmpIter[96283]))
          unknown call_tmp[583084] "expr temp" "maybe param" "maybe type" "temp"
          (583087 'move' call_tmp[583084](398044 call _cond_invalid tmp[398031]))
          if call_tmp[583084]
          {
            (398047 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[510337] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[510338] "maybe param" "temp"
          unknown call_tmp[583089] "expr temp" "maybe param" "maybe type" "temp"
          (583092 'move' call_tmp[583089](398032 call isTrue tmp[398031]))
          (510343 'move' tmp[510338](510341 call _cond_test call_tmp[583089]))
          if tmp[510338]
          {
            (510348 'move' tmp[510337](510345 '_paramFoldLogical' tmp[510338] 1))
          }
          {
            unknown tmp[398052] "maybe param" "temp"
            (398063 'move' tmp[398052](97092 call isDomain tmpIter[96283]))
            unknown call_tmp[583094] "expr temp" "maybe param" "maybe type" "temp"
            (583097 'move' call_tmp[583094](398065 call _cond_invalid tmp[398052]))
            if call_tmp[583094]
            {
              (398068 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[510310] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[510311] "maybe param" "temp"
            unknown call_tmp[583099] "expr temp" "maybe param" "maybe type" "temp"
            (583102 'move' call_tmp[583099](398053 call isTrue tmp[398052]))
            (510316 'move' tmp[510311](510314 call _cond_test call_tmp[583099]))
            if tmp[510311]
            {
              (510321 'move' tmp[510310](510318 '_paramFoldLogical' tmp[510311] 1))
            }
            {
              unknown tmp[510323] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[583104] "expr temp" "maybe param" "maybe type" "temp"
              (583107 'move' call_tmp[583104](97095 call isArray tmpIter[96283]))
              (510325 'move' tmp[510323](398057 call isTrue call_tmp[583104]))
              (510330 'move' tmp[510310](510327 '_paramFoldLogical' tmp[510311] tmp[510323]))
            }
            unknown tmp[510350] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (510352 'move' tmp[510350](398036 call isTrue tmp[510310]))
            (510357 'move' tmp[510337](510354 '_paramFoldLogical' tmp[510338] tmp[510350]))
          }
          (97102 'move' isRngDomArr[97087] tmp[510337])
          if isRngDomArr[97087]
          {
            const _coforallCount[96954] "const" "end count" "temp"
            (97023 'move' _coforallCount[96954](97020 call _endCountAlloc 1))
            unknown numTasks[96955] "temp"
            (97007 'move' numTasks[96955](97003 call size _mt[232] tmpIter[96283]))
            (96998 call _upEndCount _coforallCount[96954] 1 numTasks[96955])
            (96995 call chpl_resetTaskSpawn numTasks[96955])
            unknown _indexOfInterest[96962] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[96963] "expr temp" "temp"
            (96972 'move' _iterator[96963](96970 call _getIterator tmpIter[96283]))
            Defer
            {
              {
                (96988 call _freeIterator _iterator[96963])
              }
            }
            { scopeless type
              (96977 'move' _indexOfInterest[96962](96974 call iteratorIndex _iterator[96963]))
            }
            ForLoop
            {
              unknown chunk[96981] "coforall index var" "index var" "insert auto destroy"
              (96983 'move' chunk[96981] _indexOfInterest[96962])
              (767111 call coforall_fn[767109] numChunks[95340] offset[95250] parDim[95342] minIndicesPerTask[95238] dptpl[95289])
              function coforall_fn[767109](arg numChunks[767116], arg offset[767119], arg parDim[767122], arg minIndicesPerTask[767125], arg dptpl[767128]) : void[4] "cobegin or coforall"
              {
                {
                  const tmp[96290] "const" "temp"
                  unknown call_tmp[583111] "expr temp" "maybe param" "maybe type" "temp"
                  (583114 'move' call_tmp[583111](346563 call here[92085]))
                  unknown call_tmp[583118] "expr temp" "maybe param" "maybe type" "temp"
                  (583121 'move' call_tmp[583118](96300 call(96297 call (partial) getChild _mt[232] call_tmp[583111]) chunk[96981]))
                  unknown call_tmp[583123] "expr temp" "maybe param" "maybe type" "temp"
                  (583126 'move' call_tmp[583123](96295 '_wide_get_locale' call_tmp[583118]))
                  (96292 'move' tmp[96290](96294 'deref' call_tmp[583123]))
                  {
                    unknown call_tmp[583128] "expr temp" "maybe param" "maybe type" "temp"
                    (583131 'move' call_tmp[583128](96304 call _cond_test debugDataParNuma[92593]))
                    if call_tmp[583128]
                    {
                      unknown call_tmp[583133] "expr temp" "maybe param" "maybe type" "temp"
                      (583136 'move' call_tmp[583133](96313 call chpl_getSubloc))
                      unknown call_tmp[583138] "expr temp" "maybe param" "maybe type" "temp"
                      (583141 'move' call_tmp[583138](96310 call != chunk[96981] call_tmp[583133]))
                      unknown call_tmp[583143] "expr temp" "maybe param" "maybe type" "temp"
                      (583146 'move' call_tmp[583143](96308 call _cond_test call_tmp[583138]))
                      if call_tmp[583143]
                      {
                        unknown call_tmp[583148] "expr temp" "maybe param" "maybe type" "temp"
                        (583151 'move' call_tmp[583148](96322 call chpl_getSubloc))
                        (96317 call chpl_debug_writeln "*** ERROR: ON WRONG SUBLOC (should be " chunk[96981] ", on " call_tmp[583148] ") ***")
                      }
                    }
                    const numSublocTasks[96326] "const" "insert auto destroy"
                    unknown tmp[510364] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[510365] "maybe param" "temp"
                    unknown call_tmp[583153] "expr temp" "maybe param" "maybe type" "temp"
                    (583156 'move' call_tmp[583153](96331 call % dptpl[767128] numChunks[767116]))
                    unknown call_tmp[583158] "expr temp" "maybe param" "maybe type" "temp"
                    (583161 'move' call_tmp[583158](96328 call < chunk[96981] call_tmp[583153]))
                    (510370 'move' tmp[510365](510368 call _cond_test call_tmp[583158]))
                    if tmp[510365]
                    {
                      unknown tmp[510372] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[583163] "expr temp" "maybe param" "maybe type" "temp"
                      (583166 'move' call_tmp[583163](96338 call / dptpl[767128] numChunks[767116]))
                      (510374 'move' tmp[510372](96336 call + call_tmp[583163] 1))
                      (510379 'move' tmp[510364](510376 '_paramFoldLogical' tmp[510365] tmp[510372]))
                    }
                    {
                      unknown tmp[510381] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      (510383 'move' tmp[510381](96344 call / dptpl[767128] numChunks[767116]))
                      (510388 'move' tmp[510364](510385 '_paramFoldLogical' tmp[510365] tmp[510381]))
                    }
                    (490477 'init var' numSublocTasks[96326] tmp[510364])
                    unknown locBlock[96349] "insert auto destroy"
                    unknown call_tmp[583170] "expr temp" "maybe param" "maybe type" "temp"
                    (583173 'move' call_tmp[583170](346578 call rank _mt[232] this[99747]))
                    unknown call_tmp[583177] "expr temp" "maybe param" "maybe type" "temp"
                    (583180 'move' call_tmp[583177](346583 call intIdxType _mt[232] this[99747]))
                    unknown call_tmp[583182] "expr temp" "maybe param" "maybe type" "temp"
                    (583185 'move' call_tmp[583182](96354 call range[66183](?) call_tmp[583177]))
                    unknown call_tmp[583187] "expr temp" "maybe param" "maybe type" "temp"
                    (583190 'move' call_tmp[583187](96351 call * call_tmp[583170] call_tmp[583182]))
                    (490479 'default init var' locBlock[96349] call_tmp[583187])
                    {
                      unknown i[96358] "insert auto destroy"
                      (490481 'init var' i[96358] 0)
                      unknown tmp[96361] "maybe param" "temp"
                      unknown call_tmp[583194] "expr temp" "maybe param" "maybe type" "temp"
                      (583197 'move' call_tmp[583194](346588 call rank _mt[232] this[99747]))
                      (96363 'move' tmp[96361](96366 call chpl_compute_low_param_loop_bound 1 call_tmp[583194]))
                      unknown tmp[96369] "maybe param" "temp"
                      unknown call_tmp[583201] "expr temp" "maybe param" "maybe type" "temp"
                      (583204 'move' call_tmp[583201](346593 call rank _mt[232] this[99747]))
                      (96371 'move' tmp[96369](96374 call chpl_compute_high_param_loop_bound 1 call_tmp[583201]))
                      unknown tmp[96377] "maybe param" "temp"
                      (96379 'move' tmp[96377] 1)
                      ParamForLoop
                      { i[96358] tmp[96361] tmp[96369] tmp[96377]
                        unknown call_tmp[583206] "expr temp" "maybe param" "maybe type" "temp"
                        (583209 'move' call_tmp[583206](96392 call locBlock[96349] i[96358]))
                        unknown call_tmp[583211] "expr temp" "maybe param" "maybe type" "temp"
                        (583214 'move' call_tmp[583211](96399 call offset[767119] i[96358]))
                        unknown call_tmp[583216] "expr temp" "maybe param" "maybe type" "temp"
                        (583219 'move' call_tmp[583216](96397 call chpl_build_low_bounded_range call_tmp[583211]))
                        unknown call_tmp[583223] "expr temp" "maybe param" "maybe type" "temp"
                        (583226 'move' call_tmp[583223](96404 call(346602 call (partial) ranges _mt[232] this[99747]) i[96358]))
                        unknown call_tmp[583230] "expr temp" "maybe param" "maybe type" "temp"
                        (583233 'move' call_tmp[583230](96402 call length _mt[232] call_tmp[583223]))
                        unknown call_tmp[583235] "expr temp" "maybe param" "maybe type" "temp"
                        (583238 'move' call_tmp[583235](96395 call # call_tmp[583216] call_tmp[583230]))
                        (96390 call = call_tmp[583206] call_tmp[583235])
                      }
                      label _unused_continueLabel[96407]
                      label _breakLabel[96409]
                    }
                    unknown call_tmp[583242] "expr temp" "maybe param" "maybe type" "temp"
                    (583245 'move' call_tmp[583242](346609 call rank _mt[232] this[99747]))
                    unknown call_tmp[583249] "expr temp" "maybe param" "maybe type" "temp"
                    (583252 'move' call_tmp[583249](346614 call intIdxType _mt[232] this[99747]))
                    unknown call_tmp[583254] "expr temp" "maybe param" "maybe type" "temp"
                    (583257 'move' call_tmp[583254](96417 call range[66183](?) call_tmp[583249]))
                    unknown call_tmp[583259] "maybe param" "maybe type" "temp"
                    (583262 'move' call_tmp[583259](96414 call * call_tmp[583242] call_tmp[583254]))
                    unknown followMe[96411] "insert auto destroy"
                    (490483 'init var' followMe[96411] locBlock[96349] call_tmp[583259])
                    unknown call_tmp[583264] "expr temp" "maybe param" "maybe type" "temp"
                    (583267 'move' call_tmp[583264](96427 call locBlock[96349] parDim[767122]))
                    unknown call_tmp[583271] "expr temp" "maybe param" "maybe type" "temp"
                    (583274 'move' call_tmp[583271](96425 call length _mt[232] call_tmp[583264]))
                    unknown call_tmp[583276] "expr temp" "maybe param" "maybe type" "temp"
                    (583279 'move' call_tmp[583276](96435 call locBlock[96349] parDim[767122]))
                    unknown call_tmp[583283] "expr temp" "maybe param" "maybe type" "temp"
                    (583286 'move' call_tmp[583283](96433 call _high _mt[232] call_tmp[583276]))
                    unknown call_tmp[583288] "expr temp" "maybe param" "maybe type" "temp"
                    (583291 'move' call_tmp[583288](96441 call locBlock[96349] parDim[767122]))
                    unknown call_tmp[583295] "expr temp" "maybe param" "maybe type" "temp"
                    (583298 'move' call_tmp[583295](96439 call _low _mt[232] call_tmp[583288]))
                    unknown call_tmp[583300] "expr temp" "maybe param" "maybe type" "temp"
                    (583303 'move' call_tmp[583300](96447 call locBlock[96349] parDim[767122]))
                    unknown call_tmp[583307] "expr temp" "maybe param" "maybe type" "temp"
                    (583310 'move' call_tmp[583307](96445 call _low _mt[232] call_tmp[583300]))
                    unknown call_tmp[583312] "maybe param" "maybe type" "temp"
                    (583315 'move' call_tmp[583312](96423 call _computeBlock call_tmp[583271] numChunks[767116] chunk[96981] call_tmp[583283] call_tmp[583295] call_tmp[583307]))
                    const tmp[96421] "const" "insert auto destroy" "no copy" "temp"
                    (490485 'init var' tmp[96421] call_tmp[583312])
                    (96452 call _check_tuple_var_decl tmp[96421] 2)
                    unknown call_tmp[583317] "maybe param" "maybe type" "temp"
                    (583320 'move' call_tmp[583317](96457 call tmp[96421] 1))
                    const lo[96455] "const" "insert auto destroy"
                    (490487 'init var' lo[96455] call_tmp[583317])
                    unknown call_tmp[583322] "maybe param" "maybe type" "temp"
                    (583325 'move' call_tmp[583322](96462 call tmp[96421] 2))
                    const hi[96460] "const" "insert auto destroy"
                    (490489 'init var' hi[96460] call_tmp[583322])
                    unknown call_tmp[583327] "expr temp" "maybe param" "maybe type" "temp"
                    (583330 'move' call_tmp[583327](96468 call followMe[96411] parDim[767122]))
                    unknown call_tmp[583332] "expr temp" "maybe param" "maybe type" "temp"
                    (583335 'move' call_tmp[583332](96471 call chpl_build_bounded_range lo[96455] hi[96460]))
                    (96466 call = call_tmp[583327] call_tmp[583332])
                    unknown call_tmp[583337] "maybe param" "maybe type" "temp"
                    (583340 'move' call_tmp[583337](96477 call _computeChunkStuff numSublocTasks[96326](ignoreRunning = 1) minIndicesPerTask[767125] followMe[96411]))
                    const tmp[96475] "const" "insert auto destroy" "no copy" "temp"
                    (490491 'init var' tmp[96475] call_tmp[583337])
                    (96485 call _check_tuple_var_decl tmp[96475] 2)
                    unknown call_tmp[583342] "maybe param" "maybe type" "temp"
                    (583345 'move' call_tmp[583342](96490 call tmp[96475] 1))
                    const numChunks2[96488] "const" "insert auto destroy"
                    (490493 'init var' numChunks2[96488] call_tmp[583342])
                    unknown call_tmp[583347] "maybe param" "maybe type" "temp"
                    (583350 'move' call_tmp[583347](96495 call tmp[96475] 2))
                    const parDim2[96493] "const" "insert auto destroy"
                    (490495 'init var' parDim2[96493] call_tmp[583347])
                    {
                      unknown tmpIter[96499] "expr temp" "maybe ref" "no copy" "temp"
                      unknown call_tmp[583352] "expr temp" "maybe param" "maybe type" "temp"
                      (583355 'move' call_tmp[583352](96506 call chpl_build_low_bounded_range 0))
                      (96501 'move' tmpIter[96499](96504 call # call_tmp[583352] numChunks2[96488]))
                      unknown isRngDomArr[96509] "maybe param" "temp"
                      unknown tmp[397989] "maybe param" "temp"
                      (398000 'move' tmp[397989](96516 call isBoundedRange tmpIter[96499]))
                      unknown call_tmp[583357] "expr temp" "maybe param" "maybe type" "temp"
                      (583360 'move' call_tmp[583357](398002 call _cond_invalid tmp[397989]))
                      if call_tmp[583357]
                      {
                        (398005 call compilerError "cannot promote short-circuiting || operator")
                      }
                      unknown tmp[510422] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[510423] "maybe param" "temp"
                      unknown call_tmp[583362] "expr temp" "maybe param" "maybe type" "temp"
                      (583365 'move' call_tmp[583362](397990 call isTrue tmp[397989]))
                      (510428 'move' tmp[510423](510426 call _cond_test call_tmp[583362]))
                      if tmp[510423]
                      {
                        (510433 'move' tmp[510422](510430 '_paramFoldLogical' tmp[510423] 1))
                      }
                      {
                        unknown tmp[398010] "maybe param" "temp"
                        (398021 'move' tmp[398010](96521 call isDomain tmpIter[96499]))
                        unknown call_tmp[583367] "expr temp" "maybe param" "maybe type" "temp"
                        (583370 'move' call_tmp[583367](398023 call _cond_invalid tmp[398010]))
                        if call_tmp[583367]
                        {
                          (398026 call compilerError "cannot promote short-circuiting || operator")
                        }
                        unknown tmp[510395] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                        unknown tmp[510396] "maybe param" "temp"
                        unknown call_tmp[583372] "expr temp" "maybe param" "maybe type" "temp"
                        (583375 'move' call_tmp[583372](398011 call isTrue tmp[398010]))
                        (510401 'move' tmp[510396](510399 call _cond_test call_tmp[583372]))
                        if tmp[510396]
                        {
                          (510406 'move' tmp[510395](510403 '_paramFoldLogical' tmp[510396] 1))
                        }
                        {
                          unknown tmp[510408] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                          unknown call_tmp[583377] "expr temp" "maybe param" "maybe type" "temp"
                          (583380 'move' call_tmp[583377](96524 call isArray tmpIter[96499]))
                          (510410 'move' tmp[510408](398015 call isTrue call_tmp[583377]))
                          (510415 'move' tmp[510395](510412 '_paramFoldLogical' tmp[510396] tmp[510408]))
                        }
                        unknown tmp[510435] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        (510437 'move' tmp[510435](397994 call isTrue tmp[510395]))
                        (510442 'move' tmp[510422](510439 '_paramFoldLogical' tmp[510423] tmp[510435]))
                      }
                      (96511 'move' isRngDomArr[96509] tmp[510422])
                      if isRngDomArr[96509]
                      {
                        const _coforallCount[96528] "const" "end count" "temp"
                        (96530 'move' _coforallCount[96528](96533 call _endCountAlloc 1))
                        unknown numTasks[96535] "temp"
                        (96537 'move' numTasks[96535](96540 call size _mt[232] tmpIter[96499]))
                        (96544 call _upEndCount _coforallCount[96528] 1 numTasks[96535])
                        (96549 call chpl_resetTaskSpawn numTasks[96535])
                        unknown _indexOfInterest[96551] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        unknown _iterator[96553] "expr temp" "temp"
                        (96555 'move' _iterator[96553](96558 call _getIterator tmpIter[96499]))
                        Defer
                        {
                          {
                            (96562 call _freeIterator _iterator[96553])
                          }
                        }
                        { scopeless type
                          (96566 'move' _indexOfInterest[96551](96569 call iteratorIndex _iterator[96553]))
                        }
                        ForLoop
                        {
                          unknown chunk2[96574] "coforall index var" "index var" "insert auto destroy"
                          (96576 'move' chunk2[96574] _indexOfInterest[96551])
                          (767073 call coforall_fn[767071] followMe[96411] numChunks2[96488] chunk[96981] parDim2[96493])
                          function coforall_fn[767071](arg followMe[767078], arg numChunks2[767081], arg chunk[767084], arg parDim2[767087]) : void[4] "cobegin or coforall"
                          {
                            {
                              unknown locBlock2[96582] "insert auto destroy"
                              unknown call_tmp[583386] "expr temp" "maybe param" "maybe type" "temp"
                              (583389 'move' call_tmp[583386](346637 call rank _mt[232] this[99747]))
                              unknown call_tmp[583393] "expr temp" "maybe param" "maybe type" "temp"
                              (583396 'move' call_tmp[583393](346642 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[583398] "expr temp" "maybe param" "maybe type" "temp"
                              (583401 'move' call_tmp[583398](96587 call range[66183](?) call_tmp[583393]))
                              unknown call_tmp[583403] "expr temp" "maybe param" "maybe type" "temp"
                              (583406 'move' call_tmp[583403](96584 call * call_tmp[583386] call_tmp[583398]))
                              (490497 'default init var' locBlock2[96582] call_tmp[583403])
                              {
                                unknown i[96591] "insert auto destroy"
                                (490499 'init var' i[96591] 0)
                                unknown tmp[96594] "maybe param" "temp"
                                unknown call_tmp[583410] "expr temp" "maybe param" "maybe type" "temp"
                                (583413 'move' call_tmp[583410](346647 call rank _mt[232] this[99747]))
                                (96596 'move' tmp[96594](96599 call chpl_compute_low_param_loop_bound 1 call_tmp[583410]))
                                unknown tmp[96602] "maybe param" "temp"
                                unknown call_tmp[583417] "expr temp" "maybe param" "maybe type" "temp"
                                (583420 'move' call_tmp[583417](346652 call rank _mt[232] this[99747]))
                                (96604 'move' tmp[96602](96607 call chpl_compute_high_param_loop_bound 1 call_tmp[583417]))
                                unknown tmp[96610] "maybe param" "temp"
                                (96612 'move' tmp[96610] 1)
                                ParamForLoop
                                { i[96591] tmp[96594] tmp[96602] tmp[96610]
                                  unknown call_tmp[583422] "expr temp" "maybe param" "maybe type" "temp"
                                  (583425 'move' call_tmp[583422](96625 call locBlock2[96582] i[96591]))
                                  unknown call_tmp[583427] "expr temp" "maybe param" "maybe type" "temp"
                                  (583430 'move' call_tmp[583427](96632 call followMe[767078] i[96591]))
                                  unknown call_tmp[583434] "expr temp" "maybe param" "maybe type" "temp"
                                  (583437 'move' call_tmp[583434](96630 call low _mt[232] call_tmp[583427]))
                                  unknown call_tmp[583439] "expr temp" "maybe param" "maybe type" "temp"
                                  (583442 'move' call_tmp[583439](96638 call followMe[767078] i[96591]))
                                  unknown call_tmp[583446] "expr temp" "maybe param" "maybe type" "temp"
                                  (583449 'move' call_tmp[583446](96636 call high _mt[232] call_tmp[583439]))
                                  unknown call_tmp[583451] "expr temp" "maybe param" "maybe type" "temp"
                                  (583454 'move' call_tmp[583451](96628 call chpl_build_bounded_range call_tmp[583434] call_tmp[583446]))
                                  (96623 call = call_tmp[583422] call_tmp[583451])
                                }
                                label _unused_continueLabel[96641]
                                label _breakLabel[96643]
                              }
                              unknown call_tmp[583458] "expr temp" "maybe param" "maybe type" "temp"
                              (583461 'move' call_tmp[583458](346664 call rank _mt[232] this[99747]))
                              unknown call_tmp[583465] "expr temp" "maybe param" "maybe type" "temp"
                              (583468 'move' call_tmp[583465](346669 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[583470] "expr temp" "maybe param" "maybe type" "temp"
                              (583473 'move' call_tmp[583470](96651 call range[66183](?) call_tmp[583465]))
                              unknown call_tmp[583475] "maybe param" "maybe type" "temp"
                              (583478 'move' call_tmp[583475](96648 call * call_tmp[583458] call_tmp[583470]))
                              unknown followMe2[96645] "insert auto destroy"
                              (490501 'init var' followMe2[96645] locBlock2[96582] call_tmp[583475])
                              unknown call_tmp[583480] "expr temp" "maybe param" "maybe type" "temp"
                              (583483 'move' call_tmp[583480](96659 call locBlock2[96582] parDim2[767087]))
                              unknown call_tmp[583487] "maybe param" "maybe type" "temp"
                              (583490 'move' call_tmp[583487](96657 call _low _mt[232] call_tmp[583480]))
                              const low[96655] "const" "insert auto destroy"
                              (490503 'init var' low[96655] call_tmp[583487])
                              unknown call_tmp[583492] "expr temp" "maybe param" "maybe type" "temp"
                              (583495 'move' call_tmp[583492](96667 call locBlock2[96582] parDim2[767087]))
                              unknown call_tmp[583499] "maybe param" "maybe type" "temp"
                              (583502 'move' call_tmp[583499](96665 call _high _mt[232] call_tmp[583492]))
                              const high[96663] "const" "insert auto destroy"
                              (490505 'init var' high[96663] call_tmp[583499])
                              unknown call_tmp[583504] "expr temp" "maybe param" "maybe type" "temp"
                              (583507 'move' call_tmp[583504](96678 call locBlock2[96582] parDim2[767087]))
                              unknown call_tmp[583511] "expr temp" "maybe param" "maybe type" "temp"
                              (583514 'move' call_tmp[583511](96676 call length _mt[232] call_tmp[583504]))
                              unknown call_tmp[583516] "maybe param" "maybe type" "temp"
                              (583519 'move' call_tmp[583516](96674 call _computeBlock call_tmp[583511] numChunks2[767081] chunk2[96574] high[96663] low[96655] low[96655]))
                              const tmp[96672] "const" "insert auto destroy" "no copy" "temp"
                              (490507 'init var' tmp[96672] call_tmp[583516])
                              (96688 call _check_tuple_var_decl tmp[96672] 2)
                              unknown call_tmp[583521] "maybe param" "maybe type" "temp"
                              (583524 'move' call_tmp[583521](96693 call tmp[96672] 1))
                              const lo[96691] "const" "insert auto destroy"
                              (490509 'init var' lo[96691] call_tmp[583521])
                              unknown call_tmp[583526] "maybe param" "maybe type" "temp"
                              (583529 'move' call_tmp[583526](96698 call tmp[96672] 2))
                              const hi[96696] "const" "insert auto destroy"
                              (490511 'init var' hi[96696] call_tmp[583526])
                              unknown call_tmp[583531] "expr temp" "maybe param" "maybe type" "temp"
                              (583534 'move' call_tmp[583531](96704 call followMe2[96645] parDim2[767087]))
                              unknown call_tmp[583536] "expr temp" "maybe param" "maybe type" "temp"
                              (583539 'move' call_tmp[583536](96707 call chpl_build_bounded_range lo[96691] hi[96696]))
                              (96702 call = call_tmp[583531] call_tmp[583536])
                              unknown call_tmp[583541] "expr temp" "maybe param" "maybe type" "temp"
                              (583544 'move' call_tmp[583541](96711 call _cond_test debugDataParNuma[92593]))
                              if call_tmp[583541]
                              {
                                (96715 call chpl_debug_writeln "### chunk = " chunk[767084] "  chunk2 = " chunk2[96574] "  " "followMe = " followMe[767078] "  followMe2 = " followMe2[96645])
                              }
                              unknown yret[465354] "YVV" "temp"
                              (465357 'move' yret[465354](465356 'deref' followMe2[96645]))
                              (465359 yield yret[465354])
                            }
                            (96729 call _downEndCount _coforallCount[96528] nil[38])
                            (767076 return _void[47])
                          }
                          {
                          }
                          label _continueLabel[96732]
                          _indexOfInterest[96551]
                          _iterator[96553]
                        }
                        label _breakLabel[96734]
                        Defer
                        {
                          {
                            (96738 call _endCountFree _coforallCount[96528])
                          }
                        }
                        (96742 call _waitEndCount _coforallCount[96528] 1 numTasks[96535])
                      }
                      {
                        const _coforallCount[96747] "const" "end count" "temp"
                        (96749 'move' _coforallCount[96747](96752 call _endCountAlloc 1))
                        unknown _indexOfInterest[96754] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        unknown _iterator[96756] "expr temp" "temp"
                        (96758 'move' _iterator[96756](96761 call _getIterator tmpIter[96499]))
                        Defer
                        {
                          {
                            (96765 call _freeIterator _iterator[96756])
                          }
                        }
                        { scopeless type
                          (96769 'move' _indexOfInterest[96754](96772 call iteratorIndex _iterator[96756]))
                        }
                        ForLoop
                        {
                          unknown chunk2[96777] "coforall index var" "index var" "insert auto destroy"
                          (96779 'move' chunk2[96777] _indexOfInterest[96754])
                          (96783 call _upEndCount _coforallCount[96747] 1)
                          (767092 call coforall_fn[767090] followMe[96411] numChunks2[96488] chunk[96981] parDim2[96493])
                          function coforall_fn[767090](arg followMe[767097], arg numChunks2[767100], arg chunk[767103], arg parDim2[767106]) : void[4] "cobegin or coforall"
                          {
                            {
                              unknown locBlock2[96789] "insert auto destroy"
                              unknown call_tmp[583548] "expr temp" "maybe param" "maybe type" "temp"
                              (583551 'move' call_tmp[583548](346695 call rank _mt[232] this[99747]))
                              unknown call_tmp[583555] "expr temp" "maybe param" "maybe type" "temp"
                              (583558 'move' call_tmp[583555](346700 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[583560] "expr temp" "maybe param" "maybe type" "temp"
                              (583563 'move' call_tmp[583560](96794 call range[66183](?) call_tmp[583555]))
                              unknown call_tmp[583565] "expr temp" "maybe param" "maybe type" "temp"
                              (583568 'move' call_tmp[583565](96791 call * call_tmp[583548] call_tmp[583560]))
                              (490513 'default init var' locBlock2[96789] call_tmp[583565])
                              {
                                unknown i[96798] "insert auto destroy"
                                (490515 'init var' i[96798] 0)
                                unknown tmp[96801] "maybe param" "temp"
                                unknown call_tmp[583572] "expr temp" "maybe param" "maybe type" "temp"
                                (583575 'move' call_tmp[583572](346705 call rank _mt[232] this[99747]))
                                (96803 'move' tmp[96801](96806 call chpl_compute_low_param_loop_bound 1 call_tmp[583572]))
                                unknown tmp[96809] "maybe param" "temp"
                                unknown call_tmp[583579] "expr temp" "maybe param" "maybe type" "temp"
                                (583582 'move' call_tmp[583579](346710 call rank _mt[232] this[99747]))
                                (96811 'move' tmp[96809](96814 call chpl_compute_high_param_loop_bound 1 call_tmp[583579]))
                                unknown tmp[96817] "maybe param" "temp"
                                (96819 'move' tmp[96817] 1)
                                ParamForLoop
                                { i[96798] tmp[96801] tmp[96809] tmp[96817]
                                  unknown call_tmp[583584] "expr temp" "maybe param" "maybe type" "temp"
                                  (583587 'move' call_tmp[583584](96832 call locBlock2[96789] i[96798]))
                                  unknown call_tmp[583589] "expr temp" "maybe param" "maybe type" "temp"
                                  (583592 'move' call_tmp[583589](96839 call followMe[767097] i[96798]))
                                  unknown call_tmp[583596] "expr temp" "maybe param" "maybe type" "temp"
                                  (583599 'move' call_tmp[583596](96837 call low _mt[232] call_tmp[583589]))
                                  unknown call_tmp[583601] "expr temp" "maybe param" "maybe type" "temp"
                                  (583604 'move' call_tmp[583601](96845 call followMe[767097] i[96798]))
                                  unknown call_tmp[583608] "expr temp" "maybe param" "maybe type" "temp"
                                  (583611 'move' call_tmp[583608](96843 call high _mt[232] call_tmp[583601]))
                                  unknown call_tmp[583613] "expr temp" "maybe param" "maybe type" "temp"
                                  (583616 'move' call_tmp[583613](96835 call chpl_build_bounded_range call_tmp[583596] call_tmp[583608]))
                                  (96830 call = call_tmp[583584] call_tmp[583613])
                                }
                                label _unused_continueLabel[96848]
                                label _breakLabel[96850]
                              }
                              unknown call_tmp[583620] "expr temp" "maybe param" "maybe type" "temp"
                              (583623 'move' call_tmp[583620](346722 call rank _mt[232] this[99747]))
                              unknown call_tmp[583627] "expr temp" "maybe param" "maybe type" "temp"
                              (583630 'move' call_tmp[583627](346727 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[583632] "expr temp" "maybe param" "maybe type" "temp"
                              (583635 'move' call_tmp[583632](96858 call range[66183](?) call_tmp[583627]))
                              unknown call_tmp[583637] "maybe param" "maybe type" "temp"
                              (583640 'move' call_tmp[583637](96855 call * call_tmp[583620] call_tmp[583632]))
                              unknown followMe2[96852] "insert auto destroy"
                              (490517 'init var' followMe2[96852] locBlock2[96789] call_tmp[583637])
                              unknown call_tmp[583642] "expr temp" "maybe param" "maybe type" "temp"
                              (583645 'move' call_tmp[583642](96866 call locBlock2[96789] parDim2[767106]))
                              unknown call_tmp[583649] "maybe param" "maybe type" "temp"
                              (583652 'move' call_tmp[583649](96864 call _low _mt[232] call_tmp[583642]))
                              const low[96862] "const" "insert auto destroy"
                              (490519 'init var' low[96862] call_tmp[583649])
                              unknown call_tmp[583654] "expr temp" "maybe param" "maybe type" "temp"
                              (583657 'move' call_tmp[583654](96874 call locBlock2[96789] parDim2[767106]))
                              unknown call_tmp[583661] "maybe param" "maybe type" "temp"
                              (583664 'move' call_tmp[583661](96872 call _high _mt[232] call_tmp[583654]))
                              const high[96870] "const" "insert auto destroy"
                              (490521 'init var' high[96870] call_tmp[583661])
                              unknown call_tmp[583666] "expr temp" "maybe param" "maybe type" "temp"
                              (583669 'move' call_tmp[583666](96885 call locBlock2[96789] parDim2[767106]))
                              unknown call_tmp[583673] "expr temp" "maybe param" "maybe type" "temp"
                              (583676 'move' call_tmp[583673](96883 call length _mt[232] call_tmp[583666]))
                              unknown call_tmp[583678] "maybe param" "maybe type" "temp"
                              (583681 'move' call_tmp[583678](96881 call _computeBlock call_tmp[583673] numChunks2[767100] chunk2[96777] high[96870] low[96862] low[96862]))
                              const tmp[96879] "const" "insert auto destroy" "no copy" "temp"
                              (490523 'init var' tmp[96879] call_tmp[583678])
                              (96895 call _check_tuple_var_decl tmp[96879] 2)
                              unknown call_tmp[583683] "maybe param" "maybe type" "temp"
                              (583686 'move' call_tmp[583683](96900 call tmp[96879] 1))
                              const lo[96898] "const" "insert auto destroy"
                              (490525 'init var' lo[96898] call_tmp[583683])
                              unknown call_tmp[583688] "maybe param" "maybe type" "temp"
                              (583691 'move' call_tmp[583688](96905 call tmp[96879] 2))
                              const hi[96903] "const" "insert auto destroy"
                              (490527 'init var' hi[96903] call_tmp[583688])
                              unknown call_tmp[583693] "expr temp" "maybe param" "maybe type" "temp"
                              (583696 'move' call_tmp[583693](96911 call followMe2[96852] parDim2[767106]))
                              unknown call_tmp[583698] "expr temp" "maybe param" "maybe type" "temp"
                              (583701 'move' call_tmp[583698](96914 call chpl_build_bounded_range lo[96898] hi[96903]))
                              (96909 call = call_tmp[583693] call_tmp[583698])
                              unknown call_tmp[583703] "expr temp" "maybe param" "maybe type" "temp"
                              (583706 'move' call_tmp[583703](96918 call _cond_test debugDataParNuma[92593]))
                              if call_tmp[583703]
                              {
                                (96922 call chpl_debug_writeln "### chunk = " chunk[767103] "  chunk2 = " chunk2[96777] "  " "followMe = " followMe[767097] "  followMe2 = " followMe2[96852])
                              }
                              unknown yret[465361] "YVV" "temp"
                              (465364 'move' yret[465361](465363 'deref' followMe2[96852]))
                              (465366 yield yret[465361])
                            }
                            (96936 call _downEndCount _coforallCount[96747] nil[38])
                            (767095 return _void[47])
                          }
                          {
                          }
                          label _continueLabel[96939]
                          _indexOfInterest[96754]
                          _iterator[96756]
                        }
                        label _breakLabel[96941]
                        Defer
                        {
                          {
                            (96945 call _endCountFree _coforallCount[96747])
                          }
                        }
                        (96949 call _waitEndCount _coforallCount[96747] 1)
                      }
                    }
                  }
                }
                (96957 call _downEndCount _coforallCount[96954] nil[38])
                (767114 return _void[47])
              }
              {
              }
              label _continueLabel[96967]
              _indexOfInterest[96962]
              _iterator[96963]
            }
            label _breakLabel[96968]
            Defer
            {
              {
                (97010 call _endCountFree _coforallCount[96954])
              }
            }
            (97015 call _waitEndCount _coforallCount[96954] 1 numTasks[96955])
          }
          {
            const _coforallCount[97027] "const" "end count" "temp"
            (97084 'move' _coforallCount[97027](97081 call _endCountAlloc 1))
            unknown _indexOfInterest[97035] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[97036] "expr temp" "temp"
            (97045 'move' _iterator[97036](97043 call _getIterator tmpIter[96283]))
            Defer
            {
              {
                (97061 call _freeIterator _iterator[97036])
              }
            }
            { scopeless type
              (97050 'move' _indexOfInterest[97035](97047 call iteratorIndex _iterator[97036]))
            }
            ForLoop
            {
              unknown chunk[97054] "coforall index var" "index var" "insert auto destroy"
              (97056 'move' chunk[97054] _indexOfInterest[97035])
              (97068 call _upEndCount _coforallCount[97027] 1)
              (767133 call coforall_fn[767131] numChunks[95340] offset[95250] parDim[95342] minIndicesPerTask[95238] dptpl[95289])
              function coforall_fn[767131](arg numChunks[767138], arg offset[767141], arg parDim[767144], arg minIndicesPerTask[767147], arg dptpl[767150]) : void[4] "cobegin or coforall"
              {
                {
                  const tmp[96276] "const" "temp"
                  unknown call_tmp[583708] "expr temp" "maybe param" "maybe type" "temp"
                  (583711 'move' call_tmp[583708](346375 call here[92085]))
                  unknown call_tmp[583715] "expr temp" "maybe param" "maybe type" "temp"
                  (583718 'move' call_tmp[583715](95527 call(95522 call (partial) getChild _mt[232] call_tmp[583708]) chunk[97054]))
                  unknown call_tmp[583720] "expr temp" "maybe param" "maybe type" "temp"
                  (583723 'move' call_tmp[583720](96273 '_wide_get_locale' call_tmp[583715]))
                  (96277 'move' tmp[96276](96274 'deref' call_tmp[583720]))
                  {
                    unknown call_tmp[583725] "expr temp" "maybe param" "maybe type" "temp"
                    (583728 'move' call_tmp[583725](95552 call _cond_test debugDataParNuma[92593]))
                    if call_tmp[583725]
                    {
                      unknown call_tmp[583730] "expr temp" "maybe param" "maybe type" "temp"
                      (583733 'move' call_tmp[583730](95532 call chpl_getSubloc))
                      unknown call_tmp[583735] "expr temp" "maybe param" "maybe type" "temp"
                      (583738 'move' call_tmp[583735](95533 call != chunk[97054] call_tmp[583730]))
                      unknown call_tmp[583740] "expr temp" "maybe param" "maybe type" "temp"
                      (583743 'move' call_tmp[583740](95546 call _cond_test call_tmp[583735]))
                      if call_tmp[583740]
                      {
                        unknown call_tmp[583745] "expr temp" "maybe param" "maybe type" "temp"
                        (583748 'move' call_tmp[583745](95542 call chpl_getSubloc))
                        (95544 call chpl_debug_writeln "*** ERROR: ON WRONG SUBLOC (should be " chunk[97054] ", on " call_tmp[583745] ") ***")
                      }
                    }
                    const numSublocTasks[95578] "const" "insert auto destroy"
                    unknown tmp[510449] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[510450] "maybe param" "temp"
                    unknown call_tmp[583750] "expr temp" "maybe param" "maybe type" "temp"
                    (583753 'move' call_tmp[583750](95560 call % dptpl[767150] numChunks[767138]))
                    unknown call_tmp[583755] "expr temp" "maybe param" "maybe type" "temp"
                    (583758 'move' call_tmp[583755](95562 call < chunk[97054] call_tmp[583750]))
                    (510455 'move' tmp[510450](510453 call _cond_test call_tmp[583755]))
                    if tmp[510450]
                    {
                      unknown tmp[510457] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[583760] "expr temp" "maybe param" "maybe type" "temp"
                      (583763 'move' call_tmp[583760](95566 call / dptpl[767150] numChunks[767138]))
                      (510459 'move' tmp[510457](95569 call + call_tmp[583760] 1))
                      (510464 'move' tmp[510449](510461 '_paramFoldLogical' tmp[510450] tmp[510457]))
                    }
                    {
                      unknown tmp[510466] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      (510468 'move' tmp[510466](95573 call / dptpl[767150] numChunks[767138]))
                      (510473 'move' tmp[510449](510470 '_paramFoldLogical' tmp[510450] tmp[510466]))
                    }
                    (490529 'init var' numSublocTasks[95578] tmp[510449])
                    unknown locBlock[95588] "insert auto destroy"
                    unknown call_tmp[583767] "expr temp" "maybe param" "maybe type" "temp"
                    (583770 'move' call_tmp[583767](346390 call rank _mt[232] this[99747]))
                    unknown call_tmp[583774] "expr temp" "maybe param" "maybe type" "temp"
                    (583777 'move' call_tmp[583774](346395 call intIdxType _mt[232] this[99747]))
                    unknown call_tmp[583779] "expr temp" "maybe param" "maybe type" "temp"
                    (583782 'move' call_tmp[583779](95585 call range[66183](?) call_tmp[583774]))
                    unknown call_tmp[583784] "expr temp" "maybe param" "maybe type" "temp"
                    (583787 'move' call_tmp[583784](95586 call * call_tmp[583767] call_tmp[583779]))
                    (490531 'default init var' locBlock[95588] call_tmp[583784])
                    {
                      unknown i[95617] "insert auto destroy"
                      (490533 'init var' i[95617] 0)
                      unknown tmp[95618] "maybe param" "temp"
                      unknown call_tmp[583791] "expr temp" "maybe param" "maybe type" "temp"
                      (583794 'move' call_tmp[583791](346400 call rank _mt[232] this[99747]))
                      (95630 'move' tmp[95618](95628 call chpl_compute_low_param_loop_bound 1 call_tmp[583791]))
                      unknown tmp[95619] "maybe param" "temp"
                      unknown call_tmp[583798] "expr temp" "maybe param" "maybe type" "temp"
                      (583801 'move' call_tmp[583798](346415 call rank _mt[232] this[99747]))
                      (95637 'move' tmp[95619](95635 call chpl_compute_high_param_loop_bound 1 call_tmp[583798]))
                      unknown tmp[95620] "maybe param" "temp"
                      (95640 'move' tmp[95620] 1)
                      ParamForLoop
                      { i[95617] tmp[95618] tmp[95619] tmp[95620]
                        unknown call_tmp[583803] "expr temp" "maybe param" "maybe type" "temp"
                        (583806 'move' call_tmp[583803](95598 call locBlock[95588] i[95617]))
                        unknown call_tmp[583808] "expr temp" "maybe param" "maybe type" "temp"
                        (583811 'move' call_tmp[583808](95602 call offset[767141] i[95617]))
                        unknown call_tmp[583813] "expr temp" "maybe param" "maybe type" "temp"
                        (583816 'move' call_tmp[583813](95603 call chpl_build_low_bounded_range call_tmp[583808]))
                        unknown call_tmp[583820] "expr temp" "maybe param" "maybe type" "temp"
                        (583823 'move' call_tmp[583820](95608 call(346409 call (partial) ranges _mt[232] this[99747]) i[95617]))
                        unknown call_tmp[583827] "expr temp" "maybe param" "maybe type" "temp"
                        (583830 'move' call_tmp[583827](95609 call length _mt[232] call_tmp[583820]))
                        unknown call_tmp[583832] "expr temp" "maybe param" "maybe type" "temp"
                        (583835 'move' call_tmp[583832](95612 call # call_tmp[583813] call_tmp[583827]))
                        (95614 call = call_tmp[583803] call_tmp[583832])
                      }
                      label _unused_continueLabel[95622]
                      label _breakLabel[95621]
                    }
                    unknown call_tmp[583839] "expr temp" "maybe param" "maybe type" "temp"
                    (583842 'move' call_tmp[583839](346420 call rank _mt[232] this[99747]))
                    unknown call_tmp[583846] "expr temp" "maybe param" "maybe type" "temp"
                    (583849 'move' call_tmp[583846](346425 call intIdxType _mt[232] this[99747]))
                    unknown call_tmp[583851] "expr temp" "maybe param" "maybe type" "temp"
                    (583854 'move' call_tmp[583851](95655 call range[66183](?) call_tmp[583846]))
                    unknown call_tmp[583856] "maybe param" "maybe type" "temp"
                    (583859 'move' call_tmp[583856](95656 call * call_tmp[583839] call_tmp[583851]))
                    unknown followMe[95659] "insert auto destroy"
                    (490535 'init var' followMe[95659] locBlock[95588] call_tmp[583856])
                    unknown call_tmp[583861] "expr temp" "maybe param" "maybe type" "temp"
                    (583864 'move' call_tmp[583861](95671 call locBlock[95588] parDim[767144]))
                    unknown call_tmp[583868] "expr temp" "maybe param" "maybe type" "temp"
                    (583871 'move' call_tmp[583868](95672 call length _mt[232] call_tmp[583861]))
                    unknown call_tmp[583873] "expr temp" "maybe param" "maybe type" "temp"
                    (583876 'move' call_tmp[583873](95681 call locBlock[95588] parDim[767144]))
                    unknown call_tmp[583880] "expr temp" "maybe param" "maybe type" "temp"
                    (583883 'move' call_tmp[583880](95682 call _high _mt[232] call_tmp[583873]))
                    unknown call_tmp[583885] "expr temp" "maybe param" "maybe type" "temp"
                    (583888 'move' call_tmp[583885](95688 call locBlock[95588] parDim[767144]))
                    unknown call_tmp[583892] "expr temp" "maybe param" "maybe type" "temp"
                    (583895 'move' call_tmp[583892](95689 call _low _mt[232] call_tmp[583885]))
                    unknown call_tmp[583897] "expr temp" "maybe param" "maybe type" "temp"
                    (583900 'move' call_tmp[583897](95695 call locBlock[95588] parDim[767144]))
                    unknown call_tmp[583904] "expr temp" "maybe param" "maybe type" "temp"
                    (583907 'move' call_tmp[583904](95696 call _low _mt[232] call_tmp[583897]))
                    unknown call_tmp[583909] "maybe param" "maybe type" "temp"
                    (583912 'move' call_tmp[583909](95699 call _computeBlock call_tmp[583868] numChunks[767138] chunk[97054] call_tmp[583880] call_tmp[583892] call_tmp[583904]))
                    const tmp[95700] "const" "insert auto destroy" "no copy" "temp"
                    (490537 'init var' tmp[95700] call_tmp[583909])
                    (95707 call _check_tuple_var_decl tmp[95700] 2)
                    unknown call_tmp[583914] "maybe param" "maybe type" "temp"
                    (583917 'move' call_tmp[583914](95701 call tmp[95700] 1))
                    const lo[95662] "const" "insert auto destroy"
                    (490539 'init var' lo[95662] call_tmp[583914])
                    unknown call_tmp[583919] "maybe param" "maybe type" "temp"
                    (583922 'move' call_tmp[583919](95704 call tmp[95700] 2))
                    const hi[95664] "const" "insert auto destroy"
                    (490541 'init var' hi[95664] call_tmp[583919])
                    unknown call_tmp[583924] "expr temp" "maybe param" "maybe type" "temp"
                    (583927 'move' call_tmp[583924](95715 call followMe[95659] parDim[767144]))
                    unknown call_tmp[583929] "expr temp" "maybe param" "maybe type" "temp"
                    (583932 'move' call_tmp[583929](95718 call chpl_build_bounded_range lo[95662] hi[95664]))
                    (95720 call = call_tmp[583924] call_tmp[583929])
                    unknown call_tmp[583934] "maybe param" "maybe type" "temp"
                    (583937 'move' call_tmp[583934](95735 call _computeChunkStuff numSublocTasks[95578](ignoreRunning = 1) minIndicesPerTask[767147] followMe[95659]))
                    const tmp[95736] "const" "insert auto destroy" "no copy" "temp"
                    (490543 'init var' tmp[95736] call_tmp[583934])
                    (95743 call _check_tuple_var_decl tmp[95736] 2)
                    unknown call_tmp[583939] "maybe param" "maybe type" "temp"
                    (583942 'move' call_tmp[583939](95737 call tmp[95736] 1))
                    const numChunks2[95723] "const" "insert auto destroy"
                    (490545 'init var' numChunks2[95723] call_tmp[583939])
                    unknown call_tmp[583944] "maybe param" "maybe type" "temp"
                    (583947 'move' call_tmp[583944](95740 call tmp[95736] 2))
                    const parDim2[95725] "const" "insert auto destroy"
                    (490547 'init var' parDim2[95725] call_tmp[583944])
                    {
                      unknown tmpIter[95968] "expr temp" "maybe ref" "no copy" "temp"
                      unknown call_tmp[583949] "expr temp" "maybe param" "maybe type" "temp"
                      (583952 'move' call_tmp[583949](95750 call chpl_build_low_bounded_range 0))
                      (95971 'move' tmpIter[95968](95753 call # call_tmp[583949] numChunks2[95723]))
                      unknown isRngDomArr[96254] "maybe param" "temp"
                      unknown tmp[397947] "maybe param" "temp"
                      (397958 'move' tmp[397947](96256 call isBoundedRange tmpIter[95968]))
                      unknown call_tmp[583954] "expr temp" "maybe param" "maybe type" "temp"
                      (583957 'move' call_tmp[583954](397960 call _cond_invalid tmp[397947]))
                      if call_tmp[583954]
                      {
                        (397963 call compilerError "cannot promote short-circuiting || operator")
                      }
                      unknown tmp[510507] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[510508] "maybe param" "temp"
                      unknown call_tmp[583959] "expr temp" "maybe param" "maybe type" "temp"
                      (583962 'move' call_tmp[583959](397948 call isTrue tmp[397947]))
                      (510513 'move' tmp[510508](510511 call _cond_test call_tmp[583959]))
                      if tmp[510508]
                      {
                        (510518 'move' tmp[510507](510515 '_paramFoldLogical' tmp[510508] 1))
                      }
                      {
                        unknown tmp[397968] "maybe param" "temp"
                        (397979 'move' tmp[397968](96259 call isDomain tmpIter[95968]))
                        unknown call_tmp[583964] "expr temp" "maybe param" "maybe type" "temp"
                        (583967 'move' call_tmp[583964](397981 call _cond_invalid tmp[397968]))
                        if call_tmp[583964]
                        {
                          (397984 call compilerError "cannot promote short-circuiting || operator")
                        }
                        unknown tmp[510480] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                        unknown tmp[510481] "maybe param" "temp"
                        unknown call_tmp[583969] "expr temp" "maybe param" "maybe type" "temp"
                        (583972 'move' call_tmp[583969](397969 call isTrue tmp[397968]))
                        (510486 'move' tmp[510481](510484 call _cond_test call_tmp[583969]))
                        if tmp[510481]
                        {
                          (510491 'move' tmp[510480](510488 '_paramFoldLogical' tmp[510481] 1))
                        }
                        {
                          unknown tmp[510493] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                          unknown call_tmp[583974] "expr temp" "maybe param" "maybe type" "temp"
                          (583977 'move' call_tmp[583974](96262 call isArray tmpIter[95968]))
                          (510495 'move' tmp[510493](397973 call isTrue call_tmp[583974]))
                          (510500 'move' tmp[510480](510497 '_paramFoldLogical' tmp[510481] tmp[510493]))
                        }
                        unknown tmp[510520] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        (510522 'move' tmp[510520](397952 call isTrue tmp[510480]))
                        (510527 'move' tmp[510507](510524 '_paramFoldLogical' tmp[510508] tmp[510520]))
                      }
                      (96269 'move' isRngDomArr[96254] tmp[510507])
                      if isRngDomArr[96254]
                      {
                        const _coforallCount[96121] "const" "end count" "temp"
                        (96190 'move' _coforallCount[96121](96187 call _endCountAlloc 1))
                        unknown numTasks[96122] "temp"
                        (96174 'move' numTasks[96122](96170 call size _mt[232] tmpIter[95968]))
                        (96165 call _upEndCount _coforallCount[96121] 1 numTasks[96122])
                        (96162 call chpl_resetTaskSpawn numTasks[96122])
                        unknown _indexOfInterest[96129] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        unknown _iterator[96130] "expr temp" "temp"
                        (96139 'move' _iterator[96130](96137 call _getIterator tmpIter[95968]))
                        Defer
                        {
                          {
                            (96155 call _freeIterator _iterator[96130])
                          }
                        }
                        { scopeless type
                          (96144 'move' _indexOfInterest[96129](96141 call iteratorIndex _iterator[96130]))
                        }
                        ForLoop
                        {
                          unknown chunk2[96148] "coforall index var" "index var" "insert auto destroy"
                          (96150 'move' chunk2[96148] _indexOfInterest[96129])
                          (767035 call coforall_fn[767033] parDim2[95725] chunk[97054] followMe[95659] numChunks2[95723])
                          function coforall_fn[767033](arg parDim2[767040], arg chunk[767043], arg followMe[767046], arg numChunks2[767049]) : void[4] "cobegin or coforall"
                          {
                            {
                              unknown locBlock2[95974] "insert auto destroy"
                              unknown call_tmp[583983] "expr temp" "maybe param" "maybe type" "temp"
                              (583986 'move' call_tmp[583983](346507 call rank _mt[232] this[99747]))
                              unknown call_tmp[583990] "expr temp" "maybe param" "maybe type" "temp"
                              (583993 'move' call_tmp[583990](346512 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[583995] "expr temp" "maybe param" "maybe type" "temp"
                              (583998 'move' call_tmp[583995](95979 call range[66183](?) call_tmp[583990]))
                              unknown call_tmp[584000] "expr temp" "maybe param" "maybe type" "temp"
                              (584003 'move' call_tmp[584000](95976 call * call_tmp[583983] call_tmp[583995]))
                              (490549 'default init var' locBlock2[95974] call_tmp[584000])
                              {
                                unknown i[95983] "insert auto destroy"
                                (490551 'init var' i[95983] 0)
                                unknown tmp[95986] "maybe param" "temp"
                                unknown call_tmp[584007] "expr temp" "maybe param" "maybe type" "temp"
                                (584010 'move' call_tmp[584007](346517 call rank _mt[232] this[99747]))
                                (95988 'move' tmp[95986](95991 call chpl_compute_low_param_loop_bound 1 call_tmp[584007]))
                                unknown tmp[95994] "maybe param" "temp"
                                unknown call_tmp[584014] "expr temp" "maybe param" "maybe type" "temp"
                                (584017 'move' call_tmp[584014](346522 call rank _mt[232] this[99747]))
                                (95996 'move' tmp[95994](95999 call chpl_compute_high_param_loop_bound 1 call_tmp[584014]))
                                unknown tmp[96002] "maybe param" "temp"
                                (96004 'move' tmp[96002] 1)
                                ParamForLoop
                                { i[95983] tmp[95986] tmp[95994] tmp[96002]
                                  unknown call_tmp[584019] "expr temp" "maybe param" "maybe type" "temp"
                                  (584022 'move' call_tmp[584019](96017 call locBlock2[95974] i[95983]))
                                  unknown call_tmp[584024] "expr temp" "maybe param" "maybe type" "temp"
                                  (584027 'move' call_tmp[584024](96024 call followMe[767046] i[95983]))
                                  unknown call_tmp[584031] "expr temp" "maybe param" "maybe type" "temp"
                                  (584034 'move' call_tmp[584031](96022 call low _mt[232] call_tmp[584024]))
                                  unknown call_tmp[584036] "expr temp" "maybe param" "maybe type" "temp"
                                  (584039 'move' call_tmp[584036](96030 call followMe[767046] i[95983]))
                                  unknown call_tmp[584043] "expr temp" "maybe param" "maybe type" "temp"
                                  (584046 'move' call_tmp[584043](96028 call high _mt[232] call_tmp[584036]))
                                  unknown call_tmp[584048] "expr temp" "maybe param" "maybe type" "temp"
                                  (584051 'move' call_tmp[584048](96020 call chpl_build_bounded_range call_tmp[584031] call_tmp[584043]))
                                  (96015 call = call_tmp[584019] call_tmp[584048])
                                }
                                label _unused_continueLabel[96033]
                                label _breakLabel[96035]
                              }
                              unknown call_tmp[584055] "expr temp" "maybe param" "maybe type" "temp"
                              (584058 'move' call_tmp[584055](346534 call rank _mt[232] this[99747]))
                              unknown call_tmp[584062] "expr temp" "maybe param" "maybe type" "temp"
                              (584065 'move' call_tmp[584062](346539 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[584067] "expr temp" "maybe param" "maybe type" "temp"
                              (584070 'move' call_tmp[584067](96043 call range[66183](?) call_tmp[584062]))
                              unknown call_tmp[584072] "maybe param" "maybe type" "temp"
                              (584075 'move' call_tmp[584072](96040 call * call_tmp[584055] call_tmp[584067]))
                              unknown followMe2[96037] "insert auto destroy"
                              (490553 'init var' followMe2[96037] locBlock2[95974] call_tmp[584072])
                              unknown call_tmp[584077] "expr temp" "maybe param" "maybe type" "temp"
                              (584080 'move' call_tmp[584077](96051 call locBlock2[95974] parDim2[767040]))
                              unknown call_tmp[584084] "maybe param" "maybe type" "temp"
                              (584087 'move' call_tmp[584084](96049 call _low _mt[232] call_tmp[584077]))
                              const low[96047] "const" "insert auto destroy"
                              (490555 'init var' low[96047] call_tmp[584084])
                              unknown call_tmp[584089] "expr temp" "maybe param" "maybe type" "temp"
                              (584092 'move' call_tmp[584089](96059 call locBlock2[95974] parDim2[767040]))
                              unknown call_tmp[584096] "maybe param" "maybe type" "temp"
                              (584099 'move' call_tmp[584096](96057 call _high _mt[232] call_tmp[584089]))
                              const high[96055] "const" "insert auto destroy"
                              (490557 'init var' high[96055] call_tmp[584096])
                              unknown call_tmp[584101] "expr temp" "maybe param" "maybe type" "temp"
                              (584104 'move' call_tmp[584101](96070 call locBlock2[95974] parDim2[767040]))
                              unknown call_tmp[584108] "expr temp" "maybe param" "maybe type" "temp"
                              (584111 'move' call_tmp[584108](96068 call length _mt[232] call_tmp[584101]))
                              unknown call_tmp[584113] "maybe param" "maybe type" "temp"
                              (584116 'move' call_tmp[584113](96066 call _computeBlock call_tmp[584108] numChunks2[767049] chunk2[96148] high[96055] low[96047] low[96047]))
                              const tmp[96064] "const" "insert auto destroy" "no copy" "temp"
                              (490559 'init var' tmp[96064] call_tmp[584113])
                              (96080 call _check_tuple_var_decl tmp[96064] 2)
                              unknown call_tmp[584118] "maybe param" "maybe type" "temp"
                              (584121 'move' call_tmp[584118](96085 call tmp[96064] 1))
                              const lo[96083] "const" "insert auto destroy"
                              (490561 'init var' lo[96083] call_tmp[584118])
                              unknown call_tmp[584123] "maybe param" "maybe type" "temp"
                              (584126 'move' call_tmp[584123](96090 call tmp[96064] 2))
                              const hi[96088] "const" "insert auto destroy"
                              (490563 'init var' hi[96088] call_tmp[584123])
                              unknown call_tmp[584128] "expr temp" "maybe param" "maybe type" "temp"
                              (584131 'move' call_tmp[584128](96096 call followMe2[96037] parDim2[767040]))
                              unknown call_tmp[584133] "expr temp" "maybe param" "maybe type" "temp"
                              (584136 'move' call_tmp[584133](96099 call chpl_build_bounded_range lo[96083] hi[96088]))
                              (96094 call = call_tmp[584128] call_tmp[584133])
                              unknown call_tmp[584138] "expr temp" "maybe param" "maybe type" "temp"
                              (584141 'move' call_tmp[584138](96103 call _cond_test debugDataParNuma[92593]))
                              if call_tmp[584138]
                              {
                                (96107 call chpl_debug_writeln "### chunk = " chunk[767043] "  chunk2 = " chunk2[96148] "  " "followMe = " followMe[767046] "  followMe2 = " followMe2[96037])
                              }
                              unknown yret[465368] "YVV" "temp"
                              (465371 'move' yret[465368](465370 'deref' followMe2[96037]))
                              (465373 yield yret[465368])
                            }
                            (96124 call _downEndCount _coforallCount[96121] nil[38])
                            (767038 return _void[47])
                          }
                          {
                          }
                          label _continueLabel[96134]
                          _indexOfInterest[96129]
                          _iterator[96130]
                        }
                        label _breakLabel[96135]
                        Defer
                        {
                          {
                            (96177 call _endCountFree _coforallCount[96121])
                          }
                        }
                        (96182 call _waitEndCount _coforallCount[96121] 1 numTasks[96122])
                      }
                      {
                        const _coforallCount[96194] "const" "end count" "temp"
                        (96251 'move' _coforallCount[96194](96248 call _endCountAlloc 1))
                        unknown _indexOfInterest[96202] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        unknown _iterator[96203] "expr temp" "temp"
                        (96212 'move' _iterator[96203](96210 call _getIterator tmpIter[95968]))
                        Defer
                        {
                          {
                            (96228 call _freeIterator _iterator[96203])
                          }
                        }
                        { scopeless type
                          (96217 'move' _indexOfInterest[96202](96214 call iteratorIndex _iterator[96203]))
                        }
                        ForLoop
                        {
                          unknown chunk2[96221] "coforall index var" "index var" "insert auto destroy"
                          (96223 'move' chunk2[96221] _indexOfInterest[96202])
                          (96235 call _upEndCount _coforallCount[96194] 1)
                          (767054 call coforall_fn[767052] parDim2[95725] chunk[97054] followMe[95659] numChunks2[95723])
                          function coforall_fn[767052](arg parDim2[767059], arg chunk[767062], arg followMe[767065], arg numChunks2[767068]) : void[4] "cobegin or coforall"
                          {
                            {
                              unknown locBlock2[95762] "insert auto destroy"
                              unknown call_tmp[584145] "expr temp" "maybe param" "maybe type" "temp"
                              (584148 'move' call_tmp[584145](346449 call rank _mt[232] this[99747]))
                              unknown call_tmp[584152] "expr temp" "maybe param" "maybe type" "temp"
                              (584155 'move' call_tmp[584152](346454 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[584157] "expr temp" "maybe param" "maybe type" "temp"
                              (584160 'move' call_tmp[584157](95759 call range[66183](?) call_tmp[584152]))
                              unknown call_tmp[584162] "expr temp" "maybe param" "maybe type" "temp"
                              (584165 'move' call_tmp[584162](95760 call * call_tmp[584145] call_tmp[584157]))
                              (490565 'default init var' locBlock2[95762] call_tmp[584162])
                              {
                                unknown i[95793] "insert auto destroy"
                                (490567 'init var' i[95793] 0)
                                unknown tmp[95794] "maybe param" "temp"
                                unknown call_tmp[584169] "expr temp" "maybe param" "maybe type" "temp"
                                (584172 'move' call_tmp[584169](346459 call rank _mt[232] this[99747]))
                                (95806 'move' tmp[95794](95804 call chpl_compute_low_param_loop_bound 1 call_tmp[584169]))
                                unknown tmp[95795] "maybe param" "temp"
                                unknown call_tmp[584176] "expr temp" "maybe param" "maybe type" "temp"
                                (584179 'move' call_tmp[584176](346470 call rank _mt[232] this[99747]))
                                (95813 'move' tmp[95795](95811 call chpl_compute_high_param_loop_bound 1 call_tmp[584176]))
                                unknown tmp[95796] "maybe param" "temp"
                                (95816 'move' tmp[95796] 1)
                                ParamForLoop
                                { i[95793] tmp[95794] tmp[95795] tmp[95796]
                                  unknown call_tmp[584181] "expr temp" "maybe param" "maybe type" "temp"
                                  (584184 'move' call_tmp[584181](95773 call locBlock2[95762] i[95793]))
                                  unknown call_tmp[584186] "expr temp" "maybe param" "maybe type" "temp"
                                  (584189 'move' call_tmp[584186](95777 call followMe[767065] i[95793]))
                                  unknown call_tmp[584193] "expr temp" "maybe param" "maybe type" "temp"
                                  (584196 'move' call_tmp[584193](95778 call low _mt[232] call_tmp[584186]))
                                  unknown call_tmp[584198] "expr temp" "maybe param" "maybe type" "temp"
                                  (584201 'move' call_tmp[584198](95784 call followMe[767065] i[95793]))
                                  unknown call_tmp[584205] "expr temp" "maybe param" "maybe type" "temp"
                                  (584208 'move' call_tmp[584205](95785 call high _mt[232] call_tmp[584198]))
                                  unknown call_tmp[584210] "expr temp" "maybe param" "maybe type" "temp"
                                  (584213 'move' call_tmp[584210](95788 call chpl_build_bounded_range call_tmp[584193] call_tmp[584205]))
                                  (95790 call = call_tmp[584181] call_tmp[584210])
                                }
                                label _unused_continueLabel[95798]
                                label _breakLabel[95797]
                              }
                              unknown call_tmp[584217] "expr temp" "maybe param" "maybe type" "temp"
                              (584220 'move' call_tmp[584217](346475 call rank _mt[232] this[99747]))
                              unknown call_tmp[584224] "expr temp" "maybe param" "maybe type" "temp"
                              (584227 'move' call_tmp[584224](346480 call intIdxType _mt[232] this[99747]))
                              unknown call_tmp[584229] "expr temp" "maybe param" "maybe type" "temp"
                              (584232 'move' call_tmp[584229](95831 call range[66183](?) call_tmp[584224]))
                              unknown call_tmp[584234] "maybe param" "maybe type" "temp"
                              (584237 'move' call_tmp[584234](95832 call * call_tmp[584217] call_tmp[584229]))
                              unknown followMe2[95835] "insert auto destroy"
                              (490569 'init var' followMe2[95835] locBlock2[95762] call_tmp[584234])
                              unknown call_tmp[584239] "expr temp" "maybe param" "maybe type" "temp"
                              (584242 'move' call_tmp[584239](95841 call locBlock2[95762] parDim2[767059]))
                              unknown call_tmp[584246] "maybe param" "maybe type" "temp"
                              (584249 'move' call_tmp[584246](95842 call _low _mt[232] call_tmp[584239]))
                              const low[95845] "const" "insert auto destroy"
                              (490571 'init var' low[95845] call_tmp[584246])
                              unknown call_tmp[584251] "expr temp" "maybe param" "maybe type" "temp"
                              (584254 'move' call_tmp[584251](95851 call locBlock2[95762] parDim2[767059]))
                              unknown call_tmp[584258] "maybe param" "maybe type" "temp"
                              (584261 'move' call_tmp[584258](95852 call _high _mt[232] call_tmp[584251]))
                              const high[95855] "const" "insert auto destroy"
                              (490573 'init var' high[95855] call_tmp[584258])
                              unknown call_tmp[584263] "expr temp" "maybe param" "maybe type" "temp"
                              (584266 'move' call_tmp[584263](95867 call locBlock2[95762] parDim2[767059]))
                              unknown call_tmp[584270] "expr temp" "maybe param" "maybe type" "temp"
                              (584273 'move' call_tmp[584270](95868 call length _mt[232] call_tmp[584263]))
                              unknown call_tmp[584275] "maybe param" "maybe type" "temp"
                              (584278 'move' call_tmp[584275](95877 call _computeBlock call_tmp[584270] numChunks2[767068] chunk2[96221] high[95855] low[95845] low[95845]))
                              const tmp[95878] "const" "insert auto destroy" "no copy" "temp"
                              (490575 'init var' tmp[95878] call_tmp[584275])
                              (95885 call _check_tuple_var_decl tmp[95878] 2)
                              unknown call_tmp[584280] "maybe param" "maybe type" "temp"
                              (584283 'move' call_tmp[584280](95879 call tmp[95878] 1))
                              const lo[95858] "const" "insert auto destroy"
                              (490577 'init var' lo[95858] call_tmp[584280])
                              unknown call_tmp[584285] "maybe param" "maybe type" "temp"
                              (584288 'move' call_tmp[584285](95882 call tmp[95878] 2))
                              const hi[95860] "const" "insert auto destroy"
                              (490579 'init var' hi[95860] call_tmp[584285])
                              unknown call_tmp[584290] "expr temp" "maybe param" "maybe type" "temp"
                              (584293 'move' call_tmp[584290](95893 call followMe2[95835] parDim2[767059]))
                              unknown call_tmp[584295] "expr temp" "maybe param" "maybe type" "temp"
                              (584298 'move' call_tmp[584295](95896 call chpl_build_bounded_range lo[95858] hi[95860]))
                              (95898 call = call_tmp[584290] call_tmp[584295])
                              unknown call_tmp[584300] "expr temp" "maybe param" "maybe type" "temp"
                              (584303 'move' call_tmp[584300](95961 call _cond_test debugDataParNuma[92593]))
                              if call_tmp[584300]
                              {
                                (95958 call chpl_debug_writeln "### chunk = " chunk[767062] "  chunk2 = " chunk2[96221] "  " "followMe = " followMe[767065] "  followMe2 = " followMe2[95835])
                              }
                              unknown yret[465375] "YVV" "temp"
                              (465378 'move' yret[465375](465377 'deref' followMe2[95835]))
                              (465380 yield yret[465375])
                            }
                            (96197 call _downEndCount _coforallCount[96194] nil[38])
                            (767057 return _void[47])
                          }
                          {
                          }
                          label _continueLabel[96207]
                          _indexOfInterest[96202]
                          _iterator[96203]
                        }
                        label _breakLabel[96208]
                        Defer
                        {
                          {
                            (96239 call _endCountFree _coforallCount[96194])
                          }
                        }
                        (96244 call _waitEndCount _coforallCount[96194] 1)
                      }
                    }
                  }
                }
                (97030 call _downEndCount _coforallCount[97027] nil[38])
                (767136 return _void[47])
              }
              {
              }
              label _continueLabel[97040]
              _indexOfInterest[97035]
              _iterator[97036]
            }
            label _breakLabel[97041]
            Defer
            {
              {
                (97072 call _endCountFree _coforallCount[97027])
              }
            }
            (97077 call _waitEndCount _coforallCount[97027] 1)
          }
        }
      }
    }
    {
      unknown call_tmp[584305] "expr temp" "maybe param" "maybe type" "temp"
      (584308 'move' call_tmp[584305](97132 call _cond_test debugDefaultDist[92581]))
      if call_tmp[584305]
      {
        (97130 call chpl_debug_writeln "*** In domain/array leader code:")
      }
      const numTasks[97150] "const" "insert auto destroy"
      unknown tmp[510534] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510535] "maybe param" "temp"
      unknown call_tmp[584310] "expr temp" "maybe param" "maybe type" "temp"
      (584313 'move' call_tmp[584310](97140 call == tasksPerLocale[95230] 0))
      (510540 'move' tmp[510535](510538 call _cond_test call_tmp[584310]))
      if tmp[510535]
      {
        unknown tmp[510542] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[584315] "expr temp" "maybe param" "maybe type" "temp"
        (584318 'move' call_tmp[584315](346753 call here[92085]))
        (510544 'move' tmp[510542](97143 call maxTaskPar _mt[232] call_tmp[584315]))
        (510549 'move' tmp[510534](510546 '_paramFoldLogical' tmp[510535] tmp[510542]))
      }
      {
        (510554 'move' tmp[510534](510551 '_paramFoldLogical' tmp[510535] tasksPerLocale[95230]))
      }
      (490581 'init var' numTasks[97150] tmp[510534])
      unknown call_tmp[584322] "expr temp" "maybe param" "maybe type" "temp"
      (584325 'move' call_tmp[584322](97164 call _cond_test debugDefaultDist[92581]))
      if call_tmp[584322]
      {
        (97162 call chpl_debug_writeln "    numTasks=" numTasks[97150] " (" ignoreRunning[95234] "), minIndicesPerTask=" minIndicesPerTask[95238])
      }
      const tmp[97194] "const" "no auto destroy" "no copy" "temp"
      unknown tmp[510561] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510562] "maybe param" "temp"
      unknown call_tmp[584327] "expr temp" "maybe param" "maybe type" "temp"
      (584330 'move' call_tmp[584327](97176 'task_get_serial'))
      (510567 'move' tmp[510562](510565 call _cond_test call_tmp[584327]))
      if tmp[510562]
      {
        unknown tmp[510569] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[584332] "expr temp" "maybe param" "maybe type" "temp"
        (584335 'move' call_tmp[584332](97179 call - 1))
        (510571 'move' tmp[510569](97182 call _build_tuple 1 call_tmp[584332]))
        (510576 'move' tmp[510561](510573 '_paramFoldLogical' tmp[510562] tmp[510569]))
      }
      {
        unknown tmp[510578] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[584339] "expr temp" "maybe param" "maybe type" "temp"
        (584342 'move' call_tmp[584339](346765 call ranges _mt[232] this[99747]))
        (510580 'move' tmp[510578](97190 call _computeChunkStuff numTasks[97150] ignoreRunning[95234] minIndicesPerTask[95238] call_tmp[584339]))
        (510585 'move' tmp[510561](510582 '_paramFoldLogical' tmp[510562] tmp[510578]))
      }
      (490583 'init var' tmp[97194] tmp[510561])
      (97201 call _check_tuple_var_decl tmp[97194] 2)
      unknown call_tmp[584344] "maybe param" "maybe type" "temp"
      (584347 'move' call_tmp[584344](97195 call tmp[97194] 1))
      const numChunks[97169] "const" "insert auto destroy"
      (490585 'init var' numChunks[97169] call_tmp[584344])
      unknown call_tmp[584349] "maybe param" "maybe type" "temp"
      (584352 'move' call_tmp[584349](97198 call tmp[97194] 2))
      const parDim[97171] "const" "insert auto destroy"
      (490587 'init var' parDim[97171] call_tmp[584349])
      unknown call_tmp[584354] "expr temp" "maybe param" "maybe type" "temp"
      (584357 'move' call_tmp[584354](97225 call _cond_test debugDefaultDist[92581]))
      if call_tmp[584354]
      {
        unknown call_tmp[584361] "expr temp" "maybe param" "maybe type" "temp"
        (584364 'move' call_tmp[584361](97219 call(346774 call (partial) ranges _mt[232] this[99747]) parDim[97171]))
        unknown call_tmp[584368] "expr temp" "maybe param" "maybe type" "temp"
        (584371 'move' call_tmp[584368](97220 call length _mt[232] call_tmp[584361]))
        (97223 call chpl_debug_writeln "    numChunks=" numChunks[97169] " parDim=" parDim[97171] " ranges(" parDim[97171] ").length=" call_tmp[584368])
      }
      unknown call_tmp[584373] "expr temp" "maybe param" "maybe type" "temp"
      (584376 'move' call_tmp[584373](97252 call _cond_test debugDataPar[92589]))
      if call_tmp[584373]
      {
        unknown call_tmp[584380] "expr temp" "maybe param" "maybe type" "temp"
        (584383 'move' call_tmp[584380](346786 call ranges _mt[232] this[99747]))
        (97249 call chpl_debug_writeln "### numTasksPerLoc = " numTasks[97150] "\n" "### ignoreRunning = " ignoreRunning[95234] "\n" "### minIndicesPerTask = " minIndicesPerTask[95238] "\n" "### numChunks = " numChunks[97169] " (parDim = " parDim[97171] ")\n" "### nranges = " call_tmp[584380])
      }
      unknown call_tmp[584385] "expr temp" "maybe param" "maybe type" "temp"
      (584388 'move' call_tmp[584385](97258 call == numChunks[97169] 1))
      unknown call_tmp[584390] "expr temp" "maybe param" "maybe type" "temp"
      (584393 'move' call_tmp[584390](97809 call _cond_test call_tmp[584385]))
      if call_tmp[584390]
      {
        unknown call_tmp[584397] "expr temp" "maybe param" "maybe type" "temp"
        (584400 'move' call_tmp[584397](346792 call rank _mt[232] this[99747]))
        unknown call_tmp[584402] "expr temp" "maybe param" "maybe type" "temp"
        (584405 'move' call_tmp[584402](97262 call == call_tmp[584397] 1))
        unknown call_tmp[584407] "expr temp" "maybe param" "maybe type" "temp"
        (584410 'move' call_tmp[584407](97358 call _cond_test call_tmp[584402]))
        if call_tmp[584407]
        {
          unknown yret[465382] "YVV" "temp"
          unknown call_tmp[584412] "expr temp" "maybe param" "maybe type" "temp"
          (584415 'move' call_tmp[584412](97267 call offset[95250] 1))
          unknown call_tmp[584417] "expr temp" "maybe param" "maybe type" "temp"
          (584420 'move' call_tmp[584417](97268 call chpl_build_low_bounded_range call_tmp[584412]))
          unknown call_tmp[584424] "expr temp" "maybe param" "maybe type" "temp"
          (584427 'move' call_tmp[584424](97273 call(346798 call (partial) ranges _mt[232] this[99747]) 1))
          unknown call_tmp[584431] "expr temp" "maybe param" "maybe type" "temp"
          (584434 'move' call_tmp[584431](97274 call length _mt[232] call_tmp[584424]))
          unknown call_tmp[584436] "expr temp" "maybe param" "maybe type" "temp"
          (584439 'move' call_tmp[584436](97277 call # call_tmp[584417] call_tmp[584431]))
          unknown call_tmp[584441] "expr temp" "maybe param" "maybe type" "temp"
          (584444 'move' call_tmp[584441](97279 call _build_tuple call_tmp[584436]))
          (465385 'move' yret[465382](465384 'deref' call_tmp[584441]))
          (465387 yield yret[465382])
        }
        {
          unknown block[97291] "insert auto destroy"
          unknown call_tmp[584448] "expr temp" "maybe param" "maybe type" "temp"
          (584451 'move' call_tmp[584448](346803 call rank _mt[232] this[99747]))
          unknown call_tmp[584455] "expr temp" "maybe param" "maybe type" "temp"
          (584458 'move' call_tmp[584455](346808 call intIdxType _mt[232] this[99747]))
          unknown call_tmp[584460] "expr temp" "maybe param" "maybe type" "temp"
          (584463 'move' call_tmp[584460](97288 call range[66183](?) call_tmp[584455]))
          unknown call_tmp[584465] "expr temp" "maybe param" "maybe type" "temp"
          (584468 'move' call_tmp[584465](97289 call * call_tmp[584448] call_tmp[584460]))
          (490589 'default init var' block[97291] call_tmp[584465])
          {
            unknown i[97321] "insert auto destroy"
            (490591 'init var' i[97321] 0)
            unknown tmp[97322] "maybe param" "temp"
            unknown call_tmp[584472] "expr temp" "maybe param" "maybe type" "temp"
            (584475 'move' call_tmp[584472](346813 call rank _mt[232] this[99747]))
            (97334 'move' tmp[97322](97332 call chpl_compute_low_param_loop_bound 1 call_tmp[584472]))
            unknown tmp[97323] "maybe param" "temp"
            unknown call_tmp[584479] "expr temp" "maybe param" "maybe type" "temp"
            (584482 'move' call_tmp[584479](346828 call rank _mt[232] this[99747]))
            (97341 'move' tmp[97323](97339 call chpl_compute_high_param_loop_bound 1 call_tmp[584479]))
            unknown tmp[97324] "maybe param" "temp"
            (97344 'move' tmp[97324] 1)
            ParamForLoop
            { i[97321] tmp[97322] tmp[97323] tmp[97324]
              unknown call_tmp[584484] "expr temp" "maybe param" "maybe type" "temp"
              (584487 'move' call_tmp[584484](97302 call block[97291] i[97321]))
              unknown call_tmp[584489] "expr temp" "maybe param" "maybe type" "temp"
              (584492 'move' call_tmp[584489](97306 call offset[95250] i[97321]))
              unknown call_tmp[584494] "expr temp" "maybe param" "maybe type" "temp"
              (584497 'move' call_tmp[584494](97307 call chpl_build_low_bounded_range call_tmp[584489]))
              unknown call_tmp[584501] "expr temp" "maybe param" "maybe type" "temp"
              (584504 'move' call_tmp[584501](97312 call(346822 call (partial) ranges _mt[232] this[99747]) i[97321]))
              unknown call_tmp[584508] "expr temp" "maybe param" "maybe type" "temp"
              (584511 'move' call_tmp[584508](97313 call length _mt[232] call_tmp[584501]))
              unknown call_tmp[584513] "expr temp" "maybe param" "maybe type" "temp"
              (584516 'move' call_tmp[584513](97316 call # call_tmp[584494] call_tmp[584508]))
              (97318 call = call_tmp[584484] call_tmp[584513])
            }
            label _unused_continueLabel[97326]
            label _breakLabel[97325]
          }
          unknown yret[465389] "YVV" "temp"
          (465392 'move' yret[465389](465391 'deref' block[97291]))
          (465394 yield yret[465389])
        }
      }
      {
        unknown locBlock[97370] "insert auto destroy"
        unknown call_tmp[584520] "expr temp" "maybe param" "maybe type" "temp"
        (584523 'move' call_tmp[584520](346834 call rank _mt[232] this[99747]))
        unknown call_tmp[584527] "expr temp" "maybe param" "maybe type" "temp"
        (584530 'move' call_tmp[584527](346839 call intIdxType _mt[232] this[99747]))
        unknown call_tmp[584532] "expr temp" "maybe param" "maybe type" "temp"
        (584535 'move' call_tmp[584532](97367 call range[66183](?) call_tmp[584527]))
        unknown call_tmp[584537] "expr temp" "maybe param" "maybe type" "temp"
        (584540 'move' call_tmp[584537](97368 call * call_tmp[584520] call_tmp[584532]))
        (490593 'default init var' locBlock[97370] call_tmp[584537])
        {
          unknown i[97400] "insert auto destroy"
          (490595 'init var' i[97400] 0)
          unknown tmp[97401] "maybe param" "temp"
          unknown call_tmp[584544] "expr temp" "maybe param" "maybe type" "temp"
          (584547 'move' call_tmp[584544](346844 call rank _mt[232] this[99747]))
          (97413 'move' tmp[97401](97411 call chpl_compute_low_param_loop_bound 1 call_tmp[584544]))
          unknown tmp[97402] "maybe param" "temp"
          unknown call_tmp[584551] "expr temp" "maybe param" "maybe type" "temp"
          (584554 'move' call_tmp[584551](346859 call rank _mt[232] this[99747]))
          (97420 'move' tmp[97402](97418 call chpl_compute_high_param_loop_bound 1 call_tmp[584551]))
          unknown tmp[97403] "maybe param" "temp"
          (97423 'move' tmp[97403] 1)
          ParamForLoop
          { i[97400] tmp[97401] tmp[97402] tmp[97403]
            unknown call_tmp[584556] "expr temp" "maybe param" "maybe type" "temp"
            (584559 'move' call_tmp[584556](97381 call locBlock[97370] i[97400]))
            unknown call_tmp[584561] "expr temp" "maybe param" "maybe type" "temp"
            (584564 'move' call_tmp[584561](97385 call offset[95250] i[97400]))
            unknown call_tmp[584566] "expr temp" "maybe param" "maybe type" "temp"
            (584569 'move' call_tmp[584566](97386 call chpl_build_low_bounded_range call_tmp[584561]))
            unknown call_tmp[584573] "expr temp" "maybe param" "maybe type" "temp"
            (584576 'move' call_tmp[584573](97391 call(346853 call (partial) ranges _mt[232] this[99747]) i[97400]))
            unknown call_tmp[584580] "expr temp" "maybe param" "maybe type" "temp"
            (584583 'move' call_tmp[584580](97392 call length _mt[232] call_tmp[584573]))
            unknown call_tmp[584585] "expr temp" "maybe param" "maybe type" "temp"
            (584588 'move' call_tmp[584585](97395 call # call_tmp[584566] call_tmp[584580]))
            (97397 call = call_tmp[584556] call_tmp[584585])
          }
          label _unused_continueLabel[97405]
          label _breakLabel[97404]
        }
        unknown call_tmp[584590] "expr temp" "maybe param" "maybe type" "temp"
        (584593 'move' call_tmp[584590](97456 call _cond_test debugDefaultDist[92581]))
        if call_tmp[584590]
        {
          (97454 call chpl_debug_writeln "*** DI: locBlock = " locBlock[97370])
        }
        {
          unknown tmpIter[97573] "expr temp" "maybe ref" "no copy" "temp"
          unknown call_tmp[584595] "expr temp" "maybe param" "maybe type" "temp"
          (584598 'move' call_tmp[584595](97463 call chpl_build_low_bounded_range 0))
          (97576 'move' tmpIter[97573](97466 call # call_tmp[584595] numChunks[97169]))
          unknown isRngDomArr[97790] "maybe param" "temp"
          unknown tmp[398073] "maybe param" "temp"
          (398084 'move' tmp[398073](97792 call isBoundedRange tmpIter[97573]))
          unknown call_tmp[584600] "expr temp" "maybe param" "maybe type" "temp"
          (584603 'move' call_tmp[584600](398086 call _cond_invalid tmp[398073]))
          if call_tmp[584600]
          {
            (398089 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[510619] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[510620] "maybe param" "temp"
          unknown call_tmp[584605] "expr temp" "maybe param" "maybe type" "temp"
          (584608 'move' call_tmp[584605](398074 call isTrue tmp[398073]))
          (510625 'move' tmp[510620](510623 call _cond_test call_tmp[584605]))
          if tmp[510620]
          {
            (510630 'move' tmp[510619](510627 '_paramFoldLogical' tmp[510620] 1))
          }
          {
            unknown tmp[398094] "maybe param" "temp"
            (398105 'move' tmp[398094](97795 call isDomain tmpIter[97573]))
            unknown call_tmp[584610] "expr temp" "maybe param" "maybe type" "temp"
            (584613 'move' call_tmp[584610](398107 call _cond_invalid tmp[398094]))
            if call_tmp[584610]
            {
              (398110 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[510592] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[510593] "maybe param" "temp"
            unknown call_tmp[584615] "expr temp" "maybe param" "maybe type" "temp"
            (584618 'move' call_tmp[584615](398095 call isTrue tmp[398094]))
            (510598 'move' tmp[510593](510596 call _cond_test call_tmp[584615]))
            if tmp[510593]
            {
              (510603 'move' tmp[510592](510600 '_paramFoldLogical' tmp[510593] 1))
            }
            {
              unknown tmp[510605] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[584620] "expr temp" "maybe param" "maybe type" "temp"
              (584623 'move' call_tmp[584620](97798 call isArray tmpIter[97573]))
              (510607 'move' tmp[510605](398099 call isTrue call_tmp[584620]))
              (510612 'move' tmp[510592](510609 '_paramFoldLogical' tmp[510593] tmp[510605]))
            }
            unknown tmp[510632] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (510634 'move' tmp[510632](398078 call isTrue tmp[510592]))
            (510639 'move' tmp[510619](510636 '_paramFoldLogical' tmp[510620] tmp[510632]))
          }
          (97805 'move' isRngDomArr[97790] tmp[510619])
          if isRngDomArr[97790]
          {
            const _coforallCount[97657] "const" "end count" "temp"
            (97726 'move' _coforallCount[97657](97723 call _endCountAlloc 1))
            unknown numTasks[97658] "temp"
            (97710 'move' numTasks[97658](97706 call size _mt[232] tmpIter[97573]))
            (97701 call _upEndCount _coforallCount[97657] 1 numTasks[97658])
            (97698 call chpl_resetTaskSpawn numTasks[97658])
            unknown _indexOfInterest[97665] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[97666] "expr temp" "temp"
            (97675 'move' _iterator[97666](97673 call _getIterator tmpIter[97573]))
            Defer
            {
              {
                (97691 call _freeIterator _iterator[97666])
              }
            }
            { scopeless type
              (97680 'move' _indexOfInterest[97665](97677 call iteratorIndex _iterator[97666]))
            }
            ForLoop
            {
              unknown chunk[97684] "coforall index var" "index var" "insert auto destroy"
              (97686 'move' chunk[97684] _indexOfInterest[97665])
              (767155 call coforall_fn[767153] locBlock[97370] parDim[97171] numChunks[97169])
              function coforall_fn[767153](arg locBlock[767160], arg parDim[767163], arg numChunks[767166]) : void[4] "cobegin or coforall"
              {
                {
                  unknown call_tmp[584629] "expr temp" "maybe param" "maybe type" "temp"
                  (584632 'move' call_tmp[584629](346897 call rank _mt[232] this[99747]))
                  unknown call_tmp[584636] "expr temp" "maybe param" "maybe type" "temp"
                  (584639 'move' call_tmp[584636](346902 call intIdxType _mt[232] this[99747]))
                  unknown call_tmp[584641] "expr temp" "maybe param" "maybe type" "temp"
                  (584644 'move' call_tmp[584641](97585 call range[66183](?) call_tmp[584636]))
                  unknown call_tmp[584646] "maybe param" "maybe type" "temp"
                  (584649 'move' call_tmp[584646](97582 call * call_tmp[584629] call_tmp[584641]))
                  unknown followMe[97579] "insert auto destroy"
                  (490597 'init var' followMe[97579] locBlock[767160] call_tmp[584646])
                  unknown call_tmp[584651] "expr temp" "maybe param" "maybe type" "temp"
                  (584654 'move' call_tmp[584651](97595 call locBlock[767160] parDim[767163]))
                  unknown call_tmp[584658] "expr temp" "maybe param" "maybe type" "temp"
                  (584661 'move' call_tmp[584658](97593 call length _mt[232] call_tmp[584651]))
                  unknown call_tmp[584663] "expr temp" "maybe param" "maybe type" "temp"
                  (584666 'move' call_tmp[584663](97603 call locBlock[767160] parDim[767163]))
                  unknown call_tmp[584670] "expr temp" "maybe param" "maybe type" "temp"
                  (584673 'move' call_tmp[584670](97601 call _high _mt[232] call_tmp[584663]))
                  unknown call_tmp[584675] "expr temp" "maybe param" "maybe type" "temp"
                  (584678 'move' call_tmp[584675](97609 call locBlock[767160] parDim[767163]))
                  unknown call_tmp[584682] "expr temp" "maybe param" "maybe type" "temp"
                  (584685 'move' call_tmp[584682](97607 call _low _mt[232] call_tmp[584675]))
                  unknown call_tmp[584687] "expr temp" "maybe param" "maybe type" "temp"
                  (584690 'move' call_tmp[584687](97615 call locBlock[767160] parDim[767163]))
                  unknown call_tmp[584694] "expr temp" "maybe param" "maybe type" "temp"
                  (584697 'move' call_tmp[584694](97613 call _low _mt[232] call_tmp[584687]))
                  unknown call_tmp[584699] "maybe param" "maybe type" "temp"
                  (584702 'move' call_tmp[584699](97591 call _computeBlock call_tmp[584658] numChunks[767166] chunk[97684] call_tmp[584670] call_tmp[584682] call_tmp[584694]))
                  const tmp[97589] "const" "insert auto destroy" "no copy" "temp"
                  (490599 'init var' tmp[97589] call_tmp[584699])
                  (97620 call _check_tuple_var_decl tmp[97589] 2)
                  unknown call_tmp[584704] "maybe param" "maybe type" "temp"
                  (584707 'move' call_tmp[584704](97625 call tmp[97589] 1))
                  const lo[97623] "const" "insert auto destroy"
                  (490601 'init var' lo[97623] call_tmp[584704])
                  unknown call_tmp[584709] "maybe param" "maybe type" "temp"
                  (584712 'move' call_tmp[584709](97630 call tmp[97589] 2))
                  const hi[97628] "const" "insert auto destroy"
                  (490603 'init var' hi[97628] call_tmp[584709])
                  unknown call_tmp[584714] "expr temp" "maybe param" "maybe type" "temp"
                  (584717 'move' call_tmp[584714](97636 call followMe[97579] parDim[767163]))
                  unknown call_tmp[584719] "expr temp" "maybe param" "maybe type" "temp"
                  (584722 'move' call_tmp[584719](97639 call chpl_build_bounded_range lo[97623] hi[97628]))
                  (97634 call = call_tmp[584714] call_tmp[584719])
                  unknown call_tmp[584724] "expr temp" "maybe param" "maybe type" "temp"
                  (584727 'move' call_tmp[584724](97643 call _cond_test debugDefaultDist[92581]))
                  if call_tmp[584724]
                  {
                    (97648 call chpl_debug_writeln "*** DI[" chunk[97684] "]: followMe = " followMe[97579])
                  }
                  unknown yret[465396] "YVV" "temp"
                  (465399 'move' yret[465396](465398 'deref' followMe[97579]))
                  (465401 yield yret[465396])
                }
                (97660 call _downEndCount _coforallCount[97657] nil[38])
                (767158 return _void[47])
              }
              {
              }
              label _continueLabel[97670]
              _indexOfInterest[97665]
              _iterator[97666]
            }
            label _breakLabel[97671]
            Defer
            {
              {
                (97713 call _endCountFree _coforallCount[97657])
              }
            }
            (97718 call _waitEndCount _coforallCount[97657] 1 numTasks[97658])
          }
          {
            const _coforallCount[97730] "const" "end count" "temp"
            (97787 'move' _coforallCount[97730](97784 call _endCountAlloc 1))
            unknown _indexOfInterest[97738] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[97739] "expr temp" "temp"
            (97748 'move' _iterator[97739](97746 call _getIterator tmpIter[97573]))
            Defer
            {
              {
                (97764 call _freeIterator _iterator[97739])
              }
            }
            { scopeless type
              (97753 'move' _indexOfInterest[97738](97750 call iteratorIndex _iterator[97739]))
            }
            ForLoop
            {
              unknown chunk[97757] "coforall index var" "index var" "insert auto destroy"
              (97759 'move' chunk[97757] _indexOfInterest[97738])
              (97771 call _upEndCount _coforallCount[97730] 1)
              (767171 call coforall_fn[767169] locBlock[97370] parDim[97171] numChunks[97169])
              function coforall_fn[767169](arg locBlock[767176], arg parDim[767179], arg numChunks[767182]) : void[4] "cobegin or coforall"
              {
                {
                  unknown call_tmp[584731] "expr temp" "maybe param" "maybe type" "temp"
                  (584734 'move' call_tmp[584731](346867 call rank _mt[232] this[99747]))
                  unknown call_tmp[584738] "expr temp" "maybe param" "maybe type" "temp"
                  (584741 'move' call_tmp[584738](346872 call intIdxType _mt[232] this[99747]))
                  unknown call_tmp[584743] "expr temp" "maybe param" "maybe type" "temp"
                  (584746 'move' call_tmp[584743](97472 call range[66183](?) call_tmp[584738]))
                  unknown call_tmp[584748] "maybe param" "maybe type" "temp"
                  (584751 'move' call_tmp[584748](97473 call * call_tmp[584731] call_tmp[584743]))
                  unknown followMe[97476] "insert auto destroy"
                  (490605 'init var' followMe[97476] locBlock[767176] call_tmp[584748])
                  unknown call_tmp[584753] "expr temp" "maybe param" "maybe type" "temp"
                  (584756 'move' call_tmp[584753](97489 call locBlock[767176] parDim[767179]))
                  unknown call_tmp[584760] "expr temp" "maybe param" "maybe type" "temp"
                  (584763 'move' call_tmp[584760](97490 call length _mt[232] call_tmp[584753]))
                  unknown call_tmp[584765] "expr temp" "maybe param" "maybe type" "temp"
                  (584768 'move' call_tmp[584765](97499 call locBlock[767176] parDim[767179]))
                  unknown call_tmp[584772] "expr temp" "maybe param" "maybe type" "temp"
                  (584775 'move' call_tmp[584772](97500 call _high _mt[232] call_tmp[584765]))
                  unknown call_tmp[584777] "expr temp" "maybe param" "maybe type" "temp"
                  (584780 'move' call_tmp[584777](97506 call locBlock[767176] parDim[767179]))
                  unknown call_tmp[584784] "expr temp" "maybe param" "maybe type" "temp"
                  (584787 'move' call_tmp[584784](97507 call _low _mt[232] call_tmp[584777]))
                  unknown call_tmp[584789] "expr temp" "maybe param" "maybe type" "temp"
                  (584792 'move' call_tmp[584789](97513 call locBlock[767176] parDim[767179]))
                  unknown call_tmp[584796] "expr temp" "maybe param" "maybe type" "temp"
                  (584799 'move' call_tmp[584796](97514 call _low _mt[232] call_tmp[584789]))
                  unknown call_tmp[584801] "maybe param" "maybe type" "temp"
                  (584804 'move' call_tmp[584801](97517 call _computeBlock call_tmp[584760] numChunks[767182] chunk[97757] call_tmp[584772] call_tmp[584784] call_tmp[584796]))
                  const tmp[97518] "const" "insert auto destroy" "no copy" "temp"
                  (490607 'init var' tmp[97518] call_tmp[584801])
                  (97525 call _check_tuple_var_decl tmp[97518] 2)
                  unknown call_tmp[584806] "maybe param" "maybe type" "temp"
                  (584809 'move' call_tmp[584806](97519 call tmp[97518] 1))
                  const lo[97480] "const" "insert auto destroy"
                  (490609 'init var' lo[97480] call_tmp[584806])
                  unknown call_tmp[584811] "maybe param" "maybe type" "temp"
                  (584814 'move' call_tmp[584811](97522 call tmp[97518] 2))
                  const hi[97482] "const" "insert auto destroy"
                  (490611 'init var' hi[97482] call_tmp[584811])
                  unknown call_tmp[584816] "expr temp" "maybe param" "maybe type" "temp"
                  (584819 'move' call_tmp[584816](97533 call followMe[97476] parDim[767179]))
                  unknown call_tmp[584821] "expr temp" "maybe param" "maybe type" "temp"
                  (584824 'move' call_tmp[584821](97536 call chpl_build_bounded_range lo[97480] hi[97482]))
                  (97538 call = call_tmp[584816] call_tmp[584821])
                  unknown call_tmp[584826] "expr temp" "maybe param" "maybe type" "temp"
                  (584829 'move' call_tmp[584826](97565 call _cond_test debugDefaultDist[92581]))
                  if call_tmp[584826]
                  {
                    (97563 call chpl_debug_writeln "*** DI[" chunk[97757] "]: followMe = " followMe[97476])
                  }
                  unknown yret[465403] "YVV" "temp"
                  (465406 'move' yret[465403](465405 'deref' followMe[97476]))
                  (465408 yield yret[465403])
                }
                (97733 call _downEndCount _coforallCount[97730] nil[38])
                (767174 return _void[47])
              }
              {
              }
              label _continueLabel[97743]
              _indexOfInterest[97738]
              _iterator[97739]
            }
            label _breakLabel[97744]
            Defer
            {
              {
                (97775 call _endCountFree _coforallCount[97730])
              }
            }
            (97780 call _waitEndCount _coforallCount[97730] 1)
          }
        }
      }
    }
    (465338 return ret[465336])
  }
  where {
    (95258 call == tag[95224] leader[691])
  }
  function DefaultRectangularDom[99677](?).these[97826](arg _mt[99753]:_MT[227], arg this[99751]:DefaultRectangularDom[99677](?), param arg tag[97823]:iterKind[697], arg followThis[97828]:_any[170](?), arg tasksPerLocale[97831] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[97835] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[97839] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481], arg offset[97851] :
  unknown call_tmp[692256] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[584833] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "iterator fn" "method" "primary method"
  {
    unknown ret[465421] "RVV" "temp"
    function anyStridable[97865](arg rangeTuple[97863]:_any[170](?), param arg i[97869]:int(64)[13] =
    1) param : _unknown[43]
    {
      unknown ret[465412] "RVV" "param" "temp"
      unknown tmp[510673] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510674] "maybe param" "temp"
      unknown call_tmp[584859] "expr temp" "maybe param" "maybe type" "temp"
      (584862 'move' call_tmp[584859](97875 call size _mt[232] rangeTuple[97863]))
      unknown call_tmp[584864] "expr temp" "maybe param" "maybe type" "temp"
      (584867 'move' call_tmp[584864](97878 call == i[97869] call_tmp[584859]))
      (510679 'move' tmp[510674](510677 call _cond_test call_tmp[584864]))
      if tmp[510674]
      {
        unknown tmp[510681] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[584869] "expr temp" "maybe param" "maybe type" "temp"
        (584872 'move' call_tmp[584869](97883 call rangeTuple[97863] i[97869]))
        (510683 'move' tmp[510681](97884 call stridable _mt[232] call_tmp[584869]))
        (510688 'move' tmp[510673](510685 '_paramFoldLogical' tmp[510674] tmp[510681]))
      }
      {
        unknown tmp[398136] "maybe param" "temp"
        unknown call_tmp[584876] "expr temp" "maybe param" "maybe type" "temp"
        (584879 'move' call_tmp[584876](97890 call rangeTuple[97863] i[97869]))
        (398147 'move' tmp[398136](97891 call stridable _mt[232] call_tmp[584876]))
        unknown call_tmp[584883] "expr temp" "maybe param" "maybe type" "temp"
        (584886 'move' call_tmp[584883](398149 call _cond_invalid tmp[398136]))
        if call_tmp[584883]
        {
          (398152 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[510646] "expr temp" "if-expr result" "maybe type" "temp"
        unknown tmp[510647] "maybe param" "temp"
        unknown call_tmp[584888] "expr temp" "maybe param" "maybe type" "temp"
        (584891 'move' call_tmp[584888](398137 call isTrue tmp[398136]))
        (510652 'move' tmp[510647](510650 call _cond_test call_tmp[584888]))
        if tmp[510647]
        {
          (510657 'move' tmp[510646](510654 '_paramFoldLogical' tmp[510647] 1))
        }
        {
          unknown tmp[510659] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[584893] "expr temp" "maybe param" "maybe type" "temp"
          (584896 'move' call_tmp[584893](97899 call + i[97869] 1))
          unknown call_tmp[584898] "expr temp" "maybe param" "maybe type" "temp"
          (584901 'move' call_tmp[584898](97901 call anyStridable rangeTuple[97863] call_tmp[584893]))
          (510661 'move' tmp[510659](398141 call isTrue call_tmp[584898]))
          (510666 'move' tmp[510646](510663 '_paramFoldLogical' tmp[510647] tmp[510659]))
        }
        (510693 'move' tmp[510673](510690 '_paramFoldLogical' tmp[510674] tmp[510646]))
      }
      (465417 'move' ret[465412](465416 'deref' tmp[510673]))
      (465414 return ret[465412])
    }
    unknown call_tmp[584903] "expr temp" "maybe param" "maybe type" "temp"
    (584906 'move' call_tmp[584903](97935 call _cond_test chpl__testParFlag[181291]))
    if call_tmp[584903]
    {
      (97933 call chpl__testPar "default rectangular domain follower invoked on " followThis[97828])
    }
    unknown call_tmp[584908] "expr temp" "maybe param" "maybe type" "temp"
    (584911 'move' call_tmp[584908](97962 call _cond_test debugDefaultDist[92581]))
    if call_tmp[584908]
    {
      (97960 call chpl_debug_writeln "In domain follower code: Following " followThis[97828])
    }
    unknown tmp[398157] "maybe param" "temp"
    (398168 'move' tmp[398157](97968 call stridable _mt[232] this[99751]))
    unknown call_tmp[584915] "expr temp" "maybe param" "maybe type" "temp"
    (584918 'move' call_tmp[584915](398170 call _cond_invalid tmp[398157]))
    if call_tmp[584915]
    {
      (398173 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown stridable[97977] "param"
    unknown tmp[510700] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510701] "maybe param" "temp"
    unknown call_tmp[584920] "expr temp" "maybe param" "maybe type" "temp"
    (584923 'move' call_tmp[584920](398158 call isTrue tmp[398157]))
    (510706 'move' tmp[510701](510704 call _cond_test call_tmp[584920]))
    if tmp[510701]
    {
      (510711 'move' tmp[510700](510708 '_paramFoldLogical' tmp[510701] 1))
    }
    {
      unknown tmp[510713] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[584925] "expr temp" "maybe param" "maybe type" "temp"
      (584928 'move' call_tmp[584925](97974 call anyStridable followThis[97828]))
      (510715 'move' tmp[510713](398162 call isTrue call_tmp[584925]))
      (510720 'move' tmp[510700](510717 '_paramFoldLogical' tmp[510701] tmp[510713]))
    }
    (490613 'init var' stridable[97977] tmp[510700])
    unknown block[97990] "insert auto destroy"
    unknown call_tmp[584932] "expr temp" "maybe param" "maybe type" "temp"
    (584935 'move' call_tmp[584932](346958 call rank _mt[232] this[99751]))
    unknown call_tmp[584939] "expr temp" "maybe param" "maybe type" "temp"
    (584942 'move' call_tmp[584939](346963 call intIdxType _mt[232] this[99751]))
    unknown call_tmp[584944] "expr temp" "maybe param" "maybe type" "temp"
    (584947 'move' call_tmp[584944](97987 call range[66183](?)(idxType = call_tmp[584939])(stridable = stridable[97977])))
    unknown call_tmp[584949] "expr temp" "maybe param" "maybe type" "temp"
    (584952 'move' call_tmp[584949](97988 call * call_tmp[584932] call_tmp[584944]))
    (490615 'default init var' block[97990] call_tmp[584949])
    unknown call_tmp[584954] "expr temp" "maybe param" "maybe type" "temp"
    (584957 'move' call_tmp[584954](98319 call _cond_test stridable[97977]))
    if call_tmp[584954]
    {
      unknown call_tmp[584961] "expr temp" "maybe param" "maybe type" "temp"
      (584964 'move' call_tmp[584961](346969 call intIdxType _mt[232] this[99751]))
      unknown strType[97998] "insert auto destroy" "type variable"(97997 call chpl__signedType call_tmp[584961])
      unknown call_tmp[584968] "expr temp" "maybe param" "maybe type" "temp"
      (584971 'move' call_tmp[584968](490620 call intIdxType _mt[232] this[99751]))
      (490623 'move' strType[97998](490618 call chpl__signedType call_tmp[584968]))
      {
        unknown i[98199] "insert auto destroy"
        (490625 'init var' i[98199] 0)
        unknown tmp[98200] "maybe param" "temp"
        unknown call_tmp[584975] "expr temp" "maybe param" "maybe type" "temp"
        (584978 'move' call_tmp[584975](346974 call rank _mt[232] this[99751]))
        (98212 'move' tmp[98200](98210 call chpl_compute_low_param_loop_bound 1 call_tmp[584975]))
        unknown tmp[98201] "maybe param" "temp"
        unknown call_tmp[584982] "expr temp" "maybe param" "maybe type" "temp"
        (584985 'move' call_tmp[584982](347053 call rank _mt[232] this[99751]))
        (98219 'move' tmp[98201](98217 call chpl_compute_high_param_loop_bound 1 call_tmp[584982]))
        unknown tmp[98202] "maybe param" "temp"
        (98222 'move' tmp[98202] 1)
        ParamForLoop
        { i[98199] tmp[98200] tmp[98201] tmp[98202]
          {
            unknown call_tmp[584989] "expr temp" "maybe param" "maybe type" "temp"
            (584992 'move' call_tmp[584989](98009 call(346979 call (partial) ranges _mt[232] this[99751]) i[98199]))
            unknown call_tmp[584996] "maybe param" "maybe type" "temp"
            (584999 'move' call_tmp[584996](98010 call stride _mt[232] call_tmp[584989]))
            const rStride[98013] "const" "insert auto destroy"
            (490627 'init var' rStride[98013] call_tmp[584996])
            unknown call_tmp[585001] "maybe param" "maybe type" "temp"
            (585004 'move' call_tmp[585001](98019 call _cast strType[97998] rStride[98013]))
            const rSignedStride[98021] "const" "insert auto destroy"
            (490629 'init var' rSignedStride[98021] call_tmp[585001])
            unknown call_tmp[585006] "expr temp" "maybe param" "maybe type" "temp"
            (585009 'move' call_tmp[585006](98027 call followThis[97828] i[98199]))
            unknown call_tmp[585013] "expr temp" "maybe param" "maybe type" "temp"
            (585016 'move' call_tmp[585013](98028 call stride _mt[232] call_tmp[585006]))
            unknown call_tmp[585018] "maybe param" "maybe type" "temp"
            (585021 'move' call_tmp[585018](98032 call _cast strType[97998] call_tmp[585013]))
            const fSignedStride[98034] "const" "insert auto destroy"
            (490631 'init var' fSignedStride[98034] call_tmp[585018])
            unknown call_tmp[585023] "expr temp" "maybe param" "maybe type" "temp"
            (585026 'move' call_tmp[585023](98039 call > rStride[98013] 0))
            unknown call_tmp[585028] "expr temp" "maybe param" "maybe type" "temp"
            (585031 'move' call_tmp[585028](98195 call _cond_test call_tmp[585023]))
            if call_tmp[585028]
            {
              unknown call_tmp[585035] "expr temp" "maybe param" "maybe type" "temp"
              (585038 'move' call_tmp[585035](346991 call intIdxType _mt[232] this[99751]))
              unknown call_tmp[585040] "maybe param" "maybe type" "temp"
              (585043 'move' call_tmp[585040](98043 call _cast call_tmp[585035] rStride[98013]))
              const riStride[98045] "const" "insert auto destroy"
              (490633 'init var' riStride[98045] call_tmp[585040])
              unknown call_tmp[585047] "expr temp" "maybe param" "maybe type" "temp"
              (585050 'move' call_tmp[585047](98052 call(346996 call (partial) ranges _mt[232] this[99751]) i[98199]))
              unknown call_tmp[585054] "expr temp" "maybe param" "maybe type" "temp"
              (585057 'move' call_tmp[585054](98053 call alignedLowAsInt _mt[232] call_tmp[585047]))
              unknown call_tmp[585059] "expr temp" "maybe param" "maybe type" "temp"
              (585062 'move' call_tmp[585059](98059 call followThis[97828] i[98199]))
              unknown call_tmp[585066] "expr temp" "maybe param" "maybe type" "temp"
              (585069 'move' call_tmp[585066](98060 call low _mt[232] call_tmp[585059]))
              unknown call_tmp[585071] "expr temp" "maybe param" "maybe type" "temp"
              (585074 'move' call_tmp[585071](98064 call * call_tmp[585066] riStride[98045]))
              unknown call_tmp[585076] "maybe param" "maybe type" "temp"
              (585079 'move' call_tmp[585076](98066 call + call_tmp[585054] call_tmp[585071]))
              const low[98068] "const" "insert auto destroy"
              (490635 'init var' low[98068] call_tmp[585076])
              unknown call_tmp[585083] "expr temp" "maybe param" "maybe type" "temp"
              (585086 'move' call_tmp[585083](98074 call(347005 call (partial) ranges _mt[232] this[99751]) i[98199]))
              unknown call_tmp[585090] "expr temp" "maybe param" "maybe type" "temp"
              (585093 'move' call_tmp[585090](98075 call alignedLowAsInt _mt[232] call_tmp[585083]))
              unknown call_tmp[585095] "expr temp" "maybe param" "maybe type" "temp"
              (585098 'move' call_tmp[585095](98081 call followThis[97828] i[98199]))
              unknown call_tmp[585102] "expr temp" "maybe param" "maybe type" "temp"
              (585105 'move' call_tmp[585102](98082 call high _mt[232] call_tmp[585095]))
              unknown call_tmp[585107] "expr temp" "maybe param" "maybe type" "temp"
              (585110 'move' call_tmp[585107](98086 call * call_tmp[585102] riStride[98045]))
              unknown call_tmp[585112] "maybe param" "maybe type" "temp"
              (585115 'move' call_tmp[585112](98088 call + call_tmp[585090] call_tmp[585107]))
              const high[98090] "const" "insert auto destroy"
              (490637 'init var' high[98090] call_tmp[585112])
              unknown call_tmp[585117] "expr temp" "maybe param" "maybe type" "temp"
              (585120 'move' call_tmp[585117](98095 call * rSignedStride[98021] fSignedStride[98034]))
              unknown call_tmp[585122] "maybe param" "maybe type" "temp"
              (585125 'move' call_tmp[585122](98098 call _cast strType[97998] call_tmp[585117]))
              const stride[98100] "const" "insert auto destroy"
              (490639 'init var' stride[98100] call_tmp[585122])
              unknown call_tmp[585127] "expr temp" "maybe param" "maybe type" "temp"
              (585130 'move' call_tmp[585127](98106 call block[97990] i[98199]))
              unknown call_tmp[585132] "expr temp" "maybe param" "maybe type" "temp"
              (585135 'move' call_tmp[585132](98109 call chpl_build_bounded_range low[98068] high[98090]))
              unknown call_tmp[585137] "expr temp" "maybe param" "maybe type" "temp"
              (585140 'move' call_tmp[585137](98112 call chpl_by call_tmp[585132] stride[98100]))
              (98114 call = call_tmp[585127] call_tmp[585137])
            }
            {
              unknown call_tmp[585144] "expr temp" "maybe param" "maybe type" "temp"
              (585147 'move' call_tmp[585144](347022 call intIdxType _mt[232] this[99751]))
              unknown call_tmp[585149] "expr temp" "maybe param" "maybe type" "temp"
              (585152 'move' call_tmp[585149](98118 call - rStride[98013]))
              unknown call_tmp[585154] "maybe param" "maybe type" "temp"
              (585157 'move' call_tmp[585154](98121 call _cast call_tmp[585144] call_tmp[585149]))
              const irStride[98123] "const" "insert auto destroy"
              (490641 'init var' irStride[98123] call_tmp[585154])
              unknown call_tmp[585161] "expr temp" "maybe param" "maybe type" "temp"
              (585164 'move' call_tmp[585161](98130 call(347027 call (partial) ranges _mt[232] this[99751]) i[98199]))
              unknown call_tmp[585168] "expr temp" "maybe param" "maybe type" "temp"
              (585171 'move' call_tmp[585168](98131 call alignedHighAsInt _mt[232] call_tmp[585161]))
              unknown call_tmp[585173] "expr temp" "maybe param" "maybe type" "temp"
              (585176 'move' call_tmp[585173](98137 call followThis[97828] i[98199]))
              unknown call_tmp[585180] "expr temp" "maybe param" "maybe type" "temp"
              (585183 'move' call_tmp[585180](98138 call high _mt[232] call_tmp[585173]))
              unknown call_tmp[585185] "expr temp" "maybe param" "maybe type" "temp"
              (585188 'move' call_tmp[585185](98142 call * call_tmp[585180] irStride[98123]))
              unknown call_tmp[585190] "maybe param" "maybe type" "temp"
              (585193 'move' call_tmp[585190](98144 call - call_tmp[585168] call_tmp[585185]))
              const low[98146] "const" "insert auto destroy"
              (490643 'init var' low[98146] call_tmp[585190])
              unknown call_tmp[585197] "expr temp" "maybe param" "maybe type" "temp"
              (585200 'move' call_tmp[585197](98152 call(347036 call (partial) ranges _mt[232] this[99751]) i[98199]))
              unknown call_tmp[585204] "expr temp" "maybe param" "maybe type" "temp"
              (585207 'move' call_tmp[585204](98153 call alignedHighAsInt _mt[232] call_tmp[585197]))
              unknown call_tmp[585209] "expr temp" "maybe param" "maybe type" "temp"
              (585212 'move' call_tmp[585209](98159 call followThis[97828] i[98199]))
              unknown call_tmp[585216] "expr temp" "maybe param" "maybe type" "temp"
              (585219 'move' call_tmp[585216](98160 call low _mt[232] call_tmp[585209]))
              unknown call_tmp[585221] "expr temp" "maybe param" "maybe type" "temp"
              (585224 'move' call_tmp[585221](98164 call * call_tmp[585216] irStride[98123]))
              unknown call_tmp[585226] "maybe param" "maybe type" "temp"
              (585229 'move' call_tmp[585226](98166 call - call_tmp[585204] call_tmp[585221]))
              const high[98168] "const" "insert auto destroy"
              (490645 'init var' high[98168] call_tmp[585226])
              unknown call_tmp[585231] "expr temp" "maybe param" "maybe type" "temp"
              (585234 'move' call_tmp[585231](98173 call * rSignedStride[98021] fSignedStride[98034]))
              unknown call_tmp[585236] "maybe param" "maybe type" "temp"
              (585239 'move' call_tmp[585236](98176 call _cast strType[97998] call_tmp[585231]))
              const stride[98178] "const" "insert auto destroy"
              (490647 'init var' stride[98178] call_tmp[585236])
              unknown call_tmp[585241] "expr temp" "maybe param" "maybe type" "temp"
              (585244 'move' call_tmp[585241](98184 call block[97990] i[98199]))
              unknown call_tmp[585246] "expr temp" "maybe param" "maybe type" "temp"
              (585249 'move' call_tmp[585246](98187 call chpl_build_bounded_range low[98146] high[98168]))
              unknown call_tmp[585251] "expr temp" "maybe param" "maybe type" "temp"
              (585254 'move' call_tmp[585251](98190 call chpl_by call_tmp[585246] stride[98178]))
              (98192 call = call_tmp[585241] call_tmp[585251])
            }
          }
        }
        label _unused_continueLabel[98204]
        label _breakLabel[98203]
      }
    }
    {
      {
        unknown i[98284] "insert auto destroy"
        (490649 'init var' i[98284] 0)
        unknown tmp[98285] "maybe param" "temp"
        unknown call_tmp[585258] "expr temp" "maybe param" "maybe type" "temp"
        (585261 'move' call_tmp[585258](347058 call rank _mt[232] this[99751]))
        (98297 'move' tmp[98285](98295 call chpl_compute_low_param_loop_bound 1 call_tmp[585258]))
        unknown tmp[98286] "maybe param" "temp"
        unknown call_tmp[585265] "expr temp" "maybe param" "maybe type" "temp"
        (585268 'move' call_tmp[585265](347089 call rank _mt[232] this[99751]))
        (98304 'move' tmp[98286](98302 call chpl_compute_high_param_loop_bound 1 call_tmp[585265]))
        unknown tmp[98287] "maybe param" "temp"
        (98307 'move' tmp[98287] 1)
        ParamForLoop
        { i[98284] tmp[98285] tmp[98286] tmp[98287]
          unknown call_tmp[585270] "expr temp" "maybe param" "maybe type" "temp"
          (585273 'move' call_tmp[585270](98240 call block[97990] i[98284]))
          unknown call_tmp[585277] "expr temp" "maybe param" "maybe type" "temp"
          (585280 'move' call_tmp[585277](98244 call(347065 call (partial) ranges _mt[232] this[99751]) i[98284]))
          unknown call_tmp[585284] "expr temp" "maybe param" "maybe type" "temp"
          (585287 'move' call_tmp[585284](98245 call _low _mt[232] call_tmp[585277]))
          unknown call_tmp[585291] "expr temp" "maybe param" "maybe type" "temp"
          (585294 'move' call_tmp[585291](347072 call intIdxType _mt[232] this[99751]))
          unknown call_tmp[585296] "expr temp" "maybe param" "maybe type" "temp"
          (585299 'move' call_tmp[585296](98251 call followThis[97828] i[98284]))
          unknown call_tmp[585303] "expr temp" "maybe param" "maybe type" "temp"
          (585306 'move' call_tmp[585303](98252 call low _mt[232] call_tmp[585296]))
          unknown call_tmp[585308] "expr temp" "maybe param" "maybe type" "temp"
          (585311 'move' call_tmp[585308](98256 call _cast call_tmp[585291] call_tmp[585303]))
          unknown call_tmp[585313] "expr temp" "maybe param" "maybe type" "temp"
          (585316 'move' call_tmp[585313](98258 call + call_tmp[585284] call_tmp[585308]))
          unknown call_tmp[585320] "expr temp" "maybe param" "maybe type" "temp"
          (585323 'move' call_tmp[585320](98263 call(347077 call (partial) ranges _mt[232] this[99751]) i[98284]))
          unknown call_tmp[585327] "expr temp" "maybe param" "maybe type" "temp"
          (585330 'move' call_tmp[585327](98264 call _low _mt[232] call_tmp[585320]))
          unknown call_tmp[585334] "expr temp" "maybe param" "maybe type" "temp"
          (585337 'move' call_tmp[585334](347084 call intIdxType _mt[232] this[99751]))
          unknown call_tmp[585339] "expr temp" "maybe param" "maybe type" "temp"
          (585342 'move' call_tmp[585339](98270 call followThis[97828] i[98284]))
          unknown call_tmp[585346] "expr temp" "maybe param" "maybe type" "temp"
          (585349 'move' call_tmp[585346](98271 call high _mt[232] call_tmp[585339]))
          unknown call_tmp[585351] "expr temp" "maybe param" "maybe type" "temp"
          (585354 'move' call_tmp[585351](98275 call _cast call_tmp[585334] call_tmp[585346]))
          unknown call_tmp[585356] "expr temp" "maybe param" "maybe type" "temp"
          (585359 'move' call_tmp[585356](98277 call + call_tmp[585327] call_tmp[585351]))
          unknown call_tmp[585361] "expr temp" "maybe param" "maybe type" "temp"
          (585364 'move' call_tmp[585361](98279 call chpl_build_bounded_range call_tmp[585313] call_tmp[585356]))
          (98281 call = call_tmp[585270] call_tmp[585361])
        }
        label _unused_continueLabel[98289]
        label _breakLabel[98288]
      }
    }
    unknown call_tmp[585368] "expr temp" "maybe param" "maybe type" "temp"
    (585371 'move' call_tmp[585368](347094 call rank _mt[232] this[99751]))
    unknown call_tmp[585373] "expr temp" "maybe param" "maybe type" "temp"
    (585376 'move' call_tmp[585373](98325 call == call_tmp[585368] 1))
    unknown call_tmp[585378] "expr temp" "maybe param" "maybe type" "temp"
    (585381 'move' call_tmp[585378](98420 call _cond_test call_tmp[585373]))
    if call_tmp[585378]
    {
      {
        unknown _indexOfInterest[98339] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[98340] "expr temp" "temp"
        (98348 'move' _iterator[98340](98331 call _getIteratorZip block[97990]))
        Defer
        {
          {
            (98364 call _freeIterator _iterator[98340])
          }
        }
        { scopeless type
          (98353 'move' _indexOfInterest[98339](98350 call iteratorIndex _iterator[98340]))
        }
        ForLoop
        {
          unknown i[98357] "index var" "insert auto destroy"
          (98359 'move' i[98357] _indexOfInterest[98339])
          {
            unknown yret[465425] "YVV" "temp"
            unknown call_tmp[585385] "expr temp" "maybe param" "maybe type" "temp"
            (585388 'move' call_tmp[585385](98335 call(347099 call (partial) chpl_intToIdx _mt[232] this[99751]) i[98357]))
            (465428 'move' yret[465425](465427 'deref' call_tmp[585385]))
            (465430 yield yret[465425])
          }
          label _continueLabel[98344]
          _indexOfInterest[98339]
          _iterator[98340]
        }
        label _breakLabel[98345]
      }
    }
    {
      {
        unknown _indexOfInterest[98385] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[98386] "expr temp" "temp"
        unknown call_tmp[585392] "expr temp" "maybe param" "maybe type" "temp"
        (585395 'move' call_tmp[585392](98377 call(347104 call (partial) these_help _mt[232] this[99751]) 1 block[97990]))
        (98395 'move' _iterator[98386](98393 call _getIterator call_tmp[585392]))
        Defer
        {
          {
            (98412 call _freeIterator _iterator[98386])
          }
        }
        { scopeless type
          (98401 'move' _indexOfInterest[98385](98398 call iteratorIndex _iterator[98386]))
        }
        ForLoop
        {
          unknown i[98405] "index var" "insert auto destroy"
          (98407 'move' i[98405] _indexOfInterest[98385])
          {
            unknown yret[465432] "YVV" "temp"
            unknown call_tmp[585399] "expr temp" "maybe param" "maybe type" "temp"
            (585402 'move' call_tmp[585399](98381 call(347109 call (partial) chpl_intToIdx _mt[232] this[99751]) i[98405]))
            (465435 'move' yret[465432](465434 'deref' call_tmp[585399]))
            (465437 yield yret[465432])
          }
          label _continueLabel[98390]
          _indexOfInterest[98385]
          _iterator[98386]
        }
        label _breakLabel[98391]
      }
    }
    (465423 return ret[465421])
  }
  where {
    (97859 call == tag[97823] follower[693])
  }
  function DefaultRectangularDom[99677](?).dsiMember[98436](arg _mt[99757]:_MT[227], arg this[99755]:DefaultRectangularDom[99677](?), arg ind[98433] :
  unknown call_tmp[585406] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "method" "primary method"
  {
    unknown ret[465441] "RVV" "temp"
    {
      unknown i[98465] "insert auto destroy"
      (490651 'init var' i[98465] 0)
      unknown tmp[98466] "maybe param" "temp"
      unknown call_tmp[585420] "expr temp" "maybe param" "maybe type" "temp"
      (585423 'move' call_tmp[585420](347125 call rank _mt[232] this[99755]))
      (98478 'move' tmp[98466](98476 call chpl_compute_low_param_loop_bound 1 call_tmp[585420]))
      unknown tmp[98467] "maybe param" "temp"
      unknown call_tmp[585427] "expr temp" "maybe param" "maybe type" "temp"
      (585430 'move' call_tmp[585427](347138 call rank _mt[232] this[99755]))
      (98485 'move' tmp[98467](98483 call chpl_compute_high_param_loop_bound 1 call_tmp[585427]))
      unknown tmp[98468] "maybe param" "temp"
      (98488 'move' tmp[98468] 1)
      ParamForLoop
      { i[98465] tmp[98466] tmp[98467] tmp[98468]
        unknown call_tmp[585434] "expr temp" "maybe param" "maybe type" "temp"
        (585437 'move' call_tmp[585434](98445 call(347130 call (partial) ranges _mt[232] this[99755]) i[98465]))
        unknown call_tmp[585441] "expr temp" "maybe param" "maybe type" "temp"
        (585444 'move' call_tmp[585441](98452 call ind[98433] i[98465]))
        unknown call_tmp[585446] "expr temp" "maybe param" "maybe type" "temp"
        (585449 'move' call_tmp[585446](98454 call(98446 call (partial) contains _mt[232] call_tmp[585434]) call_tmp[585441]))
        unknown call_tmp[585451] "expr temp" "maybe param" "maybe type" "temp"
        (585454 'move' call_tmp[585451](98455 call ! call_tmp[585446]))
        unknown call_tmp[585456] "expr temp" "maybe param" "maybe type" "temp"
        (585459 'move' call_tmp[585456](98460 call _cond_test call_tmp[585451]))
        if call_tmp[585456]
        {
          (465446 'move' ret[465441](465445 'deref' 0))
          gotoReturn _end_dsiMember[465439] _end_dsiMember[465439]
        }
      }
      label _unused_continueLabel[98470]
      label _breakLabel[98469]
    }
    (465451 'move' ret[465441](465450 'deref' 1))
    label _end_dsiMember[465439]
    (465443 return ret[465441])
  }
  function DefaultRectangularDom[99677](?).dsiIndexOrder[98514](arg _mt[99761]:_MT[227], arg this[99759]:DefaultRectangularDom[99677](?), arg ind[98511] :
  unknown call_tmp[585463] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "method" "primary method"
  {
    unknown ret[465455] "RVV" "temp"
    unknown totOrder[98517] "insert auto destroy"
    unknown call_tmp[585477] "expr temp" "maybe param" "maybe type" "temp"
    (585480 'move' call_tmp[585477](347152 call intIdxType _mt[232] this[99759]))
    (490653 'default init var' totOrder[98517] call_tmp[585477])
    unknown call_tmp[585484] "maybe param" "maybe type" "temp"
    (585487 'move' call_tmp[585484](347156 call intIdxType _mt[232] this[99759]))
    unknown blk[98523] "insert auto destroy"
    (490655 'init var' blk[98523] 1 call_tmp[585484])
    {
      unknown d[98590] "insert auto destroy"
      (490657 'init var' d[98590] 0)
      unknown tmp[98591] "maybe param" "temp"
      unknown call_tmp[585491] "expr temp" "maybe param" "maybe type" "temp"
      (585494 'move' call_tmp[585491](347161 call rank _mt[232] this[99759]))
      (98602 'move' tmp[98591](98600 call chpl_compute_low_param_loop_bound 1 call_tmp[585491]))
      unknown tmp[98592] "maybe param" "temp"
      unknown call_tmp[585498] "expr temp" "maybe param" "maybe type" "temp"
      (585501 'move' call_tmp[585498](347190 call rank _mt[232] this[99759]))
      (98609 'move' tmp[98592](98607 call chpl_compute_high_param_loop_bound 1 call_tmp[585498]))
      unknown tmp[98593] "maybe param" "temp"
      (98612 'move' tmp[98593](98531 call - 1))
      ParamForLoop
      { d[98590] tmp[98591] tmp[98592] tmp[98593]
        {
          unknown call_tmp[585505] "expr temp" "maybe param" "maybe type" "temp"
          (585508 'move' call_tmp[585505](98538 call(347166 call (partial) ranges _mt[232] this[99759]) d[98590]))
          unknown call_tmp[585512] "expr temp" "maybe param" "maybe type" "temp"
          (585515 'move' call_tmp[585512](98547 call ind[98511] d[98590]))
          unknown call_tmp[585517] "maybe param" "maybe type" "temp"
          (585520 'move' call_tmp[585517](98549 call(98541 call (partial) indexOrder _mt[232] call_tmp[585505]) call_tmp[585512]))
          const orderD[98550] "const" "insert auto destroy"
          (490659 'init var' orderD[98550] call_tmp[585517])
          unknown call_tmp[585524] "expr temp" "maybe param" "maybe type" "temp"
          (585527 'move' call_tmp[585524](347174 call intIdxType _mt[232] this[99759]))
          unknown call_tmp[585529] "expr temp" "maybe param" "maybe type" "temp"
          (585532 'move' call_tmp[585529](98556 call - 1))
          unknown call_tmp[585534] "expr temp" "maybe param" "maybe type" "temp"
          (585537 'move' call_tmp[585534](98559 call _cast call_tmp[585524] call_tmp[585529]))
          unknown call_tmp[585539] "expr temp" "maybe param" "maybe type" "temp"
          (585542 'move' call_tmp[585539](98561 call == orderD[98550] call_tmp[585534]))
          unknown call_tmp[585544] "expr temp" "maybe param" "maybe type" "temp"
          (585547 'move' call_tmp[585544](98566 call _cond_test call_tmp[585539]))
          if call_tmp[585544]
          {
            (465460 'move' ret[465455](465459 'deref' orderD[98550]))
            gotoReturn _end_dsiIndexOrder[465453] _end_dsiIndexOrder[465453]
          }
          unknown call_tmp[585549] "expr temp" "maybe param" "maybe type" "temp"
          (585552 'move' call_tmp[585549](98574 call * orderD[98550] blk[98523]))
          (98576 call += totOrder[98517] call_tmp[585549])
          unknown call_tmp[585556] "expr temp" "maybe param" "maybe type" "temp"
          (585559 'move' call_tmp[585556](98583 call(347184 call (partial) ranges _mt[232] this[99759]) d[98590]))
          unknown call_tmp[585563] "expr temp" "maybe param" "maybe type" "temp"
          (585566 'move' call_tmp[585563](98584 call length _mt[232] call_tmp[585556]))
          (98587 call *= blk[98523] call_tmp[585563])
        }
      }
      label _unused_continueLabel[98595]
      label _breakLabel[98594]
    }
    (465465 'move' ret[465455](465464 'deref' totOrder[98517]))
    label _end_dsiIndexOrder[465453]
    (465457 return ret[465455])
  }
  function DefaultRectangularDom[99677](?).dsiDims[98630](arg _mt[99765]:_MT[227], arg this[99763]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465469] "RVV" "temp"
    unknown call_tmp[585570] "expr temp" "maybe param" "maybe type" "temp"
    (585573 'move' call_tmp[585570](347196 call ranges _mt[232] this[99763]))
    (465474 'move' ret[465469](465473 'deref' call_tmp[585570]))
    (465471 return ret[465469])
  }
  function DefaultRectangularDom[99677](?).dsiDim[98644](arg _mt[99769]:_MT[227], arg this[99767]:DefaultRectangularDom[99677](?), arg d[98641]:int(64)[13]) : _unknown[43] "method" "primary method"
  {
    unknown ret[465478] "RVV" "temp"
    unknown call_tmp[585577] "expr temp" "maybe param" "maybe type" "temp"
    (585580 'move' call_tmp[585577](98649 call(347201 call (partial) ranges _mt[232] this[99767]) d[98641]))
    (465483 'move' ret[465478](465482 'deref' call_tmp[585577]))
    (465480 return ret[465478])
  }
  function DefaultRectangularDom[99677](?).dsiDim[98661](arg _mt[99773]:_MT[227], arg this[99771]:DefaultRectangularDom[99677](?), param arg d[98658]:int(64)[13]) : _unknown[43] "method" "primary method"
  {
    unknown ret[465487] "RVV" "temp"
    unknown call_tmp[585584] "expr temp" "maybe param" "maybe type" "temp"
    (585587 'move' call_tmp[585584](98666 call(347207 call (partial) ranges _mt[232] this[99771]) d[98658]))
    (465492 'move' ret[465487](465491 'deref' call_tmp[585584]))
    (465489 return ret[465487])
  }
  function DefaultRectangularDom[99677](?).dsiNumIndices[98674](arg _mt[99777]:_MT[227], arg this[99775]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465496] "RVV" "temp"
    unknown call_tmp[585591] "expr temp" "maybe param" "maybe type" "temp"
    (585594 'move' call_tmp[585591](347212 call intIdxType _mt[232] this[99775]))
    unknown call_tmp[585596] "maybe param" "maybe type" "temp"
    (585599 'move' call_tmp[585596](98678 call _cast call_tmp[585591] 1))
    unknown sum[98680] "insert auto destroy"
    (490661 'init var' sum[98680] call_tmp[585596])
    {
      unknown i[98699] "insert auto destroy"
      (490663 'init var' i[98699] 0)
      unknown tmp[98700] "maybe param" "temp"
      unknown call_tmp[585603] "expr temp" "maybe param" "maybe type" "temp"
      (585606 'move' call_tmp[585603](347217 call rank _mt[232] this[99775]))
      (98712 'move' tmp[98700](98710 call chpl_compute_low_param_loop_bound 1 call_tmp[585603]))
      unknown tmp[98701] "maybe param" "temp"
      unknown call_tmp[585610] "expr temp" "maybe param" "maybe type" "temp"
      (585613 'move' call_tmp[585610](347229 call rank _mt[232] this[99775]))
      (98719 'move' tmp[98701](98717 call chpl_compute_high_param_loop_bound 1 call_tmp[585610]))
      unknown tmp[98702] "maybe param" "temp"
      (98722 'move' tmp[98702] 1)
      ParamForLoop
      { i[98699] tmp[98700] tmp[98701] tmp[98702]
        unknown call_tmp[585617] "expr temp" "maybe param" "maybe type" "temp"
        (585620 'move' call_tmp[585617](98692 call(347223 call (partial) ranges _mt[232] this[99775]) i[98699]))
        unknown call_tmp[585624] "expr temp" "maybe param" "maybe type" "temp"
        (585627 'move' call_tmp[585624](98693 call length _mt[232] call_tmp[585617]))
        (98696 call *= sum[98680] call_tmp[585624])
      }
      label _unused_continueLabel[98704]
      label _breakLabel[98703]
    }
    (465501 'move' ret[465496](465500 'deref' sum[98680]))
    (465498 return ret[465496])
  }
  function DefaultRectangularDom[99677](?).dsiLow[98740](arg _mt[99781]:_MT[227], arg this[99779]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465505] "RVV" "temp"
    unknown call_tmp[585631] "expr temp" "maybe param" "maybe type" "temp"
    (585634 'move' call_tmp[585631](347235 call rank _mt[232] this[99779]))
    unknown call_tmp[585636] "expr temp" "maybe param" "maybe type" "temp"
    (585639 'move' call_tmp[585636](98744 call == call_tmp[585631] 1))
    unknown call_tmp[585641] "expr temp" "maybe param" "maybe type" "temp"
    (585644 'move' call_tmp[585641](98819 call _cond_test call_tmp[585636]))
    if call_tmp[585641]
    {
      unknown call_tmp[585648] "expr temp" "maybe param" "maybe type" "temp"
      (585651 'move' call_tmp[585648](98749 call(347240 call (partial) ranges _mt[232] this[99779]) 1))
      unknown call_tmp[585655] "expr temp" "maybe param" "maybe type" "temp"
      (585658 'move' call_tmp[585655](98750 call low _mt[232] call_tmp[585648]))
      (465510 'move' ret[465505](465509 'deref' call_tmp[585655]))
      gotoReturn _end_dsiLow[465503] _end_dsiLow[465503]
    }
    {
      unknown result[98760] "insert auto destroy"
      unknown call_tmp[585662] "expr temp" "maybe param" "maybe type" "temp"
      (585665 'move' call_tmp[585662](347245 call rank _mt[232] this[99779]))
      unknown call_tmp[585669] "expr temp" "maybe param" "maybe type" "temp"
      (585672 'move' call_tmp[585669](347250 call idxType _mt[232] this[99779]))
      unknown call_tmp[585674] "expr temp" "maybe param" "maybe type" "temp"
      (585677 'move' call_tmp[585674](98758 call * call_tmp[585662] call_tmp[585669]))
      (490665 'default init var' result[98760] call_tmp[585674])
      {
        unknown i[98782] "insert auto destroy"
        (490667 'init var' i[98782] 0)
        unknown tmp[98783] "maybe param" "temp"
        unknown call_tmp[585681] "expr temp" "maybe param" "maybe type" "temp"
        (585684 'move' call_tmp[585681](347255 call rank _mt[232] this[99779]))
        (98795 'move' tmp[98783](98793 call chpl_compute_low_param_loop_bound 1 call_tmp[585681]))
        unknown tmp[98784] "maybe param" "temp"
        unknown call_tmp[585688] "expr temp" "maybe param" "maybe type" "temp"
        (585691 'move' call_tmp[585688](347268 call rank _mt[232] this[99779]))
        (98802 'move' tmp[98784](98800 call chpl_compute_high_param_loop_bound 1 call_tmp[585688]))
        unknown tmp[98785] "maybe param" "temp"
        (98805 'move' tmp[98785] 1)
        ParamForLoop
        { i[98782] tmp[98783] tmp[98784] tmp[98785]
          unknown call_tmp[585693] "expr temp" "maybe param" "maybe type" "temp"
          (585696 'move' call_tmp[585693](98771 call result[98760] i[98782]))
          unknown call_tmp[585700] "expr temp" "maybe param" "maybe type" "temp"
          (585703 'move' call_tmp[585700](98775 call(347262 call (partial) ranges _mt[232] this[99779]) i[98782]))
          unknown call_tmp[585707] "expr temp" "maybe param" "maybe type" "temp"
          (585710 'move' call_tmp[585707](98776 call low _mt[232] call_tmp[585700]))
          (98779 call = call_tmp[585693] call_tmp[585707])
        }
        label _unused_continueLabel[98787]
        label _breakLabel[98786]
      }
      (465515 'move' ret[465505](465514 'deref' result[98760]))
      gotoReturn _end_dsiLow[465503] _end_dsiLow[465503]
    }
    label _end_dsiLow[465503]
    (465507 return ret[465505])
  }
  function DefaultRectangularDom[99677](?).dsiHigh[98828](arg _mt[99785]:_MT[227], arg this[99783]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465521] "RVV" "temp"
    unknown call_tmp[585714] "expr temp" "maybe param" "maybe type" "temp"
    (585717 'move' call_tmp[585714](347274 call rank _mt[232] this[99783]))
    unknown call_tmp[585719] "expr temp" "maybe param" "maybe type" "temp"
    (585722 'move' call_tmp[585719](98832 call == call_tmp[585714] 1))
    unknown call_tmp[585724] "expr temp" "maybe param" "maybe type" "temp"
    (585727 'move' call_tmp[585724](98907 call _cond_test call_tmp[585719]))
    if call_tmp[585724]
    {
      unknown call_tmp[585731] "expr temp" "maybe param" "maybe type" "temp"
      (585734 'move' call_tmp[585731](98837 call(347279 call (partial) ranges _mt[232] this[99783]) 1))
      unknown call_tmp[585738] "expr temp" "maybe param" "maybe type" "temp"
      (585741 'move' call_tmp[585738](98838 call high _mt[232] call_tmp[585731]))
      (465526 'move' ret[465521](465525 'deref' call_tmp[585738]))
      gotoReturn _end_dsiHigh[465519] _end_dsiHigh[465519]
    }
    {
      unknown result[98848] "insert auto destroy"
      unknown call_tmp[585745] "expr temp" "maybe param" "maybe type" "temp"
      (585748 'move' call_tmp[585745](347284 call rank _mt[232] this[99783]))
      unknown call_tmp[585752] "expr temp" "maybe param" "maybe type" "temp"
      (585755 'move' call_tmp[585752](347289 call idxType _mt[232] this[99783]))
      unknown call_tmp[585757] "expr temp" "maybe param" "maybe type" "temp"
      (585760 'move' call_tmp[585757](98846 call * call_tmp[585745] call_tmp[585752]))
      (490669 'default init var' result[98848] call_tmp[585757])
      {
        unknown i[98870] "insert auto destroy"
        (490671 'init var' i[98870] 0)
        unknown tmp[98871] "maybe param" "temp"
        unknown call_tmp[585764] "expr temp" "maybe param" "maybe type" "temp"
        (585767 'move' call_tmp[585764](347294 call rank _mt[232] this[99783]))
        (98883 'move' tmp[98871](98881 call chpl_compute_low_param_loop_bound 1 call_tmp[585764]))
        unknown tmp[98872] "maybe param" "temp"
        unknown call_tmp[585771] "expr temp" "maybe param" "maybe type" "temp"
        (585774 'move' call_tmp[585771](347307 call rank _mt[232] this[99783]))
        (98890 'move' tmp[98872](98888 call chpl_compute_high_param_loop_bound 1 call_tmp[585771]))
        unknown tmp[98873] "maybe param" "temp"
        (98893 'move' tmp[98873] 1)
        ParamForLoop
        { i[98870] tmp[98871] tmp[98872] tmp[98873]
          unknown call_tmp[585776] "expr temp" "maybe param" "maybe type" "temp"
          (585779 'move' call_tmp[585776](98859 call result[98848] i[98870]))
          unknown call_tmp[585783] "expr temp" "maybe param" "maybe type" "temp"
          (585786 'move' call_tmp[585783](98863 call(347301 call (partial) ranges _mt[232] this[99783]) i[98870]))
          unknown call_tmp[585790] "expr temp" "maybe param" "maybe type" "temp"
          (585793 'move' call_tmp[585790](98864 call high _mt[232] call_tmp[585783]))
          (98867 call = call_tmp[585776] call_tmp[585790])
        }
        label _unused_continueLabel[98875]
        label _breakLabel[98874]
      }
      (465531 'move' ret[465521](465530 'deref' result[98848]))
      gotoReturn _end_dsiHigh[465519] _end_dsiHigh[465519]
    }
    label _end_dsiHigh[465519]
    (465523 return ret[465521])
  }
  function DefaultRectangularDom[99677](?).dsiAlignedLow[98916](arg _mt[99789]:_MT[227], arg this[99787]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465537] "RVV" "temp"
    unknown call_tmp[585797] "expr temp" "maybe param" "maybe type" "temp"
    (585800 'move' call_tmp[585797](347313 call rank _mt[232] this[99787]))
    unknown call_tmp[585802] "expr temp" "maybe param" "maybe type" "temp"
    (585805 'move' call_tmp[585802](98920 call == call_tmp[585797] 1))
    unknown call_tmp[585807] "expr temp" "maybe param" "maybe type" "temp"
    (585810 'move' call_tmp[585807](98995 call _cond_test call_tmp[585802]))
    if call_tmp[585807]
    {
      unknown call_tmp[585814] "expr temp" "maybe param" "maybe type" "temp"
      (585817 'move' call_tmp[585814](98925 call(347318 call (partial) ranges _mt[232] this[99787]) 1))
      unknown call_tmp[585821] "expr temp" "maybe param" "maybe type" "temp"
      (585824 'move' call_tmp[585821](98926 call alignedLow _mt[232] call_tmp[585814]))
      (465542 'move' ret[465537](465541 'deref' call_tmp[585821]))
      gotoReturn _end_dsiAlignedLow[465535] _end_dsiAlignedLow[465535]
    }
    {
      unknown result[98936] "insert auto destroy"
      unknown call_tmp[585828] "expr temp" "maybe param" "maybe type" "temp"
      (585831 'move' call_tmp[585828](347323 call rank _mt[232] this[99787]))
      unknown call_tmp[585835] "expr temp" "maybe param" "maybe type" "temp"
      (585838 'move' call_tmp[585835](347328 call idxType _mt[232] this[99787]))
      unknown call_tmp[585840] "expr temp" "maybe param" "maybe type" "temp"
      (585843 'move' call_tmp[585840](98934 call * call_tmp[585828] call_tmp[585835]))
      (490673 'default init var' result[98936] call_tmp[585840])
      {
        unknown i[98958] "insert auto destroy"
        (490675 'init var' i[98958] 0)
        unknown tmp[98959] "maybe param" "temp"
        unknown call_tmp[585847] "expr temp" "maybe param" "maybe type" "temp"
        (585850 'move' call_tmp[585847](347333 call rank _mt[232] this[99787]))
        (98971 'move' tmp[98959](98969 call chpl_compute_low_param_loop_bound 1 call_tmp[585847]))
        unknown tmp[98960] "maybe param" "temp"
        unknown call_tmp[585854] "expr temp" "maybe param" "maybe type" "temp"
        (585857 'move' call_tmp[585854](347346 call rank _mt[232] this[99787]))
        (98978 'move' tmp[98960](98976 call chpl_compute_high_param_loop_bound 1 call_tmp[585854]))
        unknown tmp[98961] "maybe param" "temp"
        (98981 'move' tmp[98961] 1)
        ParamForLoop
        { i[98958] tmp[98959] tmp[98960] tmp[98961]
          unknown call_tmp[585859] "expr temp" "maybe param" "maybe type" "temp"
          (585862 'move' call_tmp[585859](98947 call result[98936] i[98958]))
          unknown call_tmp[585866] "expr temp" "maybe param" "maybe type" "temp"
          (585869 'move' call_tmp[585866](98951 call(347340 call (partial) ranges _mt[232] this[99787]) i[98958]))
          unknown call_tmp[585873] "expr temp" "maybe param" "maybe type" "temp"
          (585876 'move' call_tmp[585873](98952 call alignedLow _mt[232] call_tmp[585866]))
          (98955 call = call_tmp[585859] call_tmp[585873])
        }
        label _unused_continueLabel[98963]
        label _breakLabel[98962]
      }
      (465547 'move' ret[465537](465546 'deref' result[98936]))
      gotoReturn _end_dsiAlignedLow[465535] _end_dsiAlignedLow[465535]
    }
    label _end_dsiAlignedLow[465535]
    (465539 return ret[465537])
  }
  function DefaultRectangularDom[99677](?).dsiAlignedHigh[99004](arg _mt[99793]:_MT[227], arg this[99791]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465553] "RVV" "temp"
    unknown call_tmp[585880] "expr temp" "maybe param" "maybe type" "temp"
    (585883 'move' call_tmp[585880](347352 call rank _mt[232] this[99791]))
    unknown call_tmp[585885] "expr temp" "maybe param" "maybe type" "temp"
    (585888 'move' call_tmp[585885](99008 call == call_tmp[585880] 1))
    unknown call_tmp[585890] "expr temp" "maybe param" "maybe type" "temp"
    (585893 'move' call_tmp[585890](99083 call _cond_test call_tmp[585885]))
    if call_tmp[585890]
    {
      unknown call_tmp[585897] "expr temp" "maybe param" "maybe type" "temp"
      (585900 'move' call_tmp[585897](99013 call(347357 call (partial) ranges _mt[232] this[99791]) 1))
      unknown call_tmp[585904] "expr temp" "maybe param" "maybe type" "temp"
      (585907 'move' call_tmp[585904](99014 call alignedHigh _mt[232] call_tmp[585897]))
      (465558 'move' ret[465553](465557 'deref' call_tmp[585904]))
      gotoReturn _end_dsiAlignedHigh[465551] _end_dsiAlignedHigh[465551]
    }
    {
      unknown result[99024] "insert auto destroy"
      unknown call_tmp[585911] "expr temp" "maybe param" "maybe type" "temp"
      (585914 'move' call_tmp[585911](347362 call rank _mt[232] this[99791]))
      unknown call_tmp[585918] "expr temp" "maybe param" "maybe type" "temp"
      (585921 'move' call_tmp[585918](347367 call idxType _mt[232] this[99791]))
      unknown call_tmp[585923] "expr temp" "maybe param" "maybe type" "temp"
      (585926 'move' call_tmp[585923](99022 call * call_tmp[585911] call_tmp[585918]))
      (490677 'default init var' result[99024] call_tmp[585923])
      {
        unknown i[99046] "insert auto destroy"
        (490679 'init var' i[99046] 0)
        unknown tmp[99047] "maybe param" "temp"
        unknown call_tmp[585930] "expr temp" "maybe param" "maybe type" "temp"
        (585933 'move' call_tmp[585930](347372 call rank _mt[232] this[99791]))
        (99059 'move' tmp[99047](99057 call chpl_compute_low_param_loop_bound 1 call_tmp[585930]))
        unknown tmp[99048] "maybe param" "temp"
        unknown call_tmp[585937] "expr temp" "maybe param" "maybe type" "temp"
        (585940 'move' call_tmp[585937](347385 call rank _mt[232] this[99791]))
        (99066 'move' tmp[99048](99064 call chpl_compute_high_param_loop_bound 1 call_tmp[585937]))
        unknown tmp[99049] "maybe param" "temp"
        (99069 'move' tmp[99049] 1)
        ParamForLoop
        { i[99046] tmp[99047] tmp[99048] tmp[99049]
          unknown call_tmp[585942] "expr temp" "maybe param" "maybe type" "temp"
          (585945 'move' call_tmp[585942](99035 call result[99024] i[99046]))
          unknown call_tmp[585949] "expr temp" "maybe param" "maybe type" "temp"
          (585952 'move' call_tmp[585949](99039 call(347379 call (partial) ranges _mt[232] this[99791]) i[99046]))
          unknown call_tmp[585956] "expr temp" "maybe param" "maybe type" "temp"
          (585959 'move' call_tmp[585956](99040 call alignedHigh _mt[232] call_tmp[585949]))
          (99043 call = call_tmp[585942] call_tmp[585956])
        }
        label _unused_continueLabel[99051]
        label _breakLabel[99050]
      }
      (465563 'move' ret[465553](465562 'deref' result[99024]))
      gotoReturn _end_dsiAlignedHigh[465551] _end_dsiAlignedHigh[465551]
    }
    label _end_dsiAlignedHigh[465551]
    (465555 return ret[465553])
  }
  function DefaultRectangularDom[99677](?).dsiStride[99092](arg _mt[99797]:_MT[227], arg this[99795]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465569] "RVV" "temp"
    unknown call_tmp[585963] "expr temp" "maybe param" "maybe type" "temp"
    (585966 'move' call_tmp[585963](347391 call rank _mt[232] this[99795]))
    unknown call_tmp[585968] "expr temp" "maybe param" "maybe type" "temp"
    (585971 'move' call_tmp[585968](99096 call == call_tmp[585963] 1))
    unknown call_tmp[585973] "expr temp" "maybe param" "maybe type" "temp"
    (585976 'move' call_tmp[585973](99174 call _cond_test call_tmp[585968]))
    if call_tmp[585973]
    {
      unknown call_tmp[585980] "expr temp" "maybe param" "maybe type" "temp"
      (585983 'move' call_tmp[585980](99101 call(347396 call (partial) ranges _mt[232] this[99795]) 1))
      unknown call_tmp[585987] "expr temp" "maybe param" "maybe type" "temp"
      (585990 'move' call_tmp[585987](99102 call stride _mt[232] call_tmp[585980]))
      (465574 'move' ret[465569](465573 'deref' call_tmp[585987]))
      gotoReturn _end_dsiStride[465567] _end_dsiStride[465567]
    }
    {
      unknown result[99115] "insert auto destroy"
      unknown call_tmp[585994] "expr temp" "maybe param" "maybe type" "temp"
      (585997 'move' call_tmp[585994](347401 call rank _mt[232] this[99795]))
      unknown call_tmp[586001] "expr temp" "maybe param" "maybe type" "temp"
      (586004 'move' call_tmp[586001](347405 call intIdxType _mt[232] this[99795]))
      unknown call_tmp[586006] "expr temp" "maybe param" "maybe type" "temp"
      (586009 'move' call_tmp[586006](99112 call chpl__signedType call_tmp[586001]))
      unknown call_tmp[586011] "expr temp" "maybe param" "maybe type" "temp"
      (586014 'move' call_tmp[586011](99113 call * call_tmp[585994] call_tmp[586006]))
      (490681 'default init var' result[99115] call_tmp[586011])
      {
        unknown i[99137] "insert auto destroy"
        (490683 'init var' i[99137] 0)
        unknown tmp[99138] "maybe param" "temp"
        unknown call_tmp[586018] "expr temp" "maybe param" "maybe type" "temp"
        (586021 'move' call_tmp[586018](347410 call rank _mt[232] this[99795]))
        (99150 'move' tmp[99138](99148 call chpl_compute_low_param_loop_bound 1 call_tmp[586018]))
        unknown tmp[99139] "maybe param" "temp"
        unknown call_tmp[586025] "expr temp" "maybe param" "maybe type" "temp"
        (586028 'move' call_tmp[586025](347423 call rank _mt[232] this[99795]))
        (99157 'move' tmp[99139](99155 call chpl_compute_high_param_loop_bound 1 call_tmp[586025]))
        unknown tmp[99140] "maybe param" "temp"
        (99160 'move' tmp[99140] 1)
        ParamForLoop
        { i[99137] tmp[99138] tmp[99139] tmp[99140]
          unknown call_tmp[586030] "expr temp" "maybe param" "maybe type" "temp"
          (586033 'move' call_tmp[586030](99126 call result[99115] i[99137]))
          unknown call_tmp[586037] "expr temp" "maybe param" "maybe type" "temp"
          (586040 'move' call_tmp[586037](99130 call(347417 call (partial) ranges _mt[232] this[99795]) i[99137]))
          unknown call_tmp[586044] "expr temp" "maybe param" "maybe type" "temp"
          (586047 'move' call_tmp[586044](99131 call stride _mt[232] call_tmp[586037]))
          (99134 call = call_tmp[586030] call_tmp[586044])
        }
        label _unused_continueLabel[99142]
        label _breakLabel[99141]
      }
      (465579 'move' ret[465569](465578 'deref' result[99115]))
      gotoReturn _end_dsiStride[465567] _end_dsiStride[465567]
    }
    label _end_dsiStride[465567]
    (465571 return ret[465569])
  }
  function DefaultRectangularDom[99677](?).dsiAlignment[99183](arg _mt[99801]:_MT[227], arg this[99799]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465585] "RVV" "temp"
    unknown call_tmp[586051] "expr temp" "maybe param" "maybe type" "temp"
    (586054 'move' call_tmp[586051](347429 call rank _mt[232] this[99799]))
    unknown call_tmp[586056] "expr temp" "maybe param" "maybe type" "temp"
    (586059 'move' call_tmp[586056](99187 call == call_tmp[586051] 1))
    unknown call_tmp[586061] "expr temp" "maybe param" "maybe type" "temp"
    (586064 'move' call_tmp[586061](99262 call _cond_test call_tmp[586056]))
    if call_tmp[586061]
    {
      unknown call_tmp[586068] "expr temp" "maybe param" "maybe type" "temp"
      (586071 'move' call_tmp[586068](99192 call(347434 call (partial) ranges _mt[232] this[99799]) 1))
      unknown call_tmp[586075] "expr temp" "maybe param" "maybe type" "temp"
      (586078 'move' call_tmp[586075](99193 call alignment _mt[232] call_tmp[586068]))
      (465590 'move' ret[465585](465589 'deref' call_tmp[586075]))
      gotoReturn _end_dsiAlignment[465583] _end_dsiAlignment[465583]
    }
    {
      unknown result[99203] "insert auto destroy"
      unknown call_tmp[586082] "expr temp" "maybe param" "maybe type" "temp"
      (586085 'move' call_tmp[586082](347439 call rank _mt[232] this[99799]))
      unknown call_tmp[586089] "expr temp" "maybe param" "maybe type" "temp"
      (586092 'move' call_tmp[586089](347444 call idxType _mt[232] this[99799]))
      unknown call_tmp[586094] "expr temp" "maybe param" "maybe type" "temp"
      (586097 'move' call_tmp[586094](99201 call * call_tmp[586082] call_tmp[586089]))
      (490685 'default init var' result[99203] call_tmp[586094])
      {
        unknown i[99225] "insert auto destroy"
        (490687 'init var' i[99225] 0)
        unknown tmp[99226] "maybe param" "temp"
        unknown call_tmp[586101] "expr temp" "maybe param" "maybe type" "temp"
        (586104 'move' call_tmp[586101](347449 call rank _mt[232] this[99799]))
        (99238 'move' tmp[99226](99236 call chpl_compute_low_param_loop_bound 1 call_tmp[586101]))
        unknown tmp[99227] "maybe param" "temp"
        unknown call_tmp[586108] "expr temp" "maybe param" "maybe type" "temp"
        (586111 'move' call_tmp[586108](347462 call rank _mt[232] this[99799]))
        (99245 'move' tmp[99227](99243 call chpl_compute_high_param_loop_bound 1 call_tmp[586108]))
        unknown tmp[99228] "maybe param" "temp"
        (99248 'move' tmp[99228] 1)
        ParamForLoop
        { i[99225] tmp[99226] tmp[99227] tmp[99228]
          unknown call_tmp[586113] "expr temp" "maybe param" "maybe type" "temp"
          (586116 'move' call_tmp[586113](99214 call result[99203] i[99225]))
          unknown call_tmp[586120] "expr temp" "maybe param" "maybe type" "temp"
          (586123 'move' call_tmp[586120](99218 call(347456 call (partial) ranges _mt[232] this[99799]) i[99225]))
          unknown call_tmp[586127] "expr temp" "maybe param" "maybe type" "temp"
          (586130 'move' call_tmp[586127](99219 call alignment _mt[232] call_tmp[586120]))
          (99222 call = call_tmp[586113] call_tmp[586127])
        }
        label _unused_continueLabel[99230]
        label _breakLabel[99229]
      }
      (465595 'move' ret[465585](465594 'deref' result[99203]))
      gotoReturn _end_dsiAlignment[465583] _end_dsiAlignment[465583]
    }
    label _end_dsiAlignment[465583]
    (465587 return ret[465585])
  }
  function DefaultRectangularDom[99677](?).dsiFirst[99271](arg _mt[99805]:_MT[227], arg this[99803]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465601] "RVV" "temp"
    unknown call_tmp[586134] "expr temp" "maybe param" "maybe type" "temp"
    (586137 'move' call_tmp[586134](347468 call rank _mt[232] this[99803]))
    unknown call_tmp[586139] "expr temp" "maybe param" "maybe type" "temp"
    (586142 'move' call_tmp[586139](99275 call == call_tmp[586134] 1))
    unknown call_tmp[586144] "expr temp" "maybe param" "maybe type" "temp"
    (586147 'move' call_tmp[586144](99350 call _cond_test call_tmp[586139]))
    if call_tmp[586144]
    {
      unknown call_tmp[586151] "expr temp" "maybe param" "maybe type" "temp"
      (586154 'move' call_tmp[586151](99280 call(347473 call (partial) ranges _mt[232] this[99803]) 1))
      unknown call_tmp[586158] "expr temp" "maybe param" "maybe type" "temp"
      (586161 'move' call_tmp[586158](99281 call first _mt[232] call_tmp[586151]))
      (465606 'move' ret[465601](465605 'deref' call_tmp[586158]))
      gotoReturn _end_dsiFirst[465599] _end_dsiFirst[465599]
    }
    {
      unknown result[99291] "insert auto destroy"
      unknown call_tmp[586165] "expr temp" "maybe param" "maybe type" "temp"
      (586168 'move' call_tmp[586165](347478 call rank _mt[232] this[99803]))
      unknown call_tmp[586172] "expr temp" "maybe param" "maybe type" "temp"
      (586175 'move' call_tmp[586172](347483 call idxType _mt[232] this[99803]))
      unknown call_tmp[586177] "expr temp" "maybe param" "maybe type" "temp"
      (586180 'move' call_tmp[586177](99289 call * call_tmp[586165] call_tmp[586172]))
      (490689 'default init var' result[99291] call_tmp[586177])
      {
        unknown i[99313] "insert auto destroy"
        (490691 'init var' i[99313] 0)
        unknown tmp[99314] "maybe param" "temp"
        unknown call_tmp[586184] "expr temp" "maybe param" "maybe type" "temp"
        (586187 'move' call_tmp[586184](347488 call rank _mt[232] this[99803]))
        (99326 'move' tmp[99314](99324 call chpl_compute_low_param_loop_bound 1 call_tmp[586184]))
        unknown tmp[99315] "maybe param" "temp"
        unknown call_tmp[586191] "expr temp" "maybe param" "maybe type" "temp"
        (586194 'move' call_tmp[586191](347501 call rank _mt[232] this[99803]))
        (99333 'move' tmp[99315](99331 call chpl_compute_high_param_loop_bound 1 call_tmp[586191]))
        unknown tmp[99316] "maybe param" "temp"
        (99336 'move' tmp[99316] 1)
        ParamForLoop
        { i[99313] tmp[99314] tmp[99315] tmp[99316]
          unknown call_tmp[586196] "expr temp" "maybe param" "maybe type" "temp"
          (586199 'move' call_tmp[586196](99302 call result[99291] i[99313]))
          unknown call_tmp[586203] "expr temp" "maybe param" "maybe type" "temp"
          (586206 'move' call_tmp[586203](99306 call(347495 call (partial) ranges _mt[232] this[99803]) i[99313]))
          unknown call_tmp[586210] "expr temp" "maybe param" "maybe type" "temp"
          (586213 'move' call_tmp[586210](99307 call first _mt[232] call_tmp[586203]))
          (99310 call = call_tmp[586196] call_tmp[586210])
        }
        label _unused_continueLabel[99318]
        label _breakLabel[99317]
      }
      (465611 'move' ret[465601](465610 'deref' result[99291]))
      gotoReturn _end_dsiFirst[465599] _end_dsiFirst[465599]
    }
    label _end_dsiFirst[465599]
    (465603 return ret[465601])
  }
  function DefaultRectangularDom[99677](?).dsiLast[99359](arg _mt[99809]:_MT[227], arg this[99807]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465617] "RVV" "temp"
    unknown call_tmp[586217] "expr temp" "maybe param" "maybe type" "temp"
    (586220 'move' call_tmp[586217](347507 call rank _mt[232] this[99807]))
    unknown call_tmp[586222] "expr temp" "maybe param" "maybe type" "temp"
    (586225 'move' call_tmp[586222](99363 call == call_tmp[586217] 1))
    unknown call_tmp[586227] "expr temp" "maybe param" "maybe type" "temp"
    (586230 'move' call_tmp[586227](99438 call _cond_test call_tmp[586222]))
    if call_tmp[586227]
    {
      unknown call_tmp[586234] "expr temp" "maybe param" "maybe type" "temp"
      (586237 'move' call_tmp[586234](99368 call(347512 call (partial) ranges _mt[232] this[99807]) 1))
      unknown call_tmp[586241] "expr temp" "maybe param" "maybe type" "temp"
      (586244 'move' call_tmp[586241](99369 call last _mt[232] call_tmp[586234]))
      (465622 'move' ret[465617](465621 'deref' call_tmp[586241]))
      gotoReturn _end_dsiLast[465615] _end_dsiLast[465615]
    }
    {
      unknown result[99379] "insert auto destroy"
      unknown call_tmp[586248] "expr temp" "maybe param" "maybe type" "temp"
      (586251 'move' call_tmp[586248](347517 call rank _mt[232] this[99807]))
      unknown call_tmp[586255] "expr temp" "maybe param" "maybe type" "temp"
      (586258 'move' call_tmp[586255](347522 call idxType _mt[232] this[99807]))
      unknown call_tmp[586260] "expr temp" "maybe param" "maybe type" "temp"
      (586263 'move' call_tmp[586260](99377 call * call_tmp[586248] call_tmp[586255]))
      (490693 'default init var' result[99379] call_tmp[586260])
      {
        unknown i[99401] "insert auto destroy"
        (490695 'init var' i[99401] 0)
        unknown tmp[99402] "maybe param" "temp"
        unknown call_tmp[586267] "expr temp" "maybe param" "maybe type" "temp"
        (586270 'move' call_tmp[586267](347527 call rank _mt[232] this[99807]))
        (99414 'move' tmp[99402](99412 call chpl_compute_low_param_loop_bound 1 call_tmp[586267]))
        unknown tmp[99403] "maybe param" "temp"
        unknown call_tmp[586274] "expr temp" "maybe param" "maybe type" "temp"
        (586277 'move' call_tmp[586274](347540 call rank _mt[232] this[99807]))
        (99421 'move' tmp[99403](99419 call chpl_compute_high_param_loop_bound 1 call_tmp[586274]))
        unknown tmp[99404] "maybe param" "temp"
        (99424 'move' tmp[99404] 1)
        ParamForLoop
        { i[99401] tmp[99402] tmp[99403] tmp[99404]
          unknown call_tmp[586279] "expr temp" "maybe param" "maybe type" "temp"
          (586282 'move' call_tmp[586279](99390 call result[99379] i[99401]))
          unknown call_tmp[586286] "expr temp" "maybe param" "maybe type" "temp"
          (586289 'move' call_tmp[586286](99394 call(347534 call (partial) ranges _mt[232] this[99807]) i[99401]))
          unknown call_tmp[586293] "expr temp" "maybe param" "maybe type" "temp"
          (586296 'move' call_tmp[586293](99395 call last _mt[232] call_tmp[586286]))
          (99398 call = call_tmp[586279] call_tmp[586293])
        }
        label _unused_continueLabel[99406]
        label _breakLabel[99405]
      }
      (465627 'move' ret[465617](465626 'deref' result[99379]))
      gotoReturn _end_dsiLast[465615] _end_dsiLast[465615]
    }
    label _end_dsiLast[465615]
    (465619 return ret[465617])
  }
  function DefaultRectangularDom[99677](?).dsiBuildArray[99449](arg _mt[99813]:_MT[227], arg this[99811]:DefaultRectangularDom[99677](?), arg eltType[99447]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465633] "RVV" "temp"
    unknown call_tmp[586300] "expr temp" "maybe param" "maybe type" "temp"
    (586303 'move' call_tmp[586300](347551 call rank _mt[232] this[99811]))
    unknown call_tmp[586307] "expr temp" "maybe param" "maybe type" "temp"
    (586310 'move' call_tmp[586307](347556 call idxType _mt[232] this[99811]))
    unknown call_tmp[586314] "expr temp" "maybe param" "maybe type" "temp"
    (586317 'move' call_tmp[586314](347561 call stridable _mt[232] this[99811]))
    unknown call_tmp[586319] "expr temp" "maybe param" "maybe type" "temp"
    (586322 'move' call_tmp[586319](99464 call _to_unmanaged this[99811]))
    unknown call_tmp[586324] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (586327 'move' call_tmp[586324](691386 'new' anymanaged DefaultRectangularArr[347545](?)(eltType = eltType[99447])(rank = call_tmp[586300])(idxType = call_tmp[586307])(stridable = call_tmp[586314])(dom = call_tmp[586319])(_chpl_manager = unmanaged[209](?))))
    (465638 'move' ret[465633](465637 'deref' call_tmp[586324]))
    (465635 return ret[465633])
  }
  function DefaultRectangularDom[99677](?).dsiBuildArrayWith[99478](arg _mt[99817]:_MT[227], arg this[99815]:DefaultRectangularDom[99677](?), arg eltType[99476]:_any[170](?), arg data[99484] :
  (99483 call _ddata[11791](?) eltType[99476]), arg allocSize[99488]:int(64)[13]) : _unknown[43] "method" "primary method"
  {
    unknown ret[465642] "RVV" "temp"
    unknown call_tmp[586331] "expr temp" "maybe param" "maybe type" "temp"
    (586334 'move' call_tmp[586331](99498 call(347575 call (partial) ranges _mt[232] this[99815]) 1))
    unknown call_tmp[586338] "expr temp" "maybe param" "maybe type" "temp"
    (586341 'move' call_tmp[586338](99499 call low _mt[232] call_tmp[586331]))
    unknown call_tmp[586343] "expr temp" "maybe param" "maybe type" "temp"
    (586346 'move' call_tmp[586343](99502 call chpl_build_low_bounded_range call_tmp[586338]))
    unknown call_tmp[586348] "maybe param" "maybe type" "temp"
    (586351 'move' call_tmp[586348](99505 call # call_tmp[586343] allocSize[99488]))
    unknown call_tmp[586355] "expr temp" "maybe param" "maybe type" "temp"
    (586358 'move' call_tmp[586355](347570 call idxType _mt[232] this[99815]))
    unknown call_tmp[586360] "maybe param" "maybe type" "temp"
    (586363 'move' call_tmp[586360](99494 call range[66183](?) call_tmp[586355]))
    unknown allocRange[99507] "insert auto destroy"
    (490697 'init var' allocRange[99507] call_tmp[586348] call_tmp[586360])
    unknown call_tmp[586367] "expr temp" "maybe param" "maybe type" "temp"
    (586370 'move' call_tmp[586367](347583 call rank _mt[232] this[99815]))
    unknown call_tmp[586374] "expr temp" "maybe param" "maybe type" "temp"
    (586377 'move' call_tmp[586374](347588 call idxType _mt[232] this[99815]))
    unknown call_tmp[586381] "expr temp" "maybe param" "maybe type" "temp"
    (586384 'move' call_tmp[586381](347593 call stridable _mt[232] this[99815]))
    unknown call_tmp[586386] "expr temp" "maybe param" "maybe type" "temp"
    (586389 'move' call_tmp[586386](99524 call _to_unmanaged this[99815]))
    unknown call_tmp[586391] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (586394 'move' call_tmp[586391](691387 'new' anymanaged DefaultRectangularArr[347545](?)(eltType = eltType[99476])(rank = call_tmp[586367])(idxType = call_tmp[586374])(stridable = call_tmp[586381])(dom = call_tmp[586386])(data = data[99484])(dataAllocRange = allocRange[99507])(_chpl_manager = unmanaged[209](?))))
    (465647 'move' ret[465642](465646 'deref' call_tmp[586391]))
    (465644 return ret[465642])
  }
  function DefaultRectangularDom[99677](?).dsiLocalSlice[99541](arg _mt[99821]:_MT[227], arg this[99819]:DefaultRectangularDom[99677](?), arg ranges[99539]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (99563 call halt "all dsiLocalSlice calls on DefaultRectangulars should be handled in ChapelArray.chpl")
    (465649 return _void[47])
  }
  function DefaultRectangularDom[99677](?).dsiTargetLocales[99570](arg _mt[99825]:_MT[227], arg this[99823]:DefaultRectangularDom[99677](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[465653] "RVV" "temp"
    unknown call_tmp[586396] "expr temp" "maybe param" "maybe type" "temp"
    (586399 'move' call_tmp[586396](99573 '_wide_get_locale' this[99823]))
    unknown call_tmp[586401] "expr temp" "maybe param" "maybe type" "temp"
    (586404 'move' call_tmp[586401](99574 call chpl_localeID_to_locale call_tmp[586396]))
    unknown call_tmp[586406] "expr temp" "maybe param" "maybe type" "temp"
    (586409 'move' call_tmp[586406](99577 call chpl__buildArrayExpr call_tmp[586401]))
    (465658 'move' ret[465653](465657 'deref' call_tmp[586406]))
    (465655 return ret[465653])
  }
  function DefaultRectangularDom[99677](?).dsiHasSingleLocalSubdomain[99586](arg _mt[99829]:_MT[227], arg this[99827]:DefaultRectangularDom[99677](?)) param : _unknown[43] "method" "primary method"
  {
    unknown ret[465662] "RVV" "param" "temp"
    (465667 'move' ret[465662](465666 'deref' 1))
    (465664 return ret[465662])
  }
  function DefaultRectangularDom[99677](?).dsiLocalSubdomain[99600](arg _mt[99833]:_MT[227], arg this[99831]:DefaultRectangularDom[99677](?), arg loc[99597]:locale[26]) : _unknown[43] "method" "primary method"
  {
    unknown ret[465671] "RVV" "temp"
    unknown call_tmp[586411] "expr temp" "maybe param" "maybe type" "temp"
    (586414 'move' call_tmp[586411](99603 '_wide_get_locale' this[99831]))
    unknown call_tmp[586416] "expr temp" "maybe param" "maybe type" "temp"
    (586419 'move' call_tmp[586416](99604 call chpl_localeID_to_locale call_tmp[586411]))
    unknown call_tmp[586421] "expr temp" "maybe param" "maybe type" "temp"
    (586424 'move' call_tmp[586421](99607 call == call_tmp[586416] loc[99597]))
    unknown call_tmp[586426] "expr temp" "maybe param" "maybe type" "temp"
    (586429 'move' call_tmp[586426](99633 call _cond_test call_tmp[586421]))
    if call_tmp[586426]
    {
      unknown call_tmp[586431] "expr temp" "maybe param" "maybe type" "temp"
      (586434 'move' call_tmp[586431](99613 call _to_unmanaged this[99831]))
      unknown call_tmp[586436] "expr temp" "maybe param" "maybe type" "temp"
      (586439 'move' call_tmp[586436](99615 call _getDomain call_tmp[586431]))
      (465676 'move' ret[465671](465675 'deref' call_tmp[586436]))
      gotoReturn _end_dsiLocalSubdomain[465669] _end_dsiLocalSubdomain[465669]
    }
    {
      unknown a[99626] "insert auto destroy"
      unknown call_tmp[586443] "expr temp" "maybe param" "maybe type" "temp"
      (586446 'move' call_tmp[586443](347605 call rank _mt[232] this[99831]))
      unknown call_tmp[586450] "expr temp" "maybe param" "maybe type" "temp"
      (586453 'move' call_tmp[586450](347610 call idxType _mt[232] this[99831]))
      unknown call_tmp[586457] "expr temp" "maybe param" "maybe type" "temp"
      (586460 'move' call_tmp[586457](347615 call stridable _mt[232] this[99831]))
      unknown call_tmp[586462] "expr temp" "maybe param" "maybe type" "temp"
      (586465 'move' call_tmp[586462](99624 call chpl__buildDomainRuntimeType defaultDist[93214] call_tmp[586443] call_tmp[586450] call_tmp[586457]))
      (490699 'default init var' a[99626] call_tmp[586462])
      (465681 'move' ret[465671](465680 'deref' a[99626]))
      gotoReturn _end_dsiLocalSubdomain[465669] _end_dsiLocalSubdomain[465669]
    }
    label _end_dsiLocalSubdomain[465669]
    (465673 return ret[465671])
  }
  function DefaultRectangularDom[99677](?).dsiLocalSubdomains[99646](arg _mt[99837]:_MT[227], arg this[99835]:DefaultRectangularDom[99677](?), arg loc[99643]:locale[26]) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465687] "RVV" "temp"
    unknown yret[465691] "YVV" "temp"
    unknown call_tmp[586469] "expr temp" "maybe param" "maybe type" "temp"
    (586472 'move' call_tmp[586469](99651 call(347621 call (partial) dsiLocalSubdomain _mt[232] this[99835]) loc[99643]))
    (465694 'move' yret[465691](465693 'deref' call_tmp[586469]))
    (465696 yield yret[465691])
    (465689 return ret[465687])
  }
  function DefaultRectangularDom[99677](?).chpl_intToIdx[99661](arg _mt[99841]:_MT[227], arg this[99839]:DefaultRectangularDom[99677](?), arg i[99659]:_any[170](?)) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[465700] "RVV" "temp"
    unknown call_tmp[586476] "expr temp" "maybe param" "maybe type" "temp"
    (586479 'move' call_tmp[586476](99665 call idxType _mt[232] this[99839]))
    unknown call_tmp[586481] "expr temp" "maybe param" "maybe type" "temp"
    (586484 'move' call_tmp[586481](99670 call chpl__intToIdx call_tmp[586476] i[99659]))
    (465705 'move' ret[465700](465704 'deref' call_tmp[586481]))
    (465702 return ret[465700])
  }
  function DefaultRectangularDom[99677](?).super[711272](arg _mt[711274]:_MT[227], arg this[711276]:DefaultRectangularDom[99677](?)) : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711285] "RVV" "temp"
    unknown call_tmp[711292] "expr temp" "maybe param" "maybe type" "temp"
    (711295 'move' call_tmp[711292](711280 '.v' this[711276] c"super"))
    (711290 'move' ret[711285](711289 'deref' call_tmp[711292]))
    (711287 return ret[711285])
  }
  function DefaultRectangularDom[99677](?).dist[711297](arg _mt[711299]:_MT[227], arg this[711301]:DefaultRectangularDom[99677](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711310] "RVV" "temp"
    unknown call_tmp[711317] "expr temp" "maybe param" "maybe type" "temp"
    (711320 'move' call_tmp[711317](711305 '.' this[711301] c"dist"))
    (711315 'move' ret[711310](711314 'addr of' call_tmp[711317]))
    (711312 return ret[711310])
  }
  function DefaultRectangularDom[99677](?).ranges[711322](arg _mt[711324]:_MT[227], arg this[711326]:DefaultRectangularDom[99677](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711335] "RVV" "temp"
    unknown call_tmp[711342] "expr temp" "maybe param" "maybe type" "temp"
    (711345 'move' call_tmp[711342](711330 '.' this[711326] c"ranges"))
    (711340 'move' ret[711335](711339 'addr of' call_tmp[711342]))
    (711337 return ret[711335])
  }
  function DefaultRectangularDom[99677](?).deinit[711347](arg _mt[711349]:_MT[227], arg this[711351]:DefaultRectangularDom[99677](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (711353 return _void[47])
  }
  function DefaultRectangularDom[99677](?).writeThis[711356](arg _mt[711360]:_MT[227], arg this[711358]:DefaultRectangularDom[99677](?), arg f[711359]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (711365 call writeThisDefaultImpl f[711359] this[711358])
    (711369 return _void[47])
  }
  function DefaultRectangularDom[99677](?).readThis[711371](arg _mt[711375]:_MT[227], arg this[711373]:DefaultRectangularDom[99677](?), arg f[711374]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (711379 call readThisDefaultImpl f[711374] this[711373])
    (711384 return _void[47])
  }
  type DefaultRectangularDom[99677](?) val super[331015]:BaseRectangularDom[143416](?) "delay instantiation" "super class" val dist[93269]:unmanaged DefaultDist[389849] unmanaged DefaultDist[389849] unknown ranges[93284](93282 call * rank[143339](93281 call range[66183](?) idxType[143342] bounded[66079] stridable[143346]))
  type unmanaged DefaultRectangularDom[389799](?)
  type anymanaged anynil DefaultRectangularDom[389605](?)
  type anymanaged DefaultRectangularDom[339767](?)
  function chpl__intToIdx[99848](arg idxType[99846]:_any[170](?), arg i[99851]:integral[188](?), arg j[99855]:_any[170](?) ...) : _unknown[43] "inline"
  {
    unknown ret[465709] "RVV" "temp"
    unknown call_tmp[586486] "maybe param" "maybe type" "temp"
    (586489 'move' call_tmp[586486](99862 call chpl__intToIdx idxType[99846] i[99851]))
    const first[99863] "const" "insert auto destroy"
    (490701 'init var' first[99863] call_tmp[586486])
    unknown call_tmp[586491] "maybe param" "maybe type" "temp"
    (586494 'move' call_tmp[586491](99872 call chpl__intToIdx idxType[99846](99871 'expand_tuple' j[99855])))
    const rest[99873] "const" "insert auto destroy"
    (490703 'init var' rest[99873] call_tmp[586491])
    unknown call_tmp[586496] "expr temp" "maybe param" "maybe type" "temp"
    (586499 'move' call_tmp[586496](99880 call _build_tuple first[99863](99878 'expand_tuple' rest[99873])))
    (465714 'move' ret[465709](465713 'deref' call_tmp[586496]))
    (465711 return ret[465709])
  }
  function chpl__intToIdx[99890](arg idxType[99888]:_any[170](?), arg i[99893]:integral[188](?), arg j[99897]:integral[188](?)) : _unknown[43] "inline"
  {
    unknown ret[465718] "RVV" "temp"
    unknown call_tmp[586501] "expr temp" "maybe param" "maybe type" "temp"
    (586504 'move' call_tmp[586501](99904 call chpl__intToIdx idxType[99888] i[99893]))
    unknown call_tmp[586506] "expr temp" "maybe param" "maybe type" "temp"
    (586509 'move' call_tmp[586506](99909 call chpl__intToIdx idxType[99888] j[99897]))
    unknown call_tmp[586511] "expr temp" "maybe param" "maybe type" "temp"
    (586514 'move' call_tmp[586511](99911 call _build_tuple call_tmp[586501] call_tmp[586506]))
    (465723 'move' ret[465718](465722 'deref' call_tmp[586511]))
    (465720 return ret[465718])
  }
  function chpl__intToIdx[99922](arg idxType[99920]:_any[170](?), arg i[99925]:_tuple[58502](?)) : _unknown[43] "inline"
  {
    unknown ret[465727] "RVV" "temp"
    unknown call_tmp[586516] "expr temp" "maybe param" "maybe type" "temp"
    (586519 'move' call_tmp[586516](99933 call chpl__intToIdx idxType[99920](99932 'expand_tuple' i[99925])))
    (465732 'move' ret[465727](465731 'deref' call_tmp[586516]))
    (465729 return ret[465727])
  }
  function _remoteAccessData[100096](?).theData[100019](arg _mt[100100]:_MT[227], arg this[100098]:_remoteAccessData[100096](?)) ref : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    unknown ret[465736] "RVV" "temp"
    unknown call_tmp[586523] "expr temp" "maybe param" "maybe type" "temp"
    (586526 'move' call_tmp[586523](347657 call stridable _mt[232] this[100098]))
    unknown call_tmp[586528] "expr temp" "maybe param" "maybe type" "temp"
    (586531 'move' call_tmp[586528](100030 call _cond_test call_tmp[586523]))
    if call_tmp[586528]
    {
      unknown call_tmp[586535] "expr temp" "maybe param" "maybe type" "temp"
      (586538 'move' call_tmp[586535](347662 call data _mt[232] this[100098]))
      (465741 'move' ret[465736](465740 'addr of' call_tmp[586535]))
      gotoReturn _end_theData[465734] _end_theData[465734]
    }
    {
      unknown call_tmp[586542] "expr temp" "maybe param" "maybe type" "temp"
      (586545 'move' call_tmp[586542](347667 call shiftedData _mt[232] this[100098]))
      (465746 'move' ret[465736](465745 'addr of' call_tmp[586542]))
      gotoReturn _end_theData[465734] _end_theData[465734]
    }
    label _end_theData[465734]
    (465738 return ret[465736])
  }
  function _remoteAccessData[100096](?).getDataElem[100041](arg _mt[100104]:_MT[227], arg this[100102]:_remoteAccessData[100096](?), arg i[100039]:_any[170](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[465752] "RVV" "temp"
    unknown call_tmp[586549] "expr temp" "maybe param" "maybe type" "temp"
    (586552 'move' call_tmp[586549](347672 call stridable _mt[232] this[100102]))
    unknown call_tmp[586554] "expr temp" "maybe param" "maybe type" "temp"
    (586557 'move' call_tmp[586554](100058 call _cond_test call_tmp[586549]))
    if call_tmp[586554]
    {
      unknown call_tmp[586561] "expr temp" "maybe param" "maybe type" "temp"
      (586564 'move' call_tmp[586561](100047 call(347678 call (partial) dataElem _mt[232] this[100102]) i[100039]))
      (465757 'move' ret[465752](465756 'addr of' call_tmp[586561]))
      gotoReturn _end_getDataElem[465750] _end_getDataElem[465750]
    }
    {
      unknown call_tmp[586568] "expr temp" "maybe param" "maybe type" "temp"
      (586571 'move' call_tmp[586568](100054 call(347685 call (partial) shiftedDataElem _mt[232] this[100102]) i[100039]))
      (465762 'move' ret[465752](465761 'addr of' call_tmp[586568]))
      gotoReturn _end_getDataElem[465750] _end_getDataElem[465750]
    }
    label _end_getDataElem[465750]
    (465754 return ret[465752])
  }
  function _remoteAccessData[100096](?).dataElem[100069](arg _mt[100108]:_MT[227], arg this[100106]:_remoteAccessData[100096](?), arg i[100067]:_any[170](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[465768] "RVV" "temp"
    unknown call_tmp[586575] "expr temp" "maybe param" "maybe type" "temp"
    (586578 'move' call_tmp[586575](100074 call(347691 call (partial) data _mt[232] this[100106]) i[100067]))
    (465773 'move' ret[465768](465772 'addr of' call_tmp[586575]))
    (465770 return ret[465768])
  }
  function _remoteAccessData[100096](?).shiftedDataElem[100084](arg _mt[100112]:_MT[227], arg this[100110]:_remoteAccessData[100096](?), arg i[100082]:_any[170](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[465777] "RVV" "temp"
    unknown call_tmp[586582] "expr temp" "maybe param" "maybe type" "temp"
    (586585 'move' call_tmp[586582](100089 call(347697 call (partial) shiftedData _mt[232] this[100110]) i[100082]))
    (465782 'move' ret[465777](465781 'addr of' call_tmp[586582]))
    (465779 return ret[465777])
  }
  function _remoteAccessData[100096](?).eltType[711386](arg _mt[711388]:_MT[227], arg this[711390]:_remoteAccessData[100096](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711407] "RVV" "temp" "type variable"
    unknown call_tmp[711421] "expr temp" "maybe param" "maybe type" "temp"
    (711424 'move' call_tmp[711421](711395 'is bound' this[711390] c"eltType"))
    if call_tmp[711421]
    {
      unknown call_tmp[711426] "expr temp" "maybe param" "maybe type" "temp"
      (711429 'move' call_tmp[711426](711394 '.v' this[711390] c"eltType"))
      (711412 'move' ret[711407](711411 'deref' call_tmp[711426]))
      gotoReturn _end_eltType[711405] _end_eltType[711405]
    }
    {
      (711417 'move' ret[711407](711416 'deref' _uninstantiated[247]))
      gotoReturn _end_eltType[711405] _end_eltType[711405]
    }
    label _end_eltType[711405]
    (711409 return ret[711407])
  }
  function _remoteAccessData[100096](?).eltType[711431](arg _mt[711433]:_MT[227], arg this[711435]:_remoteAccessData[100096](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711452] "RVV" "temp" "type variable"
    unknown call_tmp[711466] "expr temp" "maybe param" "maybe type" "temp"
    (711469 'move' call_tmp[711466](711440 'is bound' this[711435] c"eltType"))
    if call_tmp[711466]
    {
      unknown call_tmp[711471] "expr temp" "maybe param" "maybe type" "temp"
      (711474 'move' call_tmp[711471](711439 '.v' this[711435] c"eltType"))
      (711457 'move' ret[711452](711456 'deref' call_tmp[711471]))
      gotoReturn _end_eltType[711450] _end_eltType[711450]
    }
    {
      (711462 'move' ret[711452](711461 'deref' _uninstantiated[247]))
      gotoReturn _end_eltType[711450] _end_eltType[711450]
    }
    label _end_eltType[711450]
    (711454 return ret[711452])
  }
  function _remoteAccessData[100096](?).rank[711476](arg _mt[711478]:_MT[227], arg this[711480]:_remoteAccessData[100096](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711497] "RVV" "param" "temp"
    unknown call_tmp[711511] "expr temp" "maybe param" "maybe type" "temp"
    (711514 'move' call_tmp[711511](711485 'is bound' this[711480] c"rank"))
    if call_tmp[711511]
    {
      unknown call_tmp[711516] "expr temp" "maybe param" "maybe type" "temp"
      (711519 'move' call_tmp[711516](711484 '.' this[711480] c"rank"))
      (711502 'move' ret[711497](711501 'deref' call_tmp[711516]))
      gotoReturn _end_rank[711495] _end_rank[711495]
    }
    {
      (711507 'move' ret[711497](711506 'deref' ?[249]))
      gotoReturn _end_rank[711495] _end_rank[711495]
    }
    label _end_rank[711495]
    (711499 return ret[711497])
  }
  function _remoteAccessData[100096](?).rank[711521](arg _mt[711523]:_MT[227], arg this[711525]:_remoteAccessData[100096](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711542] "RVV" "param" "temp"
    unknown call_tmp[711556] "expr temp" "maybe param" "maybe type" "temp"
    (711559 'move' call_tmp[711556](711530 'is bound' this[711525] c"rank"))
    if call_tmp[711556]
    {
      unknown call_tmp[711561] "expr temp" "maybe param" "maybe type" "temp"
      (711564 'move' call_tmp[711561](711529 '.' this[711525] c"rank"))
      (711547 'move' ret[711542](711546 'deref' call_tmp[711561]))
      gotoReturn _end_rank[711540] _end_rank[711540]
    }
    {
      (711552 'move' ret[711542](711551 'deref' ?[249]))
      gotoReturn _end_rank[711540] _end_rank[711540]
    }
    label _end_rank[711540]
    (711544 return ret[711542])
  }
  function _remoteAccessData[100096](?).idxType[711566](arg _mt[711568]:_MT[227], arg this[711570]:_remoteAccessData[100096](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711587] "RVV" "temp" "type variable"
    unknown call_tmp[711601] "expr temp" "maybe param" "maybe type" "temp"
    (711604 'move' call_tmp[711601](711575 'is bound' this[711570] c"idxType"))
    if call_tmp[711601]
    {
      unknown call_tmp[711606] "expr temp" "maybe param" "maybe type" "temp"
      (711609 'move' call_tmp[711606](711574 '.v' this[711570] c"idxType"))
      (711592 'move' ret[711587](711591 'deref' call_tmp[711606]))
      gotoReturn _end_idxType[711585] _end_idxType[711585]
    }
    {
      (711597 'move' ret[711587](711596 'deref' _uninstantiated[247]))
      gotoReturn _end_idxType[711585] _end_idxType[711585]
    }
    label _end_idxType[711585]
    (711589 return ret[711587])
  }
  function _remoteAccessData[100096](?).idxType[711611](arg _mt[711613]:_MT[227], arg this[711615]:_remoteAccessData[100096](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711632] "RVV" "temp" "type variable"
    unknown call_tmp[711646] "expr temp" "maybe param" "maybe type" "temp"
    (711649 'move' call_tmp[711646](711620 'is bound' this[711615] c"idxType"))
    if call_tmp[711646]
    {
      unknown call_tmp[711651] "expr temp" "maybe param" "maybe type" "temp"
      (711654 'move' call_tmp[711651](711619 '.v' this[711615] c"idxType"))
      (711637 'move' ret[711632](711636 'deref' call_tmp[711651]))
      gotoReturn _end_idxType[711630] _end_idxType[711630]
    }
    {
      (711642 'move' ret[711632](711641 'deref' _uninstantiated[247]))
      gotoReturn _end_idxType[711630] _end_idxType[711630]
    }
    label _end_idxType[711630]
    (711634 return ret[711632])
  }
  function _remoteAccessData[100096](?).stridable[711656](arg _mt[711658]:_MT[227], arg this[711660]:_remoteAccessData[100096](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711677] "RVV" "param" "temp"
    unknown call_tmp[711691] "expr temp" "maybe param" "maybe type" "temp"
    (711694 'move' call_tmp[711691](711665 'is bound' this[711660] c"stridable"))
    if call_tmp[711691]
    {
      unknown call_tmp[711696] "expr temp" "maybe param" "maybe type" "temp"
      (711699 'move' call_tmp[711696](711664 '.' this[711660] c"stridable"))
      (711682 'move' ret[711677](711681 'deref' call_tmp[711696]))
      gotoReturn _end_stridable[711675] _end_stridable[711675]
    }
    {
      (711687 'move' ret[711677](711686 'deref' ?[249]))
      gotoReturn _end_stridable[711675] _end_stridable[711675]
    }
    label _end_stridable[711675]
    (711679 return ret[711677])
  }
  function _remoteAccessData[100096](?).stridable[711701](arg _mt[711703]:_MT[227], arg this[711705]:_remoteAccessData[100096](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711722] "RVV" "param" "temp"
    unknown call_tmp[711736] "expr temp" "maybe param" "maybe type" "temp"
    (711739 'move' call_tmp[711736](711710 'is bound' this[711705] c"stridable"))
    if call_tmp[711736]
    {
      unknown call_tmp[711741] "expr temp" "maybe param" "maybe type" "temp"
      (711744 'move' call_tmp[711741](711709 '.' this[711705] c"stridable"))
      (711727 'move' ret[711722](711726 'deref' call_tmp[711741]))
      gotoReturn _end_stridable[711720] _end_stridable[711720]
    }
    {
      (711732 'move' ret[711722](711731 'deref' ?[249]))
      gotoReturn _end_stridable[711720] _end_stridable[711720]
    }
    label _end_stridable[711720]
    (711724 return ret[711722])
  }
  function _remoteAccessData[100096](?).blkChanged[711746](arg _mt[711748]:_MT[227], arg this[711750]:_remoteAccessData[100096](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711767] "RVV" "param" "temp"
    unknown call_tmp[711781] "expr temp" "maybe param" "maybe type" "temp"
    (711784 'move' call_tmp[711781](711755 'is bound' this[711750] c"blkChanged"))
    if call_tmp[711781]
    {
      unknown call_tmp[711786] "expr temp" "maybe param" "maybe type" "temp"
      (711789 'move' call_tmp[711786](711754 '.' this[711750] c"blkChanged"))
      (711772 'move' ret[711767](711771 'deref' call_tmp[711786]))
      gotoReturn _end_blkChanged[711765] _end_blkChanged[711765]
    }
    {
      (711777 'move' ret[711767](711776 'deref' ?[249]))
      gotoReturn _end_blkChanged[711765] _end_blkChanged[711765]
    }
    label _end_blkChanged[711765]
    (711769 return ret[711767])
  }
  function _remoteAccessData[100096](?).blkChanged[711791](arg _mt[711793]:_MT[227], arg this[711795]:_remoteAccessData[100096](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[711812] "RVV" "param" "temp"
    unknown call_tmp[711826] "expr temp" "maybe param" "maybe type" "temp"
    (711829 'move' call_tmp[711826](711800 'is bound' this[711795] c"blkChanged"))
    if call_tmp[711826]
    {
      unknown call_tmp[711831] "expr temp" "maybe param" "maybe type" "temp"
      (711834 'move' call_tmp[711831](711799 '.' this[711795] c"blkChanged"))
      (711817 'move' ret[711812](711816 'deref' call_tmp[711831]))
      gotoReturn _end_blkChanged[711810] _end_blkChanged[711810]
    }
    {
      (711822 'move' ret[711812](711821 'deref' ?[249]))
      gotoReturn _end_blkChanged[711810] _end_blkChanged[711810]
    }
    label _end_blkChanged[711810]
    (711814 return ret[711812])
  }
  function _remoteAccessData[100096](?).off[711836](arg _mt[711838]:_MT[227], ref arg this[711840]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711849] "RVV" "temp"
    unknown call_tmp[711856] "expr temp" "maybe param" "maybe type" "temp"
    (711859 'move' call_tmp[711856](711844 '.' this[711840] c"off"))
    (711854 'move' ret[711849](711853 'addr of' call_tmp[711856]))
    (711851 return ret[711849])
  }
  function _remoteAccessData[100096](?).blk[711861](arg _mt[711863]:_MT[227], ref arg this[711865]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711874] "RVV" "temp"
    unknown call_tmp[711881] "expr temp" "maybe param" "maybe type" "temp"
    (711884 'move' call_tmp[711881](711869 '.' this[711865] c"blk"))
    (711879 'move' ret[711874](711878 'addr of' call_tmp[711881]))
    (711876 return ret[711874])
  }
  function _remoteAccessData[100096](?).str[711886](arg _mt[711888]:_MT[227], ref arg this[711890]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711899] "RVV" "temp"
    unknown call_tmp[711906] "expr temp" "maybe param" "maybe type" "temp"
    (711909 'move' call_tmp[711906](711894 '.' this[711890] c"str"))
    (711904 'move' ret[711899](711903 'addr of' call_tmp[711906]))
    (711901 return ret[711899])
  }
  function _remoteAccessData[100096](?).origin[711911](arg _mt[711913]:_MT[227], ref arg this[711915]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711924] "RVV" "temp"
    unknown call_tmp[711931] "expr temp" "maybe param" "maybe type" "temp"
    (711934 'move' call_tmp[711931](711919 '.' this[711915] c"origin"))
    (711929 'move' ret[711924](711928 'addr of' call_tmp[711931]))
    (711926 return ret[711924])
  }
  function _remoteAccessData[100096](?).factoredOffs[711936](arg _mt[711938]:_MT[227], ref arg this[711940]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711949] "RVV" "temp"
    unknown call_tmp[711956] "expr temp" "maybe param" "maybe type" "temp"
    (711959 'move' call_tmp[711956](711944 '.' this[711940] c"factoredOffs"))
    (711954 'move' ret[711949](711953 'addr of' call_tmp[711956]))
    (711951 return ret[711949])
  }
  function _remoteAccessData[100096](?).data[711961](arg _mt[711963]:_MT[227], ref arg this[711965]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711974] "RVV" "temp"
    unknown call_tmp[711981] "expr temp" "maybe param" "maybe type" "temp"
    (711984 'move' call_tmp[711981](711969 '.' this[711965] c"data"))
    (711979 'move' ret[711974](711978 'addr of' call_tmp[711981]))
    (711976 return ret[711974])
  }
  function _remoteAccessData[100096](?).shiftedData[711986](arg _mt[711988]:_MT[227], ref arg this[711990]:_remoteAccessData[100096](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[711999] "RVV" "temp"
    unknown call_tmp[712006] "expr temp" "maybe param" "maybe type" "temp"
    (712009 'move' call_tmp[712006](711994 '.' this[711990] c"shiftedData"))
    (712004 'move' ret[711999](712003 'addr of' call_tmp[712006]))
    (712001 return ret[711999])
  }
  function _remoteAccessData[100096](?).init[712011](arg _mt[712013]:_MT[227], ref arg this[712014]:_remoteAccessData[100096](?), arg eltType[712017]:_any[170](?), param arg rank[712026]:int(64)[13], arg idxType[712038]:_any[170](?), param arg stridable[712047]:bool[10], param arg blkChanged[712059]:bool[10] =
  0, in arg off[712072] :
  (712075 call * rank[712026] idxType[712038]) =
  _typeDefaultT[239], in arg blk[712088] :
  unknown call_tmp[712234] "expr temp" "maybe param" "maybe type" "temp" =
  _typeDefaultT[239], in arg str[712106] :
  unknown call_tmp[712239] "expr temp" "maybe param" "maybe type" "temp" =
  _typeDefaultT[239], in arg origin[712126] :
  (712129 call chpl__idxTypeToIntIdxType idxType[712038]) =
  _typeDefaultT[239], in arg factoredOffs[712141] :
  (712144 call chpl__idxTypeToIntIdxType idxType[712038]) =
  _typeDefaultT[239], in arg data[712156] :
  (712159 call _ddata[11791](?) eltType[712017]) =
  _typeDefaultT[239], in arg shiftedData[712171] :
  (712174 call _ddata[11791](?) eltType[712017]) =
  _typeDefaultT[239]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (712187 'init field' this[712014] c"eltType" eltType[712017])
    unknown call_tmp[712249] "expr temp" "maybe param" "maybe type" "temp"
    (712252 'move' call_tmp[712249](712191 call _cast int(64)[13] rank[712026]))
    (712193 'init field' this[712014] c"rank" call_tmp[712249])
    (712196 'init field' this[712014] c"idxType" idxType[712038])
    unknown call_tmp[712254] "expr temp" "maybe param" "maybe type" "temp"
    (712257 'move' call_tmp[712254](712200 call _cast bool[10] stridable[712047]))
    (712202 'init field' this[712014] c"stridable" call_tmp[712254])
    unknown call_tmp[712259] "expr temp" "maybe param" "maybe type" "temp"
    (712262 'move' call_tmp[712259](712206 call _cast bool[10] blkChanged[712059]))
    (712208 'init field' this[712014] c"blkChanged" call_tmp[712259])
    (712211 'init field' this[712014] c"off" off[712072])
    (712214 'init field' this[712014] c"blk" blk[712088])
    (712217 'init field' this[712014] c"str" str[712106])
    (712220 'init field' this[712014] c"origin" origin[712126])
    (712223 'init field' this[712014] c"factoredOffs" factoredOffs[712141])
    (712226 'init field' this[712014] c"data" data[712156])
    (712229 'init field' this[712014] c"shiftedData" shiftedData[712171])
    (712232 return _void[47])
  }
  function _remoteAccessData[100096](?).init=[712264](arg _mt[712267]:_MT[227], ref arg this[712268]:_remoteAccessData[100096](?), arg other[712271] :
  (712270 'typeof' this[712268])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method"
  {
    unknown tmp[712396] "temp" "type variable"
    (712398 'move' tmp[712396](712280 call eltType _mt[232] other[712271]))
    (712400 'init field' this[712268] c"eltType" tmp[712396])
    unknown call_tmp[712552] "expr temp" "maybe param" "maybe type" "temp"
    (712555 'move' call_tmp[712552](712290 call rank _mt[232] other[712271]))
    unknown call_tmp[712557] "expr temp" "maybe param" "maybe type" "temp"
    (712560 'move' call_tmp[712557](712405 call _cast int(64)[13] call_tmp[712552]))
    (712407 'init field' this[712268] c"rank" call_tmp[712557])
    unknown tmp[712410] "temp" "type variable"
    (712412 'move' tmp[712410](712300 call idxType _mt[232] other[712271]))
    (712414 'init field' this[712268] c"idxType" tmp[712410])
    unknown call_tmp[712566] "expr temp" "maybe param" "maybe type" "temp"
    (712569 'move' call_tmp[712566](712310 call stridable _mt[232] other[712271]))
    unknown call_tmp[712571] "expr temp" "maybe param" "maybe type" "temp"
    (712574 'move' call_tmp[712571](712419 call _cast bool[10] call_tmp[712566]))
    (712421 'init field' this[712268] c"stridable" call_tmp[712571])
    unknown call_tmp[712578] "expr temp" "maybe param" "maybe type" "temp"
    (712581 'move' call_tmp[712578](712320 call blkChanged _mt[232] other[712271]))
    unknown call_tmp[712583] "expr temp" "maybe param" "maybe type" "temp"
    (712586 'move' call_tmp[712583](712425 call _cast bool[10] call_tmp[712578]))
    (712427 'init field' this[712268] c"blkChanged" call_tmp[712583])
    unknown call_tmp[712590] "maybe param" "maybe type" "temp"
    (712593 'move' call_tmp[712590](712330 call off _mt[232] other[712271]))
    unknown call_tmp[712595] "expr temp" "maybe param" "maybe type" "temp"
    (712598 'move' call_tmp[712595](712442 '.v' this[712268] c"rank"))
    unknown call_tmp[712600] "expr temp" "maybe param" "maybe type" "temp"
    (712603 'move' call_tmp[712600](712445 '.v' this[712268] c"idxType"))
    unknown call_tmp[712605] "maybe param" "maybe type" "temp"
    (712608 'move' call_tmp[712605](712433 call * call_tmp[712595] call_tmp[712600]))
    unknown tmp[712430] "temp"
    (712436 'init var' tmp[712430] call_tmp[712590] call_tmp[712605])
    (712438 'init field' this[712268] c"off" tmp[712430])
    unknown call_tmp[712612] "maybe param" "maybe type" "temp"
    (712615 'move' call_tmp[712612](712340 call blk _mt[232] other[712271]))
    unknown call_tmp[712617] "expr temp" "maybe param" "maybe type" "temp"
    (712620 'move' call_tmp[712617](712462 '.v' this[712268] c"rank"))
    unknown call_tmp[712622] "expr temp" "maybe param" "maybe type" "temp"
    (712625 'move' call_tmp[712622](712465 '.v' this[712268] c"idxType"))
    unknown call_tmp[712627] "expr temp" "maybe param" "maybe type" "temp"
    (712630 'move' call_tmp[712627](712454 call chpl__idxTypeToIntIdxType call_tmp[712622]))
    unknown call_tmp[712632] "maybe param" "maybe type" "temp"
    (712635 'move' call_tmp[712632](712451 call * call_tmp[712617] call_tmp[712627]))
    unknown tmp[712448] "temp"
    (712456 'init var' tmp[712448] call_tmp[712612] call_tmp[712632])
    (712458 'init field' this[712268] c"blk" tmp[712448])
    unknown call_tmp[712639] "maybe param" "maybe type" "temp"
    (712642 'move' call_tmp[712639](712350 call str _mt[232] other[712271]))
    unknown call_tmp[712644] "expr temp" "maybe param" "maybe type" "temp"
    (712647 'move' call_tmp[712644](712484 '.v' this[712268] c"rank"))
    unknown call_tmp[712649] "expr temp" "maybe param" "maybe type" "temp"
    (712652 'move' call_tmp[712649](712487 '.v' this[712268] c"idxType"))
    unknown call_tmp[712654] "expr temp" "maybe param" "maybe type" "temp"
    (712657 'move' call_tmp[712654](712476 call chpl__idxTypeToIntIdxType call_tmp[712649]))
    unknown call_tmp[712659] "expr temp" "maybe param" "maybe type" "temp"
    (712662 'move' call_tmp[712659](712474 call chpl__signedType call_tmp[712654]))
    unknown call_tmp[712664] "maybe param" "maybe type" "temp"
    (712667 'move' call_tmp[712664](712471 call * call_tmp[712644] call_tmp[712659]))
    unknown tmp[712468] "temp"
    (712478 'init var' tmp[712468] call_tmp[712639] call_tmp[712664])
    (712480 'init field' this[712268] c"str" tmp[712468])
    unknown call_tmp[712671] "maybe param" "maybe type" "temp"
    (712674 'move' call_tmp[712671](712360 call origin _mt[232] other[712271]))
    unknown call_tmp[712676] "expr temp" "maybe param" "maybe type" "temp"
    (712679 'move' call_tmp[712676](712501 '.v' this[712268] c"idxType"))
    unknown call_tmp[712681] "maybe param" "maybe type" "temp"
    (712684 'move' call_tmp[712681](712493 call chpl__idxTypeToIntIdxType call_tmp[712676]))
    unknown tmp[712490] "temp"
    (712495 'init var' tmp[712490] call_tmp[712671] call_tmp[712681])
    (712497 'init field' this[712268] c"origin" tmp[712490])
    unknown call_tmp[712688] "maybe param" "maybe type" "temp"
    (712691 'move' call_tmp[712688](712370 call factoredOffs _mt[232] other[712271]))
    unknown call_tmp[712693] "expr temp" "maybe param" "maybe type" "temp"
    (712696 'move' call_tmp[712693](712515 '.v' this[712268] c"idxType"))
    unknown call_tmp[712698] "maybe param" "maybe type" "temp"
    (712701 'move' call_tmp[712698](712507 call chpl__idxTypeToIntIdxType call_tmp[712693]))
    unknown tmp[712504] "temp"
    (712509 'init var' tmp[712504] call_tmp[712688] call_tmp[712698])
    (712511 'init field' this[712268] c"factoredOffs" tmp[712504])
    unknown call_tmp[712705] "maybe param" "maybe type" "temp"
    (712708 'move' call_tmp[712705](712380 call data _mt[232] other[712271]))
    unknown call_tmp[712710] "expr temp" "maybe param" "maybe type" "temp"
    (712713 'move' call_tmp[712710](712529 '.v' this[712268] c"eltType"))
    unknown call_tmp[712715] "maybe param" "maybe type" "temp"
    (712718 'move' call_tmp[712715](712521 call _ddata[11791](?) call_tmp[712710]))
    unknown tmp[712518] "temp"
    (712523 'init var' tmp[712518] call_tmp[712705] call_tmp[712715])
    (712525 'init field' this[712268] c"data" tmp[712518])
    unknown call_tmp[712722] "maybe param" "maybe type" "temp"
    (712725 'move' call_tmp[712722](712390 call shiftedData _mt[232] other[712271]))
    unknown call_tmp[712727] "expr temp" "maybe param" "maybe type" "temp"
    (712730 'move' call_tmp[712727](712543 '.v' this[712268] c"eltType"))
    unknown call_tmp[712732] "maybe param" "maybe type" "temp"
    (712735 'move' call_tmp[712732](712535 call _ddata[11791](?) call_tmp[712727]))
    unknown tmp[712532] "temp"
    (712537 'init var' tmp[712532] call_tmp[712722] call_tmp[712732])
    (712539 'init field' this[712268] c"shiftedData" tmp[712532])
    (712546 return _void[47])
  }
  function _remoteAccessData[100096](?).deinit[712737](arg _mt[712739]:_MT[227], arg this[712741]:_remoteAccessData[100096](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (712743 return _void[47])
  }
  function _remoteAccessData[100096](?).writeThis[712746](arg _mt[712750]:_MT[227], arg this[712748]:_remoteAccessData[100096](?), arg f[712749]:_any[170](?)) : void[4] "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (712755 call writeThisDefaultImpl f[712749] this[712748])
    (712759 return _void[47])
  }
  function _remoteAccessData[100096](?).readThis[712761](arg _mt[712765]:_MT[227], arg this[712763]:_remoteAccessData[100096](?), arg f[712764]:_any[170](?)) : void[4] "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (712769 call readThisDefaultImpl f[712764] this[712763])
    (712774 return _void[47])
  }
  function ==[712776](arg _arg1[712778]:_remoteAccessData[100096](?), arg _arg2[712779]:_remoteAccessData[100096](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[712962]:bool[10] "RVV" "temp"
    unknown call_tmp[713029] "expr temp" "maybe param" "maybe type" "temp"
    (713032 'move' call_tmp[713029](712789 call eltType _mt[232] _arg1[712778]))
    unknown call_tmp[713034] "expr temp" "maybe param" "maybe type" "temp"
    (713037 'move' call_tmp[713034](712793 call eltType _mt[232] _arg2[712779]))
    unknown call_tmp[713039] "expr temp" "maybe param" "maybe type" "temp"
    (713042 'move' call_tmp[713039](712797 call != call_tmp[713029] call_tmp[713034]))
    if call_tmp[713039]
    {
      (712967 'move' ret[712962](712966 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713044] "expr temp" "maybe param" "maybe type" "temp"
    (713047 'move' call_tmp[713044](712803 call rank _mt[232] _arg1[712778]))
    unknown call_tmp[713049] "expr temp" "maybe param" "maybe type" "temp"
    (713052 'move' call_tmp[713049](712807 call rank _mt[232] _arg2[712779]))
    unknown call_tmp[713054] "expr temp" "maybe param" "maybe type" "temp"
    (713057 'move' call_tmp[713054](712811 call != call_tmp[713044] call_tmp[713049]))
    if call_tmp[713054]
    {
      (712972 'move' ret[712962](712971 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713059] "expr temp" "maybe param" "maybe type" "temp"
    (713062 'move' call_tmp[713059](712817 call idxType _mt[232] _arg1[712778]))
    unknown call_tmp[713064] "expr temp" "maybe param" "maybe type" "temp"
    (713067 'move' call_tmp[713064](712821 call idxType _mt[232] _arg2[712779]))
    unknown call_tmp[713069] "expr temp" "maybe param" "maybe type" "temp"
    (713072 'move' call_tmp[713069](712825 call != call_tmp[713059] call_tmp[713064]))
    if call_tmp[713069]
    {
      (712977 'move' ret[712962](712976 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713074] "expr temp" "maybe param" "maybe type" "temp"
    (713077 'move' call_tmp[713074](712831 call stridable _mt[232] _arg1[712778]))
    unknown call_tmp[713079] "expr temp" "maybe param" "maybe type" "temp"
    (713082 'move' call_tmp[713079](712835 call stridable _mt[232] _arg2[712779]))
    unknown call_tmp[713084] "expr temp" "maybe param" "maybe type" "temp"
    (713087 'move' call_tmp[713084](712839 call != call_tmp[713074] call_tmp[713079]))
    if call_tmp[713084]
    {
      (712982 'move' ret[712962](712981 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713089] "expr temp" "maybe param" "maybe type" "temp"
    (713092 'move' call_tmp[713089](712845 call blkChanged _mt[232] _arg1[712778]))
    unknown call_tmp[713094] "expr temp" "maybe param" "maybe type" "temp"
    (713097 'move' call_tmp[713094](712849 call blkChanged _mt[232] _arg2[712779]))
    unknown call_tmp[713099] "expr temp" "maybe param" "maybe type" "temp"
    (713102 'move' call_tmp[713099](712853 call != call_tmp[713089] call_tmp[713094]))
    if call_tmp[713099]
    {
      (712987 'move' ret[712962](712986 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713104] "expr temp" "maybe param" "maybe type" "temp"
    (713107 'move' call_tmp[713104](712859 call off _mt[232] _arg1[712778]))
    unknown call_tmp[713109] "expr temp" "maybe param" "maybe type" "temp"
    (713112 'move' call_tmp[713109](712863 call off _mt[232] _arg2[712779]))
    unknown call_tmp[713114] "expr temp" "maybe param" "maybe type" "temp"
    (713117 'move' call_tmp[713114](712867 call != call_tmp[713104] call_tmp[713109]))
    if call_tmp[713114]
    {
      (712992 'move' ret[712962](712991 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713119] "expr temp" "maybe param" "maybe type" "temp"
    (713122 'move' call_tmp[713119](712873 call blk _mt[232] _arg1[712778]))
    unknown call_tmp[713124] "expr temp" "maybe param" "maybe type" "temp"
    (713127 'move' call_tmp[713124](712877 call blk _mt[232] _arg2[712779]))
    unknown call_tmp[713129] "expr temp" "maybe param" "maybe type" "temp"
    (713132 'move' call_tmp[713129](712881 call != call_tmp[713119] call_tmp[713124]))
    if call_tmp[713129]
    {
      (712997 'move' ret[712962](712996 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713134] "expr temp" "maybe param" "maybe type" "temp"
    (713137 'move' call_tmp[713134](712887 call str _mt[232] _arg1[712778]))
    unknown call_tmp[713139] "expr temp" "maybe param" "maybe type" "temp"
    (713142 'move' call_tmp[713139](712891 call str _mt[232] _arg2[712779]))
    unknown call_tmp[713144] "expr temp" "maybe param" "maybe type" "temp"
    (713147 'move' call_tmp[713144](712895 call != call_tmp[713134] call_tmp[713139]))
    if call_tmp[713144]
    {
      (713002 'move' ret[712962](713001 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713149] "expr temp" "maybe param" "maybe type" "temp"
    (713152 'move' call_tmp[713149](712901 call origin _mt[232] _arg1[712778]))
    unknown call_tmp[713154] "expr temp" "maybe param" "maybe type" "temp"
    (713157 'move' call_tmp[713154](712905 call origin _mt[232] _arg2[712779]))
    unknown call_tmp[713159] "expr temp" "maybe param" "maybe type" "temp"
    (713162 'move' call_tmp[713159](712909 call != call_tmp[713149] call_tmp[713154]))
    if call_tmp[713159]
    {
      (713007 'move' ret[712962](713006 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713164] "expr temp" "maybe param" "maybe type" "temp"
    (713167 'move' call_tmp[713164](712915 call factoredOffs _mt[232] _arg1[712778]))
    unknown call_tmp[713169] "expr temp" "maybe param" "maybe type" "temp"
    (713172 'move' call_tmp[713169](712919 call factoredOffs _mt[232] _arg2[712779]))
    unknown call_tmp[713174] "expr temp" "maybe param" "maybe type" "temp"
    (713177 'move' call_tmp[713174](712923 call != call_tmp[713164] call_tmp[713169]))
    if call_tmp[713174]
    {
      (713012 'move' ret[712962](713011 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713179] "expr temp" "maybe param" "maybe type" "temp"
    (713182 'move' call_tmp[713179](712929 call data _mt[232] _arg1[712778]))
    unknown call_tmp[713184] "expr temp" "maybe param" "maybe type" "temp"
    (713187 'move' call_tmp[713184](712933 call data _mt[232] _arg2[712779]))
    unknown call_tmp[713189] "expr temp" "maybe param" "maybe type" "temp"
    (713192 'move' call_tmp[713189](712937 call != call_tmp[713179] call_tmp[713184]))
    if call_tmp[713189]
    {
      (713017 'move' ret[712962](713016 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    unknown call_tmp[713194] "expr temp" "maybe param" "maybe type" "temp"
    (713197 'move' call_tmp[713194](712943 call shiftedData _mt[232] _arg1[712778]))
    unknown call_tmp[713199] "expr temp" "maybe param" "maybe type" "temp"
    (713202 'move' call_tmp[713199](712947 call shiftedData _mt[232] _arg2[712779]))
    unknown call_tmp[713204] "expr temp" "maybe param" "maybe type" "temp"
    (713207 'move' call_tmp[713204](712951 call != call_tmp[713194] call_tmp[713199]))
    if call_tmp[713204]
    {
      (713022 'move' ret[712962](713021 'deref' 0))
      gotoReturn _end_==[712960] _end_==[712960]
    }
    (713027 'move' ret[712962](713026 'deref' 1))
    label _end_==[712960]
    (712964 return ret[712962])
  }
  where {
    unknown call_tmp[713209] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (713212 'move' call_tmp[713209](712782 'typeof' _arg1[712778]))
    unknown call_tmp[713214] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (713217 'move' call_tmp[713214](712784 'typeof' _arg2[712779]))
    (712786 call == call_tmp[713209] call_tmp[713214])
  }
  function !=[713219](arg _arg1[713221]:_remoteAccessData[100096](?), arg _arg2[713222]:_remoteAccessData[100096](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[713405]:bool[10] "RVV" "temp"
    unknown call_tmp[713472] "expr temp" "maybe param" "maybe type" "temp"
    (713475 'move' call_tmp[713472](713232 call eltType _mt[232] _arg1[713221]))
    unknown call_tmp[713477] "expr temp" "maybe param" "maybe type" "temp"
    (713480 'move' call_tmp[713477](713236 call eltType _mt[232] _arg2[713222]))
    unknown call_tmp[713482] "expr temp" "maybe param" "maybe type" "temp"
    (713485 'move' call_tmp[713482](713240 call != call_tmp[713472] call_tmp[713477]))
    if call_tmp[713482]
    {
      (713410 'move' ret[713405](713409 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713487] "expr temp" "maybe param" "maybe type" "temp"
    (713490 'move' call_tmp[713487](713246 call rank _mt[232] _arg1[713221]))
    unknown call_tmp[713492] "expr temp" "maybe param" "maybe type" "temp"
    (713495 'move' call_tmp[713492](713250 call rank _mt[232] _arg2[713222]))
    unknown call_tmp[713497] "expr temp" "maybe param" "maybe type" "temp"
    (713500 'move' call_tmp[713497](713254 call != call_tmp[713487] call_tmp[713492]))
    if call_tmp[713497]
    {
      (713415 'move' ret[713405](713414 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713502] "expr temp" "maybe param" "maybe type" "temp"
    (713505 'move' call_tmp[713502](713260 call idxType _mt[232] _arg1[713221]))
    unknown call_tmp[713507] "expr temp" "maybe param" "maybe type" "temp"
    (713510 'move' call_tmp[713507](713264 call idxType _mt[232] _arg2[713222]))
    unknown call_tmp[713512] "expr temp" "maybe param" "maybe type" "temp"
    (713515 'move' call_tmp[713512](713268 call != call_tmp[713502] call_tmp[713507]))
    if call_tmp[713512]
    {
      (713420 'move' ret[713405](713419 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713517] "expr temp" "maybe param" "maybe type" "temp"
    (713520 'move' call_tmp[713517](713274 call stridable _mt[232] _arg1[713221]))
    unknown call_tmp[713522] "expr temp" "maybe param" "maybe type" "temp"
    (713525 'move' call_tmp[713522](713278 call stridable _mt[232] _arg2[713222]))
    unknown call_tmp[713527] "expr temp" "maybe param" "maybe type" "temp"
    (713530 'move' call_tmp[713527](713282 call != call_tmp[713517] call_tmp[713522]))
    if call_tmp[713527]
    {
      (713425 'move' ret[713405](713424 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713532] "expr temp" "maybe param" "maybe type" "temp"
    (713535 'move' call_tmp[713532](713288 call blkChanged _mt[232] _arg1[713221]))
    unknown call_tmp[713537] "expr temp" "maybe param" "maybe type" "temp"
    (713540 'move' call_tmp[713537](713292 call blkChanged _mt[232] _arg2[713222]))
    unknown call_tmp[713542] "expr temp" "maybe param" "maybe type" "temp"
    (713545 'move' call_tmp[713542](713296 call != call_tmp[713532] call_tmp[713537]))
    if call_tmp[713542]
    {
      (713430 'move' ret[713405](713429 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713547] "expr temp" "maybe param" "maybe type" "temp"
    (713550 'move' call_tmp[713547](713302 call off _mt[232] _arg1[713221]))
    unknown call_tmp[713552] "expr temp" "maybe param" "maybe type" "temp"
    (713555 'move' call_tmp[713552](713306 call off _mt[232] _arg2[713222]))
    unknown call_tmp[713557] "expr temp" "maybe param" "maybe type" "temp"
    (713560 'move' call_tmp[713557](713310 call != call_tmp[713547] call_tmp[713552]))
    if call_tmp[713557]
    {
      (713435 'move' ret[713405](713434 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713562] "expr temp" "maybe param" "maybe type" "temp"
    (713565 'move' call_tmp[713562](713316 call blk _mt[232] _arg1[713221]))
    unknown call_tmp[713567] "expr temp" "maybe param" "maybe type" "temp"
    (713570 'move' call_tmp[713567](713320 call blk _mt[232] _arg2[713222]))
    unknown call_tmp[713572] "expr temp" "maybe param" "maybe type" "temp"
    (713575 'move' call_tmp[713572](713324 call != call_tmp[713562] call_tmp[713567]))
    if call_tmp[713572]
    {
      (713440 'move' ret[713405](713439 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713577] "expr temp" "maybe param" "maybe type" "temp"
    (713580 'move' call_tmp[713577](713330 call str _mt[232] _arg1[713221]))
    unknown call_tmp[713582] "expr temp" "maybe param" "maybe type" "temp"
    (713585 'move' call_tmp[713582](713334 call str _mt[232] _arg2[713222]))
    unknown call_tmp[713587] "expr temp" "maybe param" "maybe type" "temp"
    (713590 'move' call_tmp[713587](713338 call != call_tmp[713577] call_tmp[713582]))
    if call_tmp[713587]
    {
      (713445 'move' ret[713405](713444 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713592] "expr temp" "maybe param" "maybe type" "temp"
    (713595 'move' call_tmp[713592](713344 call origin _mt[232] _arg1[713221]))
    unknown call_tmp[713597] "expr temp" "maybe param" "maybe type" "temp"
    (713600 'move' call_tmp[713597](713348 call origin _mt[232] _arg2[713222]))
    unknown call_tmp[713602] "expr temp" "maybe param" "maybe type" "temp"
    (713605 'move' call_tmp[713602](713352 call != call_tmp[713592] call_tmp[713597]))
    if call_tmp[713602]
    {
      (713450 'move' ret[713405](713449 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713607] "expr temp" "maybe param" "maybe type" "temp"
    (713610 'move' call_tmp[713607](713358 call factoredOffs _mt[232] _arg1[713221]))
    unknown call_tmp[713612] "expr temp" "maybe param" "maybe type" "temp"
    (713615 'move' call_tmp[713612](713362 call factoredOffs _mt[232] _arg2[713222]))
    unknown call_tmp[713617] "expr temp" "maybe param" "maybe type" "temp"
    (713620 'move' call_tmp[713617](713366 call != call_tmp[713607] call_tmp[713612]))
    if call_tmp[713617]
    {
      (713455 'move' ret[713405](713454 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713622] "expr temp" "maybe param" "maybe type" "temp"
    (713625 'move' call_tmp[713622](713372 call data _mt[232] _arg1[713221]))
    unknown call_tmp[713627] "expr temp" "maybe param" "maybe type" "temp"
    (713630 'move' call_tmp[713627](713376 call data _mt[232] _arg2[713222]))
    unknown call_tmp[713632] "expr temp" "maybe param" "maybe type" "temp"
    (713635 'move' call_tmp[713632](713380 call != call_tmp[713622] call_tmp[713627]))
    if call_tmp[713632]
    {
      (713460 'move' ret[713405](713459 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    unknown call_tmp[713637] "expr temp" "maybe param" "maybe type" "temp"
    (713640 'move' call_tmp[713637](713386 call shiftedData _mt[232] _arg1[713221]))
    unknown call_tmp[713642] "expr temp" "maybe param" "maybe type" "temp"
    (713645 'move' call_tmp[713642](713390 call shiftedData _mt[232] _arg2[713222]))
    unknown call_tmp[713647] "expr temp" "maybe param" "maybe type" "temp"
    (713650 'move' call_tmp[713647](713394 call != call_tmp[713637] call_tmp[713642]))
    if call_tmp[713647]
    {
      (713465 'move' ret[713405](713464 'deref' 1))
      gotoReturn _end_!=[713403] _end_!=[713403]
    }
    (713470 'move' ret[713405](713469 'deref' 0))
    label _end_!=[713403]
    (713407 return ret[713405])
  }
  where {
    unknown call_tmp[713652] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (713655 'move' call_tmp[713652](713225 'typeof' _arg1[713221]))
    unknown call_tmp[713657] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (713660 'move' call_tmp[713657](713227 'typeof' _arg2[713222]))
    (713229 call == call_tmp[713652] call_tmp[713657])
  }
  function =[713662](ref arg _arg1[713664]:_remoteAccessData[100096](?), const?  ref arg _arg2[713665]:_remoteAccessData[100096](?)) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[713750] "expr temp" "maybe param" "maybe type" "temp"
    (713753 'move' call_tmp[713750](713675 call off _mt[232] _arg1[713664]))
    unknown call_tmp[713757] "expr temp" "maybe param" "maybe type" "temp"
    (713760 'move' call_tmp[713757](713679 call off _mt[232] _arg2[713665]))
    (713683 call = call_tmp[713750] call_tmp[713757])
    unknown call_tmp[713764] "expr temp" "maybe param" "maybe type" "temp"
    (713767 'move' call_tmp[713764](713685 call blk _mt[232] _arg1[713664]))
    unknown call_tmp[713771] "expr temp" "maybe param" "maybe type" "temp"
    (713774 'move' call_tmp[713771](713689 call blk _mt[232] _arg2[713665]))
    (713693 call = call_tmp[713764] call_tmp[713771])
    unknown call_tmp[713778] "expr temp" "maybe param" "maybe type" "temp"
    (713781 'move' call_tmp[713778](713695 call str _mt[232] _arg1[713664]))
    unknown call_tmp[713785] "expr temp" "maybe param" "maybe type" "temp"
    (713788 'move' call_tmp[713785](713699 call str _mt[232] _arg2[713665]))
    (713703 call = call_tmp[713778] call_tmp[713785])
    unknown call_tmp[713792] "expr temp" "maybe param" "maybe type" "temp"
    (713795 'move' call_tmp[713792](713705 call origin _mt[232] _arg1[713664]))
    unknown call_tmp[713799] "expr temp" "maybe param" "maybe type" "temp"
    (713802 'move' call_tmp[713799](713709 call origin _mt[232] _arg2[713665]))
    (713713 call = call_tmp[713792] call_tmp[713799])
    unknown call_tmp[713806] "expr temp" "maybe param" "maybe type" "temp"
    (713809 'move' call_tmp[713806](713715 call factoredOffs _mt[232] _arg1[713664]))
    unknown call_tmp[713813] "expr temp" "maybe param" "maybe type" "temp"
    (713816 'move' call_tmp[713813](713719 call factoredOffs _mt[232] _arg2[713665]))
    (713723 call = call_tmp[713806] call_tmp[713813])
    unknown call_tmp[713820] "expr temp" "maybe param" "maybe type" "temp"
    (713823 'move' call_tmp[713820](713725 call data _mt[232] _arg1[713664]))
    unknown call_tmp[713827] "expr temp" "maybe param" "maybe type" "temp"
    (713830 'move' call_tmp[713827](713729 call data _mt[232] _arg2[713665]))
    (713733 call = call_tmp[713820] call_tmp[713827])
    unknown call_tmp[713834] "expr temp" "maybe param" "maybe type" "temp"
    (713837 'move' call_tmp[713834](713735 call shiftedData _mt[232] _arg1[713664]))
    unknown call_tmp[713841] "expr temp" "maybe param" "maybe type" "temp"
    (713844 'move' call_tmp[713841](713739 call shiftedData _mt[232] _arg2[713665]))
    (713743 call = call_tmp[713834] call_tmp[713841])
    (713746 return _void[47])
  }
  where {
    unknown call_tmp[713846] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (713849 'move' call_tmp[713846](713668 'typeof' _arg1[713664]))
    unknown call_tmp[713851] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (713854 'move' call_tmp[713851](713670 'typeof' _arg2[713665]))
    (713672 call == call_tmp[713846] call_tmp[713851])
  }
  function chpl__defaultHash[713856](arg r[713858]:_remoteAccessData[100096](?)) : _unknown[43] "compiler generated" "last resort"
  {
    unknown ret[713969] "RVV" "temp"
    unknown call_tmp[713976] "expr temp" "maybe param" "maybe type" "temp"
    (713979 'move' call_tmp[713976](713956 call shiftedData _mt[232] r[713858]))
    unknown call_tmp[713981] "expr temp" "maybe param" "maybe type" "temp"
    (713984 'move' call_tmp[713981](713960 call chpl__defaultHash call_tmp[713976]))
    unknown call_tmp[713986] "expr temp" "maybe param" "maybe type" "temp"
    (713989 'move' call_tmp[713986](713947 call data _mt[232] r[713858]))
    unknown call_tmp[713991] "expr temp" "maybe param" "maybe type" "temp"
    (713994 'move' call_tmp[713991](713951 call chpl__defaultHash call_tmp[713986]))
    unknown call_tmp[713996] "expr temp" "maybe param" "maybe type" "temp"
    (713999 'move' call_tmp[713996](713938 call factoredOffs _mt[232] r[713858]))
    unknown call_tmp[714001] "expr temp" "maybe param" "maybe type" "temp"
    (714004 'move' call_tmp[714001](713942 call chpl__defaultHash call_tmp[713996]))
    unknown call_tmp[714006] "expr temp" "maybe param" "maybe type" "temp"
    (714009 'move' call_tmp[714006](713929 call origin _mt[232] r[713858]))
    unknown call_tmp[714011] "expr temp" "maybe param" "maybe type" "temp"
    (714014 'move' call_tmp[714011](713933 call chpl__defaultHash call_tmp[714006]))
    unknown call_tmp[714016] "expr temp" "maybe param" "maybe type" "temp"
    (714019 'move' call_tmp[714016](713920 call str _mt[232] r[713858]))
    unknown call_tmp[714021] "expr temp" "maybe param" "maybe type" "temp"
    (714024 'move' call_tmp[714021](713924 call chpl__defaultHash call_tmp[714016]))
    unknown call_tmp[714026] "expr temp" "maybe param" "maybe type" "temp"
    (714029 'move' call_tmp[714026](713911 call blk _mt[232] r[713858]))
    unknown call_tmp[714031] "expr temp" "maybe param" "maybe type" "temp"
    (714034 'move' call_tmp[714031](713915 call chpl__defaultHash call_tmp[714026]))
    unknown call_tmp[714036] "expr temp" "maybe param" "maybe type" "temp"
    (714039 'move' call_tmp[714036](713902 call off _mt[232] r[713858]))
    unknown call_tmp[714041] "expr temp" "maybe param" "maybe type" "temp"
    (714044 'move' call_tmp[714041](713906 call chpl__defaultHash call_tmp[714036]))
    unknown call_tmp[714046] "expr temp" "maybe param" "maybe type" "temp"
    (714049 'move' call_tmp[714046](713893 call blkChanged _mt[232] r[713858]))
    unknown call_tmp[714051] "expr temp" "maybe param" "maybe type" "temp"
    (714054 'move' call_tmp[714051](713897 call chpl__defaultHash call_tmp[714046]))
    unknown call_tmp[714056] "expr temp" "maybe param" "maybe type" "temp"
    (714059 'move' call_tmp[714056](713884 call stridable _mt[232] r[713858]))
    unknown call_tmp[714061] "expr temp" "maybe param" "maybe type" "temp"
    (714064 'move' call_tmp[714061](713888 call chpl__defaultHash call_tmp[714056]))
    unknown call_tmp[714066] "expr temp" "maybe param" "maybe type" "temp"
    (714069 'move' call_tmp[714066](713875 call idxType _mt[232] r[713858]))
    unknown call_tmp[714071] "expr temp" "maybe param" "maybe type" "temp"
    (714074 'move' call_tmp[714071](713879 call chpl__defaultHash call_tmp[714066]))
    unknown call_tmp[714076] "expr temp" "maybe param" "maybe type" "temp"
    (714079 'move' call_tmp[714076](713866 call rank _mt[232] r[713858]))
    unknown call_tmp[714081] "expr temp" "maybe param" "maybe type" "temp"
    (714084 'move' call_tmp[714081](713870 call chpl__defaultHash call_tmp[714076]))
    unknown call_tmp[714086] "expr temp" "maybe param" "maybe type" "temp"
    (714089 'move' call_tmp[714086](713860 call eltType _mt[232] r[713858]))
    unknown call_tmp[714091] "expr temp" "maybe param" "maybe type" "temp"
    (714094 'move' call_tmp[714091](713864 call chpl__defaultHash call_tmp[714086]))
    unknown call_tmp[714096] "expr temp" "maybe param" "maybe type" "temp"
    (714099 'move' call_tmp[714096](713872 call chpl__defaultHashCombine call_tmp[714081] call_tmp[714091] 2))
    unknown call_tmp[714101] "expr temp" "maybe param" "maybe type" "temp"
    (714104 'move' call_tmp[714101](713881 call chpl__defaultHashCombine call_tmp[714071] call_tmp[714096] 3))
    unknown call_tmp[714106] "expr temp" "maybe param" "maybe type" "temp"
    (714109 'move' call_tmp[714106](713890 call chpl__defaultHashCombine call_tmp[714061] call_tmp[714101] 4))
    unknown call_tmp[714111] "expr temp" "maybe param" "maybe type" "temp"
    (714114 'move' call_tmp[714111](713899 call chpl__defaultHashCombine call_tmp[714051] call_tmp[714106] 5))
    unknown call_tmp[714116] "expr temp" "maybe param" "maybe type" "temp"
    (714119 'move' call_tmp[714116](713908 call chpl__defaultHashCombine call_tmp[714041] call_tmp[714111] 6))
    unknown call_tmp[714121] "expr temp" "maybe param" "maybe type" "temp"
    (714124 'move' call_tmp[714121](713917 call chpl__defaultHashCombine call_tmp[714031] call_tmp[714116] 7))
    unknown call_tmp[714126] "expr temp" "maybe param" "maybe type" "temp"
    (714129 'move' call_tmp[714126](713926 call chpl__defaultHashCombine call_tmp[714021] call_tmp[714121] 8))
    unknown call_tmp[714131] "expr temp" "maybe param" "maybe type" "temp"
    (714134 'move' call_tmp[714131](713935 call chpl__defaultHashCombine call_tmp[714011] call_tmp[714126] 9))
    unknown call_tmp[714136] "expr temp" "maybe param" "maybe type" "temp"
    (714139 'move' call_tmp[714136](713944 call chpl__defaultHashCombine call_tmp[714001] call_tmp[714131] 10))
    unknown call_tmp[714141] "expr temp" "maybe param" "maybe type" "temp"
    (714144 'move' call_tmp[714141](713953 call chpl__defaultHashCombine call_tmp[713991] call_tmp[714136] 11))
    unknown call_tmp[714146] "expr temp" "maybe param" "maybe type" "temp"
    (714149 'move' call_tmp[714146](713962 call chpl__defaultHashCombine call_tmp[713981] call_tmp[714141] 12))
    (713974 'move' ret[713969](713973 'deref' call_tmp[714146]))
    (713971 return ret[713969])
  }
  type _remoteAccessData[100096](?) unknown eltType[99940] "type variable" unknown rank[99944] "param" int(64)[13] unknown idxType[99947] "type variable" unknown stridable[99951] "param" bool[10] unknown blkChanged[99956] "param" 0 bool[10] unknown off[99963](99961 call * rank[99944] idxType[99947]) unknown blk[99973](99971 call * rank[99944](99970 call chpl__idxTypeToIntIdxType idxType[99947])) unknown str[99986](99984 call * rank[99944](99983 call chpl__signedType(99981 call chpl__idxTypeToIntIdxType idxType[99947]))) unknown origin[99993](99992 call chpl__idxTypeToIntIdxType idxType[99947]) unknown factoredOffs[100000](99999 call chpl__idxTypeToIntIdxType idxType[99947]) unknown data[100007](100006 call _ddata[11791](?) eltType[99940]) unknown shiftedData[100014](100013 call _ddata[11791](?) eltType[99940])
  function _remoteAccessData[100096](?).getDataIndex[100122](arg _mt[100127]:_MT[227], arg this[100124]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg ind[100119] :
  (347703 call idxType _mt[232] this[100124])) : _unknown[43] "inline" "method"
  {
    unknown ret[465786] "RVV" "temp"
    unknown call_tmp[586591] "expr temp" "maybe param" "maybe type" "temp"
    (586594 'move' call_tmp[586591](100138 call chpl__tuplify ind[100119]))
    unknown call_tmp[586596] "expr temp" "maybe param" "maybe type" "temp"
    (586599 'move' call_tmp[586596](100140 call(100132 call (partial) getDataIndex _mt[232] this[100124]) call_tmp[586591]))
    (465791 'move' ret[465786](465790 'deref' call_tmp[586596]))
    (465788 return ret[465786])
  }
  function _remoteAccessData[100096](?).getDataIndex[100156](arg _mt[100161]:_MT[227], arg this[100158]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg ind[100153] :
  unknown call_tmp[586603] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "inline" "method"
  {
    unknown ret[465795] "RVV" "temp"
    unknown call_tmp[586617] "expr temp" "maybe param" "maybe type" "temp"
    (586620 'move' call_tmp[586617](347720 call stridable _mt[232] this[100158]))
    unknown call_tmp[586622] "expr temp" "maybe param" "maybe type" "temp"
    (586625 'move' call_tmp[586622](100543 call _cond_test call_tmp[586617]))
    if call_tmp[586622]
    {
      unknown call_tmp[586629] "maybe param" "maybe type" "temp"
      (586632 'move' call_tmp[586629](347725 call origin _mt[232] this[100158]))
      unknown sum[100165] "insert auto destroy"
      (490705 'init var' sum[100165] call_tmp[586629])
      {
        unknown i[100214] "insert auto destroy"
        (490707 'init var' i[100214] 0)
        unknown tmp[100215] "maybe param" "temp"
        unknown call_tmp[586636] "expr temp" "maybe param" "maybe type" "temp"
        (586639 'move' call_tmp[586636](347730 call rank _mt[232] this[100158]))
        (100227 'move' tmp[100215](100225 call chpl_compute_low_param_loop_bound 1 call_tmp[586636]))
        unknown tmp[100216] "maybe param" "temp"
        unknown call_tmp[586643] "expr temp" "maybe param" "maybe type" "temp"
        (586646 'move' call_tmp[586643](347761 call rank _mt[232] this[100158]))
        (100234 'move' tmp[100216](100232 call chpl_compute_high_param_loop_bound 1 call_tmp[586643]))
        unknown tmp[100217] "maybe param" "temp"
        (100237 'move' tmp[100217] 1)
        ParamForLoop
        { i[100214] tmp[100215] tmp[100216] tmp[100217]
          unknown call_tmp[586648] "expr temp" "maybe param" "maybe type" "temp"
          (586651 'move' call_tmp[586648](100178 call ind[100153] i[100214]))
          unknown call_tmp[586653] "expr temp" "maybe param" "maybe type" "temp"
          (586656 'move' call_tmp[586653](100180 call chpl__idxToInt call_tmp[586648]))
          unknown call_tmp[586660] "expr temp" "maybe param" "maybe type" "temp"
          (586663 'move' call_tmp[586660](100185 call(347738 call (partial) off _mt[232] this[100158]) i[100214]))
          unknown call_tmp[586665] "expr temp" "maybe param" "maybe type" "temp"
          (586668 'move' call_tmp[586665](100187 call chpl__idxToInt call_tmp[586660]))
          unknown call_tmp[586670] "expr temp" "maybe param" "maybe type" "temp"
          (586673 'move' call_tmp[586670](100188 call - call_tmp[586653] call_tmp[586665]))
          unknown call_tmp[586677] "expr temp" "maybe param" "maybe type" "temp"
          (586680 'move' call_tmp[586677](100193 call(347744 call (partial) blk _mt[232] this[100158]) i[100214]))
          unknown call_tmp[586682] "expr temp" "maybe param" "maybe type" "temp"
          (586685 'move' call_tmp[586682](100194 call * call_tmp[586670] call_tmp[586677]))
          unknown call_tmp[586689] "expr temp" "maybe param" "maybe type" "temp"
          (586692 'move' call_tmp[586689](347756 call idxType _mt[232] this[100158]))
          unknown call_tmp[586694] "expr temp" "maybe param" "maybe type" "temp"
          (586697 'move' call_tmp[586694](100206 call chpl__idxTypeToIntIdxType call_tmp[586689]))
          unknown call_tmp[586701] "expr temp" "maybe param" "maybe type" "temp"
          (586704 'move' call_tmp[586701](100200 call(347750 call (partial) str _mt[232] this[100158]) i[100214]))
          unknown call_tmp[586706] "expr temp" "maybe param" "maybe type" "temp"
          (586709 'move' call_tmp[586706](100202 call abs call_tmp[586701]))
          unknown call_tmp[586711] "expr temp" "maybe param" "maybe type" "temp"
          (586714 'move' call_tmp[586711](100207 call _cast call_tmp[586694] call_tmp[586706]))
          unknown call_tmp[586716] "expr temp" "maybe param" "maybe type" "temp"
          (586719 'move' call_tmp[586716](100209 call / call_tmp[586682] call_tmp[586711]))
          (100211 call += sum[100165] call_tmp[586716])
        }
        label _unused_continueLabel[100219]
        label _breakLabel[100218]
      }
      (465800 'move' ret[465795](465799 'deref' sum[100165]))
      gotoReturn _end_getDataIndex[465793] _end_getDataIndex[465793]
    }
    {
      unknown tmp[398178] "maybe param" "temp"
      unknown call_tmp[586723] "expr temp" "maybe param" "maybe type" "temp"
      (586726 'move' call_tmp[586723](347767 call rank _mt[232] this[100158]))
      (398189 'move' tmp[398178](100253 call == call_tmp[586723] 1))
      unknown call_tmp[586728] "expr temp" "maybe param" "maybe type" "temp"
      (586731 'move' call_tmp[586728](398191 call _cond_invalid tmp[398178]))
      if call_tmp[586728]
      {
        (398194 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[510727] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510728] "maybe param" "temp"
      unknown call_tmp[586733] "expr temp" "maybe param" "maybe type" "temp"
      (586736 'move' call_tmp[586733](398179 call isTrue tmp[398178]))
      (510733 'move' tmp[510728](510731 call _cond_test call_tmp[586733]))
      if tmp[510728]
      {
        unknown tmp[510735] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (510737 'move' tmp[510735](398182 call isTrue earlyShiftData[92605]))
        (510742 'move' tmp[510727](510739 '_paramFoldLogical' tmp[510728] tmp[510735]))
      }
      {
        (510747 'move' tmp[510727](510744 '_paramFoldLogical' tmp[510728] 0))
      }
      unknown call_tmp[586738] "expr temp" "maybe param" "maybe type" "temp"
      (586741 'move' call_tmp[586738](100538 call _cond_test tmp[510727]))
      if call_tmp[586738]
      {
        unknown call_tmp[586745] "expr temp" "maybe param" "maybe type" "temp"
        (586748 'move' call_tmp[586745](347773 call blkChanged _mt[232] this[100158]))
        unknown call_tmp[586750] "expr temp" "maybe param" "maybe type" "temp"
        (586753 'move' call_tmp[586750](100285 call _cond_test call_tmp[586745]))
        if call_tmp[586750]
        {
          unknown call_tmp[586755] "expr temp" "maybe param" "maybe type" "temp"
          (586758 'move' call_tmp[586755](100263 call ind[100153] 1))
          unknown call_tmp[586760] "expr temp" "maybe param" "maybe type" "temp"
          (586763 'move' call_tmp[586760](100265 call chpl__idxToInt call_tmp[586755]))
          unknown call_tmp[586767] "expr temp" "maybe param" "maybe type" "temp"
          (586770 'move' call_tmp[586767](100269 call(347779 call (partial) blk _mt[232] this[100158]) 1))
          unknown call_tmp[586772] "expr temp" "maybe param" "maybe type" "temp"
          (586775 'move' call_tmp[586772](100270 call * call_tmp[586760] call_tmp[586767]))
          (465805 'move' ret[465795](465804 'deref' call_tmp[586772]))
          gotoReturn _end_getDataIndex[465793] _end_getDataIndex[465793]
        }
        {
          unknown call_tmp[586777] "expr temp" "maybe param" "maybe type" "temp"
          (586780 'move' call_tmp[586777](100279 call ind[100153] 1))
          unknown call_tmp[586782] "expr temp" "maybe param" "maybe type" "temp"
          (586785 'move' call_tmp[586782](100281 call chpl__idxToInt call_tmp[586777]))
          (465810 'move' ret[465795](465809 'deref' call_tmp[586782]))
          gotoReturn _end_getDataIndex[465793] _end_getDataIndex[465793]
        }
      }
      {
        unknown sum[100302] "insert auto destroy"
        unknown tmp[510754] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[510755] "maybe param" "temp"
        (510760 'move' tmp[510755](510758 call _cond_test earlyShiftData[92605]))
        if tmp[510755]
        {
          unknown tmp[510762] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[586789] "expr temp" "maybe param" "maybe type" "temp"
          (586792 'move' call_tmp[586789](347786 call idxType _mt[232] this[100158]))
          unknown call_tmp[586794] "expr temp" "maybe param" "maybe type" "temp"
          (586797 'move' call_tmp[586794](100295 call chpl__idxTypeToIntIdxType call_tmp[586789]))
          (510764 'move' tmp[510762](100296 call _cast call_tmp[586794] 0))
          (510769 'move' tmp[510754](510766 '_paramFoldLogical' tmp[510755] tmp[510762]))
        }
        {
          unknown tmp[510771] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (510773 'move' tmp[510771](347791 call origin _mt[232] this[100158]))
          (510778 'move' tmp[510754](510775 '_paramFoldLogical' tmp[510755] tmp[510771]))
        }
        (490709 'init var' sum[100302] tmp[510754])
        unknown call_tmp[586803] "expr temp" "maybe param" "maybe type" "temp"
        (586806 'move' call_tmp[586803](347796 call blkChanged _mt[232] this[100158]))
        unknown call_tmp[586808] "expr temp" "maybe param" "maybe type" "temp"
        (586811 'move' call_tmp[586808](100518 call _cond_test call_tmp[586803]))
        if call_tmp[586808]
        {
          {
            unknown i[100329] "insert auto destroy"
            (490711 'init var' i[100329] 0)
            unknown tmp[100330] "maybe param" "temp"
            unknown call_tmp[586815] "expr temp" "maybe param" "maybe type" "temp"
            (586818 'move' call_tmp[586815](347801 call rank _mt[232] this[100158]))
            (100342 'move' tmp[100330](100340 call chpl_compute_low_param_loop_bound 1 call_tmp[586815]))
            unknown tmp[100331] "maybe param" "temp"
            unknown call_tmp[586822] "expr temp" "maybe param" "maybe type" "temp"
            (586825 'move' call_tmp[586822](347815 call rank _mt[232] this[100158]))
            (100349 'move' tmp[100331](100347 call chpl_compute_high_param_loop_bound 1 call_tmp[586822]))
            unknown tmp[100332] "maybe param" "temp"
            (100352 'move' tmp[100332] 1)
            ParamForLoop
            { i[100329] tmp[100330] tmp[100331] tmp[100332]
              {
                unknown call_tmp[586827] "expr temp" "maybe param" "maybe type" "temp"
                (586830 'move' call_tmp[586827](100316 call ind[100153] i[100329]))
                unknown call_tmp[586832] "expr temp" "maybe param" "maybe type" "temp"
                (586835 'move' call_tmp[586832](100318 call chpl__idxToInt call_tmp[586827]))
                unknown call_tmp[586839] "expr temp" "maybe param" "maybe type" "temp"
                (586842 'move' call_tmp[586839](100322 call(347809 call (partial) blk _mt[232] this[100158]) i[100329]))
                unknown call_tmp[586844] "expr temp" "maybe param" "maybe type" "temp"
                (586847 'move' call_tmp[586844](100323 call * call_tmp[586832] call_tmp[586839]))
                (100325 call += sum[100302] call_tmp[586844])
              }
            }
            label _unused_continueLabel[100334]
            label _breakLabel[100333]
          }
        }
        {
          unknown call_tmp[586849] "expr temp" "maybe param" "maybe type" "temp"
          (586852 'move' call_tmp[586849](100369 call == storageOrder[92630] RMO[92613]))
          unknown call_tmp[586854] "expr temp" "maybe param" "maybe type" "temp"
          (586857 'move' call_tmp[586854](100513 call _cond_test call_tmp[586849]))
          if call_tmp[586854]
          {
            {
              unknown i[100396] "insert auto destroy"
              (490713 'init var' i[100396] 0)
              unknown tmp[100397] "maybe param" "temp"
              unknown call_tmp[586861] "expr temp" "maybe param" "maybe type" "temp"
              (586864 'move' call_tmp[586861](347822 call rank _mt[232] this[100158]))
              unknown call_tmp[586866] "expr temp" "maybe param" "maybe type" "temp"
              (586869 'move' call_tmp[586866](100374 call - call_tmp[586861] 1))
              (100409 'move' tmp[100397](100407 call chpl_compute_low_param_loop_bound 1 call_tmp[586866]))
              unknown tmp[100398] "maybe param" "temp"
              unknown call_tmp[586873] "expr temp" "maybe param" "maybe type" "temp"
              (586876 'move' call_tmp[586873](347836 call rank _mt[232] this[100158]))
              unknown call_tmp[586878] "expr temp" "maybe param" "maybe type" "temp"
              (586881 'move' call_tmp[586878](100414 call - call_tmp[586873] 1))
              (100419 'move' tmp[100398](100417 call chpl_compute_high_param_loop_bound 1 call_tmp[586878]))
              unknown tmp[100399] "maybe param" "temp"
              (100422 'move' tmp[100399] 1)
              ParamForLoop
              { i[100396] tmp[100397] tmp[100398] tmp[100399]
                {
                  unknown call_tmp[586883] "expr temp" "maybe param" "maybe type" "temp"
                  (586886 'move' call_tmp[586883](100383 call ind[100153] i[100396]))
                  unknown call_tmp[586888] "expr temp" "maybe param" "maybe type" "temp"
                  (586891 'move' call_tmp[586888](100385 call chpl__idxToInt call_tmp[586883]))
                  unknown call_tmp[586895] "expr temp" "maybe param" "maybe type" "temp"
                  (586898 'move' call_tmp[586895](100389 call(347830 call (partial) blk _mt[232] this[100158]) i[100396]))
                  unknown call_tmp[586900] "expr temp" "maybe param" "maybe type" "temp"
                  (586903 'move' call_tmp[586900](100390 call * call_tmp[586888] call_tmp[586895]))
                  (100392 call += sum[100302] call_tmp[586900])
                }
              }
              label _unused_continueLabel[100401]
              label _breakLabel[100400]
            }
            unknown call_tmp[586907] "expr temp" "maybe param" "maybe type" "temp"
            (586910 'move' call_tmp[586907](347843 call rank _mt[232] this[100158]))
            unknown call_tmp[586912] "expr temp" "maybe param" "maybe type" "temp"
            (586915 'move' call_tmp[586912](100439 call ind[100153] call_tmp[586907]))
            unknown call_tmp[586917] "expr temp" "maybe param" "maybe type" "temp"
            (586920 'move' call_tmp[586917](100441 call chpl__idxToInt call_tmp[586912]))
            (100442 call += sum[100302] call_tmp[586917])
          }
          {
            {
              unknown i[100467] "insert auto destroy"
              (490715 'init var' i[100467] 0)
              unknown tmp[100468] "maybe param" "temp"
              unknown call_tmp[586924] "expr temp" "maybe param" "maybe type" "temp"
              (586927 'move' call_tmp[586924](347848 call rank _mt[232] this[100158]))
              (100480 'move' tmp[100468](100478 call chpl_compute_low_param_loop_bound 2 call_tmp[586924]))
              unknown tmp[100469] "maybe param" "temp"
              unknown call_tmp[586931] "expr temp" "maybe param" "maybe type" "temp"
              (586934 'move' call_tmp[586931](347862 call rank _mt[232] this[100158]))
              (100487 'move' tmp[100469](100485 call chpl_compute_high_param_loop_bound 2 call_tmp[586931]))
              unknown tmp[100470] "maybe param" "temp"
              (100490 'move' tmp[100470] 1)
              ParamForLoop
              { i[100467] tmp[100468] tmp[100469] tmp[100470]
                {
                  unknown call_tmp[586936] "expr temp" "maybe param" "maybe type" "temp"
                  (586939 'move' call_tmp[586936](100454 call ind[100153] i[100467]))
                  unknown call_tmp[586941] "expr temp" "maybe param" "maybe type" "temp"
                  (586944 'move' call_tmp[586941](100456 call chpl__idxToInt call_tmp[586936]))
                  unknown call_tmp[586948] "expr temp" "maybe param" "maybe type" "temp"
                  (586951 'move' call_tmp[586948](100460 call(347856 call (partial) blk _mt[232] this[100158]) i[100467]))
                  unknown call_tmp[586953] "expr temp" "maybe param" "maybe type" "temp"
                  (586956 'move' call_tmp[586953](100461 call * call_tmp[586941] call_tmp[586948]))
                  (100463 call += sum[100302] call_tmp[586953])
                }
              }
              label _unused_continueLabel[100472]
              label _breakLabel[100471]
            }
            unknown call_tmp[586958] "expr temp" "maybe param" "maybe type" "temp"
            (586961 'move' call_tmp[586958](100507 call ind[100153] 1))
            unknown call_tmp[586963] "expr temp" "maybe param" "maybe type" "temp"
            (586966 'move' call_tmp[586963](100509 call chpl__idxToInt call_tmp[586958]))
            (100510 call += sum[100302] call_tmp[586963])
          }
        }
        unknown call_tmp[586968] "expr temp" "maybe param" "maybe type" "temp"
        (586971 'move' call_tmp[586968](100523 call ! earlyShiftData[92605]))
        unknown call_tmp[586973] "expr temp" "maybe param" "maybe type" "temp"
        (586976 'move' call_tmp[586973](100530 call _cond_test call_tmp[586968]))
        if call_tmp[586973]
        {
          unknown call_tmp[586980] "expr temp" "maybe param" "maybe type" "temp"
          (586983 'move' call_tmp[586980](347871 call factoredOffs _mt[232] this[100158]))
          (100527 call -= sum[100302] call_tmp[586980])
        }
        (465815 'move' ret[465795](465814 'deref' sum[100302]))
        gotoReturn _end_getDataIndex[465793] _end_getDataIndex[465793]
      }
    }
    label _end_getDataIndex[465793]
    (465797 return ret[465795])
  }
  function _remoteAccessData[100096](?).computeFactoredOffs[100553](arg _mt[100558]:_MT[227], arg this[100555]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?)) : _unknown[43] "method" "no return value for void"
  {
    unknown call_tmp[586987] "expr temp" "maybe param" "maybe type" "temp"
    (586990 'move' call_tmp[586987](347877 call factoredOffs _mt[232] this[100555]))
    (100562 call = call_tmp[586987] 0)
    {
      unknown i[100591] "insert auto destroy"
      (490717 'init var' i[100591] 0)
      unknown tmp[100592] "maybe param" "temp"
      unknown call_tmp[586994] "expr temp" "maybe param" "maybe type" "temp"
      (586997 'move' call_tmp[586994](347882 call rank _mt[232] this[100555]))
      (100604 'move' tmp[100592](100602 call chpl_compute_low_param_loop_bound 1 call_tmp[586994]))
      unknown tmp[100593] "maybe param" "temp"
      unknown call_tmp[587001] "expr temp" "maybe param" "maybe type" "temp"
      (587004 'move' call_tmp[587001](347909 call rank _mt[232] this[100555]))
      (100611 'move' tmp[100593](100609 call chpl_compute_high_param_loop_bound 1 call_tmp[587001]))
      unknown tmp[100594] "maybe param" "temp"
      (100614 'move' tmp[100594] 1)
      ParamForLoop
      { i[100591] tmp[100592] tmp[100593] tmp[100594]
        {
          unknown call_tmp[587008] "expr temp" "maybe param" "maybe type" "temp"
          (587011 'move' call_tmp[587008](347887 call factoredOffs _mt[232] this[100555]))
          unknown call_tmp[587015] "expr temp" "maybe param" "maybe type" "temp"
          (587018 'move' call_tmp[587015](347892 call factoredOffs _mt[232] this[100555]))
          unknown call_tmp[587022] "expr temp" "maybe param" "maybe type" "temp"
          (587025 'move' call_tmp[587022](100575 call(347897 call (partial) blk _mt[232] this[100555]) i[100591]))
          unknown call_tmp[587029] "expr temp" "maybe param" "maybe type" "temp"
          (587032 'move' call_tmp[587029](100580 call(347903 call (partial) off _mt[232] this[100555]) i[100591]))
          unknown call_tmp[587034] "expr temp" "maybe param" "maybe type" "temp"
          (587037 'move' call_tmp[587034](100582 call chpl__idxToInt call_tmp[587029]))
          unknown call_tmp[587039] "expr temp" "maybe param" "maybe type" "temp"
          (587042 'move' call_tmp[587039](100583 call * call_tmp[587022] call_tmp[587034]))
          unknown call_tmp[587044] "expr temp" "maybe param" "maybe type" "temp"
          (587047 'move' call_tmp[587044](100585 call + call_tmp[587015] call_tmp[587039]))
          (100587 call = call_tmp[587008] call_tmp[587044])
        }
      }
      label _unused_continueLabel[100596]
      label _breakLabel[100595]
    }
    (465819 return _void[47])
  }
  function _remoteAccessData[100096](?).initShiftedData[100630](arg _mt[100635]:_MT[227], arg this[100632]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?)) : _unknown[43] "method" "no return value for void"
  {
    unknown tmp[398199] "maybe param" "temp"
    (398210 'move' tmp[398199] earlyShiftData[92605])
    unknown call_tmp[587049] "expr temp" "maybe param" "maybe type" "temp"
    (587052 'move' call_tmp[587049](398212 call _cond_invalid tmp[398199]))
    if call_tmp[587049]
    {
      (398215 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[510785] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510786] "maybe param" "temp"
    unknown call_tmp[587054] "expr temp" "maybe param" "maybe type" "temp"
    (587057 'move' call_tmp[587054](398200 call isTrue tmp[398199]))
    (510791 'move' tmp[510786](510789 call _cond_test call_tmp[587054]))
    if tmp[510786]
    {
      unknown tmp[510793] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[587061] "expr temp" "maybe param" "maybe type" "temp"
      (587064 'move' call_tmp[587061](347915 call stridable _mt[232] this[100632]))
      unknown call_tmp[587066] "expr temp" "maybe param" "maybe type" "temp"
      (587069 'move' call_tmp[587066](100639 call ! call_tmp[587061]))
      (510795 'move' tmp[510793](398203 call isTrue call_tmp[587066]))
      (510800 'move' tmp[510785](510797 '_paramFoldLogical' tmp[510786] tmp[510793]))
    }
    {
      (510805 'move' tmp[510785](510802 '_paramFoldLogical' tmp[510786] 0))
    }
    unknown call_tmp[587071] "expr temp" "maybe param" "maybe type" "temp"
    (587074 'move' call_tmp[587071](100688 call _cond_test tmp[510785]))
    if call_tmp[587071]
    {
      unknown call_tmp[587078] "expr temp" "maybe param" "maybe type" "temp"
      (587081 'move' call_tmp[587078](347920 call idxType _mt[232] this[100632]))
      unknown call_tmp[587083] "expr temp" "maybe param" "maybe type" "temp"
      (587086 'move' call_tmp[587083](100647 call chpl__idxTypeToIntIdxType call_tmp[587078]))
      unknown idxSignedType[100650] "insert auto destroy" "type variable"(100649 call chpl__signedType call_tmp[587083])
      unknown call_tmp[587090] "expr temp" "maybe param" "maybe type" "temp"
      (587093 'move' call_tmp[587090](490724 call idxType _mt[232] this[100632]))
      unknown call_tmp[587095] "expr temp" "maybe param" "maybe type" "temp"
      (587098 'move' call_tmp[587095](490722 call chpl__idxTypeToIntIdxType call_tmp[587090]))
      (490727 'move' idxSignedType[100650](490720 call chpl__signedType call_tmp[587095]))
      const shiftDist[100675] "const" "insert auto destroy"
      unknown tmp[510812] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510813] "maybe param" "temp"
      unknown call_tmp[587102] "expr temp" "maybe param" "maybe type" "temp"
      (587105 'move' call_tmp[587102](347925 call idxType _mt[232] this[100632]))
      unknown call_tmp[587107] "expr temp" "maybe param" "maybe type" "temp"
      (587110 'move' call_tmp[587107](100657 call isIntType call_tmp[587102]))
      (510818 'move' tmp[510813](510816 call _cond_test call_tmp[587107]))
      if tmp[510813]
      {
        unknown tmp[510820] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[587114] "expr temp" "maybe param" "maybe type" "temp"
        (587117 'move' call_tmp[587114](347930 call origin _mt[232] this[100632]))
        unknown call_tmp[587121] "expr temp" "maybe param" "maybe type" "temp"
        (587124 'move' call_tmp[587121](347935 call factoredOffs _mt[232] this[100632]))
        (510822 'move' tmp[510820](100660 call - call_tmp[587114] call_tmp[587121]))
        (510827 'move' tmp[510812](510824 '_paramFoldLogical' tmp[510813] tmp[510820]))
      }
      {
        unknown tmp[510829] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[587128] "expr temp" "maybe param" "maybe type" "temp"
        (587131 'move' call_tmp[587128](347940 call origin _mt[232] this[100632]))
        unknown call_tmp[587133] "expr temp" "maybe param" "maybe type" "temp"
        (587136 'move' call_tmp[587133](100664 call _cast idxSignedType[100650] call_tmp[587128]))
        unknown call_tmp[587140] "expr temp" "maybe param" "maybe type" "temp"
        (587143 'move' call_tmp[587140](347946 call factoredOffs _mt[232] this[100632]))
        unknown call_tmp[587145] "expr temp" "maybe param" "maybe type" "temp"
        (587148 'move' call_tmp[587145](100668 call _cast idxSignedType[100650] call_tmp[587140]))
        (510831 'move' tmp[510829](100670 call - call_tmp[587133] call_tmp[587145]))
        (510836 'move' tmp[510812](510833 '_paramFoldLogical' tmp[510813] tmp[510829]))
      }
      (490729 'init var' shiftDist[100675] tmp[510812])
      unknown call_tmp[587152] "expr temp" "maybe param" "maybe type" "temp"
      (587155 'move' call_tmp[587152](347952 call shiftedData _mt[232] this[100632]))
      unknown call_tmp[587159] "expr temp" "maybe param" "maybe type" "temp"
      (587162 'move' call_tmp[587159](347957 call eltType _mt[232] this[100632]))
      unknown call_tmp[587166] "expr temp" "maybe param" "maybe type" "temp"
      (587169 'move' call_tmp[587166](347962 call data _mt[232] this[100632]))
      unknown call_tmp[587171] "expr temp" "maybe param" "maybe type" "temp"
      (587174 'move' call_tmp[587171](100684 call _ddata_shift call_tmp[587159] call_tmp[587166] shiftDist[100675]))
      (100685 call = call_tmp[587152] call_tmp[587171])
    }
    (465821 return _void[47])
  }
  function _remoteAccessData[100096](?).strideAlignUp[100700](arg _mt[100707]:_MT[227], arg this[100704]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg lo[100698]:_any[170](?), arg r[100702]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[465825] "RVV" "temp"
    unknown call_tmp[587178] "expr temp" "maybe param" "maybe type" "temp"
    (587181 'move' call_tmp[587178](100710 call low _mt[232] r[100702]))
    unknown call_tmp[587185] "expr temp" "maybe param" "maybe type" "temp"
    (587188 'move' call_tmp[587185](100715 call low _mt[232] r[100702]))
    unknown call_tmp[587190] "expr temp" "maybe param" "maybe type" "temp"
    (587193 'move' call_tmp[587190](100718 call - lo[100698] call_tmp[587185]))
    unknown call_tmp[587197] "expr temp" "maybe param" "maybe type" "temp"
    (587200 'move' call_tmp[587197](347972 call idxType _mt[232] this[100704]))
    unknown call_tmp[587204] "expr temp" "maybe param" "maybe type" "temp"
    (587207 'move' call_tmp[587204](100722 call stride _mt[232] r[100702]))
    unknown call_tmp[587209] "expr temp" "maybe param" "maybe type" "temp"
    (587212 'move' call_tmp[587209](100726 call abs call_tmp[587204]))
    unknown call_tmp[587214] "expr temp" "maybe param" "maybe type" "temp"
    (587217 'move' call_tmp[587214](100728 call _cast call_tmp[587197] call_tmp[587209]))
    unknown call_tmp[587219] "expr temp" "maybe param" "maybe type" "temp"
    (587222 'move' call_tmp[587219](100730 call + call_tmp[587190] call_tmp[587214]))
    unknown call_tmp[587224] "expr temp" "maybe param" "maybe type" "temp"
    (587227 'move' call_tmp[587224](100733 call - call_tmp[587219] 1))
    unknown call_tmp[587231] "expr temp" "maybe param" "maybe type" "temp"
    (587234 'move' call_tmp[587231](347978 call idxType _mt[232] this[100704]))
    unknown call_tmp[587238] "expr temp" "maybe param" "maybe type" "temp"
    (587241 'move' call_tmp[587238](100737 call stride _mt[232] r[100702]))
    unknown call_tmp[587243] "expr temp" "maybe param" "maybe type" "temp"
    (587246 'move' call_tmp[587243](100741 call abs call_tmp[587238]))
    unknown call_tmp[587248] "expr temp" "maybe param" "maybe type" "temp"
    (587251 'move' call_tmp[587248](100743 call _cast call_tmp[587231] call_tmp[587243]))
    unknown call_tmp[587253] "expr temp" "maybe param" "maybe type" "temp"
    (587256 'move' call_tmp[587253](100745 call / call_tmp[587224] call_tmp[587248]))
    unknown call_tmp[587260] "expr temp" "maybe param" "maybe type" "temp"
    (587263 'move' call_tmp[587260](347984 call idxType _mt[232] this[100704]))
    unknown call_tmp[587267] "expr temp" "maybe param" "maybe type" "temp"
    (587270 'move' call_tmp[587267](100749 call stride _mt[232] r[100702]))
    unknown call_tmp[587272] "expr temp" "maybe param" "maybe type" "temp"
    (587275 'move' call_tmp[587272](100753 call abs call_tmp[587267]))
    unknown call_tmp[587277] "expr temp" "maybe param" "maybe type" "temp"
    (587280 'move' call_tmp[587277](100755 call _cast call_tmp[587260] call_tmp[587272]))
    unknown call_tmp[587282] "expr temp" "maybe param" "maybe type" "temp"
    (587285 'move' call_tmp[587282](100757 call * call_tmp[587253] call_tmp[587277]))
    unknown call_tmp[587287] "expr temp" "maybe param" "maybe type" "temp"
    (587290 'move' call_tmp[587287](100759 call + call_tmp[587178] call_tmp[587282]))
    (465830 'move' ret[465825](465829 'deref' call_tmp[587287]))
    (465827 return ret[465825])
  }
  function _remoteAccessData[100096](?).strideAlignDown[100771](arg _mt[100778]:_MT[227], arg this[100775]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg hi[100769]:_any[170](?), arg r[100773]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[465834] "RVV" "temp"
    unknown call_tmp[587294] "expr temp" "maybe param" "maybe type" "temp"
    (587297 'move' call_tmp[587294](100783 call low _mt[232] r[100773]))
    unknown call_tmp[587299] "expr temp" "maybe param" "maybe type" "temp"
    (587302 'move' call_tmp[587299](100786 call - hi[100769] call_tmp[587294]))
    unknown call_tmp[587306] "expr temp" "maybe param" "maybe type" "temp"
    (587309 'move' call_tmp[587306](347993 call idxType _mt[232] this[100775]))
    unknown call_tmp[587313] "expr temp" "maybe param" "maybe type" "temp"
    (587316 'move' call_tmp[587313](100790 call stride _mt[232] r[100773]))
    unknown call_tmp[587318] "expr temp" "maybe param" "maybe type" "temp"
    (587321 'move' call_tmp[587318](100794 call abs call_tmp[587313]))
    unknown call_tmp[587323] "expr temp" "maybe param" "maybe type" "temp"
    (587326 'move' call_tmp[587323](100796 call _cast call_tmp[587306] call_tmp[587318]))
    unknown call_tmp[587328] "expr temp" "maybe param" "maybe type" "temp"
    (587331 'move' call_tmp[587328](100798 call % call_tmp[587299] call_tmp[587323]))
    unknown call_tmp[587333] "expr temp" "maybe param" "maybe type" "temp"
    (587336 'move' call_tmp[587333](100800 call - hi[100769] call_tmp[587328]))
    (465839 'move' ret[465834](465838 'deref' call_tmp[587333]))
    (465836 return ret[465834])
  }
  function _remoteAccessData[100096](?).initDataFrom[100814](arg _mt[100819]:_MT[227], arg this[100816]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg other[100811]:_remoteAccessData[100096](?)) : _unknown[43] "method" "no return value for void"
  {
    unknown call_tmp[587340] "expr temp" "maybe param" "maybe type" "temp"
    (587343 'move' call_tmp[587340](100824 call data _mt[232] this[100816]))
    unknown call_tmp[587347] "expr temp" "maybe param" "maybe type" "temp"
    (587350 'move' call_tmp[587347](100828 call data _mt[232] other[100811]))
    (100831 call = call_tmp[587340] call_tmp[587347])
    (465841 return _void[47])
  }
  function _remoteAccessData[100096](?).toSlice[100842](arg _mt[100847]:_MT[227], arg this[100844]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg newDom[100840]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[465845] "RVV" "temp"
    unknown call_tmp[587354] "expr temp" "maybe param" "maybe type" "temp"
    (587357 'move' call_tmp[587354](100851 call rank _mt[232] this[100844]))
    unknown call_tmp[587361] "expr temp" "maybe param" "maybe type" "temp"
    (587364 'move' call_tmp[587361](100855 call rank _mt[232] newDom[100840]))
    unknown call_tmp[587366] "expr temp" "maybe param" "maybe type" "temp"
    (587369 'move' call_tmp[587366](100858 call == call_tmp[587354] call_tmp[587361]))
    (100861 call compilerAssert call_tmp[587366])
    unknown tmp[398220] "maybe param" "temp"
    (398231 'move' tmp[398220](100880 call stridable _mt[232] newDom[100840]))
    unknown call_tmp[587373] "expr temp" "maybe param" "maybe type" "temp"
    (587376 'move' call_tmp[587373](398233 call _cond_invalid tmp[398220]))
    if call_tmp[587373]
    {
      (398236 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown rad[100892] "insert auto destroy"
    unknown tmp[510843] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510844] "maybe param" "temp"
    unknown call_tmp[587378] "expr temp" "maybe param" "maybe type" "temp"
    (587381 'move' call_tmp[587378](398221 call isTrue tmp[398220]))
    (510849 'move' tmp[510844](510847 call _cond_test call_tmp[587378]))
    if tmp[510844]
    {
      (510854 'move' tmp[510843](510851 '_paramFoldLogical' tmp[510844] 1))
    }
    {
      unknown tmp[510856] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[587385] "expr temp" "maybe param" "maybe type" "temp"
      (587388 'move' call_tmp[587385](100886 call blkChanged _mt[232] this[100844]))
      (510858 'move' tmp[510856](398225 call isTrue call_tmp[587385]))
      (510863 'move' tmp[510843](510860 '_paramFoldLogical' tmp[510844] tmp[510856]))
    }
    unknown call_tmp[587392] "expr temp" "maybe param" "maybe type" "temp"
    (587395 'move' call_tmp[587392](348004 call eltType _mt[232] this[100844]))
    unknown call_tmp[587399] "expr temp" "maybe param" "maybe type" "temp"
    (587402 'move' call_tmp[587399](100868 call rank _mt[232] newDom[100840]))
    unknown call_tmp[587406] "expr temp" "maybe param" "maybe type" "temp"
    (587409 'move' call_tmp[587406](100872 call idxType _mt[232] newDom[100840]))
    unknown call_tmp[587413] "expr temp" "maybe param" "maybe type" "temp"
    (587416 'move' call_tmp[587413](100876 call stridable _mt[232] newDom[100840]))
    unknown call_tmp[587418] "expr temp" "maybe param" "maybe type" "temp"
    (587421 'move' call_tmp[587418](100891 call _remoteAccessData[100096](?) call_tmp[587392] call_tmp[587399] call_tmp[587406] call_tmp[587413] tmp[510843]))
    (490731 'default init var' rad[100892] call_tmp[587418])
    (100903 call(100898 call (partial) initDataFrom _mt[232] rad[100892]) this[100844])
    unknown tmp[510870] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510871] "maybe param" "temp"
    unknown call_tmp[587427] "expr temp" "maybe param" "maybe type" "temp"
    (587430 'move' call_tmp[587427](100912 call stridable _mt[232] newDom[100840]))
    (510876 'move' tmp[510871](510874 call _cond_test call_tmp[587427]))
    if tmp[510871]
    {
      unknown tmp[510878] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (510880 'move' tmp[510878](100916 call data _mt[232] this[100844]))
      (510885 'move' tmp[510870](510882 '_paramFoldLogical' tmp[510871] tmp[510878]))
    }
    {
      unknown tmp[510887] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (510889 'move' tmp[510887](100920 call shiftedData _mt[232] this[100844]))
      (510894 'move' tmp[510870](510891 '_paramFoldLogical' tmp[510871] tmp[510887]))
    }
    unknown call_tmp[587438] "expr temp" "maybe param" "maybe type" "temp"
    (587441 'move' call_tmp[587438](100908 call shiftedData _mt[232] rad[100892]))
    (100926 call = call_tmp[587438] tmp[510870])
    unknown call_tmp[587445] "expr temp" "maybe param" "maybe type" "temp"
    (587448 'move' call_tmp[587445](100932 call origin _mt[232] rad[100892]))
    unknown call_tmp[587452] "expr temp" "maybe param" "maybe type" "temp"
    (587455 'move' call_tmp[587452](100940 call idxType _mt[232] newDom[100840]))
    unknown call_tmp[587459] "expr temp" "maybe param" "maybe type" "temp"
    (587462 'move' call_tmp[587459](100936 call origin _mt[232] this[100844]))
    unknown call_tmp[587464] "expr temp" "maybe param" "maybe type" "temp"
    (587467 'move' call_tmp[587464](100943 call _cast call_tmp[587452] call_tmp[587459]))
    (100945 call = call_tmp[587445] call_tmp[587464])
    unknown call_tmp[587471] "expr temp" "maybe param" "maybe type" "temp"
    (587474 'move' call_tmp[587471](100951 call off _mt[232] rad[100892]))
    unknown call_tmp[587478] "expr temp" "maybe param" "maybe type" "temp"
    (587481 'move' call_tmp[587478](100958 call dsiLow _mt[232] newDom[100840]))
    unknown call_tmp[587483] "expr temp" "maybe param" "maybe type" "temp"
    (587486 'move' call_tmp[587483](100962 call chpl__tuplify call_tmp[587478]))
    (100963 call = call_tmp[587471] call_tmp[587483])
    unknown call_tmp[587490] "expr temp" "maybe param" "maybe type" "temp"
    (587493 'move' call_tmp[587490](100969 call str _mt[232] rad[100892]))
    unknown call_tmp[587497] "expr temp" "maybe param" "maybe type" "temp"
    (587500 'move' call_tmp[587497](100976 call dsiStride _mt[232] newDom[100840]))
    unknown call_tmp[587502] "expr temp" "maybe param" "maybe type" "temp"
    (587505 'move' call_tmp[587502](100980 call chpl__tuplify call_tmp[587497]))
    (100981 call = call_tmp[587490] call_tmp[587502])
    {
      unknown i[101128] "insert auto destroy"
      (490733 'init var' i[101128] 0)
      unknown tmp[101129] "maybe param" "temp"
      unknown call_tmp[587509] "expr temp" "maybe param" "maybe type" "temp"
      (587512 'move' call_tmp[587509](348027 call rank _mt[232] this[100844]))
      (101141 'move' tmp[101129](101139 call chpl_compute_low_param_loop_bound 1 call_tmp[587509]))
      unknown tmp[101130] "maybe param" "temp"
      unknown call_tmp[587516] "expr temp" "maybe param" "maybe type" "temp"
      (587519 'move' call_tmp[587516](348057 call rank _mt[232] this[100844]))
      (101148 'move' tmp[101130](101146 call chpl_compute_high_param_loop_bound 1 call_tmp[587516]))
      unknown tmp[101131] "maybe param" "temp"
      (101151 'move' tmp[101131] 1)
      ParamForLoop
      { i[101128] tmp[101129] tmp[101130] tmp[101131]
        {
          unknown call_tmp[587523] "expr temp" "maybe param" "maybe type" "temp"
          (587526 'move' call_tmp[587523](100996 call(100991 call (partial) blk _mt[232] this[100844]) i[101128]))
          unknown call_tmp[587530] "expr temp" "maybe param" "maybe type" "temp"
          (587533 'move' call_tmp[587530](101006 call(101001 call (partial) dsiDim _mt[232] newDom[100840]) i[101128]))
          unknown call_tmp[587537] "expr temp" "maybe param" "maybe type" "temp"
          (587540 'move' call_tmp[587537](101007 call low _mt[232] call_tmp[587530]))
          unknown call_tmp[587542] "expr temp" "maybe param" "maybe type" "temp"
          (587545 'move' call_tmp[587542](101011 call chpl__idxToInt call_tmp[587537]))
          unknown call_tmp[587549] "expr temp" "maybe param" "maybe type" "temp"
          (587552 'move' call_tmp[587549](101019 call(101014 call (partial) off _mt[232] this[100844]) i[101128]))
          unknown call_tmp[587554] "expr temp" "maybe param" "maybe type" "temp"
          (587557 'move' call_tmp[587554](101021 call chpl__idxToInt call_tmp[587549]))
          unknown call_tmp[587559] "expr temp" "maybe param" "maybe type" "temp"
          (587562 'move' call_tmp[587559](101022 call - call_tmp[587542] call_tmp[587554]))
          unknown call_tmp[587564] "expr temp" "maybe param" "maybe type" "temp"
          (587567 'move' call_tmp[587564](101024 call * call_tmp[587523] call_tmp[587559]))
          unknown call_tmp[587571] "expr temp" "maybe param" "maybe type" "temp"
          (587574 'move' call_tmp[587571](101037 call idxType _mt[232] rad[100892]))
          unknown call_tmp[587578] "expr temp" "maybe param" "maybe type" "temp"
          (587581 'move' call_tmp[587578](101033 call(101028 call (partial) str _mt[232] this[100844]) i[101128]))
          unknown call_tmp[587583] "expr temp" "maybe param" "maybe type" "temp"
          (587586 'move' call_tmp[587583](101035 call abs call_tmp[587578]))
          unknown call_tmp[587588] "expr temp" "maybe param" "maybe type" "temp"
          (587591 'move' call_tmp[587588](101040 call _cast call_tmp[587571] call_tmp[587583]))
          unknown call_tmp[587593] "maybe param" "maybe type" "temp"
          (587596 'move' call_tmp[587593](101042 call / call_tmp[587564] call_tmp[587588]))
          const shift[101044] "const" "insert auto destroy"
          (490735 'init var' shift[101044] call_tmp[587593])
          unknown call_tmp[587600] "expr temp" "maybe param" "maybe type" "temp"
          (587603 'move' call_tmp[587600](101054 call(101049 call (partial) str _mt[232] this[100844]) i[101128]))
          unknown call_tmp[587605] "expr temp" "maybe param" "maybe type" "temp"
          (587608 'move' call_tmp[587605](101056 call > call_tmp[587600] 0))
          unknown call_tmp[587610] "expr temp" "maybe param" "maybe type" "temp"
          (587613 'move' call_tmp[587610](101076 call _cond_test call_tmp[587605]))
          if call_tmp[587610]
          {
            unknown call_tmp[587617] "expr temp" "maybe param" "maybe type" "temp"
            (587620 'move' call_tmp[587617](101059 call origin _mt[232] rad[100892]))
            (101063 call += call_tmp[587617] shift[101044])
          }
          {
            unknown call_tmp[587624] "expr temp" "maybe param" "maybe type" "temp"
            (587627 'move' call_tmp[587624](101068 call origin _mt[232] rad[100892]))
            (101072 call -= call_tmp[587624] shift[101044])
          }
          unknown call_tmp[587631] "expr temp" "maybe param" "maybe type" "temp"
          (587634 'move' call_tmp[587631](101100 call idxType _mt[232] rad[100892]))
          unknown call_tmp[587638] "expr temp" "maybe param" "maybe type" "temp"
          (587641 'move' call_tmp[587638](101086 call(101081 call (partial) dsiDim _mt[232] newDom[100840]) i[101128]))
          unknown call_tmp[587645] "expr temp" "maybe param" "maybe type" "temp"
          (587648 'move' call_tmp[587645](101087 call stride _mt[232] call_tmp[587638]))
          unknown call_tmp[587652] "expr temp" "maybe param" "maybe type" "temp"
          (587655 'move' call_tmp[587652](101096 call(101091 call (partial) str _mt[232] this[100844]) i[101128]))
          unknown call_tmp[587657] "expr temp" "maybe param" "maybe type" "temp"
          (587660 'move' call_tmp[587657](101097 call / call_tmp[587645] call_tmp[587652]))
          unknown call_tmp[587662] "maybe param" "maybe type" "temp"
          (587665 'move' call_tmp[587662](101103 call _cast call_tmp[587631] call_tmp[587657]))
          const mult[101105] "const" "insert auto destroy"
          (490737 'init var' mult[101105] call_tmp[587662])
          unknown call_tmp[587669] "expr temp" "maybe param" "maybe type" "temp"
          (587672 'move' call_tmp[587669](101114 call(101109 call (partial) blk _mt[232] rad[100892]) i[101128]))
          unknown call_tmp[587676] "expr temp" "maybe param" "maybe type" "temp"
          (587679 'move' call_tmp[587676](101121 call(101116 call (partial) blk _mt[232] this[100844]) i[101128]))
          unknown call_tmp[587681] "expr temp" "maybe param" "maybe type" "temp"
          (587684 'move' call_tmp[587681](101123 call * call_tmp[587676] mult[101105]))
          (101125 call = call_tmp[587669] call_tmp[587681])
        }
      }
      label _unused_continueLabel[101133]
      label _breakLabel[101132]
    }
    (101169 call(101165 call (partial) computeFactoredOffs _mt[232] rad[100892]))
    (101178 call(101174 call (partial) initShiftedData _mt[232] rad[100892]))
    (465850 'move' ret[465845](465849 'deref' rad[100892]))
    (465847 return ret[465845])
  }
  function _remoteAccessData[100096](?).toReindex[101190](arg _mt[101195]:_MT[227], arg this[101192]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg newDom[101188]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[465854] "RVV" "temp"
    unknown call_tmp[587692] "expr temp" "maybe param" "maybe type" "temp"
    (587695 'move' call_tmp[587692](101199 call rank _mt[232] this[101192]))
    unknown call_tmp[587699] "expr temp" "maybe param" "maybe type" "temp"
    (587702 'move' call_tmp[587699](101203 call rank _mt[232] newDom[101188]))
    unknown call_tmp[587704] "expr temp" "maybe param" "maybe type" "temp"
    (587707 'move' call_tmp[587704](101206 call == call_tmp[587692] call_tmp[587699]))
    (101209 call compilerAssert call_tmp[587704])
    unknown rad[101229] "insert auto destroy"
    unknown call_tmp[587711] "expr temp" "maybe param" "maybe type" "temp"
    (587714 'move' call_tmp[587711](348068 call eltType _mt[232] this[101192]))
    unknown call_tmp[587718] "expr temp" "maybe param" "maybe type" "temp"
    (587721 'move' call_tmp[587718](101216 call rank _mt[232] newDom[101188]))
    unknown call_tmp[587725] "expr temp" "maybe param" "maybe type" "temp"
    (587728 'move' call_tmp[587725](101220 call idxType _mt[232] newDom[101188]))
    unknown call_tmp[587732] "expr temp" "maybe param" "maybe type" "temp"
    (587735 'move' call_tmp[587732](101224 call stridable _mt[232] newDom[101188]))
    unknown call_tmp[587739] "expr temp" "maybe param" "maybe type" "temp"
    (587742 'move' call_tmp[587739](348076 call blkChanged _mt[232] this[101192]))
    unknown call_tmp[587744] "expr temp" "maybe param" "maybe type" "temp"
    (587747 'move' call_tmp[587744](101228 call _remoteAccessData[100096](?) call_tmp[587711] call_tmp[587718] call_tmp[587725] call_tmp[587732] call_tmp[587739]))
    (490739 'default init var' rad[101229] call_tmp[587744])
    (101238 call(101233 call (partial) initDataFrom _mt[232] rad[101229]) this[101192])
    unknown tmp[510901] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510902] "maybe param" "temp"
    unknown call_tmp[587753] "expr temp" "maybe param" "maybe type" "temp"
    (587756 'move' call_tmp[587753](101245 call stridable _mt[232] newDom[101188]))
    (510907 'move' tmp[510902](510905 call _cond_test call_tmp[587753]))
    if tmp[510902]
    {
      unknown tmp[510909] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (510911 'move' tmp[510909](101249 call data _mt[232] this[101192]))
      (510916 'move' tmp[510901](510913 '_paramFoldLogical' tmp[510902] tmp[510909]))
    }
    {
      unknown tmp[510918] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (510920 'move' tmp[510918](101253 call shiftedData _mt[232] this[101192]))
      (510925 'move' tmp[510901](510922 '_paramFoldLogical' tmp[510902] tmp[510918]))
    }
    unknown call_tmp[587764] "expr temp" "maybe param" "maybe type" "temp"
    (587767 'move' call_tmp[587764](101241 call shiftedData _mt[232] rad[101229]))
    (101259 call = call_tmp[587764] tmp[510901])
    unknown call_tmp[587771] "expr temp" "maybe param" "maybe type" "temp"
    (587774 'move' call_tmp[587771](101263 call origin _mt[232] rad[101229]))
    unknown call_tmp[587778] "expr temp" "maybe param" "maybe type" "temp"
    (587781 'move' call_tmp[587778](101271 call intIdxType _mt[232] newDom[101188]))
    unknown call_tmp[587785] "expr temp" "maybe param" "maybe type" "temp"
    (587788 'move' call_tmp[587785](101267 call origin _mt[232] this[101192]))
    unknown call_tmp[587790] "expr temp" "maybe param" "maybe type" "temp"
    (587793 'move' call_tmp[587790](101274 call _cast call_tmp[587778] call_tmp[587785]))
    (101276 call = call_tmp[587771] call_tmp[587790])
    unknown call_tmp[587797] "expr temp" "maybe param" "maybe type" "temp"
    (587800 'move' call_tmp[587797](101280 call blk _mt[232] rad[101229]))
    unknown call_tmp[587804] "expr temp" "maybe param" "maybe type" "temp"
    (587807 'move' call_tmp[587804](101284 call blk _mt[232] this[101192]))
    (101287 call = call_tmp[587797] call_tmp[587804])
    unknown call_tmp[587811] "expr temp" "maybe param" "maybe type" "temp"
    (587814 'move' call_tmp[587811](101291 call off _mt[232] rad[101229]))
    unknown call_tmp[587818] "expr temp" "maybe param" "maybe type" "temp"
    (587821 'move' call_tmp[587818](101296 call dsiLow _mt[232] newDom[101188]))
    unknown call_tmp[587823] "expr temp" "maybe param" "maybe type" "temp"
    (587826 'move' call_tmp[587823](101300 call chpl__tuplify call_tmp[587818]))
    (101301 call = call_tmp[587811] call_tmp[587823])
    unknown call_tmp[587830] "expr temp" "maybe param" "maybe type" "temp"
    (587833 'move' call_tmp[587830](101305 call str _mt[232] rad[101229]))
    unknown call_tmp[587837] "expr temp" "maybe param" "maybe type" "temp"
    (587840 'move' call_tmp[587837](101310 call dsiStride _mt[232] newDom[101188]))
    unknown call_tmp[587842] "expr temp" "maybe param" "maybe type" "temp"
    (587845 'move' call_tmp[587842](101314 call chpl__tuplify call_tmp[587837]))
    (101315 call = call_tmp[587830] call_tmp[587842])
    unknown call_tmp[587849] "expr temp" "maybe param" "maybe type" "temp"
    (587852 'move' call_tmp[587849](101321 call factoredOffs _mt[232] rad[101229]))
    unknown call_tmp[587856] "expr temp" "maybe param" "maybe type" "temp"
    (587859 'move' call_tmp[587856](101326 call intIdxType _mt[232] newDom[101188]))
    unknown call_tmp[587861] "expr temp" "maybe param" "maybe type" "temp"
    (587864 'move' call_tmp[587861](101329 call _cast call_tmp[587856] 0))
    (101331 call = call_tmp[587849] call_tmp[587861])
    (101339 call(101335 call (partial) computeFactoredOffs _mt[232] rad[101229]))
    (101346 call(101342 call (partial) initShiftedData _mt[232] rad[101229]))
    (465859 'move' ret[465854](465858 'deref' rad[101229]))
    (465856 return ret[465854])
  }
  function _remoteAccessData[100096](?).toRankChange[101358](arg _mt[101367]:_MT[227], arg this[101364]:_remoteAccessData[100096](?) :
  _remoteAccessData[100096](?), arg newDom[101356]:_any[170](?), arg cd[101360]:_any[170](?), arg idx[101362]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[465863] "RVV" "temp"
    unknown tmp[398241] "maybe param" "temp"
    unknown call_tmp[587872] "expr temp" "maybe param" "maybe type" "temp"
    (587875 'move' call_tmp[587872](101371 call rank _mt[232] this[101364]))
    unknown call_tmp[587879] "expr temp" "maybe param" "maybe type" "temp"
    (587882 'move' call_tmp[587879](101375 call size _mt[232] idx[101362]))
    (398252 'move' tmp[398241](101378 call == call_tmp[587872] call_tmp[587879]))
    unknown call_tmp[587884] "expr temp" "maybe param" "maybe type" "temp"
    (587887 'move' call_tmp[587884](398254 call _cond_invalid tmp[398241]))
    if call_tmp[587884]
    {
      (398257 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[510932] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510933] "maybe param" "temp"
    unknown call_tmp[587889] "expr temp" "maybe param" "maybe type" "temp"
    (587892 'move' call_tmp[587889](398242 call isTrue tmp[398241]))
    (510938 'move' tmp[510933](510936 call _cond_test call_tmp[587889]))
    if tmp[510933]
    {
      unknown tmp[510940] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[587896] "expr temp" "maybe param" "maybe type" "temp"
      (587899 'move' call_tmp[587896](101381 call rank _mt[232] this[101364]))
      unknown call_tmp[587903] "expr temp" "maybe param" "maybe type" "temp"
      (587906 'move' call_tmp[587903](101385 call rank _mt[232] newDom[101356]))
      unknown call_tmp[587908] "expr temp" "maybe param" "maybe type" "temp"
      (587911 'move' call_tmp[587908](101388 call != call_tmp[587896] call_tmp[587903]))
      (510942 'move' tmp[510940](398245 call isTrue call_tmp[587908]))
      (510947 'move' tmp[510932](510944 '_paramFoldLogical' tmp[510933] tmp[510940]))
    }
    {
      (510952 'move' tmp[510932](510949 '_paramFoldLogical' tmp[510933] 0))
    }
    (101393 call compilerAssert tmp[510932])
    unknown intIdxType[101400] "insert auto destroy" "type variable"(101397 call intIdxType _mt[232] newDom[101356])
    (490745 'move' intIdxType[101400](490742 call intIdxType _mt[232] newDom[101356]))
    unknown idxSignedType[101407] "insert auto destroy" "type variable"(101406 call chpl__signedType intIdxType[101400])
    (490750 'move' idxSignedType[101407](490748 call chpl__signedType intIdxType[101400]))
    unknown rad[101427] "insert auto destroy"
    unknown call_tmp[587919] "expr temp" "maybe param" "maybe type" "temp"
    (587922 'move' call_tmp[587919](348108 call eltType _mt[232] this[101364]))
    unknown call_tmp[587926] "expr temp" "maybe param" "maybe type" "temp"
    (587929 'move' call_tmp[587926](101414 call rank _mt[232] newDom[101356]))
    unknown call_tmp[587933] "expr temp" "maybe param" "maybe type" "temp"
    (587936 'move' call_tmp[587933](101418 call idxType _mt[232] newDom[101356]))
    unknown call_tmp[587940] "expr temp" "maybe param" "maybe type" "temp"
    (587943 'move' call_tmp[587940](101422 call stridable _mt[232] newDom[101356]))
    unknown call_tmp[587945] "expr temp" "maybe param" "maybe type" "temp"
    (587948 'move' call_tmp[587945](101426 call _remoteAccessData[100096](?) call_tmp[587919] call_tmp[587926] call_tmp[587933] call_tmp[587940] 1))
    (490752 'default init var' rad[101427] call_tmp[587945])
    unknown call_tmp[587950] "maybe param" "maybe type" "temp"
    (587953 'move' call_tmp[587950](101433 call chpl__tuplify cd[101360]))
    const collapsedDims[101434] "const" "insert auto destroy"
    (490754 'init var' collapsedDims[101434] call_tmp[587950])
    (101443 call(101438 call (partial) initDataFrom _mt[232] rad[101427]) this[101364])
    unknown tmp[510959] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[510960] "maybe param" "temp"
    unknown call_tmp[587959] "expr temp" "maybe param" "maybe type" "temp"
    (587962 'move' call_tmp[587959](101450 call stridable _mt[232] newDom[101356]))
    (510965 'move' tmp[510960](510963 call _cond_test call_tmp[587959]))
    if tmp[510960]
    {
      unknown tmp[510967] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (510969 'move' tmp[510967](101454 call data _mt[232] this[101364]))
      (510974 'move' tmp[510959](510971 '_paramFoldLogical' tmp[510960] tmp[510967]))
    }
    {
      unknown tmp[510976] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (510978 'move' tmp[510976](101458 call shiftedData _mt[232] this[101364]))
      (510983 'move' tmp[510959](510980 '_paramFoldLogical' tmp[510960] tmp[510976]))
    }
    unknown call_tmp[587970] "expr temp" "maybe param" "maybe type" "temp"
    (587973 'move' call_tmp[587970](101446 call shiftedData _mt[232] rad[101427]))
    (101464 call = call_tmp[587970] tmp[510959])
    unknown call_tmp[587977] "expr temp" "maybe param" "maybe type" "temp"
    (587980 'move' call_tmp[587977](101468 call origin _mt[232] rad[101427]))
    unknown call_tmp[587984] "expr temp" "maybe param" "maybe type" "temp"
    (587987 'move' call_tmp[587984](101476 call intIdxType _mt[232] newDom[101356]))
    unknown call_tmp[587991] "expr temp" "maybe param" "maybe type" "temp"
    (587994 'move' call_tmp[587991](101472 call origin _mt[232] this[101364]))
    unknown call_tmp[587996] "expr temp" "maybe param" "maybe type" "temp"
    (587999 'move' call_tmp[587996](101479 call _cast call_tmp[587984] call_tmp[587991]))
    (101481 call = call_tmp[587977] call_tmp[587996])
    unknown curDim[101485] "insert auto destroy"
    (490756 'init var' curDim[101485] 1)
    {
      unknown j[101684] "insert auto destroy"
      (490758 'init var' j[101684] 0)
      unknown tmp[101685] "maybe param" "temp"
      unknown call_tmp[588003] "expr temp" "maybe param" "maybe type" "temp"
      (588006 'move' call_tmp[588003](101490 call size _mt[232] idx[101362]))
      (101697 'move' tmp[101685](101695 call chpl_compute_low_param_loop_bound 1 call_tmp[588003]))
      unknown tmp[101686] "maybe param" "temp"
      unknown call_tmp[588010] "expr temp" "maybe param" "maybe type" "temp"
      (588013 'move' call_tmp[588010](101702 call size _mt[232] idx[101362]))
      (101707 'move' tmp[101686](101705 call chpl_compute_high_param_loop_bound 1 call_tmp[588010]))
      unknown tmp[101687] "maybe param" "temp"
      (101710 'move' tmp[101687] 1)
      ParamForLoop
      { j[101684] tmp[101685] tmp[101686] tmp[101687]
        {
          unknown call_tmp[588015] "expr temp" "maybe param" "maybe type" "temp"
          (588018 'move' call_tmp[588015](101498 call collapsedDims[101434] j[101684]))
          unknown call_tmp[588020] "expr temp" "maybe param" "maybe type" "temp"
          (588023 'move' call_tmp[588020](101499 call ! call_tmp[588015]))
          unknown call_tmp[588025] "expr temp" "maybe param" "maybe type" "temp"
          (588028 'move' call_tmp[588025](101679 call _cond_test call_tmp[588020]))
          if call_tmp[588025]
          {
            unknown call_tmp[588032] "expr temp" "maybe param" "maybe type" "temp"
            (588035 'move' call_tmp[588032](101507 call(101502 call (partial) off _mt[232] rad[101427]) curDim[101485]))
            unknown call_tmp[588039] "expr temp" "maybe param" "maybe type" "temp"
            (588042 'move' call_tmp[588039](101514 call(101509 call (partial) dsiDim _mt[232] newDom[101356]) curDim[101485]))
            unknown call_tmp[588046] "expr temp" "maybe param" "maybe type" "temp"
            (588049 'move' call_tmp[588046](101515 call low _mt[232] call_tmp[588039]))
            (101518 call = call_tmp[588032] call_tmp[588046])
            unknown call_tmp[588053] "expr temp" "maybe param" "maybe type" "temp"
            (588056 'move' call_tmp[588053](101529 call(101524 call (partial) off _mt[232] rad[101427]) curDim[101485]))
            unknown call_tmp[588058] "expr temp" "maybe param" "maybe type" "temp"
            (588061 'move' call_tmp[588058](101531 call chpl__idxToInt call_tmp[588053]))
            unknown call_tmp[588065] "expr temp" "maybe param" "maybe type" "temp"
            (588068 'move' call_tmp[588065](101539 call(101534 call (partial) off _mt[232] this[101364]) j[101684]))
            unknown call_tmp[588070] "expr temp" "maybe param" "maybe type" "temp"
            (588073 'move' call_tmp[588070](101541 call chpl__idxToInt call_tmp[588065]))
            unknown call_tmp[588075] "expr temp" "maybe param" "maybe type" "temp"
            (588078 'move' call_tmp[588075](101542 call - call_tmp[588058] call_tmp[588070]))
            unknown call_tmp[588080] "maybe param" "maybe type" "temp"
            (588083 'move' call_tmp[588080](101545 call _cast idxSignedType[101407] call_tmp[588075]))
            const off[101547] "const" "insert auto destroy"
            (490760 'init var' off[101547] call_tmp[588080])
            unknown call_tmp[588087] "expr temp" "maybe param" "maybe type" "temp"
            (588090 'move' call_tmp[588087](101551 call origin _mt[232] rad[101427]))
            unknown call_tmp[588094] "expr temp" "maybe param" "maybe type" "temp"
            (588097 'move' call_tmp[588094](101560 call(101555 call (partial) blk _mt[232] this[101364]) j[101684]))
            unknown call_tmp[588099] "expr temp" "maybe param" "maybe type" "temp"
            (588102 'move' call_tmp[588099](101562 call _cast idxSignedType[101407] call_tmp[588094]))
            unknown call_tmp[588104] "expr temp" "maybe param" "maybe type" "temp"
            (588107 'move' call_tmp[588104](101565 call * call_tmp[588099] off[101547]))
            unknown call_tmp[588111] "expr temp" "maybe param" "maybe type" "temp"
            (588114 'move' call_tmp[588111](101573 call(101568 call (partial) str _mt[232] this[101364]) j[101684]))
            unknown call_tmp[588116] "expr temp" "maybe param" "maybe type" "temp"
            (588119 'move' call_tmp[588116](101574 call / call_tmp[588104] call_tmp[588111]))
            unknown call_tmp[588121] "expr temp" "maybe param" "maybe type" "temp"
            (588124 'move' call_tmp[588121](101577 call _cast intIdxType[101400] call_tmp[588116]))
            (101579 call += call_tmp[588087] call_tmp[588121])
            unknown call_tmp[588128] "expr temp" "maybe param" "maybe type" "temp"
            (588131 'move' call_tmp[588128](101588 call(101583 call (partial) blk _mt[232] rad[101427]) curDim[101485]))
            unknown call_tmp[588135] "expr temp" "maybe param" "maybe type" "temp"
            (588138 'move' call_tmp[588135](101595 call(101590 call (partial) blk _mt[232] this[101364]) j[101684]))
            (101596 call = call_tmp[588128] call_tmp[588135])
            unknown call_tmp[588142] "expr temp" "maybe param" "maybe type" "temp"
            (588145 'move' call_tmp[588142](101605 call(101600 call (partial) str _mt[232] rad[101427]) curDim[101485]))
            unknown call_tmp[588149] "expr temp" "maybe param" "maybe type" "temp"
            (588152 'move' call_tmp[588149](101612 call(101607 call (partial) str _mt[232] this[101364]) j[101684]))
            (101613 call = call_tmp[588142] call_tmp[588149])
            (101618 call += curDim[101485] 1)
          }
          {
            unknown call_tmp[588154] "expr temp" "maybe param" "maybe type" "temp"
            (588157 'move' call_tmp[588154](101625 call idx[101362] j[101684]))
            unknown call_tmp[588159] "expr temp" "maybe param" "maybe type" "temp"
            (588162 'move' call_tmp[588159](101627 call chpl__idxToInt call_tmp[588154]))
            unknown call_tmp[588166] "expr temp" "maybe param" "maybe type" "temp"
            (588169 'move' call_tmp[588166](101635 call(101630 call (partial) off _mt[232] this[101364]) j[101684]))
            unknown call_tmp[588171] "expr temp" "maybe param" "maybe type" "temp"
            (588174 'move' call_tmp[588171](101637 call chpl__idxToInt call_tmp[588166]))
            unknown call_tmp[588176] "expr temp" "maybe param" "maybe type" "temp"
            (588179 'move' call_tmp[588176](101638 call - call_tmp[588159] call_tmp[588171]))
            unknown call_tmp[588181] "maybe param" "maybe type" "temp"
            (588184 'move' call_tmp[588181](101641 call _cast idxSignedType[101407] call_tmp[588176]))
            const off[101643] "const" "insert auto destroy"
            (490762 'init var' off[101643] call_tmp[588181])
            unknown call_tmp[588188] "expr temp" "maybe param" "maybe type" "temp"
            (588191 'move' call_tmp[588188](101648 call origin _mt[232] rad[101427]))
            unknown call_tmp[588195] "expr temp" "maybe param" "maybe type" "temp"
            (588198 'move' call_tmp[588195](101657 call(101652 call (partial) blk _mt[232] this[101364]) j[101684]))
            unknown call_tmp[588200] "expr temp" "maybe param" "maybe type" "temp"
            (588203 'move' call_tmp[588200](101659 call _cast idxSignedType[101407] call_tmp[588195]))
            unknown call_tmp[588205] "expr temp" "maybe param" "maybe type" "temp"
            (588208 'move' call_tmp[588205](101662 call * call_tmp[588200] off[101643]))
            unknown call_tmp[588212] "expr temp" "maybe param" "maybe type" "temp"
            (588215 'move' call_tmp[588212](101670 call(101665 call (partial) str _mt[232] this[101364]) j[101684]))
            unknown call_tmp[588217] "expr temp" "maybe param" "maybe type" "temp"
            (588220 'move' call_tmp[588217](101671 call / call_tmp[588205] call_tmp[588212]))
            unknown call_tmp[588222] "expr temp" "maybe param" "maybe type" "temp"
            (588225 'move' call_tmp[588222](101674 call _cast intIdxType[101400] call_tmp[588217]))
            (101676 call += call_tmp[588188] call_tmp[588222])
          }
        }
      }
      label _unused_continueLabel[101689]
      label _breakLabel[101688]
    }
    (101726 call(101722 call (partial) computeFactoredOffs _mt[232] rad[101427]))
    (101733 call(101729 call (partial) initShiftedData _mt[232] rad[101427]))
    (465868 'move' ret[465863](465867 'deref' rad[101427]))
    (465865 return ret[465863])
  }
  function LocRADCache[101892](?).init[101793](arg _mt[101896]:_MT[227], arg this[101894]:LocRADCache[101892](?), arg eltType[101791]:_any[170](?), param arg rank[101796]:int(64)[13], arg idxType[101799]:_any[170](?), param arg stridable[101802]:bool[10], arg newTargetLocDom[101810] :
  (101808 call chpl__buildDomainRuntimeType defaultDist[93214] rank[101796])) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[436137] "temporary of super field" "temp"
    (436145 'move' super_tmp[436137](436138 '.v' this[101894] c"super"))
    (436141 call init _mt[232] super_tmp[436137])
    unknown tmp[436026] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[443313] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[588231] "expr temp" "maybe param" "maybe type" "temp"
      (588234 'move' call_tmp[588231](436028 '.v' this[101894] c"super"))
      (443317 'move' call_type_tmp[443313](436031 'typeof' call_tmp[588231]))
    }
    (436032 'move' tmp[436026] call_type_tmp[443313])
    unknown call_tmp[588236] "maybe param" "maybe type" "temp"
    (588239 'move' call_tmp[588236](436037 'cast' tmp[436026] this[101894]))
    unknown chpl__thisAsParent[436034] "insert auto destroy" "temp"
    (490764 'init var' chpl__thisAsParent[436034] call_tmp[588236] tmp[436026])
    (436040 'setcid' chpl__thisAsParent[436034])
    unknown tmp[436042] "temp" "type variable"
    (436044 'move' tmp[436042] eltType[101791])
    (436046 'init field' this[101894] c"eltType" tmp[436042])
    unknown call_tmp[588241] "expr temp" "maybe param" "maybe type" "temp"
    (588244 'move' call_tmp[588241](436051 call _cast int(64)[13] rank[101796]))
    (436053 'init field' this[101894] c"rank" call_tmp[588241])
    unknown tmp[436056] "temp" "type variable"
    (436058 'move' tmp[436056] idxType[101799])
    (436060 'init field' this[101894] c"idxType" tmp[436056])
    unknown call_tmp[588246] "expr temp" "maybe param" "maybe type" "temp"
    (588249 'move' call_tmp[588246](436065 call _cast bool[10] stridable[101802]))
    (436067 'init field' this[101894] c"stridable" call_tmp[588246])
    unknown call_tmp[588251] "expr temp" "maybe param" "maybe type" "temp"
    (588254 'move' call_tmp[588251](436082 '.v' this[101894] c"rank"))
    unknown call_tmp[588256] "maybe param" "maybe type" "temp"
    (588259 'move' call_tmp[588256](436073 call chpl__buildDomainRuntimeType defaultDist[93214] call_tmp[588251]))
    unknown tmp[436070] "temp"
    (436076 'init var' tmp[436070] newTargetLocDom[101810] call_tmp[588256])
    (436078 'init field' this[101894] c"targetLocDom" tmp[436070])
    unknown tmp[436086] "temp"
    unknown call_tmp[588261] "expr temp" "maybe param" "maybe type" "temp"
    (588264 'move' call_tmp[588261](436105 '.' this[101894] c"targetLocDom"))
    unknown call_tmp[588266] "expr temp" "maybe param" "maybe type" "temp"
    (588269 'move' call_tmp[588266](436091 call chpl__ensureDomainExpr call_tmp[588261]))
    unknown call_tmp[588271] "expr temp" "maybe param" "maybe type" "temp"
    (588274 'move' call_tmp[588271](436108 '.v' this[101894] c"eltType"))
    unknown call_tmp[588276] "expr temp" "maybe param" "maybe type" "temp"
    (588279 'move' call_tmp[588276](436111 '.v' this[101894] c"rank"))
    unknown call_tmp[588281] "expr temp" "maybe param" "maybe type" "temp"
    (588284 'move' call_tmp[588281](436114 '.v' this[101894] c"idxType"))
    unknown call_tmp[588286] "expr temp" "maybe param" "maybe type" "temp"
    (588289 'move' call_tmp[588286](436117 '.v' this[101894] c"stridable"))
    unknown call_tmp[588291] "expr temp" "maybe param" "maybe type" "temp"
    (588294 'move' call_tmp[588291](436094 call _remoteAccessData[100096](?) call_tmp[588271] call_tmp[588276] call_tmp[588281] call_tmp[588286]))
    unknown call_tmp[588296] "expr temp" "maybe param" "maybe type" "temp"
    (588299 'move' call_tmp[588296](436089 call chpl__buildArrayRuntimeType call_tmp[588266] call_tmp[588291]))
    (436099 'default init var' tmp[436086] call_tmp[588296])
    (436101 '.=' this[101894] c"RAD" tmp[436086])
    unknown tmp[436120] "temp"
    unknown call_tmp[588301] "expr temp" "maybe param" "maybe type" "temp"
    (588304 'move' call_tmp[588301](436134 '.' this[101894] c"targetLocDom"))
    unknown call_tmp[588306] "expr temp" "maybe param" "maybe type" "temp"
    (588309 'move' call_tmp[588306](436125 call chpl__ensureDomainExpr call_tmp[588301]))
    unknown call_tmp[588311] "expr temp" "maybe param" "maybe type" "temp"
    (588314 'move' call_tmp[588311](436123 call chpl__buildArrayRuntimeType call_tmp[588306] chpl_LocalSpinlock[180469]))
    (436128 'default init var' tmp[436120] call_tmp[588311])
    (436130 '.=' this[101894] c"RADLocks" tmp[436120])
    (436148 'setcid' this[101894])
    (465870 return _void[47])
  }
  function LocRADCache[101892](?).lockRAD[101857](arg _mt[101900]:_MT[227], arg this[101898]:LocRADCache[101892](?), arg rlocIdx[101855]:_any[170](?)) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[588318] "expr temp" "maybe param" "maybe type" "temp"
    (588321 'move' call_tmp[588318](101862 call(348200 call (partial) RADLocks _mt[232] this[101898]) rlocIdx[101855]))
    (101867 call(101863 call (partial) lock _mt[232] call_tmp[588318]))
    (465872 return _void[47])
  }
  function LocRADCache[101892](?).unlockRAD[101876](arg _mt[101904]:_MT[227], arg this[101902]:LocRADCache[101892](?), arg rlocIdx[101874]:_any[170](?)) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[588327] "expr temp" "maybe param" "maybe type" "temp"
    (588330 'move' call_tmp[588327](101881 call(348206 call (partial) RADLocks _mt[232] this[101902]) rlocIdx[101874]))
    (101886 call(101882 call (partial) unlock _mt[232] call_tmp[588327]))
    (465874 return _void[47])
  }
  function LocRADCache[101892](?).super[714151](arg _mt[714153]:_MT[227], arg this[714155]:LocRADCache[101892](?)) : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714164] "RVV" "temp"
    unknown call_tmp[714171] "expr temp" "maybe param" "maybe type" "temp"
    (714174 'move' call_tmp[714171](714159 '.v' this[714155] c"super"))
    (714169 'move' ret[714164](714168 'deref' call_tmp[714171]))
    (714166 return ret[714164])
  }
  function LocRADCache[101892](?).eltType[714176](arg _mt[714178]:_MT[227], arg this[714180]:LocRADCache[101892](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714197] "RVV" "temp" "type variable"
    unknown call_tmp[714211] "expr temp" "maybe param" "maybe type" "temp"
    (714214 'move' call_tmp[714211](714185 'is bound' this[714180] c"eltType"))
    if call_tmp[714211]
    {
      unknown call_tmp[714216] "expr temp" "maybe param" "maybe type" "temp"
      (714219 'move' call_tmp[714216](714184 '.v' this[714180] c"eltType"))
      (714202 'move' ret[714197](714201 'deref' call_tmp[714216]))
      gotoReturn _end_eltType[714195] _end_eltType[714195]
    }
    {
      (714207 'move' ret[714197](714206 'deref' _uninstantiated[247]))
      gotoReturn _end_eltType[714195] _end_eltType[714195]
    }
    label _end_eltType[714195]
    (714199 return ret[714197])
  }
  function anymanaged anynil LocRADCache[714226](?).eltType[714221](arg _mt[714223]:_MT[227], arg this[714228]:anymanaged anynil LocRADCache[714226](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714245] "RVV" "temp" "type variable"
    unknown call_tmp[714259] "expr temp" "maybe param" "maybe type" "temp"
    (714262 'move' call_tmp[714259](714233 'is bound' this[714228] c"eltType"))
    if call_tmp[714259]
    {
      unknown call_tmp[714264] "expr temp" "maybe param" "maybe type" "temp"
      (714267 'move' call_tmp[714264](714232 '.v' this[714228] c"eltType"))
      (714250 'move' ret[714245](714249 'deref' call_tmp[714264]))
      gotoReturn _end_eltType[714243] _end_eltType[714243]
    }
    {
      (714255 'move' ret[714245](714254 'deref' _uninstantiated[247]))
      gotoReturn _end_eltType[714243] _end_eltType[714243]
    }
    label _end_eltType[714243]
    (714247 return ret[714245])
  }
  function LocRADCache[101892](?).rank[714269](arg _mt[714271]:_MT[227], arg this[714273]:LocRADCache[101892](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714290] "RVV" "param" "temp"
    unknown call_tmp[714304] "expr temp" "maybe param" "maybe type" "temp"
    (714307 'move' call_tmp[714304](714278 'is bound' this[714273] c"rank"))
    if call_tmp[714304]
    {
      unknown call_tmp[714309] "expr temp" "maybe param" "maybe type" "temp"
      (714312 'move' call_tmp[714309](714277 '.' this[714273] c"rank"))
      (714295 'move' ret[714290](714294 'deref' call_tmp[714309]))
      gotoReturn _end_rank[714288] _end_rank[714288]
    }
    {
      (714300 'move' ret[714290](714299 'deref' ?[249]))
      gotoReturn _end_rank[714288] _end_rank[714288]
    }
    label _end_rank[714288]
    (714292 return ret[714290])
  }
  function anymanaged anynil LocRADCache[714226](?).rank[714314](arg _mt[714316]:_MT[227], arg this[714318]:anymanaged anynil LocRADCache[714226](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714335] "RVV" "param" "temp"
    unknown call_tmp[714349] "expr temp" "maybe param" "maybe type" "temp"
    (714352 'move' call_tmp[714349](714323 'is bound' this[714318] c"rank"))
    if call_tmp[714349]
    {
      unknown call_tmp[714354] "expr temp" "maybe param" "maybe type" "temp"
      (714357 'move' call_tmp[714354](714322 '.' this[714318] c"rank"))
      (714340 'move' ret[714335](714339 'deref' call_tmp[714354]))
      gotoReturn _end_rank[714333] _end_rank[714333]
    }
    {
      (714345 'move' ret[714335](714344 'deref' ?[249]))
      gotoReturn _end_rank[714333] _end_rank[714333]
    }
    label _end_rank[714333]
    (714337 return ret[714335])
  }
  function LocRADCache[101892](?).idxType[714359](arg _mt[714361]:_MT[227], arg this[714363]:LocRADCache[101892](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714380] "RVV" "temp" "type variable"
    unknown call_tmp[714394] "expr temp" "maybe param" "maybe type" "temp"
    (714397 'move' call_tmp[714394](714368 'is bound' this[714363] c"idxType"))
    if call_tmp[714394]
    {
      unknown call_tmp[714399] "expr temp" "maybe param" "maybe type" "temp"
      (714402 'move' call_tmp[714399](714367 '.v' this[714363] c"idxType"))
      (714385 'move' ret[714380](714384 'deref' call_tmp[714399]))
      gotoReturn _end_idxType[714378] _end_idxType[714378]
    }
    {
      (714390 'move' ret[714380](714389 'deref' _uninstantiated[247]))
      gotoReturn _end_idxType[714378] _end_idxType[714378]
    }
    label _end_idxType[714378]
    (714382 return ret[714380])
  }
  function anymanaged anynil LocRADCache[714226](?).idxType[714404](arg _mt[714406]:_MT[227], arg this[714408]:anymanaged anynil LocRADCache[714226](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714425] "RVV" "temp" "type variable"
    unknown call_tmp[714439] "expr temp" "maybe param" "maybe type" "temp"
    (714442 'move' call_tmp[714439](714413 'is bound' this[714408] c"idxType"))
    if call_tmp[714439]
    {
      unknown call_tmp[714444] "expr temp" "maybe param" "maybe type" "temp"
      (714447 'move' call_tmp[714444](714412 '.v' this[714408] c"idxType"))
      (714430 'move' ret[714425](714429 'deref' call_tmp[714444]))
      gotoReturn _end_idxType[714423] _end_idxType[714423]
    }
    {
      (714435 'move' ret[714425](714434 'deref' _uninstantiated[247]))
      gotoReturn _end_idxType[714423] _end_idxType[714423]
    }
    label _end_idxType[714423]
    (714427 return ret[714425])
  }
  function LocRADCache[101892](?).stridable[714449](arg _mt[714451]:_MT[227], arg this[714453]:LocRADCache[101892](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714470] "RVV" "param" "temp"
    unknown call_tmp[714484] "expr temp" "maybe param" "maybe type" "temp"
    (714487 'move' call_tmp[714484](714458 'is bound' this[714453] c"stridable"))
    if call_tmp[714484]
    {
      unknown call_tmp[714489] "expr temp" "maybe param" "maybe type" "temp"
      (714492 'move' call_tmp[714489](714457 '.' this[714453] c"stridable"))
      (714475 'move' ret[714470](714474 'deref' call_tmp[714489]))
      gotoReturn _end_stridable[714468] _end_stridable[714468]
    }
    {
      (714480 'move' ret[714470](714479 'deref' ?[249]))
      gotoReturn _end_stridable[714468] _end_stridable[714468]
    }
    label _end_stridable[714468]
    (714472 return ret[714470])
  }
  function anymanaged anynil LocRADCache[714226](?).stridable[714494](arg _mt[714496]:_MT[227], arg this[714498]:anymanaged anynil LocRADCache[714226](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714515] "RVV" "param" "temp"
    unknown call_tmp[714529] "expr temp" "maybe param" "maybe type" "temp"
    (714532 'move' call_tmp[714529](714503 'is bound' this[714498] c"stridable"))
    if call_tmp[714529]
    {
      unknown call_tmp[714534] "expr temp" "maybe param" "maybe type" "temp"
      (714537 'move' call_tmp[714534](714502 '.' this[714498] c"stridable"))
      (714520 'move' ret[714515](714519 'deref' call_tmp[714534]))
      gotoReturn _end_stridable[714513] _end_stridable[714513]
    }
    {
      (714525 'move' ret[714515](714524 'deref' ?[249]))
      gotoReturn _end_stridable[714513] _end_stridable[714513]
    }
    label _end_stridable[714513]
    (714517 return ret[714515])
  }
  function LocRADCache[101892](?).targetLocDom[714539](arg _mt[714541]:_MT[227], arg this[714543]:LocRADCache[101892](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714552] "RVV" "temp"
    unknown call_tmp[714559] "expr temp" "maybe param" "maybe type" "temp"
    (714562 'move' call_tmp[714559](714547 '.' this[714543] c"targetLocDom"))
    (714557 'move' ret[714552](714556 'addr of' call_tmp[714559]))
    (714554 return ret[714552])
  }
  function LocRADCache[101892](?).RAD[714564](arg _mt[714566]:_MT[227], arg this[714568]:LocRADCache[101892](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714577] "RVV" "temp"
    unknown call_tmp[714584] "expr temp" "maybe param" "maybe type" "temp"
    (714587 'move' call_tmp[714584](714572 '.' this[714568] c"RAD"))
    (714582 'move' ret[714577](714581 'addr of' call_tmp[714584]))
    (714579 return ret[714577])
  }
  function LocRADCache[101892](?).RADLocks[714589](arg _mt[714591]:_MT[227], arg this[714593]:LocRADCache[101892](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714602] "RVV" "temp"
    unknown call_tmp[714609] "expr temp" "maybe param" "maybe type" "temp"
    (714612 'move' call_tmp[714609](714597 '.' this[714593] c"RADLocks"))
    (714607 'move' ret[714602](714606 'addr of' call_tmp[714609]))
    (714604 return ret[714602])
  }
  function LocRADCache[101892](?).deinit[714614](arg _mt[714616]:_MT[227], arg this[714618]:LocRADCache[101892](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (714620 return _void[47])
  }
  function LocRADCache[101892](?).writeThis[714623](arg _mt[714627]:_MT[227], arg this[714625]:LocRADCache[101892](?), arg f[714626]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (714632 call writeThisDefaultImpl f[714626] this[714625])
    (714636 return _void[47])
  }
  function LocRADCache[101892](?).readThis[714638](arg _mt[714642]:_MT[227], arg this[714640]:LocRADCache[101892](?), arg f[714641]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (714646 call readThisDefaultImpl f[714641] this[714640])
    (714651 return _void[47])
  }
  type LocRADCache[101892](?) val super[331017]:object[253] "super class" unknown eltType[101741] "type variable" unknown rank[101745] "param" int(64)[13] unknown idxType[101748] "type variable" unknown stridable[101752] "param" bool[10] unknown targetLocDom[101760](101758 call chpl__buildDomainRuntimeType defaultDist[93214] rank[101745]) unknown RAD[101776](101774 call chpl__buildArrayRuntimeType(101772 call chpl__ensureDomainExpr targetLocDom[101760])(101771 call _remoteAccessData[100096](?) eltType[101741] rank[101745] idxType[101748] stridable[101752])) unknown RADLocks[101786](101784 call chpl__buildArrayRuntimeType(101782 call chpl__ensureDomainExpr targetLocDom[101760]) chpl_LocalSpinlock[180469])
  type anymanaged anynil LocRADCache[714226](?)
  type anymanaged LocRADCache[382034](?)
  function DefaultRectangularArr[105188](?).intIdxType[102017](arg _mt[105192]:_MT[227], arg this[105190]:DefaultRectangularArr[105188](?)) type : _unknown[43] "method" "primary method" "no parens"
  {
    unknown ret[465878] "RVV" "temp" "type variable"
    unknown call_tmp[588336] "expr temp" "maybe param" "maybe type" "temp"
    (588339 'move' call_tmp[588336](348233 call idxType _mt[232] this[105190]))
    unknown call_tmp[588341] "expr temp" "maybe param" "maybe type" "temp"
    (588344 'move' call_tmp[588341](102022 call chpl__idxTypeToIntIdxType call_tmp[588336]))
    (465883 'move' ret[465878](465882 'deref' call_tmp[588341]))
    (465880 return ret[465878])
  }
  function DefaultRectangularArr[105188](?).dsiDisplayRepresentation[102030](arg _mt[105196]:_MT[227], arg this[105194]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[588348] "expr temp" "maybe param" "maybe type" "temp"
    (588351 'move' call_tmp[588348](348238 call off _mt[232] this[105194]))
    (102051 call writeln "off=" call_tmp[588348])
    unknown call_tmp[588355] "expr temp" "maybe param" "maybe type" "temp"
    (588358 'move' call_tmp[588355](348243 call blk _mt[232] this[105194]))
    (102073 call writeln "blk=" call_tmp[588355])
    unknown call_tmp[588362] "expr temp" "maybe param" "maybe type" "temp"
    (588365 'move' call_tmp[588362](348248 call str _mt[232] this[105194]))
    (102094 call writeln "str=" call_tmp[588362])
    unknown call_tmp[588369] "expr temp" "maybe param" "maybe type" "temp"
    (588372 'move' call_tmp[588369](348253 call factoredOffs _mt[232] this[105194]))
    (102115 call writeln "factoredOffs=" call_tmp[588369])
    unknown call_tmp[588376] "expr temp" "maybe param" "maybe type" "temp"
    (588379 'move' call_tmp[588376](348260 call noinit_data _mt[232] this[105194]))
    (102136 call writeln "noinit_data=" call_tmp[588376])
    (465885 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiGetBaseDom[102142](arg _mt[105200]:_MT[227], arg this[105198]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown ret[465889] "RVV" "temp"
    unknown call_tmp[588383] "expr temp" "maybe param" "maybe type" "temp"
    (588386 'move' call_tmp[588383](348265 call dom _mt[232] this[105198]))
    (465894 'move' ret[465889](465893 'deref' call_tmp[588383]))
    (465891 return ret[465889])
  }
  function DefaultRectangularArr[105188](?).dsiDestroyDataHelper[102154](arg _mt[105204]:_MT[227], arg this[105202]:DefaultRectangularArr[105188](?), arg dd[102152]:_any[170](?), arg ddiNumIndices[102156]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[588388] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (588391 'move' call_tmp[588388](102161 'typeof' dd[102152]))
    unknown call_tmp[588393] "expr temp" "maybe param" "maybe type" "temp"
    (588396 'move' call_tmp[588393](102163 call chpl_isDdata call_tmp[588388]))
    (102165 call compilerAssert call_tmp[588393])
    {
      unknown _indexOfInterest[102185] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[102186] "expr temp" "temp"
      unknown call_tmp[588398] "expr temp" "maybe param" "maybe type" "temp"
      (588401 'move' call_tmp[588398](102200 call - ddiNumIndices[102156] 1))
      unknown call_tmp[588403] "expr temp" "maybe param" "maybe type" "temp"
      (588406 'move' call_tmp[588403](102203 call chpl_direct_range_iter 0 call_tmp[588398] 1))
      (102195 'move' _iterator[102186](102193 call _getIterator call_tmp[588403]))
      Defer
      {
        {
          (102219 call _freeIterator _iterator[102186])
        }
      }
      { scopeless type
        (102208 'move' _indexOfInterest[102185](102205 call iteratorIndex _iterator[102186]))
      }
      ForLoop
      {
        unknown i[102212] "index var" "insert auto destroy"
        (102214 'move' i[102212] _indexOfInterest[102185])
        {
          unknown call_tmp[588408] "expr temp" "maybe param" "maybe type" "temp"
          (588411 'move' call_tmp[588408](102180 call dd[102152] i[102212]))
          (102182 call chpl__autoDestroy call_tmp[588408])
        }
        label _continueLabel[102190]
        _indexOfInterest[102185]
        _iterator[102186]
      }
      label _breakLabel[102191]
    }
    (465896 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiDestroyArr[102230](arg _mt[105208]:_MT[227], arg this[105206]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[588415] "expr temp" "maybe param" "maybe type" "temp"
    (588418 'move' call_tmp[588415](348274 call externArr _mt[232] this[105206]))
    unknown call_tmp[588420] "expr temp" "maybe param" "maybe type" "temp"
    (588423 'move' call_tmp[588420](102365 call _cond_test call_tmp[588415]))
    if call_tmp[588420]
    {
      unknown call_tmp[588427] "expr temp" "maybe param" "maybe type" "temp"
      (588430 'move' call_tmp[588427](348279 call _borrowed _mt[232] this[105206]))
      unknown call_tmp[588432] "expr temp" "maybe param" "maybe type" "temp"
      (588435 'move' call_tmp[588432](102234 call ! call_tmp[588427]))
      unknown call_tmp[588437] "expr temp" "maybe param" "maybe type" "temp"
      (588440 'move' call_tmp[588437](102246 call _cond_test call_tmp[588432]))
      if call_tmp[588437]
      {
        unknown call_tmp[588444] "expr temp" "maybe param" "maybe type" "temp"
        (588447 'move' call_tmp[588444](348286 call externFreeFunc _mt[232] this[105206]))
        unknown call_tmp[588451] "expr temp" "maybe param" "maybe type" "temp"
        (588454 'move' call_tmp[588451](348291 call data _mt[232] this[105206]))
        unknown call_tmp[588456] "expr temp" "maybe param" "maybe type" "temp"
        (588459 'move' call_tmp[588456](102242 call c_ptrTo call_tmp[588451]))
        (102243 call chpl_call_free_func call_tmp[588444] call_tmp[588456])
      }
    }
    {
      unknown call_tmp[588463] "maybe param" "maybe type" "temp"
      (588466 'move' call_tmp[588463](348295 call intIdxType _mt[232] this[105206]))
      unknown numElts[102253] "insert auto destroy"
      (490766 'init var' numElts[102253] 0 call_tmp[588463])
      unknown tmp[398283] "maybe param" "temp"
      unknown call_tmp[588470] "expr temp" "maybe param" "maybe type" "temp"
      (588473 'move' call_tmp[588470](348300 call dom _mt[232] this[105206]))
      unknown call_tmp[588477] "expr temp" "maybe param" "maybe type" "temp"
      (588480 'move' call_tmp[588477](102260 call dsiNumIndices _mt[232] call_tmp[588470]))
      (398294 'move' tmp[398283](102264 call > call_tmp[588477] 0))
      unknown call_tmp[588482] "expr temp" "maybe param" "maybe type" "temp"
      (588485 'move' call_tmp[588482](398296 call _cond_invalid tmp[398283]))
      if call_tmp[588482]
      {
        (398299 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[510990] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[510991] "maybe param" "temp"
      unknown call_tmp[588487] "expr temp" "maybe param" "maybe type" "temp"
      (588490 'move' call_tmp[588487](398284 call isTrue tmp[398283]))
      (510996 'move' tmp[510991](510994 call _cond_test call_tmp[588487]))
      if tmp[510991]
      {
        (511001 'move' tmp[510990](510998 '_paramFoldLogical' tmp[510991] 1))
      }
      {
        unknown tmp[511003] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[588494] "expr temp" "maybe param" "maybe type" "temp"
        (588497 'move' call_tmp[588494](348305 call dataAllocRange _mt[232] this[105206]))
        unknown call_tmp[588501] "expr temp" "maybe param" "maybe type" "temp"
        (588504 'move' call_tmp[588501](102267 call length _mt[232] call_tmp[588494]))
        unknown call_tmp[588506] "expr temp" "maybe param" "maybe type" "temp"
        (588509 'move' call_tmp[588506](102271 call > call_tmp[588501] 0))
        (511005 'move' tmp[511003](398288 call isTrue call_tmp[588506]))
        (511010 'move' tmp[510990](511007 '_paramFoldLogical' tmp[510991] tmp[511003]))
      }
      unknown call_tmp[588511] "expr temp" "maybe param" "maybe type" "temp"
      (588514 'move' call_tmp[588511](102355 call _cond_test tmp[510990]))
      if call_tmp[588511]
      {
        unknown call_tmp[588518] "expr temp" "maybe param" "maybe type" "temp"
        (588521 'move' call_tmp[588518](102297 call(348310 call (partial) data _mt[232] this[105206]) 0))
        unknown call_tmp[588523] "expr temp" "maybe param" "maybe type" "temp"
        (588526 'move' call_tmp[588523](102298 'deref' call_tmp[588518]))
        unknown call_tmp[588528] "maybe param" "maybe type" "temp"
        (588531 'move' call_tmp[588528](102299 'needs auto destroy' call_tmp[588523]))
        unknown needsDestroy[102300] "param"
        (490768 'init var' needsDestroy[102300] call_tmp[588528])
        unknown tmp[398262] "maybe param" "temp"
        unknown call_tmp[588535] "expr temp" "maybe param" "maybe type" "temp"
        (588538 'move' call_tmp[588535](348315 call rank _mt[232] this[105206]))
        (398273 'move' tmp[398262](102306 call == call_tmp[588535] 1))
        unknown call_tmp[588540] "expr temp" "maybe param" "maybe type" "temp"
        (588543 'move' call_tmp[588540](398275 call _cond_invalid tmp[398262]))
        if call_tmp[588540]
        {
          (398278 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[511017] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511018] "maybe param" "temp"
        unknown call_tmp[588545] "expr temp" "maybe param" "maybe type" "temp"
        (588548 'move' call_tmp[588545](398263 call isTrue tmp[398262]))
        (511023 'move' tmp[511018](511021 call _cond_test call_tmp[588545]))
        if tmp[511018]
        {
          unknown tmp[511025] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[588552] "expr temp" "maybe param" "maybe type" "temp"
          (588555 'move' call_tmp[588552](348320 call stridable _mt[232] this[105206]))
          unknown call_tmp[588557] "expr temp" "maybe param" "maybe type" "temp"
          (588560 'move' call_tmp[588557](102309 call ! call_tmp[588552]))
          (511027 'move' tmp[511025](398266 call isTrue call_tmp[588557]))
          (511032 'move' tmp[511017](511029 '_paramFoldLogical' tmp[511018] tmp[511025]))
        }
        {
          (511037 'move' tmp[511017](511034 '_paramFoldLogical' tmp[511018] 0))
        }
        unknown call_tmp[588562] "expr temp" "maybe param" "maybe type" "temp"
        (588565 'move' call_tmp[588562](102321 call _cond_test tmp[511017]))
        if call_tmp[588562]
        {
          unknown call_tmp[588569] "expr temp" "maybe param" "maybe type" "temp"
          (588572 'move' call_tmp[588569](348326 call dataAllocRange _mt[232] this[105206]))
          unknown call_tmp[588576] "expr temp" "maybe param" "maybe type" "temp"
          (588579 'move' call_tmp[588576](102315 call length _mt[232] call_tmp[588569]))
          (102318 call = numElts[102253] call_tmp[588576])
        }
        unknown call_tmp[588581] "expr temp" "maybe param" "maybe type" "temp"
        (588584 'move' call_tmp[588581](102328 call == numElts[102253] 0))
        unknown call_tmp[588586] "expr temp" "maybe param" "maybe type" "temp"
        (588589 'move' call_tmp[588586](102338 call _cond_test call_tmp[588581]))
        if call_tmp[588586]
        {
          unknown call_tmp[588593] "expr temp" "maybe param" "maybe type" "temp"
          (588596 'move' call_tmp[588593](348333 call dom _mt[232] this[105206]))
          unknown call_tmp[588600] "expr temp" "maybe param" "maybe type" "temp"
          (588603 'move' call_tmp[588600](102332 call dsiNumIndices _mt[232] call_tmp[588593]))
          (102335 call = numElts[102253] call_tmp[588600])
        }
        unknown call_tmp[588605] "expr temp" "maybe param" "maybe type" "temp"
        (588608 'move' call_tmp[588605](102351 call _cond_test needsDestroy[102300]))
        if call_tmp[588605]
        {
          unknown call_tmp[588614] "expr temp" "maybe param" "maybe type" "temp"
          (588617 'move' call_tmp[588614](348345 call data _mt[232] this[105206]))
          (102348 call(348340 call (partial) dsiDestroyDataHelper _mt[232] this[105206]) call_tmp[588614] numElts[102253])
        }
      }
      unknown call_tmp[588621] "expr temp" "maybe param" "maybe type" "temp"
      (588624 'move' call_tmp[588621](348351 call data _mt[232] this[105206]))
      (102363 call _ddata_free call_tmp[588621] numElts[102253])
    }
    (465898 return _void[47])
  }
  function DefaultRectangularArr[105188](?).theData[102374](arg _mt[105212]:_MT[227], arg this[105210]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    unknown ret[465902] "RVV" "temp"
    unknown tmp[398304] "maybe param" "temp"
    (398315 'move' tmp[398304] earlyShiftData[92605])
    unknown call_tmp[588626] "expr temp" "maybe param" "maybe type" "temp"
    (588629 'move' call_tmp[588626](398317 call _cond_invalid tmp[398304]))
    if call_tmp[588626]
    {
      (398320 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511044] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511045] "maybe param" "temp"
    unknown call_tmp[588631] "expr temp" "maybe param" "maybe type" "temp"
    (588634 'move' call_tmp[588631](398305 call isTrue tmp[398304]))
    (511050 'move' tmp[511045](511048 call _cond_test call_tmp[588631]))
    if tmp[511045]
    {
      unknown tmp[511052] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[588638] "expr temp" "maybe param" "maybe type" "temp"
      (588641 'move' call_tmp[588638](348358 call stridable _mt[232] this[105210]))
      unknown call_tmp[588643] "expr temp" "maybe param" "maybe type" "temp"
      (588646 'move' call_tmp[588643](102378 call ! call_tmp[588638]))
      (511054 'move' tmp[511052](398308 call isTrue call_tmp[588643]))
      (511059 'move' tmp[511044](511056 '_paramFoldLogical' tmp[511045] tmp[511052]))
    }
    {
      (511064 'move' tmp[511044](511061 '_paramFoldLogical' tmp[511045] 0))
    }
    unknown call_tmp[588648] "expr temp" "maybe param" "maybe type" "temp"
    (588651 'move' call_tmp[588648](102388 call _cond_test tmp[511044]))
    if call_tmp[588648]
    {
      unknown call_tmp[588655] "expr temp" "maybe param" "maybe type" "temp"
      (588658 'move' call_tmp[588655](348363 call shiftedData _mt[232] this[105210]))
      (465907 'move' ret[465902](465906 'addr of' call_tmp[588655]))
      gotoReturn _end_theData[465900] _end_theData[465900]
    }
    {
      unknown call_tmp[588662] "expr temp" "maybe param" "maybe type" "temp"
      (588665 'move' call_tmp[588662](348368 call data _mt[232] this[105210]))
      (465912 'move' ret[465902](465911 'addr of' call_tmp[588662]))
      gotoReturn _end_theData[465900] _end_theData[465900]
    }
    label _end_theData[465900]
    (465904 return ret[465902])
  }
  function DefaultRectangularArr[105188](?).these[102405](arg _mt[105216]:_MT[227], arg this[105214]:DefaultRectangularArr[105188](?), arg tasksPerLocale[102401]:int(64)[13] =
  dataParTasksPerLocale[92471], arg ignoreRunning[102409]:bool[10] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[102415]:int(64)[13] =
  dataParMinGranularity[92481]) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465918] "RVV" "temp"
    unknown call_tmp[588667] "expr temp" "maybe param" "maybe type" "temp"
    (588670 'move' call_tmp[588667](102441 call _cond_test debugDefaultDist[92581]))
    if call_tmp[588667]
    {
      (102438 call chpl_debug_writeln "*** In defRectArr simple-dd serial iterator")
    }
    {
      unknown _indexOfInterest[102455] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[102456] "expr temp" "temp"
      unknown call_tmp[588674] "expr temp" "maybe param" "maybe type" "temp"
      (588677 'move' call_tmp[588674](348378 call dom _mt[232] this[105214]))
      unknown call_tmp[588679] "expr temp" "maybe param" "maybe type" "temp"
      (588682 'move' call_tmp[588679](102451 call chpl__serialViewIter this[105214] call_tmp[588674]))
      (102465 'move' _iterator[102456](102463 call _getIterator call_tmp[588679]))
      Defer
      {
        {
          (102482 call _freeIterator _iterator[102456])
        }
      }
      { scopeless type
        (102471 'move' _indexOfInterest[102455](102468 call iteratorIndex _iterator[102456]))
      }
      ForLoop
      {
        unknown elem[102475] "index var" "insert auto destroy"
        (102477 'move' elem[102475] _indexOfInterest[102455])
        unknown yret[465922] "YVV" "temp"
        (465925 'move' yret[465922](465924 'addr of' elem[102475]))
        (465927 yield yret[465922])
        label _continueLabel[102460]
        _indexOfInterest[102455]
        _iterator[102456]
      }
      label _breakLabel[102461]
    }
    (465920 return ret[465918])
  }
  function DefaultRectangularArr[105188](?).these[102497](arg _mt[105220]:_MT[227], arg this[105218]:DefaultRectangularArr[105188](?), param arg tag[102494]:iterKind[697], arg tasksPerLocale[102500] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[102504] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[102508] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481]) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465931] "RVV" "temp"
    unknown call_tmp[588684] "expr temp" "maybe param" "maybe type" "temp"
    (588687 'move' call_tmp[588684](102540 call _cond_test debugDefaultDist[92581]))
    if call_tmp[588684]
    {
      (102537 call chpl_debug_writeln "*** In defRectArr simple-dd standalone iterator")
    }
    {
      unknown _indexOfInterest[102563] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[102564] "expr temp" "temp"
      unknown call_tmp[588691] "expr temp" "maybe param" "maybe type" "temp"
      (588694 'move' call_tmp[588691](348391 call dom _mt[232] this[105218]))
      unknown call_tmp[588698] "expr temp" "maybe param" "maybe type" "temp"
      (588701 'move' call_tmp[588698](102555 call(102547 call (partial) these _mt[232] call_tmp[588691]) tag[102494] tasksPerLocale[102500] ignoreRunning[102504] minIndicesPerTask[102508]))
      (102573 'move' _iterator[102564](102571 call _getIterator call_tmp[588698]))
      Defer
      {
        {
          (102590 call _freeIterator _iterator[102564])
        }
      }
      { scopeless type
        (102579 'move' _indexOfInterest[102563](102576 call iteratorIndex _iterator[102564]))
      }
      ForLoop
      {
        unknown i[102583] "index var" "insert auto destroy"
        (102585 'move' i[102583] _indexOfInterest[102563])
        {
          unknown yret[465935] "YVV" "temp"
          unknown call_tmp[588705] "expr temp" "maybe param" "maybe type" "temp"
          (588708 'move' call_tmp[588705](102559 call(348399 call (partial) dsiAccess _mt[232] this[105218]) i[102583]))
          (465938 'move' yret[465935](465937 'addr of' call_tmp[588705]))
          (465940 yield yret[465935])
        }
        label _continueLabel[102568]
        _indexOfInterest[102563]
        _iterator[102564]
      }
      label _breakLabel[102569]
    }
    (465933 return ret[465931])
  }
  where {
    (102516 call == tag[102494] standalone[695])
  }
  function DefaultRectangularArr[105188](?).these[102606](arg _mt[105224]:_MT[227], arg this[105222]:DefaultRectangularArr[105188](?), param arg tag[102603]:iterKind[697], arg tasksPerLocale[102609] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[102613] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[102617] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481]) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465944] "RVV" "temp"
    unknown call_tmp[588710] "expr temp" "maybe param" "maybe type" "temp"
    (588713 'move' call_tmp[588710](102649 call _cond_test debugDefaultDist[92581]))
    if call_tmp[588710]
    {
      (102646 call chpl_debug_writeln "*** In defRectArr simple-dd leader iterator")
    }
    {
      unknown _indexOfInterest[102668] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[102669] "expr temp" "temp"
      unknown call_tmp[588717] "expr temp" "maybe param" "maybe type" "temp"
      (588720 'move' call_tmp[588717](348412 call dom _mt[232] this[105222]))
      unknown call_tmp[588724] "expr temp" "maybe param" "maybe type" "temp"
      (588727 'move' call_tmp[588724](102664 call(102656 call (partial) these _mt[232] call_tmp[588717]) tag[102603] tasksPerLocale[102609] ignoreRunning[102613] minIndicesPerTask[102617]))
      (102678 'move' _iterator[102669](102676 call _getIterator call_tmp[588724]))
      Defer
      {
        {
          (102695 call _freeIterator _iterator[102669])
        }
      }
      { scopeless type
        (102684 'move' _indexOfInterest[102668](102681 call iteratorIndex _iterator[102669]))
      }
      ForLoop
      {
        unknown followThis[102688] "index var" "insert auto destroy"
        (102690 'move' followThis[102688] _indexOfInterest[102668])
        unknown yret[465948] "YVV" "temp"
        (465951 'move' yret[465948](465950 'deref' followThis[102688]))
        (465953 yield yret[465948])
        label _continueLabel[102673]
        _indexOfInterest[102668]
        _iterator[102669]
      }
      label _breakLabel[102674]
    }
    (465946 return ret[465944])
  }
  where {
    (102625 call == tag[102603] leader[691])
  }
  function DefaultRectangularArr[105188](?).these[102711](arg _mt[105228]:_MT[227], arg this[105226]:DefaultRectangularArr[105188](?), param arg tag[102708]:iterKind[697], arg followThis[102713]:_any[170](?), arg tasksPerLocale[102716] :
  dataParTasksPerLocale[92471] =
  dataParTasksPerLocale[92471], arg ignoreRunning[102720] :
  dataParIgnoreRunningTasks[92476] =
  dataParIgnoreRunningTasks[92476], arg minIndicesPerTask[102724] :
  dataParMinGranularity[92481] =
  dataParMinGranularity[92481]) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[465957] "RVV" "temp"
    unknown call_tmp[588729] "expr temp" "maybe param" "maybe type" "temp"
    (588732 'move' call_tmp[588729](102757 call _cond_test debugDefaultDist[92581]))
    if call_tmp[588729]
    {
      (102754 call chpl_debug_writeln "*** In defRectArr simple-dd follower iterator: " followThis[102713])
    }
    {
      unknown _indexOfInterest[102784] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[102785] "expr temp" "temp"
      unknown call_tmp[588736] "expr temp" "maybe param" "maybe type" "temp"
      (588739 'move' call_tmp[588736](348430 call dom _mt[232] this[105226]))
      unknown call_tmp[588743] "expr temp" "maybe param" "maybe type" "temp"
      (588746 'move' call_tmp[588743](102777 call(102764 call (partial) these _mt[232] call_tmp[588736])(tag = follower[693]) followThis[102713] tasksPerLocale[102716] ignoreRunning[102720] minIndicesPerTask[102724]))
      (102794 'move' _iterator[102785](102792 call _getIterator call_tmp[588743]))
      Defer
      {
        {
          (102811 call _freeIterator _iterator[102785])
        }
      }
      { scopeless type
        (102800 'move' _indexOfInterest[102784](102797 call iteratorIndex _iterator[102785]))
      }
      ForLoop
      {
        unknown i[102804] "index var" "insert auto destroy"
        (102806 'move' i[102804] _indexOfInterest[102784])
        unknown yret[465961] "YVV" "temp"
        unknown call_tmp[588750] "expr temp" "maybe param" "maybe type" "temp"
        (588753 'move' call_tmp[588750](102781 call(348439 call (partial) dsiAccess _mt[232] this[105226]) i[102804]))
        (465964 'move' yret[465961](465963 'addr of' call_tmp[588750]))
        (465966 yield yret[465961])
        label _continueLabel[102789]
        _indexOfInterest[102784]
        _iterator[102785]
      }
      label _breakLabel[102790]
    }
    (465959 return ret[465957])
  }
  where {
    (102732 call == tag[102708] follower[693])
  }
  function DefaultRectangularArr[105188](?).computeFactoredOffs[102823](arg _mt[105232]:_MT[227], arg this[105230]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[588757] "expr temp" "maybe param" "maybe type" "temp"
    (588760 'move' call_tmp[588757](348445 call factoredOffs _mt[232] this[105230]))
    unknown call_tmp[588764] "expr temp" "maybe param" "maybe type" "temp"
    (588767 'move' call_tmp[588764](348449 call intIdxType _mt[232] this[105230]))
    unknown call_tmp[588769] "expr temp" "maybe param" "maybe type" "temp"
    (588772 'move' call_tmp[588769](102828 call _cast call_tmp[588764] 0))
    (102830 call = call_tmp[588757] call_tmp[588769])
    {
      unknown i[102859] "insert auto destroy"
      (490770 'init var' i[102859] 0)
      unknown tmp[102860] "maybe param" "temp"
      unknown call_tmp[588776] "expr temp" "maybe param" "maybe type" "temp"
      (588779 'move' call_tmp[588776](348454 call rank _mt[232] this[105230]))
      (102872 'move' tmp[102860](102870 call chpl_compute_low_param_loop_bound 1 call_tmp[588776]))
      unknown tmp[102861] "maybe param" "temp"
      unknown call_tmp[588783] "expr temp" "maybe param" "maybe type" "temp"
      (588786 'move' call_tmp[588783](348481 call rank _mt[232] this[105230]))
      (102879 'move' tmp[102861](102877 call chpl_compute_high_param_loop_bound 1 call_tmp[588783]))
      unknown tmp[102862] "maybe param" "temp"
      (102882 'move' tmp[102862] 1)
      ParamForLoop
      { i[102859] tmp[102860] tmp[102861] tmp[102862]
        {
          unknown call_tmp[588790] "expr temp" "maybe param" "maybe type" "temp"
          (588793 'move' call_tmp[588790](348459 call factoredOffs _mt[232] this[105230]))
          unknown call_tmp[588797] "expr temp" "maybe param" "maybe type" "temp"
          (588800 'move' call_tmp[588797](348464 call factoredOffs _mt[232] this[105230]))
          unknown call_tmp[588804] "expr temp" "maybe param" "maybe type" "temp"
          (588807 'move' call_tmp[588804](102843 call(348469 call (partial) blk _mt[232] this[105230]) i[102859]))
          unknown call_tmp[588811] "expr temp" "maybe param" "maybe type" "temp"
          (588814 'move' call_tmp[588811](102848 call(348475 call (partial) off _mt[232] this[105230]) i[102859]))
          unknown call_tmp[588816] "expr temp" "maybe param" "maybe type" "temp"
          (588819 'move' call_tmp[588816](102850 call chpl__idxToInt call_tmp[588811]))
          unknown call_tmp[588821] "expr temp" "maybe param" "maybe type" "temp"
          (588824 'move' call_tmp[588821](102851 call * call_tmp[588804] call_tmp[588816]))
          unknown call_tmp[588826] "expr temp" "maybe param" "maybe type" "temp"
          (588829 'move' call_tmp[588826](102853 call + call_tmp[588797] call_tmp[588821]))
          (102855 call = call_tmp[588790] call_tmp[588826])
        }
      }
      label _unused_continueLabel[102864]
      label _breakLabel[102863]
    }
    (465968 return _void[47])
  }
  function DefaultRectangularArr[105188](?).initShiftedData[102897](arg _mt[105236]:_MT[227], arg this[105234]:DefaultRectangularArr[105188](?)) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    unknown tmp[398325] "maybe param" "temp"
    (398336 'move' tmp[398325] earlyShiftData[92605])
    unknown call_tmp[588831] "expr temp" "maybe param" "maybe type" "temp"
    (588834 'move' call_tmp[588831](398338 call _cond_invalid tmp[398325]))
    if call_tmp[588831]
    {
      (398341 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511071] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511072] "maybe param" "temp"
    unknown call_tmp[588836] "expr temp" "maybe param" "maybe type" "temp"
    (588839 'move' call_tmp[588836](398326 call isTrue tmp[398325]))
    (511077 'move' tmp[511072](511075 call _cond_test call_tmp[588836]))
    if tmp[511072]
    {
      unknown tmp[511079] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[588843] "expr temp" "maybe param" "maybe type" "temp"
      (588846 'move' call_tmp[588843](348487 call stridable _mt[232] this[105234]))
      unknown call_tmp[588848] "expr temp" "maybe param" "maybe type" "temp"
      (588851 'move' call_tmp[588848](102901 call ! call_tmp[588843]))
      (511081 'move' tmp[511079](398329 call isTrue call_tmp[588848]))
      (511086 'move' tmp[511071](511083 '_paramFoldLogical' tmp[511072] tmp[511079]))
    }
    {
      (511091 'move' tmp[511071](511088 '_paramFoldLogical' tmp[511072] 0))
    }
    unknown call_tmp[588853] "expr temp" "maybe param" "maybe type" "temp"
    (588856 'move' call_tmp[588853](102955 call _cond_test tmp[511071]))
    if call_tmp[588853]
    {
      unknown call_tmp[588860] "expr temp" "maybe param" "maybe type" "temp"
      (588863 'move' call_tmp[588860](348492 call dom _mt[232] this[105234]))
      unknown call_tmp[588867] "expr temp" "maybe param" "maybe type" "temp"
      (588870 'move' call_tmp[588867](102906 call dsiNumIndices _mt[232] call_tmp[588860]))
      unknown call_tmp[588872] "expr temp" "maybe param" "maybe type" "temp"
      (588875 'move' call_tmp[588872](102910 call > call_tmp[588867] 0))
      unknown call_tmp[588877] "expr temp" "maybe param" "maybe type" "temp"
      (588880 'move' call_tmp[588877](102950 call _cond_test call_tmp[588872]))
      if call_tmp[588877]
      {
        const shiftDist[102936] "const" "insert auto destroy"
        unknown tmp[511098] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511099] "maybe param" "temp"
        unknown call_tmp[588884] "expr temp" "maybe param" "maybe type" "temp"
        (588887 'move' call_tmp[588884](348497 call idxType _mt[232] this[105234]))
        unknown call_tmp[588889] "expr temp" "maybe param" "maybe type" "temp"
        (588892 'move' call_tmp[588889](102915 call isIntType call_tmp[588884]))
        (511104 'move' tmp[511099](511102 call _cond_test call_tmp[588889]))
        if tmp[511099]
        {
          unknown tmp[511106] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[588896] "expr temp" "maybe param" "maybe type" "temp"
          (588899 'move' call_tmp[588896](348502 call idxType _mt[232] this[105234]))
          unknown call_tmp[588901] "expr temp" "maybe param" "maybe type" "temp"
          (588904 'move' call_tmp[588901](102918 call _cast call_tmp[588896] 0))
          unknown call_tmp[588908] "expr temp" "maybe param" "maybe type" "temp"
          (588911 'move' call_tmp[588908](348507 call factoredOffs _mt[232] this[105234]))
          (511108 'move' tmp[511106](102921 call - call_tmp[588901] call_tmp[588908]))
          (511113 'move' tmp[511098](511110 '_paramFoldLogical' tmp[511099] tmp[511106]))
        }
        {
          unknown tmp[511115] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[588915] "expr temp" "maybe param" "maybe type" "temp"
          (588918 'move' call_tmp[588915](348514 call idxSignedType _mt[232] this[105234]))
          unknown call_tmp[588920] "expr temp" "maybe param" "maybe type" "temp"
          (588923 'move' call_tmp[588920](102925 call _cast call_tmp[588915] 0))
          unknown call_tmp[588927] "expr temp" "maybe param" "maybe type" "temp"
          (588930 'move' call_tmp[588927](348524 call idxSignedType _mt[232] this[105234]))
          unknown call_tmp[588934] "expr temp" "maybe param" "maybe type" "temp"
          (588937 'move' call_tmp[588934](348519 call factoredOffs _mt[232] this[105234]))
          unknown call_tmp[588939] "expr temp" "maybe param" "maybe type" "temp"
          (588942 'move' call_tmp[588939](102929 call _cast call_tmp[588927] call_tmp[588934]))
          (511117 'move' tmp[511115](102931 call - call_tmp[588920] call_tmp[588939]))
          (511122 'move' tmp[511098](511119 '_paramFoldLogical' tmp[511099] tmp[511115]))
        }
        (490772 'init var' shiftDist[102936] tmp[511098])
        unknown call_tmp[588946] "expr temp" "maybe param" "maybe type" "temp"
        (588949 'move' call_tmp[588946](348529 call shiftedData _mt[232] this[105234]))
        unknown call_tmp[588953] "expr temp" "maybe param" "maybe type" "temp"
        (588956 'move' call_tmp[588953](348534 call eltType _mt[232] this[105234]))
        unknown call_tmp[588960] "expr temp" "maybe param" "maybe type" "temp"
        (588963 'move' call_tmp[588960](348539 call data _mt[232] this[105234]))
        unknown call_tmp[588965] "expr temp" "maybe param" "maybe type" "temp"
        (588968 'move' call_tmp[588965](102946 call _ddata_shift call_tmp[588953] call_tmp[588960] shiftDist[102936]))
        (102947 call = call_tmp[588946] call_tmp[588965])
      }
    }
    (465970 return _void[47])
  }
  function DefaultRectangularArr[105188](?).postinit[102964](arg _mt[105240]:_MT[227], arg this[105238]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[588972] "expr temp" "maybe param" "maybe type" "temp"
    (588975 'move' call_tmp[588972](348545 call noinit_data _mt[232] this[105238]))
    unknown call_tmp[588977] "expr temp" "maybe param" "maybe type" "temp"
    (588980 'move' call_tmp[588977](102968 call == call_tmp[588972] 1))
    unknown call_tmp[588982] "expr temp" "maybe param" "maybe type" "temp"
    (588985 'move' call_tmp[588982](102972 call _cond_test call_tmp[588977]))
    if call_tmp[588982]
    {
      gotoReturn _end_postinit[465972] _end_postinit[465972]
    }
    {
      unknown dim[103017] "insert auto destroy"
      (490774 'init var' dim[103017] 0)
      unknown tmp[103018] "maybe param" "temp"
      unknown call_tmp[588989] "expr temp" "maybe param" "maybe type" "temp"
      (588992 'move' call_tmp[588989](348550 call rank _mt[232] this[105238]))
      (103030 'move' tmp[103018](103028 call chpl_compute_low_param_loop_bound 1 call_tmp[588989]))
      unknown tmp[103019] "maybe param" "temp"
      unknown call_tmp[588996] "expr temp" "maybe param" "maybe type" "temp"
      (588999 'move' call_tmp[588996](348579 call rank _mt[232] this[105238]))
      (103037 'move' tmp[103019](103035 call chpl_compute_high_param_loop_bound 1 call_tmp[588996]))
      unknown tmp[103020] "maybe param" "temp"
      (103040 'move' tmp[103020] 1)
      ParamForLoop
      { dim[103017] tmp[103018] tmp[103019] tmp[103020]
        {
          unknown call_tmp[589003] "expr temp" "maybe param" "maybe type" "temp"
          (589006 'move' call_tmp[589003](102985 call(348555 call (partial) off _mt[232] this[105238]) dim[103017]))
          unknown call_tmp[589010] "expr temp" "maybe param" "maybe type" "temp"
          (589013 'move' call_tmp[589010](348561 call dom _mt[232] this[105238]))
          unknown call_tmp[589017] "expr temp" "maybe param" "maybe type" "temp"
          (589020 'move' call_tmp[589017](102992 call(102987 call (partial) dsiDim _mt[232] call_tmp[589010]) dim[103017]))
          unknown call_tmp[589024] "expr temp" "maybe param" "maybe type" "temp"
          (589027 'move' call_tmp[589024](102993 call alignedLow _mt[232] call_tmp[589017]))
          (102996 call = call_tmp[589003] call_tmp[589024])
          unknown call_tmp[589031] "expr temp" "maybe param" "maybe type" "temp"
          (589034 'move' call_tmp[589031](103003 call(348567 call (partial) str _mt[232] this[105238]) dim[103017]))
          unknown call_tmp[589038] "expr temp" "maybe param" "maybe type" "temp"
          (589041 'move' call_tmp[589038](348573 call dom _mt[232] this[105238]))
          unknown call_tmp[589045] "expr temp" "maybe param" "maybe type" "temp"
          (589048 'move' call_tmp[589045](103010 call(103005 call (partial) dsiDim _mt[232] call_tmp[589038]) dim[103017]))
          unknown call_tmp[589052] "expr temp" "maybe param" "maybe type" "temp"
          (589055 'move' call_tmp[589052](103011 call stride _mt[232] call_tmp[589045]))
          (103014 call = call_tmp[589031] call_tmp[589052])
        }
      }
      label _unused_continueLabel[103022]
      label _breakLabel[103021]
    }
    unknown call_tmp[589057] "expr temp" "maybe param" "maybe type" "temp"
    (589060 'move' call_tmp[589057](103056 call == storageOrder[92630] RMO[92613]))
    unknown call_tmp[589062] "expr temp" "maybe param" "maybe type" "temp"
    (589065 'move' call_tmp[589062](103261 call _cond_test call_tmp[589057]))
    if call_tmp[589062]
    {
      unknown call_tmp[589071] "expr temp" "maybe param" "maybe type" "temp"
      (589074 'move' call_tmp[589071](348591 call rank _mt[232] this[105238]))
      unknown call_tmp[589076] "expr temp" "maybe param" "maybe type" "temp"
      (589079 'move' call_tmp[589076](103061 call(348586 call (partial) blk _mt[232] this[105238]) call_tmp[589071]))
      unknown call_tmp[589083] "expr temp" "maybe param" "maybe type" "temp"
      (589086 'move' call_tmp[589083](348595 call intIdxType _mt[232] this[105238]))
      unknown call_tmp[589088] "expr temp" "maybe param" "maybe type" "temp"
      (589091 'move' call_tmp[589088](103064 call _cast call_tmp[589083] 1))
      (103066 call = call_tmp[589076] call_tmp[589088])
      {
        unknown dim[103111] "insert auto destroy"
        (490776 'init var' dim[103111] 0)
        unknown tmp[103112] "maybe param" "temp"
        unknown call_tmp[589095] "expr temp" "maybe param" "maybe type" "temp"
        (589098 'move' call_tmp[589095](348600 call rank _mt[232] this[105238]))
        unknown call_tmp[589100] "expr temp" "maybe param" "maybe type" "temp"
        (589103 'move' call_tmp[589100](103073 call - call_tmp[589095] 1))
        (103123 'move' tmp[103112](103121 call chpl_compute_low_param_loop_bound 1 call_tmp[589100]))
        unknown tmp[103113] "maybe param" "temp"
        unknown call_tmp[589107] "expr temp" "maybe param" "maybe type" "temp"
        (589110 'move' call_tmp[589107](348623 call rank _mt[232] this[105238]))
        unknown call_tmp[589112] "expr temp" "maybe param" "maybe type" "temp"
        (589115 'move' call_tmp[589112](103128 call - call_tmp[589107] 1))
        (103133 'move' tmp[103113](103131 call chpl_compute_high_param_loop_bound 1 call_tmp[589112]))
        unknown tmp[103114] "maybe param" "temp"
        (103136 'move' tmp[103114](103078 call - 1))
        ParamForLoop
        { dim[103111] tmp[103112] tmp[103113] tmp[103114]
          unknown call_tmp[589119] "expr temp" "maybe param" "maybe type" "temp"
          (589122 'move' call_tmp[589119](103085 call(348605 call (partial) blk _mt[232] this[105238]) dim[103111]))
          unknown call_tmp[589126] "expr temp" "maybe param" "maybe type" "temp"
          (589129 'move' call_tmp[589126](103089 call + dim[103111] 1))
          unknown call_tmp[589131] "expr temp" "maybe param" "maybe type" "temp"
          (589134 'move' call_tmp[589131](103092 call(348611 call (partial) blk _mt[232] this[105238]) call_tmp[589126]))
          unknown call_tmp[589138] "expr temp" "maybe param" "maybe type" "temp"
          (589141 'move' call_tmp[589138](348617 call dom _mt[232] this[105238]))
          unknown call_tmp[589145] "expr temp" "maybe param" "maybe type" "temp"
          (589148 'move' call_tmp[589145](103099 call + dim[103111] 1))
          unknown call_tmp[589150] "expr temp" "maybe param" "maybe type" "temp"
          (589153 'move' call_tmp[589150](103102 call(103094 call (partial) dsiDim _mt[232] call_tmp[589138]) call_tmp[589145]))
          unknown call_tmp[589157] "expr temp" "maybe param" "maybe type" "temp"
          (589160 'move' call_tmp[589157](103103 call length _mt[232] call_tmp[589150]))
          unknown call_tmp[589162] "expr temp" "maybe param" "maybe type" "temp"
          (589165 'move' call_tmp[589162](103106 call * call_tmp[589131] call_tmp[589157]))
          (103108 call = call_tmp[589119] call_tmp[589162])
        }
        label _unused_continueLabel[103116]
        label _breakLabel[103115]
      }
    }
    {
      unknown call_tmp[589167] "expr temp" "maybe param" "maybe type" "temp"
      (589170 'move' call_tmp[589167](103154 call == storageOrder[92630] CMO[92615]))
      unknown call_tmp[589172] "expr temp" "maybe param" "maybe type" "temp"
      (589175 'move' call_tmp[589172](103257 call _cond_test call_tmp[589167]))
      if call_tmp[589172]
      {
        unknown call_tmp[589179] "expr temp" "maybe param" "maybe type" "temp"
        (589182 'move' call_tmp[589179](103159 call(348630 call (partial) blk _mt[232] this[105238]) 1))
        unknown call_tmp[589186] "expr temp" "maybe param" "maybe type" "temp"
        (589189 'move' call_tmp[589186](348634 call intIdxType _mt[232] this[105238]))
        unknown call_tmp[589191] "expr temp" "maybe param" "maybe type" "temp"
        (589194 'move' call_tmp[589191](103162 call _cast call_tmp[589186] 1))
        (103164 call = call_tmp[589179] call_tmp[589191])
        {
          unknown dim[103202] "insert auto destroy"
          (490778 'init var' dim[103202] 0)
          unknown tmp[103203] "maybe param" "temp"
          unknown call_tmp[589198] "expr temp" "maybe param" "maybe type" "temp"
          (589201 'move' call_tmp[589198](348639 call rank _mt[232] this[105238]))
          (103215 'move' tmp[103203](103213 call chpl_compute_low_param_loop_bound 2 call_tmp[589198]))
          unknown tmp[103204] "maybe param" "temp"
          unknown call_tmp[589205] "expr temp" "maybe param" "maybe type" "temp"
          (589208 'move' call_tmp[589205](348662 call rank _mt[232] this[105238]))
          (103222 'move' tmp[103204](103220 call chpl_compute_high_param_loop_bound 2 call_tmp[589205]))
          unknown tmp[103205] "maybe param" "temp"
          (103225 'move' tmp[103205] 1)
          ParamForLoop
          { dim[103202] tmp[103203] tmp[103204] tmp[103205]
            {
              unknown call_tmp[589212] "expr temp" "maybe param" "maybe type" "temp"
              (589215 'move' call_tmp[589212](103175 call(348644 call (partial) blk _mt[232] this[105238]) dim[103202]))
              unknown call_tmp[589219] "expr temp" "maybe param" "maybe type" "temp"
              (589222 'move' call_tmp[589219](103179 call - dim[103202] 1))
              unknown call_tmp[589224] "expr temp" "maybe param" "maybe type" "temp"
              (589227 'move' call_tmp[589224](103182 call(348650 call (partial) blk _mt[232] this[105238]) call_tmp[589219]))
              unknown call_tmp[589231] "expr temp" "maybe param" "maybe type" "temp"
              (589234 'move' call_tmp[589231](348656 call dom _mt[232] this[105238]))
              unknown call_tmp[589238] "expr temp" "maybe param" "maybe type" "temp"
              (589241 'move' call_tmp[589238](103189 call - dim[103202] 1))
              unknown call_tmp[589243] "expr temp" "maybe param" "maybe type" "temp"
              (589246 'move' call_tmp[589243](103192 call(103184 call (partial) dsiDim _mt[232] call_tmp[589231]) call_tmp[589238]))
              unknown call_tmp[589250] "expr temp" "maybe param" "maybe type" "temp"
              (589253 'move' call_tmp[589250](103193 call length _mt[232] call_tmp[589243]))
              unknown call_tmp[589255] "expr temp" "maybe param" "maybe type" "temp"
              (589258 'move' call_tmp[589255](103196 call * call_tmp[589224] call_tmp[589250]))
              (103198 call = call_tmp[589212] call_tmp[589255])
            }
          }
          label _unused_continueLabel[103207]
          label _breakLabel[103206]
        }
      }
      {
        (103254 call halt "unknown array storage order")
      }
    }
    (103268 call(348666 call (partial) computeFactoredOffs _mt[232] this[105238]))
    const size[103312] "const" "insert auto destroy"
    unknown tmp[511129] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511130] "maybe param" "temp"
    unknown call_tmp[589262] "expr temp" "maybe param" "maybe type" "temp"
    (589265 'move' call_tmp[589262](103275 call == storageOrder[92630] RMO[92613]))
    (511135 'move' tmp[511130](511133 call _cond_test call_tmp[589262]))
    if tmp[511130]
    {
      unknown tmp[511137] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[589269] "expr temp" "maybe param" "maybe type" "temp"
      (589272 'move' call_tmp[589269](103280 call(348673 call (partial) blk _mt[232] this[105238]) 1))
      unknown call_tmp[589276] "expr temp" "maybe param" "maybe type" "temp"
      (589279 'move' call_tmp[589276](348678 call dom _mt[232] this[105238]))
      unknown call_tmp[589283] "expr temp" "maybe param" "maybe type" "temp"
      (589286 'move' call_tmp[589283](103287 call(103282 call (partial) dsiDim _mt[232] call_tmp[589276]) 1))
      unknown call_tmp[589290] "expr temp" "maybe param" "maybe type" "temp"
      (589293 'move' call_tmp[589290](103288 call length _mt[232] call_tmp[589283]))
      (511139 'move' tmp[511137](103291 call * call_tmp[589269] call_tmp[589290]))
      (511144 'move' tmp[511129](511141 '_paramFoldLogical' tmp[511130] tmp[511137]))
    }
    {
      unknown tmp[511146] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[589299] "expr temp" "maybe param" "maybe type" "temp"
      (589302 'move' call_tmp[589299](348688 call rank _mt[232] this[105238]))
      unknown call_tmp[589304] "expr temp" "maybe param" "maybe type" "temp"
      (589307 'move' call_tmp[589304](103296 call(348683 call (partial) blk _mt[232] this[105238]) call_tmp[589299]))
      unknown call_tmp[589311] "expr temp" "maybe param" "maybe type" "temp"
      (589314 'move' call_tmp[589311](348693 call dom _mt[232] this[105238]))
      unknown call_tmp[589320] "expr temp" "maybe param" "maybe type" "temp"
      (589323 'move' call_tmp[589320](348698 call rank _mt[232] this[105238]))
      unknown call_tmp[589325] "expr temp" "maybe param" "maybe type" "temp"
      (589328 'move' call_tmp[589325](103303 call(103298 call (partial) dsiDim _mt[232] call_tmp[589311]) call_tmp[589320]))
      unknown call_tmp[589332] "expr temp" "maybe param" "maybe type" "temp"
      (589335 'move' call_tmp[589332](103304 call length _mt[232] call_tmp[589325]))
      (511148 'move' tmp[511146](103307 call * call_tmp[589304] call_tmp[589332]))
      (511153 'move' tmp[511129](511150 '_paramFoldLogical' tmp[511130] tmp[511146]))
    }
    (490780 'init var' size[103312] tmp[511129])
    unknown call_tmp[589337] "expr temp" "maybe param" "maybe type" "temp"
    (589340 'move' call_tmp[589337](103373 call _cond_test usePollyArrayIndex[92609]))
    if call_tmp[589337]
    {
      {
        unknown dim[103338] "insert auto destroy"
        (490782 'init var' dim[103338] 0)
        unknown tmp[103339] "maybe param" "temp"
        unknown call_tmp[589344] "expr temp" "maybe param" "maybe type" "temp"
        (589347 'move' call_tmp[589344](348704 call rank _mt[232] this[105238]))
        (103351 'move' tmp[103339](103349 call chpl_compute_low_param_loop_bound 1 call_tmp[589344]))
        unknown tmp[103340] "maybe param" "temp"
        unknown call_tmp[589351] "expr temp" "maybe param" "maybe type" "temp"
        (589354 'move' call_tmp[589351](348723 call rank _mt[232] this[105238]))
        (103358 'move' tmp[103340](103356 call chpl_compute_high_param_loop_bound 1 call_tmp[589351]))
        unknown tmp[103341] "maybe param" "temp"
        (103361 'move' tmp[103341] 1)
        ParamForLoop
        { dim[103338] tmp[103339] tmp[103340] tmp[103341]
          {
            unknown call_tmp[589358] "expr temp" "maybe param" "maybe type" "temp"
            (589361 'move' call_tmp[589358](103323 call(348711 call (partial) sizesPerDim _mt[232] this[105238]) dim[103338]))
            unknown call_tmp[589365] "expr temp" "maybe param" "maybe type" "temp"
            (589368 'move' call_tmp[589365](348717 call dom _mt[232] this[105238]))
            unknown call_tmp[589372] "expr temp" "maybe param" "maybe type" "temp"
            (589375 'move' call_tmp[589372](103330 call(103325 call (partial) dsiDim _mt[232] call_tmp[589365]) dim[103338]))
            unknown call_tmp[589379] "expr temp" "maybe param" "maybe type" "temp"
            (589382 'move' call_tmp[589379](103331 call length _mt[232] call_tmp[589372]))
            (103334 call = call_tmp[589358] call_tmp[589379])
          }
        }
        label _unused_continueLabel[103343]
        label _breakLabel[103342]
      }
    }
    unknown call_tmp[589386] "expr temp" "maybe param" "maybe type" "temp"
    (589389 'move' call_tmp[589386](348728 call data _mt[232] this[105238]))
    unknown call_tmp[589391] "expr temp" "maybe param" "maybe type" "temp"
    (589394 'move' call_tmp[589391](103379 call == call_tmp[589386] nil[38]))
    unknown call_tmp[589396] "expr temp" "maybe param" "maybe type" "temp"
    (589399 'move' call_tmp[589396](103424 call _cond_test call_tmp[589391]))
    if call_tmp[589396]
    {
      unknown call_tmp[589401] "expr temp" "maybe param" "maybe type" "temp"
      (589404 'move' call_tmp[589401](103382 call ! localeModelHasSublocales[180486]))
      unknown call_tmp[589406] "expr temp" "maybe param" "maybe type" "temp"
      (589409 'move' call_tmp[589406](103419 call _cond_test call_tmp[589401]))
      if call_tmp[589406]
      {
        unknown call_tmp[589413] "expr temp" "maybe param" "maybe type" "temp"
        (589416 'move' call_tmp[589413](348734 call data _mt[232] this[105238]))
        unknown call_tmp[589420] "expr temp" "maybe param" "maybe type" "temp"
        (589423 'move' call_tmp[589420](348739 call eltType _mt[232] this[105238]))
        unknown call_tmp[589425] "expr temp" "maybe param" "maybe type" "temp"
        (589428 'move' call_tmp[589425](103389 call _ddata_allocate call_tmp[589420] size[103312]))
        (103390 call = call_tmp[589413] call_tmp[589425])
      }
      {
        unknown tmp[511160] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511161] "maybe param" "temp"
        unknown call_tmp[589430] "expr temp" "maybe param" "maybe type" "temp"
        (589433 'move' call_tmp[589430](348754 call here[92085]))
        unknown call_tmp[589437] "expr temp" "maybe param" "maybe type" "temp"
        (589440 'move' call_tmp[589437](103404 call(103400 call (partial) getChildCount _mt[232] call_tmp[589430])))
        unknown call_tmp[589442] "expr temp" "maybe param" "maybe type" "temp"
        (589445 'move' call_tmp[589442](103406 call > call_tmp[589437] 1))
        (511166 'move' tmp[511161](511164 call _cond_test call_tmp[589442]))
        if tmp[511161]
        {
          (511171 'move' tmp[511160](511168 '_paramFoldLogical' tmp[511161] c_sublocid_all[90224]))
        }
        {
          (511176 'move' tmp[511160](511173 '_paramFoldLogical' tmp[511161] c_sublocid_none[90216]))
        }
        unknown call_tmp[589449] "expr temp" "maybe param" "maybe type" "temp"
        (589452 'move' call_tmp[589449](348745 call data _mt[232] this[105238]))
        unknown call_tmp[589456] "expr temp" "maybe param" "maybe type" "temp"
        (589459 'move' call_tmp[589456](348750 call eltType _mt[232] this[105238]))
        unknown call_tmp[589461] "expr temp" "maybe param" "maybe type" "temp"
        (589464 'move' call_tmp[589461](103414 call _ddata_allocate call_tmp[589456] size[103312](subloc = tmp[511160])))
        (103415 call = call_tmp[589449] call_tmp[589461])
      }
    }
    (103430 call(348759 call (partial) initShiftedData _mt[232] this[105238]))
    unknown tmp[398346] "maybe param" "temp"
    unknown call_tmp[589470] "expr temp" "maybe param" "maybe type" "temp"
    (589473 'move' call_tmp[589470](348764 call rank _mt[232] this[105238]))
    (398357 'move' tmp[398346](103434 call == call_tmp[589470] 1))
    unknown call_tmp[589475] "expr temp" "maybe param" "maybe type" "temp"
    (589478 'move' call_tmp[589475](398359 call _cond_invalid tmp[398346]))
    if call_tmp[589475]
    {
      (398362 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511183] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511184] "maybe param" "temp"
    unknown call_tmp[589480] "expr temp" "maybe param" "maybe type" "temp"
    (589483 'move' call_tmp[589480](398347 call isTrue tmp[398346]))
    (511189 'move' tmp[511184](511187 call _cond_test call_tmp[589480]))
    if tmp[511184]
    {
      unknown tmp[511191] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[589487] "expr temp" "maybe param" "maybe type" "temp"
      (589490 'move' call_tmp[589487](348769 call stridable _mt[232] this[105238]))
      unknown call_tmp[589492] "expr temp" "maybe param" "maybe type" "temp"
      (589495 'move' call_tmp[589492](103437 call ! call_tmp[589487]))
      (511193 'move' tmp[511191](398350 call isTrue call_tmp[589492]))
      (511198 'move' tmp[511183](511195 '_paramFoldLogical' tmp[511184] tmp[511191]))
    }
    {
      (511203 'move' tmp[511183](511200 '_paramFoldLogical' tmp[511184] 0))
    }
    unknown call_tmp[589497] "expr temp" "maybe param" "maybe type" "temp"
    (589500 'move' call_tmp[589497](103452 call _cond_test tmp[511183]))
    if call_tmp[589497]
    {
      unknown call_tmp[589504] "expr temp" "maybe param" "maybe type" "temp"
      (589507 'move' call_tmp[589504](348774 call dataAllocRange _mt[232] this[105238]))
      unknown call_tmp[589511] "expr temp" "maybe param" "maybe type" "temp"
      (589514 'move' call_tmp[589511](348779 call dom _mt[232] this[105238]))
      unknown call_tmp[589518] "expr temp" "maybe param" "maybe type" "temp"
      (589521 'move' call_tmp[589518](103448 call(103443 call (partial) dsiDim _mt[232] call_tmp[589511]) 1))
      (103449 call = call_tmp[589504] call_tmp[589518])
    }
    label _end_postinit[465972]
    (465974 return _void[47])
  }
  function DefaultRectangularArr[105188](?).getDataIndex[103467](arg _mt[105244]:_MT[227], arg this[105242]:DefaultRectangularArr[105188](?), arg ind[103463] ... :
  (348784 call idxType _mt[232] this[105242]), param arg getShifted[103470] :
  1 =
  1) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[465980] "RVV" "temp"
    unknown call_tmp[589527] "expr temp" "maybe param" "maybe type" "temp"
    (589530 'move' call_tmp[589527](103482 call(348793 call (partial) getDataIndex _mt[232] this[105242]) ind[103463](getShifted = getShifted[103470])))
    (465985 'move' ret[465980](465984 'deref' call_tmp[589527]))
    (465982 return ret[465980])
  }
  where {
    unknown call_tmp[589534] "expr temp" "maybe param" "maybe type" "temp"
    (589537 'move' call_tmp[589534](348789 call rank _mt[232] this[105242]))
    (103475 call == call_tmp[589534] 1)
  }
  function DefaultRectangularArr[105188](?).getDataIndex[103498](arg _mt[105248]:_MT[227], arg this[105246]:DefaultRectangularArr[105188](?), arg ind[103495] :
  unknown call_tmp[589541] "expr temp" "maybe param" "maybe type" "temp", param arg getShifted[103501] :
  1 =
  1) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[465989] "RVV" "temp"
    unknown call_tmp[589555] "expr temp" "maybe param" "maybe type" "temp"
    (589558 'move' call_tmp[589555](348810 call stridable _mt[232] this[105246]))
    unknown call_tmp[589560] "expr temp" "maybe param" "maybe type" "temp"
    (589563 'move' call_tmp[589560](103898 call _cond_test call_tmp[589555]))
    if call_tmp[589560]
    {
      unknown call_tmp[589567] "expr temp" "maybe param" "maybe type" "temp"
      (589570 'move' call_tmp[589567](348814 call intIdxType _mt[232] this[105246]))
      unknown call_tmp[589572] "maybe param" "maybe type" "temp"
      (589575 'move' call_tmp[589572](103507 call _cast call_tmp[589567] 0))
      unknown sum[103509] "insert auto destroy"
      (490784 'init var' sum[103509] call_tmp[589572])
      {
        unknown i[103555] "insert auto destroy"
        (490786 'init var' i[103555] 0)
        unknown tmp[103556] "maybe param" "temp"
        unknown call_tmp[589579] "expr temp" "maybe param" "maybe type" "temp"
        (589582 'move' call_tmp[589579](348819 call rank _mt[232] this[105246]))
        (103568 'move' tmp[103556](103566 call chpl_compute_low_param_loop_bound 1 call_tmp[589579]))
        unknown tmp[103557] "maybe param" "temp"
        unknown call_tmp[589586] "expr temp" "maybe param" "maybe type" "temp"
        (589589 'move' call_tmp[589586](348849 call rank _mt[232] this[105246]))
        (103575 'move' tmp[103557](103573 call chpl_compute_high_param_loop_bound 1 call_tmp[589586]))
        unknown tmp[103558] "maybe param" "temp"
        (103578 'move' tmp[103558] 1)
        ParamForLoop
        { i[103555] tmp[103556] tmp[103557] tmp[103558]
          unknown call_tmp[589591] "expr temp" "maybe param" "maybe type" "temp"
          (589594 'move' call_tmp[589591](103522 call ind[103495] i[103555]))
          unknown call_tmp[589596] "expr temp" "maybe param" "maybe type" "temp"
          (589599 'move' call_tmp[589596](103524 call chpl__idxToInt call_tmp[589591]))
          unknown call_tmp[589603] "expr temp" "maybe param" "maybe type" "temp"
          (589606 'move' call_tmp[589603](103529 call(348827 call (partial) off _mt[232] this[105246]) i[103555]))
          unknown call_tmp[589608] "expr temp" "maybe param" "maybe type" "temp"
          (589611 'move' call_tmp[589608](103531 call chpl__idxToInt call_tmp[589603]))
          unknown call_tmp[589613] "expr temp" "maybe param" "maybe type" "temp"
          (589616 'move' call_tmp[589613](103532 call - call_tmp[589596] call_tmp[589608]))
          unknown call_tmp[589620] "expr temp" "maybe param" "maybe type" "temp"
          (589623 'move' call_tmp[589620](103537 call(348833 call (partial) blk _mt[232] this[105246]) i[103555]))
          unknown call_tmp[589625] "expr temp" "maybe param" "maybe type" "temp"
          (589628 'move' call_tmp[589625](103538 call * call_tmp[589613] call_tmp[589620]))
          unknown call_tmp[589632] "expr temp" "maybe param" "maybe type" "temp"
          (589635 'move' call_tmp[589632](348844 call intIdxType _mt[232] this[105246]))
          unknown call_tmp[589639] "expr temp" "maybe param" "maybe type" "temp"
          (589642 'move' call_tmp[589639](103544 call(348839 call (partial) str _mt[232] this[105246]) i[103555]))
          unknown call_tmp[589644] "expr temp" "maybe param" "maybe type" "temp"
          (589647 'move' call_tmp[589644](103546 call abs call_tmp[589639]))
          unknown call_tmp[589649] "expr temp" "maybe param" "maybe type" "temp"
          (589652 'move' call_tmp[589649](103548 call _cast call_tmp[589632] call_tmp[589644]))
          unknown call_tmp[589654] "expr temp" "maybe param" "maybe type" "temp"
          (589657 'move' call_tmp[589654](103550 call / call_tmp[589625] call_tmp[589649]))
          (103552 call += sum[103509] call_tmp[589654])
        }
        label _unused_continueLabel[103560]
        label _breakLabel[103559]
      }
      (465994 'move' ret[465989](465993 'deref' sum[103509]))
      gotoReturn _end_getDataIndex[465987] _end_getDataIndex[465987]
    }
    {
      unknown tmp[398367] "maybe param" "temp"
      (398378 'move' tmp[398367] getShifted[103501])
      unknown call_tmp[589659] "expr temp" "maybe param" "maybe type" "temp"
      (589662 'move' call_tmp[589659](398380 call _cond_invalid tmp[398367]))
      if call_tmp[589659]
      {
        (398383 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown wantShiftedIndex[103596] "param"
      unknown tmp[511210] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511211] "maybe param" "temp"
      unknown call_tmp[589664] "expr temp" "maybe param" "maybe type" "temp"
      (589667 'move' call_tmp[589664](398368 call isTrue tmp[398367]))
      (511216 'move' tmp[511211](511214 call _cond_test call_tmp[589664]))
      if tmp[511211]
      {
        unknown tmp[511218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (511220 'move' tmp[511218](398371 call isTrue earlyShiftData[92605]))
        (511225 'move' tmp[511210](511222 '_paramFoldLogical' tmp[511211] tmp[511218]))
      }
      {
        (511230 'move' tmp[511210](511227 '_paramFoldLogical' tmp[511211] 0))
      }
      (490788 'init var' wantShiftedIndex[103596] tmp[511210])
      unknown tmp[398388] "maybe param" "temp"
      unknown call_tmp[589671] "expr temp" "maybe param" "maybe type" "temp"
      (589674 'move' call_tmp[589671](348857 call rank _mt[232] this[105246]))
      (398399 'move' tmp[398388](103602 call == call_tmp[589671] 1))
      unknown call_tmp[589676] "expr temp" "maybe param" "maybe type" "temp"
      (589679 'move' call_tmp[589676](398401 call _cond_invalid tmp[398388]))
      if call_tmp[589676]
      {
        (398404 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[511237] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511238] "maybe param" "temp"
      unknown call_tmp[589681] "expr temp" "maybe param" "maybe type" "temp"
      (589684 'move' call_tmp[589681](398389 call isTrue tmp[398388]))
      (511243 'move' tmp[511238](511241 call _cond_test call_tmp[589681]))
      if tmp[511238]
      {
        unknown tmp[511245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (511247 'move' tmp[511245](398392 call isTrue wantShiftedIndex[103596]))
        (511252 'move' tmp[511237](511249 '_paramFoldLogical' tmp[511238] tmp[511245]))
      }
      {
        (511257 'move' tmp[511237](511254 '_paramFoldLogical' tmp[511238] 0))
      }
      unknown call_tmp[589686] "expr temp" "maybe param" "maybe type" "temp"
      (589689 'move' call_tmp[589686](103894 call _cond_test tmp[511237]))
      if call_tmp[589686]
      {
        unknown call_tmp[589691] "expr temp" "maybe param" "maybe type" "temp"
        (589694 'move' call_tmp[589691](103611 call ind[103495] 1))
        unknown call_tmp[589696] "expr temp" "maybe param" "maybe type" "temp"
        (589699 'move' call_tmp[589696](103613 call chpl__idxToInt call_tmp[589691]))
        (465999 'move' ret[465989](465998 'deref' call_tmp[589696]))
        gotoReturn _end_getDataIndex[465987] _end_getDataIndex[465987]
      }
      {
        unknown call_tmp[589703] "expr temp" "maybe param" "maybe type" "temp"
        (589706 'move' call_tmp[589703](348863 call intIdxType _mt[232] this[105246]))
        unknown call_tmp[589708] "maybe param" "maybe type" "temp"
        (589711 'move' call_tmp[589708](103619 call _cast call_tmp[589703] 0))
        unknown sum[103621] "insert auto destroy"
        (490790 'init var' sum[103621] call_tmp[589708])
        unknown useInd[103626] "insert auto destroy"
        (490792 'init var' useInd[103626] ind[103495])
        unknown useOffset[103631] "insert auto destroy"
        (490794 'init var' useOffset[103631] 0 int(64)[13])
        unknown call_tmp[589715] "maybe param" "maybe type" "temp"
        (589718 'move' call_tmp[589715](348869 call sizesPerDim _mt[232] this[105246]))
        unknown useSizesPerDim[103635] "insert auto destroy"
        (490796 'init var' useSizesPerDim[103635] call_tmp[589715])
        unknown call_tmp[589720] "expr temp" "maybe param" "maybe type" "temp"
        (589723 'move' call_tmp[589720](103890 call _cond_test usePollyArrayIndex[92609]))
        if call_tmp[589720]
        {
          unknown call_tmp[589725] "expr temp" "maybe param" "maybe type" "temp"
          (589728 'move' call_tmp[589725](103640 call ! wantShiftedIndex[103596]))
          unknown call_tmp[589730] "expr temp" "maybe param" "maybe type" "temp"
          (589733 'move' call_tmp[589730](103705 call _cond_test call_tmp[589725]))
          if call_tmp[589730]
          {
            {
              unknown i[103670] "insert auto destroy"
              (490798 'init var' i[103670] 0)
              unknown tmp[103671] "maybe param" "temp"
              unknown call_tmp[589737] "expr temp" "maybe param" "maybe type" "temp"
              (589740 'move' call_tmp[589737](348876 call rank _mt[232] this[105246]))
              (103683 'move' tmp[103671](103681 call chpl_compute_low_param_loop_bound 1 call_tmp[589737]))
              unknown tmp[103672] "maybe param" "temp"
              unknown call_tmp[589744] "expr temp" "maybe param" "maybe type" "temp"
              (589747 'move' call_tmp[589744](348891 call rank _mt[232] this[105246]))
              (103690 'move' tmp[103672](103688 call chpl_compute_high_param_loop_bound 1 call_tmp[589744]))
              unknown tmp[103673] "maybe param" "temp"
              (103693 'move' tmp[103673] 1)
              ParamForLoop
              { i[103670] tmp[103671] tmp[103672] tmp[103673]
                {
                  unknown call_tmp[589749] "expr temp" "maybe param" "maybe type" "temp"
                  (589752 'move' call_tmp[589749](103649 call useInd[103626] i[103670]))
                  unknown call_tmp[589754] "expr temp" "maybe param" "maybe type" "temp"
                  (589757 'move' call_tmp[589754](103654 call useInd[103626] i[103670]))
                  unknown call_tmp[589759] "expr temp" "maybe param" "maybe type" "temp"
                  (589762 'move' call_tmp[589759](103656 call chpl__idxToInt call_tmp[589754]))
                  unknown call_tmp[589766] "expr temp" "maybe param" "maybe type" "temp"
                  (589769 'move' call_tmp[589766](103661 call(348885 call (partial) off _mt[232] this[105246]) i[103670]))
                  unknown call_tmp[589771] "expr temp" "maybe param" "maybe type" "temp"
                  (589774 'move' call_tmp[589771](103663 call chpl__idxToInt call_tmp[589766]))
                  unknown call_tmp[589776] "expr temp" "maybe param" "maybe type" "temp"
                  (589779 'move' call_tmp[589776](103664 call - call_tmp[589759] call_tmp[589771]))
                  (103666 call = call_tmp[589749] call_tmp[589776])
                }
              }
              label _unused_continueLabel[103675]
              label _breakLabel[103674]
            }
          }
          unknown call_tmp[589781] "expr temp" "maybe param" "maybe type" "temp"
          (589784 'move' call_tmp[589781](103717 call polly_array_index useOffset[103631](103714 'expand_tuple' useSizesPerDim[103635])(103716 'expand_tuple' useInd[103626])))
          (466004 'move' ret[465989](466003 'deref' call_tmp[589781]))
          gotoReturn _end_getDataIndex[465987] _end_getDataIndex[465987]
        }
        {
          unknown call_tmp[589786] "expr temp" "maybe param" "maybe type" "temp"
          (589789 'move' call_tmp[589786](103725 call == storageOrder[92630] RMO[92613]))
          unknown call_tmp[589791] "expr temp" "maybe param" "maybe type" "temp"
          (589794 'move' call_tmp[589791](103869 call _cond_test call_tmp[589786]))
          if call_tmp[589791]
          {
            {
              unknown i[103752] "insert auto destroy"
              (490800 'init var' i[103752] 0)
              unknown tmp[103753] "maybe param" "temp"
              unknown call_tmp[589798] "expr temp" "maybe param" "maybe type" "temp"
              (589801 'move' call_tmp[589798](348901 call rank _mt[232] this[105246]))
              unknown call_tmp[589803] "expr temp" "maybe param" "maybe type" "temp"
              (589806 'move' call_tmp[589803](103730 call - call_tmp[589798] 1))
              (103765 'move' tmp[103753](103763 call chpl_compute_low_param_loop_bound 1 call_tmp[589803]))
              unknown tmp[103754] "maybe param" "temp"
              unknown call_tmp[589810] "expr temp" "maybe param" "maybe type" "temp"
              (589813 'move' call_tmp[589810](348915 call rank _mt[232] this[105246]))
              unknown call_tmp[589815] "expr temp" "maybe param" "maybe type" "temp"
              (589818 'move' call_tmp[589815](103770 call - call_tmp[589810] 1))
              (103775 'move' tmp[103754](103773 call chpl_compute_high_param_loop_bound 1 call_tmp[589815]))
              unknown tmp[103755] "maybe param" "temp"
              (103778 'move' tmp[103755] 1)
              ParamForLoop
              { i[103752] tmp[103753] tmp[103754] tmp[103755]
                {
                  unknown call_tmp[589820] "expr temp" "maybe param" "maybe type" "temp"
                  (589823 'move' call_tmp[589820](103739 call ind[103495] i[103752]))
                  unknown call_tmp[589825] "expr temp" "maybe param" "maybe type" "temp"
                  (589828 'move' call_tmp[589825](103741 call chpl__idxToInt call_tmp[589820]))
                  unknown call_tmp[589832] "expr temp" "maybe param" "maybe type" "temp"
                  (589835 'move' call_tmp[589832](103745 call(348909 call (partial) blk _mt[232] this[105246]) i[103752]))
                  unknown call_tmp[589837] "expr temp" "maybe param" "maybe type" "temp"
                  (589840 'move' call_tmp[589837](103746 call * call_tmp[589825] call_tmp[589832]))
                  (103748 call += sum[103621] call_tmp[589837])
                }
              }
              label _unused_continueLabel[103757]
              label _breakLabel[103756]
            }
            unknown call_tmp[589844] "expr temp" "maybe param" "maybe type" "temp"
            (589847 'move' call_tmp[589844](348922 call rank _mt[232] this[105246]))
            unknown call_tmp[589849] "expr temp" "maybe param" "maybe type" "temp"
            (589852 'move' call_tmp[589849](103795 call ind[103495] call_tmp[589844]))
            unknown call_tmp[589854] "expr temp" "maybe param" "maybe type" "temp"
            (589857 'move' call_tmp[589854](103797 call chpl__idxToInt call_tmp[589849]))
            (103798 call += sum[103621] call_tmp[589854])
          }
          {
            {
              unknown i[103823] "insert auto destroy"
              (490802 'init var' i[103823] 0)
              unknown tmp[103824] "maybe param" "temp"
              unknown call_tmp[589861] "expr temp" "maybe param" "maybe type" "temp"
              (589864 'move' call_tmp[589861](348927 call rank _mt[232] this[105246]))
              (103836 'move' tmp[103824](103834 call chpl_compute_low_param_loop_bound 2 call_tmp[589861]))
              unknown tmp[103825] "maybe param" "temp"
              unknown call_tmp[589868] "expr temp" "maybe param" "maybe type" "temp"
              (589871 'move' call_tmp[589868](348941 call rank _mt[232] this[105246]))
              (103843 'move' tmp[103825](103841 call chpl_compute_high_param_loop_bound 2 call_tmp[589868]))
              unknown tmp[103826] "maybe param" "temp"
              (103846 'move' tmp[103826] 1)
              ParamForLoop
              { i[103823] tmp[103824] tmp[103825] tmp[103826]
                {
                  unknown call_tmp[589873] "expr temp" "maybe param" "maybe type" "temp"
                  (589876 'move' call_tmp[589873](103810 call ind[103495] i[103823]))
                  unknown call_tmp[589878] "expr temp" "maybe param" "maybe type" "temp"
                  (589881 'move' call_tmp[589878](103812 call chpl__idxToInt call_tmp[589873]))
                  unknown call_tmp[589885] "expr temp" "maybe param" "maybe type" "temp"
                  (589888 'move' call_tmp[589885](103816 call(348935 call (partial) blk _mt[232] this[105246]) i[103823]))
                  unknown call_tmp[589890] "expr temp" "maybe param" "maybe type" "temp"
                  (589893 'move' call_tmp[589890](103817 call * call_tmp[589878] call_tmp[589885]))
                  (103819 call += sum[103621] call_tmp[589890])
                }
              }
              label _unused_continueLabel[103828]
              label _breakLabel[103827]
            }
            unknown call_tmp[589895] "expr temp" "maybe param" "maybe type" "temp"
            (589898 'move' call_tmp[589895](103863 call ind[103495] 1))
            unknown call_tmp[589900] "expr temp" "maybe param" "maybe type" "temp"
            (589903 'move' call_tmp[589900](103865 call chpl__idxToInt call_tmp[589895]))
            (103866 call += sum[103621] call_tmp[589900])
          }
          unknown call_tmp[589905] "expr temp" "maybe param" "maybe type" "temp"
          (589908 'move' call_tmp[589905](103875 call ! wantShiftedIndex[103596]))
          unknown call_tmp[589910] "expr temp" "maybe param" "maybe type" "temp"
          (589913 'move' call_tmp[589910](103882 call _cond_test call_tmp[589905]))
          if call_tmp[589910]
          {
            unknown call_tmp[589917] "expr temp" "maybe param" "maybe type" "temp"
            (589920 'move' call_tmp[589917](348950 call factoredOffs _mt[232] this[105246]))
            (103879 call -= sum[103621] call_tmp[589917])
          }
          (466009 'move' ret[465989](466008 'deref' sum[103621]))
          gotoReturn _end_getDataIndex[465987] _end_getDataIndex[465987]
        }
      }
    }
    label _end_getDataIndex[465987]
    (465991 return ret[465989])
  }
  function DefaultRectangularArr[105188](?).dsiAccess[103913](arg _mt[105252]:_MT[227], arg this[105250]:DefaultRectangularArr[105188](?), arg ind[103909] ... :
  (348956 call idxType _mt[232] this[105250])) ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466015] "RVV" "temp"
    unknown call_tmp[589926] "expr temp" "maybe param" "maybe type" "temp"
    (589929 'move' call_tmp[589926](103922 call(348965 call (partial) dsiAccess _mt[232] this[105250]) ind[103909]))
    (466020 'move' ret[466015](466019 'addr of' call_tmp[589926]))
    (466017 return ret[466015])
  }
  where {
    unknown call_tmp[589933] "expr temp" "maybe param" "maybe type" "temp"
    (589936 'move' call_tmp[589933](348961 call rank _mt[232] this[105250]))
    (103917 call == call_tmp[589933] 1)
  }
  function DefaultRectangularArr[105188](?).dsiAccess[103937](arg _mt[105256]:_MT[227], arg this[105254]:DefaultRectangularArr[105188](?), arg ind[103933] ... :
  (348971 call idxType _mt[232] this[105254])) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466024] "RVV" "temp"
    unknown call_tmp[589942] "expr temp" "maybe param" "maybe type" "temp"
    (589945 'move' call_tmp[589942](103952 call(348985 call (partial) dsiAccess _mt[232] this[105254]) ind[103933]))
    (466029 'move' ret[466024](466028 'deref' call_tmp[589942]))
    (466026 return ret[466024])
  }
  where {
    unknown tmp[398409] "maybe param" "temp"
    unknown call_tmp[589949] "expr temp" "maybe param" "maybe type" "temp"
    (589952 'move' call_tmp[589949](348976 call rank _mt[232] this[105254]))
    (398420 'move' tmp[398409](103941 call == call_tmp[589949] 1))
    unknown call_tmp[589954] "expr temp" "maybe param" "maybe type" "temp"
    (589957 'move' call_tmp[589954](398422 call _cond_invalid tmp[398409]))
    if call_tmp[589954]
    {
      (398425 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511264] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511265] "maybe param" "temp"
    unknown call_tmp[589959] "expr temp" "maybe param" "maybe type" "temp"
    (589962 'move' call_tmp[589959](398410 call isTrue tmp[398409]))
    (511270 'move' tmp[511265](511268 call _cond_test call_tmp[589959]))
    if tmp[511265]
    {
      unknown tmp[511272] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[589966] "expr temp" "maybe param" "maybe type" "temp"
      (589969 'move' call_tmp[589966](348981 call eltType _mt[232] this[105254]))
      unknown call_tmp[589971] "expr temp" "maybe param" "maybe type" "temp"
      (589974 'move' call_tmp[589971](103946 call shouldReturnRvalueByValue call_tmp[589966]))
      (511274 'move' tmp[511272](398413 call isTrue call_tmp[589971]))
      (511279 'move' tmp[511264](511276 '_paramFoldLogical' tmp[511265] tmp[511272]))
    }
    {
      (511284 'move' tmp[511264](511281 '_paramFoldLogical' tmp[511265] 0))
    }
    (691843 call _statementLevelSymbol tmp[511264])
  }
  function DefaultRectangularArr[105188](?).dsiAccess[103967](arg _mt[105260]:_MT[227], arg this[105258]:DefaultRectangularArr[105188](?), arg ind[103963] ... :
  (348991 call idxType _mt[232] this[105258])) const ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466033] "RVV" "temp"
    unknown call_tmp[589980] "expr temp" "maybe param" "maybe type" "temp"
    (589983 'move' call_tmp[589980](103982 call(349005 call (partial) dsiAccess _mt[232] this[105258]) ind[103963]))
    (466038 'move' ret[466033](466037 'addr of' call_tmp[589980]))
    (466035 return ret[466033])
  }
  where {
    unknown tmp[398430] "maybe param" "temp"
    unknown call_tmp[589987] "expr temp" "maybe param" "maybe type" "temp"
    (589990 'move' call_tmp[589987](348996 call rank _mt[232] this[105258]))
    (398441 'move' tmp[398430](103971 call == call_tmp[589987] 1))
    unknown call_tmp[589992] "expr temp" "maybe param" "maybe type" "temp"
    (589995 'move' call_tmp[589992](398443 call _cond_invalid tmp[398430]))
    if call_tmp[589992]
    {
      (398446 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511291] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511292] "maybe param" "temp"
    unknown call_tmp[589997] "expr temp" "maybe param" "maybe type" "temp"
    (590000 'move' call_tmp[589997](398431 call isTrue tmp[398430]))
    (511297 'move' tmp[511292](511295 call _cond_test call_tmp[589997]))
    if tmp[511292]
    {
      unknown tmp[511299] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[590004] "expr temp" "maybe param" "maybe type" "temp"
      (590007 'move' call_tmp[590004](349001 call eltType _mt[232] this[105258]))
      unknown call_tmp[590009] "expr temp" "maybe param" "maybe type" "temp"
      (590012 'move' call_tmp[590009](103976 call shouldReturnRvalueByConstRef call_tmp[590004]))
      (511301 'move' tmp[511299](398434 call isTrue call_tmp[590009]))
      (511306 'move' tmp[511291](511303 '_paramFoldLogical' tmp[511292] tmp[511299]))
    }
    {
      (511311 'move' tmp[511291](511308 '_paramFoldLogical' tmp[511292] 0))
    }
    (691845 call _statementLevelSymbol tmp[511291])
  }
  function DefaultRectangularArr[105188](?).dsiAccess[103998](arg _mt[105264]:_MT[227], arg this[105262]:DefaultRectangularArr[105188](?), arg ind[103995] :
  unknown call_tmp[590016] "expr temp" "maybe param" "maybe type" "temp") ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466042] "RVV" "temp"
    unknown call_tmp[590028] "expr temp" "maybe param" "maybe type" "temp"
    (590031 'move' call_tmp[590028](104043 call _cond_test 1))
    if call_tmp[590028]
    {
      unknown call_tmp[590035] "expr temp" "maybe param" "maybe type" "temp"
      (590038 'move' call_tmp[590035](349022 call dom _mt[232] this[105262]))
      unknown call_tmp[590042] "expr temp" "maybe param" "maybe type" "temp"
      (590045 'move' call_tmp[590042](104009 call(104004 call (partial) dsiMember _mt[232] call_tmp[590035]) ind[103995]))
      unknown call_tmp[590047] "expr temp" "maybe param" "maybe type" "temp"
      (590050 'move' call_tmp[590047](104010 call ! call_tmp[590042]))
      unknown call_tmp[590052] "expr temp" "maybe param" "maybe type" "temp"
      (590055 'move' call_tmp[590052](104039 call _cond_test call_tmp[590047]))
      if call_tmp[590052]
      {
        unknown call_tmp[590057] "expr temp" "maybe param" "maybe type" "temp"
        (590060 'move' call_tmp[590057](104032 call _stringify_tuple ind[103995]))
        unknown call_tmp[590062] "expr temp" "maybe param" "maybe type" "temp"
        (590065 'move' call_tmp[590062](104033 call + "array index out of bounds: " call_tmp[590057]))
        (104036 call halt call_tmp[590062])
      }
    }
    unknown call_tmp[590069] "maybe param" "maybe type" "temp"
    (590072 'move' call_tmp[590069](104052 call(349028 call (partial) getDataIndex _mt[232] this[105262]) ind[103995]))
    unknown dataInd[104053] "insert auto destroy"
    (490804 'init var' dataInd[104053] call_tmp[590069])
    unknown call_tmp[590076] "expr temp" "maybe param" "maybe type" "temp"
    (590079 'move' call_tmp[590076](104059 call(349033 call (partial) theData _mt[232] this[105262]) dataInd[104053]))
    (466047 'move' ret[466042](466046 'addr of' call_tmp[590076]))
    (466044 return ret[466042])
  }
  function DefaultRectangularArr[105188](?).dsiAccess[104073](arg _mt[105268]:_MT[227], arg this[105266]:DefaultRectangularArr[105188](?), arg ind[104070] :
  unknown call_tmp[590083] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466051] "RVV" "temp"
    unknown call_tmp[590095] "expr temp" "maybe param" "maybe type" "temp"
    (590098 'move' call_tmp[590095](104105 call _cond_test 1))
    if call_tmp[590095]
    {
      unknown call_tmp[590102] "expr temp" "maybe param" "maybe type" "temp"
      (590105 'move' call_tmp[590102](349055 call dom _mt[232] this[105266]))
      unknown call_tmp[590109] "expr temp" "maybe param" "maybe type" "temp"
      (590112 'move' call_tmp[590109](104086 call(104081 call (partial) dsiMember _mt[232] call_tmp[590102]) ind[104070]))
      unknown call_tmp[590114] "expr temp" "maybe param" "maybe type" "temp"
      (590117 'move' call_tmp[590114](104087 call ! call_tmp[590109]))
      unknown call_tmp[590119] "expr temp" "maybe param" "maybe type" "temp"
      (590122 'move' call_tmp[590119](104101 call _cond_test call_tmp[590114]))
      if call_tmp[590119]
      {
        unknown call_tmp[590124] "expr temp" "maybe param" "maybe type" "temp"
        (590127 'move' call_tmp[590124](104094 call _stringify_tuple ind[104070]))
        unknown call_tmp[590129] "expr temp" "maybe param" "maybe type" "temp"
        (590132 'move' call_tmp[590129](104095 call + "array index out of bounds: " call_tmp[590124]))
        (104098 call halt call_tmp[590129])
      }
    }
    unknown call_tmp[590136] "maybe param" "maybe type" "temp"
    (590139 'move' call_tmp[590136](104114 call(349061 call (partial) getDataIndex _mt[232] this[105266]) ind[104070]))
    unknown dataInd[104115] "insert auto destroy"
    (490806 'init var' dataInd[104115] call_tmp[590136])
    unknown call_tmp[590143] "expr temp" "maybe param" "maybe type" "temp"
    (590146 'move' call_tmp[590143](104121 call(349066 call (partial) theData _mt[232] this[105266]) dataInd[104115]))
    (466056 'move' ret[466051](466055 'deref' call_tmp[590143]))
    (466053 return ret[466051])
  }
  where {
    unknown call_tmp[590150] "expr temp" "maybe param" "maybe type" "temp"
    (590153 'move' call_tmp[590150](349049 call eltType _mt[232] this[105266]))
    (104078 call shouldReturnRvalueByValue call_tmp[590150])
  }
  function DefaultRectangularArr[105188](?).dsiAccess[104136](arg _mt[105272]:_MT[227], arg this[105270]:DefaultRectangularArr[105188](?), arg ind[104133] :
  unknown call_tmp[590157] "expr temp" "maybe param" "maybe type" "temp") const ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466060] "RVV" "temp"
    unknown call_tmp[590169] "expr temp" "maybe param" "maybe type" "temp"
    (590172 'move' call_tmp[590169](104168 call _cond_test 1))
    if call_tmp[590169]
    {
      unknown call_tmp[590176] "expr temp" "maybe param" "maybe type" "temp"
      (590179 'move' call_tmp[590176](349088 call dom _mt[232] this[105270]))
      unknown call_tmp[590183] "expr temp" "maybe param" "maybe type" "temp"
      (590186 'move' call_tmp[590183](104149 call(104144 call (partial) dsiMember _mt[232] call_tmp[590176]) ind[104133]))
      unknown call_tmp[590188] "expr temp" "maybe param" "maybe type" "temp"
      (590191 'move' call_tmp[590188](104150 call ! call_tmp[590183]))
      unknown call_tmp[590193] "expr temp" "maybe param" "maybe type" "temp"
      (590196 'move' call_tmp[590193](104164 call _cond_test call_tmp[590188]))
      if call_tmp[590193]
      {
        unknown call_tmp[590198] "expr temp" "maybe param" "maybe type" "temp"
        (590201 'move' call_tmp[590198](104157 call _stringify_tuple ind[104133]))
        unknown call_tmp[590203] "expr temp" "maybe param" "maybe type" "temp"
        (590206 'move' call_tmp[590203](104158 call + "array index out of bounds: " call_tmp[590198]))
        (104161 call halt call_tmp[590203])
      }
    }
    unknown call_tmp[590210] "maybe param" "maybe type" "temp"
    (590213 'move' call_tmp[590210](104177 call(349094 call (partial) getDataIndex _mt[232] this[105270]) ind[104133]))
    unknown dataInd[104178] "insert auto destroy"
    (490808 'init var' dataInd[104178] call_tmp[590210])
    unknown call_tmp[590217] "expr temp" "maybe param" "maybe type" "temp"
    (590220 'move' call_tmp[590217](104184 call(349099 call (partial) theData _mt[232] this[105270]) dataInd[104178]))
    (466065 'move' ret[466060](466064 'addr of' call_tmp[590217]))
    (466062 return ret[466060])
  }
  where {
    unknown call_tmp[590224] "expr temp" "maybe param" "maybe type" "temp"
    (590227 'move' call_tmp[590224](349082 call eltType _mt[232] this[105270]))
    (104141 call shouldReturnRvalueByConstRef call_tmp[590224])
  }
  function DefaultRectangularArr[105188](?).dsiLocalAccess[104194](arg _mt[105276]:_MT[227], arg this[105274]:DefaultRectangularArr[105188](?), arg i[104192]:_any[170](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466069] "RVV" "temp"
    unknown call_tmp[590231] "expr temp" "maybe param" "maybe type" "temp"
    (590234 'move' call_tmp[590231](104199 call(349104 call (partial) dsiAccess _mt[232] this[105274]) i[104192]))
    (466074 'move' ret[466069](466073 'addr of' call_tmp[590231]))
    (466071 return ret[466069])
  }
  function DefaultRectangularArr[105188](?).dsiLocalAccess[104209](arg _mt[105280]:_MT[227], arg this[105278]:DefaultRectangularArr[105188](?), arg i[104207]:_any[170](?)) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466078] "RVV" "temp"
    unknown call_tmp[590238] "expr temp" "maybe param" "maybe type" "temp"
    (590241 'move' call_tmp[590238](104218 call(349114 call (partial) dsiAccess _mt[232] this[105278]) i[104207]))
    (466083 'move' ret[466078](466082 'deref' call_tmp[590238]))
    (466080 return ret[466078])
  }
  where {
    unknown call_tmp[590245] "expr temp" "maybe param" "maybe type" "temp"
    (590248 'move' call_tmp[590245](349110 call eltType _mt[232] this[105278]))
    (104214 call shouldReturnRvalueByValue call_tmp[590245])
  }
  function DefaultRectangularArr[105188](?).dsiLocalAccess[104229](arg _mt[105284]:_MT[227], arg this[105282]:DefaultRectangularArr[105188](?), arg i[104227]:_any[170](?)) const ref : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[466087] "RVV" "temp"
    unknown call_tmp[590252] "expr temp" "maybe param" "maybe type" "temp"
    (590255 'move' call_tmp[590252](104238 call(349124 call (partial) dsiAccess _mt[232] this[105282]) i[104227]))
    (466092 'move' ret[466087](466091 'addr of' call_tmp[590252]))
    (466089 return ret[466087])
  }
  where {
    unknown call_tmp[590259] "expr temp" "maybe param" "maybe type" "temp"
    (590262 'move' call_tmp[590259](349120 call eltType _mt[232] this[105282]))
    (104234 call shouldReturnRvalueByConstRef call_tmp[590259])
  }
  function DefaultRectangularArr[105188](?).adjustBlkOffStrForNewDomain[104252](arg _mt[105288]:_MT[227], arg this[105286]:DefaultRectangularArr[105188](?), arg d[104249]:unmanaged DefaultRectangularDom[389799](?), arg alias[104256]:unmanaged DefaultRectangularArr[389855](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    {
      unknown i[104437] "insert auto destroy"
      (490810 'init var' i[104437] 0)
      unknown tmp[104438] "maybe param" "temp"
      unknown call_tmp[590266] "expr temp" "maybe param" "maybe type" "temp"
      (590269 'move' call_tmp[590266](349132 call rank _mt[232] this[105286]))
      (104450 'move' tmp[104438](104448 call chpl_compute_low_param_loop_bound 1 call_tmp[590266]))
      unknown tmp[104439] "maybe param" "temp"
      unknown call_tmp[590273] "expr temp" "maybe param" "maybe type" "temp"
      (590276 'move' call_tmp[590273](349221 call rank _mt[232] this[105286]))
      (104457 'move' tmp[104439](104455 call chpl_compute_high_param_loop_bound 1 call_tmp[590273]))
      unknown tmp[104440] "maybe param" "temp"
      (104460 'move' tmp[104440] 1)
      ParamForLoop
      { i[104437] tmp[104438] tmp[104439] tmp[104440]
        {
          unknown s[104264] "insert auto destroy"
          unknown call_tmp[590280] "expr temp" "maybe param" "maybe type" "temp"
          (590283 'move' call_tmp[590280](349137 call idxType _mt[232] this[105286]))
          (490812 'default init var' s[104264] call_tmp[590280])
          unknown call_tmp[590287] "expr temp" "maybe param" "maybe type" "temp"
          (590290 'move' call_tmp[590287](349142 call idxSignedType _mt[232] this[105286]))
          unknown call_tmp[590294] "expr temp" "maybe param" "maybe type" "temp"
          (590297 'move' call_tmp[590294](349147 call idxType _mt[232] this[105286]))
          unknown call_tmp[590299] "expr temp" "maybe param" "maybe type" "temp"
          (590302 'move' call_tmp[590299](104270 call == call_tmp[590287] call_tmp[590294]))
          unknown call_tmp[590304] "expr temp" "maybe param" "maybe type" "temp"
          (590307 'move' call_tmp[590304](104376 call _cond_test call_tmp[590299]))
          if call_tmp[590304]
          {
            unknown call_tmp[590311] "expr temp" "maybe param" "maybe type" "temp"
            (590314 'move' call_tmp[590311](104290 call idxType _mt[232] d[104249]))
            unknown call_tmp[590318] "expr temp" "maybe param" "maybe type" "temp"
            (590321 'move' call_tmp[590318](349153 call dom _mt[232] this[105286]))
            unknown call_tmp[590325] "expr temp" "maybe param" "maybe type" "temp"
            (590328 'move' call_tmp[590325](104279 call(104274 call (partial) dsiDim _mt[232] call_tmp[590318]) i[104437]))
            unknown call_tmp[590332] "expr temp" "maybe param" "maybe type" "temp"
            (590335 'move' call_tmp[590332](104280 call stride _mt[232] call_tmp[590325]))
            unknown call_tmp[590339] "expr temp" "maybe param" "maybe type" "temp"
            (590342 'move' call_tmp[590339](104286 call(349159 call (partial) str _mt[232] this[105286]) i[104437]))
            unknown call_tmp[590344] "expr temp" "maybe param" "maybe type" "temp"
            (590347 'move' call_tmp[590344](104287 call / call_tmp[590332] call_tmp[590339]))
            unknown call_tmp[590349] "expr temp" "maybe param" "maybe type" "temp"
            (590352 'move' call_tmp[590349](104293 call _cast call_tmp[590311] call_tmp[590344]))
            (104295 call = s[104264] call_tmp[590349])
          }
          {
            unknown tmp[398451] "maybe param" "temp"
            unknown tmp[398472] "maybe param" "temp"
            unknown call_tmp[590356] "expr temp" "maybe param" "maybe type" "temp"
            (590359 'move' call_tmp[590356](349166 call dom _mt[232] this[105286]))
            unknown call_tmp[590363] "expr temp" "maybe param" "maybe type" "temp"
            (590366 'move' call_tmp[590363](104306 call(104301 call (partial) dsiDim _mt[232] call_tmp[590356]) i[104437]))
            unknown call_tmp[590370] "expr temp" "maybe param" "maybe type" "temp"
            (590373 'move' call_tmp[590370](104307 call stride _mt[232] call_tmp[590363]))
            (398483 'move' tmp[398472](104311 call < call_tmp[590370] 0))
            unknown call_tmp[590375] "expr temp" "maybe param" "maybe type" "temp"
            (590378 'move' call_tmp[590375](398485 call _cond_invalid tmp[398472]))
            if call_tmp[590375]
            {
              (398488 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[511318] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[511319] "maybe param" "temp"
            unknown call_tmp[590380] "expr temp" "maybe param" "maybe type" "temp"
            (590383 'move' call_tmp[590380](398473 call isTrue tmp[398472]))
            (511324 'move' tmp[511319](511322 call _cond_test call_tmp[590380]))
            if tmp[511319]
            {
              unknown tmp[511326] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[590387] "expr temp" "maybe param" "maybe type" "temp"
              (590390 'move' call_tmp[590387](104316 call(349172 call (partial) str _mt[232] this[105286]) i[104437]))
              unknown call_tmp[590392] "expr temp" "maybe param" "maybe type" "temp"
              (590395 'move' call_tmp[590392](104318 call < call_tmp[590387] 0))
              (511328 'move' tmp[511326](398476 call isTrue call_tmp[590392]))
              (511333 'move' tmp[511318](511330 '_paramFoldLogical' tmp[511319] tmp[511326]))
            }
            {
              (511338 'move' tmp[511318](511335 '_paramFoldLogical' tmp[511319] 0))
            }
            (398462 'move' tmp[398451] tmp[511318])
            unknown call_tmp[590397] "expr temp" "maybe param" "maybe type" "temp"
            (590400 'move' call_tmp[590397](398464 call _cond_invalid tmp[398451]))
            if call_tmp[590397]
            {
              (398467 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[511372] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[511373] "maybe param" "temp"
            unknown call_tmp[590402] "expr temp" "maybe param" "maybe type" "temp"
            (590405 'move' call_tmp[590402](398452 call isTrue tmp[398451]))
            (511378 'move' tmp[511373](511376 call _cond_test call_tmp[590402]))
            if tmp[511373]
            {
              (511383 'move' tmp[511372](511380 '_paramFoldLogical' tmp[511373] 1))
            }
            {
              unknown tmp[398493] "maybe param" "temp"
              unknown call_tmp[590409] "expr temp" "maybe param" "maybe type" "temp"
              (590412 'move' call_tmp[590409](349178 call dom _mt[232] this[105286]))
              unknown call_tmp[590416] "expr temp" "maybe param" "maybe type" "temp"
              (590419 'move' call_tmp[590416](104328 call(104323 call (partial) dsiDim _mt[232] call_tmp[590409]) i[104437]))
              unknown call_tmp[590423] "expr temp" "maybe param" "maybe type" "temp"
              (590426 'move' call_tmp[590423](104329 call stride _mt[232] call_tmp[590416]))
              (398504 'move' tmp[398493](104333 call > call_tmp[590423] 0))
              unknown call_tmp[590428] "expr temp" "maybe param" "maybe type" "temp"
              (590431 'move' call_tmp[590428](398506 call _cond_invalid tmp[398493]))
              if call_tmp[590428]
              {
                (398509 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[511345] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[511346] "maybe param" "temp"
              unknown call_tmp[590433] "expr temp" "maybe param" "maybe type" "temp"
              (590436 'move' call_tmp[590433](398494 call isTrue tmp[398493]))
              (511351 'move' tmp[511346](511349 call _cond_test call_tmp[590433]))
              if tmp[511346]
              {
                unknown tmp[511353] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[590440] "expr temp" "maybe param" "maybe type" "temp"
                (590443 'move' call_tmp[590440](104338 call(349184 call (partial) str _mt[232] this[105286]) i[104437]))
                unknown call_tmp[590445] "expr temp" "maybe param" "maybe type" "temp"
                (590448 'move' call_tmp[590445](104340 call > call_tmp[590440] 0))
                (511355 'move' tmp[511353](398497 call isTrue call_tmp[590445]))
                (511360 'move' tmp[511345](511357 '_paramFoldLogical' tmp[511346] tmp[511353]))
              }
              {
                (511365 'move' tmp[511345](511362 '_paramFoldLogical' tmp[511346] 0))
              }
              unknown tmp[511385] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              (511387 'move' tmp[511385](398456 call isTrue tmp[511345]))
              (511392 'move' tmp[511372](511389 '_paramFoldLogical' tmp[511373] tmp[511385]))
            }
            (104347 call assert tmp[511372])
            unknown call_tmp[590452] "expr temp" "maybe param" "maybe type" "temp"
            (590455 'move' call_tmp[590452](104368 call idxType _mt[232] d[104249]))
            unknown call_tmp[590459] "expr temp" "maybe param" "maybe type" "temp"
            (590462 'move' call_tmp[590459](349191 call dom _mt[232] this[105286]))
            unknown call_tmp[590466] "expr temp" "maybe param" "maybe type" "temp"
            (590469 'move' call_tmp[590466](104357 call(104352 call (partial) dsiDim _mt[232] call_tmp[590459]) i[104437]))
            unknown call_tmp[590473] "expr temp" "maybe param" "maybe type" "temp"
            (590476 'move' call_tmp[590473](104358 call stride _mt[232] call_tmp[590466]))
            unknown call_tmp[590480] "expr temp" "maybe param" "maybe type" "temp"
            (590483 'move' call_tmp[590480](104364 call(349197 call (partial) str _mt[232] this[105286]) i[104437]))
            unknown call_tmp[590485] "expr temp" "maybe param" "maybe type" "temp"
            (590488 'move' call_tmp[590485](104365 call / call_tmp[590473] call_tmp[590480]))
            unknown call_tmp[590490] "expr temp" "maybe param" "maybe type" "temp"
            (590493 'move' call_tmp[590490](104371 call _cast call_tmp[590452] call_tmp[590485]))
            (104373 call = s[104264] call_tmp[590490])
          }
          unknown call_tmp[590497] "expr temp" "maybe param" "maybe type" "temp"
          (590500 'move' call_tmp[590497](104386 call(104381 call (partial) off _mt[232] alias[104256]) i[104437]))
          unknown call_tmp[590504] "expr temp" "maybe param" "maybe type" "temp"
          (590507 'move' call_tmp[590504](104393 call(104388 call (partial) dsiDim _mt[232] d[104249]) i[104437]))
          unknown call_tmp[590511] "expr temp" "maybe param" "maybe type" "temp"
          (590514 'move' call_tmp[590511](104394 call low _mt[232] call_tmp[590504]))
          (104397 call = call_tmp[590497] call_tmp[590511])
          unknown call_tmp[590518] "expr temp" "maybe param" "maybe type" "temp"
          (590521 'move' call_tmp[590518](104406 call(104401 call (partial) blk _mt[232] alias[104256]) i[104437]))
          unknown call_tmp[590525] "expr temp" "maybe param" "maybe type" "temp"
          (590528 'move' call_tmp[590525](104410 call(349210 call (partial) blk _mt[232] this[105286]) i[104437]))
          unknown call_tmp[590530] "expr temp" "maybe param" "maybe type" "temp"
          (590533 'move' call_tmp[590530](104412 call * call_tmp[590525] s[104264]))
          (104414 call = call_tmp[590518] call_tmp[590530])
          unknown call_tmp[590537] "expr temp" "maybe param" "maybe type" "temp"
          (590540 'move' call_tmp[590537](104423 call(104418 call (partial) str _mt[232] alias[104256]) i[104437]))
          unknown call_tmp[590544] "expr temp" "maybe param" "maybe type" "temp"
          (590547 'move' call_tmp[590544](104430 call(104425 call (partial) dsiDim _mt[232] d[104249]) i[104437]))
          unknown call_tmp[590551] "expr temp" "maybe param" "maybe type" "temp"
          (590554 'move' call_tmp[590551](104431 call stride _mt[232] call_tmp[590544]))
          (104434 call = call_tmp[590537] call_tmp[590551])
        }
      }
      label _unused_continueLabel[104442]
      label _breakLabel[104441]
    }
    (466094 return _void[47])
  }
  function DefaultRectangularArr[105188](?).adjustBlkOffStrForNewDomain[104481](arg _mt[105292]:_MT[227], arg this[105290]:DefaultRectangularArr[105188](?), arg d[104478]:unmanaged DefaultRectangularDom[389799](?), arg alias[104485]:unmanaged DefaultRectangularArr[389855](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    {
      unknown i[104563] "insert auto destroy"
      (490814 'init var' i[104563] 0)
      unknown tmp[104564] "maybe param" "temp"
      unknown call_tmp[590558] "expr temp" "maybe param" "maybe type" "temp"
      (590561 'move' call_tmp[590558](349234 call rank _mt[232] this[105290]))
      (104576 'move' tmp[104564](104574 call chpl_compute_low_param_loop_bound 1 call_tmp[590558]))
      unknown tmp[104565] "maybe param" "temp"
      unknown call_tmp[590565] "expr temp" "maybe param" "maybe type" "temp"
      (590568 'move' call_tmp[590565](349255 call rank _mt[232] this[105290]))
      (104583 'move' tmp[104565](104581 call chpl_compute_high_param_loop_bound 1 call_tmp[590565]))
      unknown tmp[104566] "maybe param" "temp"
      (104586 'move' tmp[104566] 1)
      ParamForLoop
      { i[104563] tmp[104564] tmp[104565] tmp[104566]
        {
          unknown call_tmp[590572] "expr temp" "maybe param" "maybe type" "temp"
          (590575 'move' call_tmp[590572](104514 call(104509 call (partial) off _mt[232] alias[104485]) i[104563]))
          unknown call_tmp[590579] "expr temp" "maybe param" "maybe type" "temp"
          (590582 'move' call_tmp[590579](104521 call(104516 call (partial) dsiDim _mt[232] d[104478]) i[104563]))
          unknown call_tmp[590586] "expr temp" "maybe param" "maybe type" "temp"
          (590589 'move' call_tmp[590586](104522 call low _mt[232] call_tmp[590579]))
          (104525 call = call_tmp[590572] call_tmp[590586])
          unknown call_tmp[590593] "expr temp" "maybe param" "maybe type" "temp"
          (590596 'move' call_tmp[590593](104535 call(104530 call (partial) blk _mt[232] alias[104485]) i[104563]))
          unknown call_tmp[590600] "expr temp" "maybe param" "maybe type" "temp"
          (590603 'move' call_tmp[590600](104539 call(349245 call (partial) blk _mt[232] this[105290]) i[104563]))
          (104540 call = call_tmp[590593] call_tmp[590600])
          unknown call_tmp[590607] "expr temp" "maybe param" "maybe type" "temp"
          (590610 'move' call_tmp[590607](104549 call(104544 call (partial) str _mt[232] alias[104485]) i[104563]))
          unknown call_tmp[590614] "expr temp" "maybe param" "maybe type" "temp"
          (590617 'move' call_tmp[590614](104556 call(104551 call (partial) dsiDim _mt[232] d[104478]) i[104563]))
          unknown call_tmp[590621] "expr temp" "maybe param" "maybe type" "temp"
          (590624 'move' call_tmp[590621](104557 call stride _mt[232] call_tmp[590614]))
          (104560 call = call_tmp[590607] call_tmp[590621])
        }
      }
      label _unused_continueLabel[104568]
      label _breakLabel[104567]
    }
    (466096 return _void[47])
  }
  where {
    unknown tmp[398514] "maybe param" "temp"
    unknown call_tmp[590628] "expr temp" "maybe param" "maybe type" "temp"
    (590631 'move' call_tmp[590628](349228 call dom _mt[232] this[105290]))
    unknown call_tmp[590635] "expr temp" "maybe param" "maybe type" "temp"
    (590638 'move' call_tmp[590635](104489 call stridable _mt[232] call_tmp[590628]))
    (398525 'move' tmp[398514](104493 call == call_tmp[590635] 0))
    unknown call_tmp[590640] "expr temp" "maybe param" "maybe type" "temp"
    (590643 'move' call_tmp[590640](398527 call _cond_invalid tmp[398514]))
    if call_tmp[590640]
    {
      (398530 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511399] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511400] "maybe param" "temp"
    unknown call_tmp[590645] "expr temp" "maybe param" "maybe type" "temp"
    (590648 'move' call_tmp[590645](398515 call isTrue tmp[398514]))
    (511405 'move' tmp[511400](511403 call _cond_test call_tmp[590645]))
    if tmp[511400]
    {
      unknown tmp[511407] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[590652] "expr temp" "maybe param" "maybe type" "temp"
      (590655 'move' call_tmp[590652](104496 call stridable _mt[232] this[105290]))
      unknown call_tmp[590657] "expr temp" "maybe param" "maybe type" "temp"
      (590660 'move' call_tmp[590657](104500 call == call_tmp[590652] 0))
      (511409 'move' tmp[511407](398518 call isTrue call_tmp[590657]))
      (511414 'move' tmp[511399](511411 '_paramFoldLogical' tmp[511400] tmp[511407]))
    }
    {
      (511419 'move' tmp[511399](511416 '_paramFoldLogical' tmp[511400] 0))
    }
    (691847 call _statementLevelSymbol tmp[511399])
  }
  function DefaultRectangularArr[105188](?).dsiReallocate[104615](arg _mt[105296]:_MT[227], arg this[105294]:DefaultRectangularArr[105188](?), arg allocBound[104612] :
  unknown call_tmp[590664] "expr temp" "maybe param" "maybe type" "temp", arg arrayBound[104626] :
  unknown call_tmp[590678] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      const tmp[104801] "const" "temp"
      unknown call_tmp[590690] "expr temp" "maybe param" "maybe type" "temp"
      (590693 'move' call_tmp[590690](104798 '_wide_get_locale' this[105294]))
      (104802 'move' tmp[104801](104799 'deref' call_tmp[590690]))
      {
        unknown call_tmp[590695] "maybe param" "maybe type" "temp"
        (590698 'move' call_tmp[590695](104636 call chpl__buildDomainExpr allocBound[104612]))
        const allocD[104638] "const" "insert auto destroy"
        (490816 'init var' allocD[104638] call_tmp[590695])
        unknown call_tmp[590702] "expr temp" "maybe param" "maybe type" "temp"
        (590705 'move' call_tmp[590702](349292 call eltType _mt[232] this[105294]))
        unknown call_tmp[590709] "expr temp" "maybe param" "maybe type" "temp"
        (590712 'move' call_tmp[590709](349297 call rank _mt[232] this[105294]))
        unknown call_tmp[590716] "expr temp" "maybe param" "maybe type" "temp"
        (590719 'move' call_tmp[590716](349302 call idxType _mt[232] this[105294]))
        unknown call_tmp[590723] "expr temp" "maybe param" "maybe type" "temp"
        (590726 'move' call_tmp[590723](104651 call _value _mt[232] allocD[104638]))
        unknown call_tmp[590730] "expr temp" "maybe param" "maybe type" "temp"
        (590733 'move' call_tmp[590730](104654 call stridable _mt[232] call_tmp[590723]))
        unknown call_tmp[590737] "expr temp" "maybe param" "maybe type" "temp"
        (590740 'move' call_tmp[590737](104659 call _value _mt[232] allocD[104638]))
        unknown call_tmp[590742] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (590745 'move' call_tmp[590742](691388 'new' anymanaged DefaultRectangularArr[347545](?)(eltType = call_tmp[590702])(rank = call_tmp[590709])(idxType = call_tmp[590716])(stridable = call_tmp[590730])(dom = call_tmp[590737])(_chpl_manager = unmanaged[209](?))))
        unknown copy[104666] "insert auto destroy"
        (490818 'init var' copy[104666] call_tmp[590742])
        unknown call_tmp[590749] "expr temp" "maybe param" "maybe type" "temp"
        (590752 'move' call_tmp[590749](349310 call dom _mt[232] this[105294]))
        unknown call_tmp[590756] "expr temp" "maybe param" "maybe type" "temp"
        (590759 'move' call_tmp[590756](104679 call(104674 call (partial) ranges _mt[232] call_tmp[590749]) 1))
        unknown call_tmp[590761] "expr temp" "maybe param" "maybe type" "temp"
        (590764 'move' call_tmp[590761](104681 call arrayBound[104626] call_tmp[590756]))
        Forall {
          induction variables:
            
            unknown i[104699] "index var" "insert auto destroy"
          iterated expressions:
            call_tmp[590761]
          shadow variables:
          forall body
          {
            unknown call_tmp[590768] "expr temp" "maybe param" "maybe type" "temp"
            (590771 'move' call_tmp[590768](104690 call(104685 call (partial) dsiAccess _mt[232] copy[104666]) i[104699]))
            unknown call_tmp[590775] "expr temp" "maybe param" "maybe type" "temp"
            (590778 'move' call_tmp[590775](104694 call(349316 call (partial) dsiAccess _mt[232] this[105294]) i[104699]))
            (104695 call = call_tmp[590768] call_tmp[590775])
          }
        }
        unknown call_tmp[590782] "expr temp" "maybe param" "maybe type" "temp"
        (590785 'move' call_tmp[590782](349322 call off _mt[232] this[105294]))
        unknown call_tmp[590789] "expr temp" "maybe param" "maybe type" "temp"
        (590792 'move' call_tmp[590789](104704 call off _mt[232] copy[104666]))
        (104707 call = call_tmp[590782] call_tmp[590789])
        unknown call_tmp[590796] "expr temp" "maybe param" "maybe type" "temp"
        (590799 'move' call_tmp[590796](349328 call blk _mt[232] this[105294]))
        unknown call_tmp[590803] "expr temp" "maybe param" "maybe type" "temp"
        (590806 'move' call_tmp[590803](104712 call blk _mt[232] copy[104666]))
        (104715 call = call_tmp[590796] call_tmp[590803])
        unknown call_tmp[590810] "expr temp" "maybe param" "maybe type" "temp"
        (590813 'move' call_tmp[590810](349334 call str _mt[232] this[105294]))
        unknown call_tmp[590817] "expr temp" "maybe param" "maybe type" "temp"
        (590820 'move' call_tmp[590817](104720 call str _mt[232] copy[104666]))
        (104723 call = call_tmp[590810] call_tmp[590817])
        unknown call_tmp[590824] "expr temp" "maybe param" "maybe type" "temp"
        (590827 'move' call_tmp[590824](349340 call factoredOffs _mt[232] this[105294]))
        unknown call_tmp[590831] "expr temp" "maybe param" "maybe type" "temp"
        (590834 'move' call_tmp[590831](104728 call factoredOffs _mt[232] copy[104666]))
        (104731 call = call_tmp[590824] call_tmp[590831])
        (104736 call(349345 call (partial) dsiDestroyArr _mt[232] this[105294]))
        unknown call_tmp[590840] "expr temp" "maybe param" "maybe type" "temp"
        (590843 'move' call_tmp[590840](349350 call data _mt[232] this[105294]))
        unknown call_tmp[590847] "expr temp" "maybe param" "maybe type" "temp"
        (590850 'move' call_tmp[590847](104740 call data _mt[232] copy[104666]))
        (104743 call = call_tmp[590840] call_tmp[590847])
        unknown tmp[398535] "maybe param" "temp"
        (398546 'move' tmp[398535] earlyShiftData[92605])
        unknown call_tmp[590852] "expr temp" "maybe param" "maybe type" "temp"
        (590855 'move' call_tmp[590852](398548 call _cond_invalid tmp[398535]))
        if call_tmp[590852]
        {
          (398551 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[511426] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511427] "maybe param" "temp"
        unknown call_tmp[590857] "expr temp" "maybe param" "maybe type" "temp"
        (590860 'move' call_tmp[590857](398536 call isTrue tmp[398535]))
        (511432 'move' tmp[511427](511430 call _cond_test call_tmp[590857]))
        if tmp[511427]
        {
          unknown tmp[511434] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[590864] "expr temp" "maybe param" "maybe type" "temp"
          (590867 'move' call_tmp[590864](104748 call _value _mt[232] allocD[104638]))
          unknown call_tmp[590871] "expr temp" "maybe param" "maybe type" "temp"
          (590874 'move' call_tmp[590871](104751 call stridable _mt[232] call_tmp[590864]))
          unknown call_tmp[590876] "expr temp" "maybe param" "maybe type" "temp"
          (590879 'move' call_tmp[590876](104754 call ! call_tmp[590871]))
          (511436 'move' tmp[511434](398539 call isTrue call_tmp[590876]))
          (511441 'move' tmp[511426](511438 '_paramFoldLogical' tmp[511427] tmp[511434]))
        }
        {
          (511446 'move' tmp[511426](511443 '_paramFoldLogical' tmp[511427] 0))
        }
        unknown call_tmp[590881] "expr temp" "maybe param" "maybe type" "temp"
        (590884 'move' call_tmp[590881](104779 call _cond_test tmp[511426]))
        if call_tmp[590881]
        {
          unknown call_tmp[590888] "expr temp" "maybe param" "maybe type" "temp"
          (590891 'move' call_tmp[590888](104759 call numIndices _mt[232] allocD[104638]))
          unknown call_tmp[590893] "expr temp" "maybe param" "maybe type" "temp"
          (590896 'move' call_tmp[590893](104763 call > call_tmp[590888] 0))
          unknown call_tmp[590898] "expr temp" "maybe param" "maybe type" "temp"
          (590901 'move' call_tmp[590898](104774 call _cond_test call_tmp[590893]))
          if call_tmp[590898]
          {
            unknown call_tmp[590905] "expr temp" "maybe param" "maybe type" "temp"
            (590908 'move' call_tmp[590905](349359 call shiftedData _mt[232] this[105294]))
            unknown call_tmp[590912] "expr temp" "maybe param" "maybe type" "temp"
            (590915 'move' call_tmp[590912](104767 call shiftedData _mt[232] copy[104666]))
            (104770 call = call_tmp[590905] call_tmp[590912])
          }
        }
        unknown call_tmp[590919] "expr temp" "maybe param" "maybe type" "temp"
        (590922 'move' call_tmp[590919](349365 call dataAllocRange _mt[232] this[105294]))
        unknown call_tmp[590926] "expr temp" "maybe param" "maybe type" "temp"
        (590929 'move' call_tmp[590926](104787 call dataAllocRange _mt[232] copy[104666]))
        (104790 call = call_tmp[590919] call_tmp[590926])
        (104795 call chpl__delete copy[104666])
      }
    }
    (466098 return _void[47])
  }
  where {
    unknown call_tmp[590933] "expr temp" "maybe param" "maybe type" "temp"
    (590936 'move' call_tmp[590933](349284 call rank _mt[232] this[105294]))
    (104631 call == call_tmp[590933] 1)
  }
  function DefaultRectangularArr[105188](?).dsiReallocate[104827](arg _mt[105300]:_MT[227], arg this[105298]:DefaultRectangularArr[105188](?), arg bounds[104824] :
  unknown call_tmp[590940] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      const tmp[104990] "const" "temp"
      unknown call_tmp[590964] "expr temp" "maybe param" "maybe type" "temp"
      (590967 'move' call_tmp[590964](104987 '_wide_get_locale' this[105298]))
      (104991 'move' tmp[104990](104988 'deref' call_tmp[590964]))
      {
        unknown call_tmp[590969] "maybe param" "maybe type" "temp"
        (590972 'move' call_tmp[590969](104833 call chpl__buildDomainExpr(104831 'expand_tuple' bounds[104824])))
        const allocD[104835] "const" "insert auto destroy"
        (490820 'init var' allocD[104835] call_tmp[590969])
        unknown call_tmp[590976] "expr temp" "maybe param" "maybe type" "temp"
        (590979 'move' call_tmp[590976](349392 call eltType _mt[232] this[105298]))
        unknown call_tmp[590983] "expr temp" "maybe param" "maybe type" "temp"
        (590986 'move' call_tmp[590983](349397 call rank _mt[232] this[105298]))
        unknown call_tmp[590990] "expr temp" "maybe param" "maybe type" "temp"
        (590993 'move' call_tmp[590990](349402 call idxType _mt[232] this[105298]))
        unknown call_tmp[590997] "expr temp" "maybe param" "maybe type" "temp"
        (591000 'move' call_tmp[590997](104848 call _value _mt[232] allocD[104835]))
        unknown call_tmp[591004] "expr temp" "maybe param" "maybe type" "temp"
        (591007 'move' call_tmp[591004](104851 call stridable _mt[232] call_tmp[590997]))
        unknown call_tmp[591011] "expr temp" "maybe param" "maybe type" "temp"
        (591014 'move' call_tmp[591011](104856 call _value _mt[232] allocD[104835]))
        unknown call_tmp[591016] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (591019 'move' call_tmp[591016](691389 'new' anymanaged DefaultRectangularArr[347545](?)(eltType = call_tmp[590976])(rank = call_tmp[590983])(idxType = call_tmp[590990])(stridable = call_tmp[591004])(dom = call_tmp[591011])(_chpl_manager = unmanaged[209](?))))
        unknown copy[104863] "insert auto destroy"
        (490822 'init var' copy[104863] call_tmp[591016])
        unknown call_tmp[591023] "expr temp" "maybe param" "maybe type" "temp"
        (591026 'move' call_tmp[591023](349410 call dom _mt[232] this[105298]))
        unknown call_tmp[591030] "expr temp" "maybe param" "maybe type" "temp"
        (591033 'move' call_tmp[591030](104869 call ranges _mt[232] call_tmp[591023]))
        unknown call_tmp[591035] "expr temp" "maybe param" "maybe type" "temp"
        (591038 'move' call_tmp[591035](104874 call allocD[104835](104872 'expand_tuple' call_tmp[591030])))
        Forall {
          induction variables:
            
            unknown i[104890] "index var" "insert auto destroy"
          iterated expressions:
            call_tmp[591035]
          shadow variables:
          forall body
          {
            unknown call_tmp[591042] "expr temp" "maybe param" "maybe type" "temp"
            (591045 'move' call_tmp[591042](104881 call(104876 call (partial) dsiAccess _mt[232] copy[104863]) i[104890]))
            unknown call_tmp[591049] "expr temp" "maybe param" "maybe type" "temp"
            (591052 'move' call_tmp[591049](104885 call(349416 call (partial) dsiAccess _mt[232] this[105298]) i[104890]))
            (104886 call = call_tmp[591042] call_tmp[591049])
          }
        }
        unknown call_tmp[591056] "expr temp" "maybe param" "maybe type" "temp"
        (591059 'move' call_tmp[591056](349422 call off _mt[232] this[105298]))
        unknown call_tmp[591063] "expr temp" "maybe param" "maybe type" "temp"
        (591066 'move' call_tmp[591063](104895 call off _mt[232] copy[104863]))
        (104898 call = call_tmp[591056] call_tmp[591063])
        unknown call_tmp[591070] "expr temp" "maybe param" "maybe type" "temp"
        (591073 'move' call_tmp[591070](349428 call blk _mt[232] this[105298]))
        unknown call_tmp[591077] "expr temp" "maybe param" "maybe type" "temp"
        (591080 'move' call_tmp[591077](104903 call blk _mt[232] copy[104863]))
        (104906 call = call_tmp[591070] call_tmp[591077])
        unknown call_tmp[591084] "expr temp" "maybe param" "maybe type" "temp"
        (591087 'move' call_tmp[591084](349434 call str _mt[232] this[105298]))
        unknown call_tmp[591091] "expr temp" "maybe param" "maybe type" "temp"
        (591094 'move' call_tmp[591091](104911 call str _mt[232] copy[104863]))
        (104914 call = call_tmp[591084] call_tmp[591091])
        unknown call_tmp[591098] "expr temp" "maybe param" "maybe type" "temp"
        (591101 'move' call_tmp[591098](349440 call factoredOffs _mt[232] this[105298]))
        unknown call_tmp[591105] "expr temp" "maybe param" "maybe type" "temp"
        (591108 'move' call_tmp[591105](104919 call factoredOffs _mt[232] copy[104863]))
        (104922 call = call_tmp[591098] call_tmp[591105])
        (104927 call(349445 call (partial) dsiDestroyArr _mt[232] this[105298]))
        unknown call_tmp[591114] "expr temp" "maybe param" "maybe type" "temp"
        (591117 'move' call_tmp[591114](349450 call data _mt[232] this[105298]))
        unknown call_tmp[591121] "expr temp" "maybe param" "maybe type" "temp"
        (591124 'move' call_tmp[591121](104931 call data _mt[232] copy[104863]))
        (104934 call = call_tmp[591114] call_tmp[591121])
        unknown tmp[398556] "maybe param" "temp"
        (398567 'move' tmp[398556] earlyShiftData[92605])
        unknown call_tmp[591126] "expr temp" "maybe param" "maybe type" "temp"
        (591129 'move' call_tmp[591126](398569 call _cond_invalid tmp[398556]))
        if call_tmp[591126]
        {
          (398572 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[511453] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511454] "maybe param" "temp"
        unknown call_tmp[591131] "expr temp" "maybe param" "maybe type" "temp"
        (591134 'move' call_tmp[591131](398557 call isTrue tmp[398556]))
        (511459 'move' tmp[511454](511457 call _cond_test call_tmp[591131]))
        if tmp[511454]
        {
          unknown tmp[511461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[591138] "expr temp" "maybe param" "maybe type" "temp"
          (591141 'move' call_tmp[591138](104939 call _value _mt[232] allocD[104835]))
          unknown call_tmp[591145] "expr temp" "maybe param" "maybe type" "temp"
          (591148 'move' call_tmp[591145](104942 call stridable _mt[232] call_tmp[591138]))
          unknown call_tmp[591150] "expr temp" "maybe param" "maybe type" "temp"
          (591153 'move' call_tmp[591150](104945 call ! call_tmp[591145]))
          (511463 'move' tmp[511461](398560 call isTrue call_tmp[591150]))
          (511468 'move' tmp[511453](511465 '_paramFoldLogical' tmp[511454] tmp[511461]))
        }
        {
          (511473 'move' tmp[511453](511470 '_paramFoldLogical' tmp[511454] 0))
        }
        unknown call_tmp[591155] "expr temp" "maybe param" "maybe type" "temp"
        (591158 'move' call_tmp[591155](104970 call _cond_test tmp[511453]))
        if call_tmp[591155]
        {
          unknown call_tmp[591162] "expr temp" "maybe param" "maybe type" "temp"
          (591165 'move' call_tmp[591162](104950 call numIndices _mt[232] allocD[104835]))
          unknown call_tmp[591167] "expr temp" "maybe param" "maybe type" "temp"
          (591170 'move' call_tmp[591167](104954 call > call_tmp[591162] 0))
          unknown call_tmp[591172] "expr temp" "maybe param" "maybe type" "temp"
          (591175 'move' call_tmp[591172](104965 call _cond_test call_tmp[591167]))
          if call_tmp[591172]
          {
            unknown call_tmp[591179] "expr temp" "maybe param" "maybe type" "temp"
            (591182 'move' call_tmp[591179](349459 call shiftedData _mt[232] this[105298]))
            unknown call_tmp[591186] "expr temp" "maybe param" "maybe type" "temp"
            (591189 'move' call_tmp[591186](104958 call shiftedData _mt[232] copy[104863]))
            (104961 call = call_tmp[591179] call_tmp[591186])
          }
        }
        unknown call_tmp[591193] "expr temp" "maybe param" "maybe type" "temp"
        (591196 'move' call_tmp[591193](349465 call dataAllocRange _mt[232] this[105298]))
        unknown call_tmp[591200] "expr temp" "maybe param" "maybe type" "temp"
        (591203 'move' call_tmp[591200](104976 call dataAllocRange _mt[232] copy[104863]))
        (104979 call = call_tmp[591193] call_tmp[591200])
        (104984 call chpl__delete copy[104863])
      }
    }
    (466100 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiPostReallocate[105000](arg _mt[105304]:_MT[227], arg this[105302]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    (466102 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiLocalSlice[105009](arg _mt[105308]:_MT[227], arg this[105306]:DefaultRectangularArr[105188](?), arg ranges[105007]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (105014 call halt "all dsiLocalSlice calls on DefaultRectangulars should be handled in ChapelArray.chpl")
    (466104 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiGetRAD[105021](arg _mt[105312]:_MT[227], arg this[105310]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[466108] "RVV" "temp"
    unknown rad[105030] "insert auto destroy"
    unknown call_tmp[591207] "expr temp" "maybe param" "maybe type" "temp"
    (591210 'move' call_tmp[591207](349473 call eltType _mt[232] this[105310]))
    unknown call_tmp[591214] "expr temp" "maybe param" "maybe type" "temp"
    (591217 'move' call_tmp[591214](349478 call rank _mt[232] this[105310]))
    unknown call_tmp[591221] "expr temp" "maybe param" "maybe type" "temp"
    (591224 'move' call_tmp[591221](349483 call idxType _mt[232] this[105310]))
    unknown call_tmp[591228] "expr temp" "maybe param" "maybe type" "temp"
    (591231 'move' call_tmp[591228](349488 call stridable _mt[232] this[105310]))
    unknown call_tmp[591233] "expr temp" "maybe param" "maybe type" "temp"
    (591236 'move' call_tmp[591233](105029 call _remoteAccessData[100096](?) call_tmp[591207] call_tmp[591214] call_tmp[591221] call_tmp[591228]))
    (490824 'default init var' rad[105030] call_tmp[591233])
    unknown call_tmp[591240] "expr temp" "maybe param" "maybe type" "temp"
    (591243 'move' call_tmp[591240](105035 call off _mt[232] rad[105030]))
    unknown call_tmp[591247] "expr temp" "maybe param" "maybe type" "temp"
    (591250 'move' call_tmp[591247](349494 call off _mt[232] this[105310]))
    (105039 call = call_tmp[591240] call_tmp[591247])
    unknown call_tmp[591254] "expr temp" "maybe param" "maybe type" "temp"
    (591257 'move' call_tmp[591254](105043 call blk _mt[232] rad[105030]))
    unknown call_tmp[591261] "expr temp" "maybe param" "maybe type" "temp"
    (591264 'move' call_tmp[591261](349500 call blk _mt[232] this[105310]))
    (105047 call = call_tmp[591254] call_tmp[591261])
    unknown call_tmp[591268] "expr temp" "maybe param" "maybe type" "temp"
    (591271 'move' call_tmp[591268](105051 call str _mt[232] rad[105030]))
    unknown call_tmp[591275] "expr temp" "maybe param" "maybe type" "temp"
    (591278 'move' call_tmp[591275](349506 call str _mt[232] this[105310]))
    (105055 call = call_tmp[591268] call_tmp[591275])
    unknown call_tmp[591282] "expr temp" "maybe param" "maybe type" "temp"
    (591285 'move' call_tmp[591282](105059 call origin _mt[232] rad[105030]))
    (105063 call = call_tmp[591282] 0)
    unknown call_tmp[591289] "expr temp" "maybe param" "maybe type" "temp"
    (591292 'move' call_tmp[591289](105067 call factoredOffs _mt[232] rad[105030]))
    unknown call_tmp[591296] "expr temp" "maybe param" "maybe type" "temp"
    (591299 'move' call_tmp[591296](349513 call factoredOffs _mt[232] this[105310]))
    (105071 call = call_tmp[591289] call_tmp[591296])
    unknown call_tmp[591303] "expr temp" "maybe param" "maybe type" "temp"
    (591306 'move' call_tmp[591303](105075 call data _mt[232] rad[105030]))
    unknown call_tmp[591310] "expr temp" "maybe param" "maybe type" "temp"
    (591313 'move' call_tmp[591310](349519 call data _mt[232] this[105310]))
    (105079 call = call_tmp[591303] call_tmp[591310])
    unknown call_tmp[591317] "expr temp" "maybe param" "maybe type" "temp"
    (591320 'move' call_tmp[591317](105083 call shiftedData _mt[232] rad[105030]))
    unknown call_tmp[591324] "expr temp" "maybe param" "maybe type" "temp"
    (591327 'move' call_tmp[591324](349525 call shiftedData _mt[232] this[105310]))
    (105087 call = call_tmp[591317] call_tmp[591324])
    (466113 'move' ret[466108](466112 'deref' rad[105030]))
    (466110 return ret[466108])
  }
  function DefaultRectangularArr[105188](?).dsiTargetLocales[105097](arg _mt[105316]:_MT[227], arg this[105314]:DefaultRectangularArr[105188](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[466117] "RVV" "temp"
    unknown call_tmp[591331] "expr temp" "maybe param" "maybe type" "temp"
    (591334 'move' call_tmp[591331](105100 call data _mt[232] this[105314]))
    unknown call_tmp[591336] "expr temp" "maybe param" "maybe type" "temp"
    (591339 'move' call_tmp[591336](105103 '_wide_get_locale' call_tmp[591331]))
    unknown call_tmp[591341] "expr temp" "maybe param" "maybe type" "temp"
    (591344 'move' call_tmp[591341](105104 call chpl_localeID_to_locale call_tmp[591336]))
    unknown call_tmp[591346] "expr temp" "maybe param" "maybe type" "temp"
    (591349 'move' call_tmp[591346](105107 call chpl__buildArrayExpr call_tmp[591341]))
    (466122 'move' ret[466117](466121 'deref' call_tmp[591346]))
    (466119 return ret[466117])
  }
  function DefaultRectangularArr[105188](?).dsiHasSingleLocalSubdomain[105116](arg _mt[105320]:_MT[227], arg this[105318]:DefaultRectangularArr[105188](?)) param : _unknown[43] "method" "primary method"
  {
    unknown ret[466126] "RVV" "param" "temp"
    (466131 'move' ret[466126](466130 'deref' 1))
    (466128 return ret[466126])
  }
  function DefaultRectangularArr[105188](?).dsiLocalSubdomain[105130](arg _mt[105324]:_MT[227], arg this[105322]:DefaultRectangularArr[105188](?), arg loc[105127]:locale[26]) : _unknown[43] "method" "primary method"
  {
    unknown ret[466135] "RVV" "temp"
    unknown call_tmp[591353] "expr temp" "maybe param" "maybe type" "temp"
    (591356 'move' call_tmp[591353](105133 call data _mt[232] this[105322]))
    unknown call_tmp[591358] "expr temp" "maybe param" "maybe type" "temp"
    (591361 'move' call_tmp[591358](105136 '_wide_get_locale' call_tmp[591353]))
    unknown call_tmp[591363] "expr temp" "maybe param" "maybe type" "temp"
    (591366 'move' call_tmp[591363](105137 call chpl_localeID_to_locale call_tmp[591358]))
    unknown call_tmp[591368] "expr temp" "maybe param" "maybe type" "temp"
    (591371 'move' call_tmp[591368](105140 call == call_tmp[591363] loc[105127]))
    unknown call_tmp[591373] "expr temp" "maybe param" "maybe type" "temp"
    (591376 'move' call_tmp[591373](105163 call _cond_test call_tmp[591368]))
    if call_tmp[591373]
    {
      unknown call_tmp[591380] "expr temp" "maybe param" "maybe type" "temp"
      (591383 'move' call_tmp[591380](349534 call dom _mt[232] this[105322]))
      unknown call_tmp[591385] "expr temp" "maybe param" "maybe type" "temp"
      (591388 'move' call_tmp[591385](105145 call _getDomain call_tmp[591380]))
      (466140 'move' ret[466135](466139 'deref' call_tmp[591385]))
      gotoReturn _end_dsiLocalSubdomain[466133] _end_dsiLocalSubdomain[466133]
    }
    {
      unknown a[105156] "insert auto destroy"
      unknown call_tmp[591392] "expr temp" "maybe param" "maybe type" "temp"
      (591395 'move' call_tmp[591392](349539 call rank _mt[232] this[105322]))
      unknown call_tmp[591399] "expr temp" "maybe param" "maybe type" "temp"
      (591402 'move' call_tmp[591399](349544 call idxType _mt[232] this[105322]))
      unknown call_tmp[591406] "expr temp" "maybe param" "maybe type" "temp"
      (591409 'move' call_tmp[591406](349549 call stridable _mt[232] this[105322]))
      unknown call_tmp[591411] "expr temp" "maybe param" "maybe type" "temp"
      (591414 'move' call_tmp[591411](105154 call chpl__buildDomainRuntimeType defaultDist[93214] call_tmp[591392] call_tmp[591399] call_tmp[591406]))
      (490826 'default init var' a[105156] call_tmp[591411])
      (466145 'move' ret[466135](466144 'deref' a[105156]))
      gotoReturn _end_dsiLocalSubdomain[466133] _end_dsiLocalSubdomain[466133]
    }
    label _end_dsiLocalSubdomain[466133]
    (466137 return ret[466135])
  }
  function DefaultRectangularArr[105188](?).dsiLocalSubdomains[105176](arg _mt[105328]:_MT[227], arg this[105326]:DefaultRectangularArr[105188](?), arg loc[105173]:locale[26]) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[466151] "RVV" "temp"
    unknown yret[466155] "YVV" "temp"
    unknown call_tmp[591418] "expr temp" "maybe param" "maybe type" "temp"
    (591421 'move' call_tmp[591418](105181 call(349555 call (partial) dsiLocalSubdomain _mt[232] this[105326]) loc[105173]))
    (466158 'move' yret[466155](466157 'deref' call_tmp[591418]))
    (466160 yield yret[466155])
    (466153 return ret[466151])
  }
  function DefaultRectangularArr[105188](?).super[714653](arg _mt[714655]:_MT[227], arg this[714657]:DefaultRectangularArr[105188](?)) : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714666] "RVV" "temp"
    unknown call_tmp[714673] "expr temp" "maybe param" "maybe type" "temp"
    (714676 'move' call_tmp[714673](714661 '.v' this[714657] c"super"))
    (714671 'move' ret[714666](714670 'deref' call_tmp[714673]))
    (714668 return ret[714666])
  }
  function DefaultRectangularArr[105188](?).idxSignedType[714678](arg _mt[714680]:_MT[227], arg this[714682]:DefaultRectangularArr[105188](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714699] "RVV" "temp" "type variable"
    unknown call_tmp[714713] "expr temp" "maybe param" "maybe type" "temp"
    (714716 'move' call_tmp[714713](714687 'is bound' this[714682] c"idxSignedType"))
    if call_tmp[714713]
    {
      unknown call_tmp[714718] "expr temp" "maybe param" "maybe type" "temp"
      (714721 'move' call_tmp[714718](714686 '.v' this[714682] c"idxSignedType"))
      (714704 'move' ret[714699](714703 'deref' call_tmp[714718]))
      gotoReturn _end_idxSignedType[714697] _end_idxSignedType[714697]
    }
    {
      (714709 'move' ret[714699](714708 'deref' _uninstantiated[247]))
      gotoReturn _end_idxSignedType[714697] _end_idxSignedType[714697]
    }
    label _end_idxSignedType[714697]
    (714701 return ret[714699])
  }
  function anymanaged anynil DefaultRectangularArr[389608](?).idxSignedType[714723](arg _mt[714725]:_MT[227], arg this[714727]:anymanaged anynil DefaultRectangularArr[389608](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714744] "RVV" "temp" "type variable"
    unknown call_tmp[714758] "expr temp" "maybe param" "maybe type" "temp"
    (714761 'move' call_tmp[714758](714732 'is bound' this[714727] c"idxSignedType"))
    if call_tmp[714758]
    {
      unknown call_tmp[714763] "expr temp" "maybe param" "maybe type" "temp"
      (714766 'move' call_tmp[714763](714731 '.v' this[714727] c"idxSignedType"))
      (714749 'move' ret[714744](714748 'deref' call_tmp[714763]))
      gotoReturn _end_idxSignedType[714742] _end_idxSignedType[714742]
    }
    {
      (714754 'move' ret[714744](714753 'deref' _uninstantiated[247]))
      gotoReturn _end_idxSignedType[714742] _end_idxSignedType[714742]
    }
    label _end_idxSignedType[714742]
    (714746 return ret[714744])
  }
  function DefaultRectangularArr[105188](?).dom[714768](arg _mt[714770]:_MT[227], arg this[714772]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714781] "RVV" "temp"
    unknown call_tmp[714788] "expr temp" "maybe param" "maybe type" "temp"
    (714791 'move' call_tmp[714788](714776 '.' this[714772] c"dom"))
    (714786 'move' ret[714781](714785 'addr of' call_tmp[714788]))
    (714783 return ret[714781])
  }
  function DefaultRectangularArr[105188](?).off[714793](arg _mt[714795]:_MT[227], arg this[714797]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714806] "RVV" "temp"
    unknown call_tmp[714813] "expr temp" "maybe param" "maybe type" "temp"
    (714816 'move' call_tmp[714813](714801 '.' this[714797] c"off"))
    (714811 'move' ret[714806](714810 'addr of' call_tmp[714813]))
    (714808 return ret[714806])
  }
  function DefaultRectangularArr[105188](?).blk[714818](arg _mt[714820]:_MT[227], arg this[714822]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714831] "RVV" "temp"
    unknown call_tmp[714838] "expr temp" "maybe param" "maybe type" "temp"
    (714841 'move' call_tmp[714838](714826 '.' this[714822] c"blk"))
    (714836 'move' ret[714831](714835 'addr of' call_tmp[714838]))
    (714833 return ret[714831])
  }
  function DefaultRectangularArr[105188](?).sizesPerDim[714843](arg _mt[714845]:_MT[227], arg this[714847]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714856] "RVV" "temp"
    unknown call_tmp[714863] "expr temp" "maybe param" "maybe type" "temp"
    (714866 'move' call_tmp[714863](714851 '.' this[714847] c"sizesPerDim"))
    (714861 'move' ret[714856](714860 'addr of' call_tmp[714863]))
    (714858 return ret[714856])
  }
  function DefaultRectangularArr[105188](?).str[714868](arg _mt[714870]:_MT[227], arg this[714872]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714881] "RVV" "temp"
    unknown call_tmp[714888] "expr temp" "maybe param" "maybe type" "temp"
    (714891 'move' call_tmp[714888](714876 '.' this[714872] c"str"))
    (714886 'move' ret[714881](714885 'addr of' call_tmp[714888]))
    (714883 return ret[714881])
  }
  function DefaultRectangularArr[105188](?).factoredOffs[714893](arg _mt[714895]:_MT[227], arg this[714897]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714906] "RVV" "temp"
    unknown call_tmp[714913] "expr temp" "maybe param" "maybe type" "temp"
    (714916 'move' call_tmp[714913](714901 '.' this[714897] c"factoredOffs"))
    (714911 'move' ret[714906](714910 'addr of' call_tmp[714913]))
    (714908 return ret[714906])
  }
  function DefaultRectangularArr[105188](?).data[714918](arg _mt[714920]:_MT[227], arg this[714922]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714931] "RVV" "temp"
    unknown call_tmp[714938] "expr temp" "maybe param" "maybe type" "temp"
    (714941 'move' call_tmp[714938](714926 '.' this[714922] c"data"))
    (714936 'move' ret[714931](714935 'addr of' call_tmp[714938]))
    (714933 return ret[714931])
  }
  function DefaultRectangularArr[105188](?).shiftedData[714943](arg _mt[714945]:_MT[227], arg this[714947]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714956] "RVV" "temp"
    unknown call_tmp[714963] "expr temp" "maybe param" "maybe type" "temp"
    (714966 'move' call_tmp[714963](714951 '.' this[714947] c"shiftedData"))
    (714961 'move' ret[714956](714960 'addr of' call_tmp[714963]))
    (714958 return ret[714956])
  }
  function DefaultRectangularArr[105188](?).noinit_data[714968](arg _mt[714970]:_MT[227], arg this[714972]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[714981] "RVV" "temp"
    unknown call_tmp[714988] "expr temp" "maybe param" "maybe type" "temp"
    (714991 'move' call_tmp[714988](714976 '.' this[714972] c"noinit_data"))
    (714986 'move' ret[714981](714985 'addr of' call_tmp[714988]))
    (714983 return ret[714981])
  }
  function DefaultRectangularArr[105188](?).externArr[714993](arg _mt[714995]:_MT[227], arg this[714997]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[715006] "RVV" "temp"
    unknown call_tmp[715013] "expr temp" "maybe param" "maybe type" "temp"
    (715016 'move' call_tmp[715013](715001 '.' this[714997] c"externArr"))
    (715011 'move' ret[715006](715010 'addr of' call_tmp[715013]))
    (715008 return ret[715006])
  }
  function DefaultRectangularArr[105188](?)._borrowed[715018](arg _mt[715020]:_MT[227], arg this[715022]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[715031] "RVV" "temp"
    unknown call_tmp[715038] "expr temp" "maybe param" "maybe type" "temp"
    (715041 'move' call_tmp[715038](715026 '.' this[715022] c"_borrowed"))
    (715036 'move' ret[715031](715035 'addr of' call_tmp[715038]))
    (715033 return ret[715031])
  }
  function DefaultRectangularArr[105188](?).externFreeFunc[715043](arg _mt[715045]:_MT[227], arg this[715047]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[715056] "RVV" "temp"
    unknown call_tmp[715063] "expr temp" "maybe param" "maybe type" "temp"
    (715066 'move' call_tmp[715063](715051 '.' this[715047] c"externFreeFunc"))
    (715061 'move' ret[715056](715060 'addr of' call_tmp[715063]))
    (715058 return ret[715056])
  }
  function DefaultRectangularArr[105188](?).dataAllocRange[715068](arg _mt[715070]:_MT[227], arg this[715072]:DefaultRectangularArr[105188](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[715081] "RVV" "temp"
    unknown call_tmp[715088] "expr temp" "maybe param" "maybe type" "temp"
    (715091 'move' call_tmp[715088](715076 '.' this[715072] c"dataAllocRange"))
    (715086 'move' ret[715081](715085 'addr of' call_tmp[715088]))
    (715083 return ret[715081])
  }
  function DefaultRectangularArr[105188](?).init[715093](arg _mt[715095]:_MT[227], arg this[715096]:DefaultRectangularArr[105188](?), in arg pid[715479]:int(64)[13] =
  (715474 'default init field' "BaseArr" "pid" int(64)[13] nullPid[111825]), in arg _decEltRefCounts[715488]:bool[10] =
  (715483 'default init field' "BaseArr" "_decEltRefCounts" bool[10] 0), param arg rank[715491]:int(64)[13], arg idxType[715494]:_any[170](?), param arg stridable[715497]:bool[10], arg eltType[715500]:_any[170](?), arg idxSignedType[715503]:_any[170](?) :
  unknown call_tmp[715887] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[715892] "expr temp" "maybe param" "maybe type" "temp", in arg dom[715524] :
  unknown call_tmp[715897] "expr temp" "maybe param" "maybe type" "temp" =
  _typeDefaultT[239], in arg off[715545] :
  (715548 call * rank[715491] idxType[715494]) =
  _typeDefaultT[239], in arg blk[715561] :
  unknown call_tmp[715902] "expr temp" "maybe param" "maybe type" "temp" =
  _typeDefaultT[239], in arg sizesPerDim[715579] :
  unknown call_tmp[715907] "expr temp" "maybe param" "maybe type" "temp" =
  _typeDefaultT[239], in arg str[715597] :
  (715600 call * rank[715491] idxSignedType[715503]) =
  _typeDefaultT[239], in arg factoredOffs[715613] :
  (715616 call chpl__idxTypeToIntIdxType idxType[715494]) =
  _typeDefaultT[239], in arg data[715628] :
  (715630 call _ddata[11791](?) eltType[715500]) =
  unknown call_tmp[715912] "expr temp" "maybe param" "maybe type" "temp", in arg shiftedData[715677] :
  (715680 call _ddata[11791](?) eltType[715500]) =
  _typeDefaultT[239], in arg noinit_data[715692]:bool[10] =
  (715710 'default init field' "DefaultRectangularArr" "noinit_data" bool[10] 0), in arg externArr[715722]:bool[10] =
  (715740 'default init field' "DefaultRectangularArr" "externArr" bool[10] 0), in arg _borrowed[715752]:bool[10] =
  (715770 'default init field' "DefaultRectangularArr" "_borrowed" bool[10] 1), in arg externFreeFunc[715782]:c_void_ptr[141] =
  _typeDefaultT[239], in arg dataAllocRange[715795] :
  (715798 call range[66183](?) idxType[715494]) =
  _typeDefaultT[239]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[715812] "temporary of super field" "temp"
    (715814 'move' super_tmp[715812](715811 '.v' this[715096] c"super"))
    (715106 call(715104 call (partial) init _mt[232] super_tmp[715812]) pid[715479] _decEltRefCounts[715488] rank[715491] idxType[715494] stridable[715497] eltType[715500])
    unknown tmp[715817] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[715877] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[715919] "expr temp" "maybe param" "maybe type" "temp"
      (715922 'move' call_tmp[715919](715819 '.v' this[715096] c"super"))
      (715881 'move' call_type_tmp[715877](715822 'typeof' call_tmp[715919]))
    }
    (715823 'move' tmp[715817] call_type_tmp[715877])
    unknown call_tmp[715924] "maybe param" "maybe type" "temp"
    (715927 'move' call_tmp[715924](715828 'cast' tmp[715817] this[715096]))
    unknown chpl__thisAsParent[715825] "insert auto destroy" "temp"
    (715885 'init var' chpl__thisAsParent[715825] call_tmp[715924] tmp[715817])
    (715831 'setcid' chpl__thisAsParent[715825])
    (715833 'init field' this[715096] c"idxSignedType" idxSignedType[715503])
    (715836 'init field' this[715096] c"dom" dom[715524])
    (715839 'init field' this[715096] c"off" off[715545])
    (715842 'init field' this[715096] c"blk" blk[715561])
    (715845 'init field' this[715096] c"sizesPerDim" sizesPerDim[715579])
    (715848 'init field' this[715096] c"str" str[715597])
    (715851 'init field' this[715096] c"factoredOffs" factoredOffs[715613])
    (715854 'init field' this[715096] c"data" data[715628])
    (715857 'init field' this[715096] c"shiftedData" shiftedData[715677])
    (715860 'init field' this[715096] c"noinit_data" noinit_data[715692])
    (715863 'init field' this[715096] c"externArr" externArr[715722])
    (715866 'init field' this[715096] c"_borrowed" _borrowed[715752])
    (715869 'init field' this[715096] c"externFreeFunc" externFreeFunc[715782])
    (715872 'init field' this[715096] c"dataAllocRange" dataAllocRange[715795])
    (715875 'setcid' this[715096])
    (715883 return _void[47])
  }
  function DefaultRectangularArr[105188](?).deinit[715929](arg _mt[715931]:_MT[227], arg this[715933]:DefaultRectangularArr[105188](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (715935 return _void[47])
  }
  function DefaultRectangularArr[105188](?).writeThis[715938](arg _mt[715942]:_MT[227], arg this[715940]:DefaultRectangularArr[105188](?), arg f[715941]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (715947 call writeThisDefaultImpl f[715941] this[715940])
    (715951 return _void[47])
  }
  function DefaultRectangularArr[105188](?).readThis[715953](arg _mt[715957]:_MT[227], arg this[715955]:DefaultRectangularArr[105188](?), arg f[715956]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (715961 call readThisDefaultImpl f[715956] this[715955])
    (715966 return _void[47])
  }
  type DefaultRectangularArr[105188](?) val super[331025]:BaseRectangularArr[146229](?) "delay instantiation" "super class" unknown idxSignedType[101917] "type variable"(101916 call chpl__signedType(101914 call chpl__idxTypeToIntIdxType idxType[146084])) unknown dom[101930](101929 'to unmanaged class from unknown'(101928 call anymanaged DefaultRectangularDom[339767](?)(rank = rank[146081])(idxType = idxType[146084])(stridable = stridable[146088]))) unknown off[101937](101935 call * rank[146081] idxType[146084]) unknown blk[101947](101945 call * rank[146081](101944 call chpl__idxTypeToIntIdxType idxType[146084])) unknown sizesPerDim[101957](101955 call * rank[146081](101954 call chpl__idxTypeToIntIdxType idxType[146084])) unknown str[101964](101962 call * rank[146081] idxSignedType[101917]) unknown factoredOffs[101971](101970 call chpl__idxTypeToIntIdxType idxType[146084]) unknown data[101979] "alias scope from this" "local field" nil[38](101977 call _ddata[11791](?) eltType[146196]) unknown shiftedData[101986] "alias scope from this" "local field"(101985 call _ddata[11791](?) eltType[146196]) val noinit_data[101991]:bool[10] 0 bool[10] val externArr[101996]:bool[10] 0 bool[10] val _borrowed[102001]:bool[10] 1 bool[10] val externFreeFunc[102005]:c_void_ptr[141] c_void_ptr[141] unknown dataAllocRange[102012](102011 call range[66183](?) idxType[146084])
  type unmanaged DefaultRectangularArr[389855](?)
  type anymanaged anynil DefaultRectangularArr[389608](?)
  type anymanaged DefaultRectangularArr[347545](?)
  function chpl__serialViewIter[105335](arg arr[105333]:_any[170](?), arg viewDom[105337]:_any[170](?)) ref : _unknown[43] "iterator fn" "no return value for void"
  {
    unknown ret[466164] "RVV" "temp"
    unknown tmp[398577] "maybe param" "temp"
    (398588 'move' tmp[398577](105346 call chpl__isArrayView arr[105333]))
    unknown call_tmp[591423] "expr temp" "maybe param" "maybe type" "temp"
    (591426 'move' call_tmp[591423](398590 call _cond_invalid tmp[398577]))
    if call_tmp[591423]
    {
      (398593 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown useCache[105357] "param"
    unknown tmp[511480] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511481] "maybe param" "temp"
    unknown call_tmp[591428] "expr temp" "maybe param" "maybe type" "temp"
    (591431 'move' call_tmp[591428](398578 call isTrue tmp[398577]))
    (511486 'move' tmp[511481](511484 call _cond_test call_tmp[591428]))
    if tmp[511481]
    {
      unknown tmp[511488] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[591435] "expr temp" "maybe param" "maybe type" "temp"
      (591438 'move' call_tmp[591435](105354 call(105350 call (partial) shouldUseIndexCache _mt[232] arr[105333])))
      (511490 'move' tmp[511488](398581 call isTrue call_tmp[591435]))
      (511495 'move' tmp[511480](511492 '_paramFoldLogical' tmp[511481] tmp[511488]))
    }
    {
      (511500 'move' tmp[511480](511497 '_paramFoldLogical' tmp[511481] 0))
    }
    (490828 'init var' useCache[105357] tmp[511480])
    unknown info[105389] "insert auto destroy"
    unknown tmp[511534] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511535] "maybe param" "temp"
    (511540 'move' tmp[511535](511538 call _cond_test useCache[105357]))
    if tmp[511535]
    {
      unknown tmp[511542] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (511544 'move' tmp[511542](105365 call indexCache _mt[232] arr[105333]))
      (511549 'move' tmp[511534](511546 '_paramFoldLogical' tmp[511535] tmp[511542]))
    }
    {
      unknown tmp[511507] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[511508] "maybe param" "temp"
      unknown call_tmp[591444] "expr temp" "maybe param" "maybe type" "temp"
      (591447 'move' call_tmp[591444](105375 call(105371 call (partial) isSliceArrayView _mt[232] arr[105333])))
      (511513 'move' tmp[511508](511511 call _cond_test call_tmp[591444]))
      if tmp[511508]
      {
        unknown tmp[511515] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (511517 'move' tmp[511515](105379 call arr _mt[232] arr[105333]))
        (511522 'move' tmp[511507](511519 '_paramFoldLogical' tmp[511508] tmp[511515]))
      }
      {
        (511527 'move' tmp[511507](511524 '_paramFoldLogical' tmp[511508] arr[105333]))
      }
      (511554 'move' tmp[511534](511551 '_paramFoldLogical' tmp[511535] tmp[511507]))
    }
    (490830 'init var' info[105389] tmp[511534])
    unknown call_tmp[591453] "expr temp" "maybe param" "maybe type" "temp"
    (591456 'move' call_tmp[591453](105393 call rank _mt[232] arr[105333]))
    unknown call_tmp[591458] "expr temp" "maybe param" "maybe type" "temp"
    (591461 'move' call_tmp[591458](105397 call == call_tmp[591453] 1))
    unknown call_tmp[591463] "expr temp" "maybe param" "maybe type" "temp"
    (591466 'move' call_tmp[591463](105808 call _cond_test call_tmp[591458]))
    if call_tmp[591463]
    {
      unknown call_tmp[591470] "expr temp" "maybe param" "maybe type" "temp"
      (591473 'move' call_tmp[591470](105400 call stridable _mt[232] viewDom[105337]))
      unknown call_tmp[591475] "expr temp" "maybe param" "maybe type" "temp"
      (591478 'move' call_tmp[591475](105403 call ! call_tmp[591470]))
      unknown call_tmp[591480] "expr temp" "maybe param" "maybe type" "temp"
      (591483 'move' call_tmp[591480](105696 call _cond_test call_tmp[591475]))
      if call_tmp[591480]
      {
        unknown call_tmp[591489] "expr temp" "maybe param" "maybe type" "temp"
        (591492 'move' call_tmp[591489](105410 call dsiLow _mt[232] viewDom[105337]))
        unknown call_tmp[591494] "maybe param" "maybe type" "temp"
        (591497 'move' call_tmp[591494](105414 call(105406 call (partial) getDataIndex _mt[232] info[105389]) call_tmp[591489]))
        const first[105415] "const" "insert auto destroy"
        (490832 'init var' first[105415] call_tmp[591494])
        unknown call_tmp[591505] "expr temp" "maybe param" "maybe type" "temp"
        (591508 'move' call_tmp[591505](105429 call dsiLow _mt[232] viewDom[105337]))
        unknown call_tmp[591510] "expr temp" "maybe param" "maybe type" "temp"
        (591513 'move' call_tmp[591510](105433 call chpl__idxToInt call_tmp[591505]))
        unknown call_tmp[591515] "expr temp" "maybe param" "maybe type" "temp"
        (591518 'move' call_tmp[591515](105435 call + call_tmp[591510] 1))
        unknown call_tmp[591520] "expr temp" "maybe param" "maybe type" "temp"
        (591523 'move' call_tmp[591520](105438 call(105424 call (partial) chpl_intToIdx _mt[232] viewDom[105337]) call_tmp[591515]))
        unknown call_tmp[591525] "maybe param" "maybe type" "temp"
        (591528 'move' call_tmp[591525](105440 call(105420 call (partial) getDataIndex _mt[232] info[105389]) call_tmp[591520]))
        const second[105441] "const" "insert auto destroy"
        (490834 'init var' second[105441] call_tmp[591525])
        unknown call_tmp[591530] "maybe param" "maybe type" "temp"
        (591533 'move' call_tmp[591530](105446 call - second[105441] first[105415]))
        const step[105448] "const" "insert auto destroy"
        (490836 'init var' step[105448] call_tmp[591530])
        unknown call_tmp[591537] "expr temp" "maybe param" "maybe type" "temp"
        (591540 'move' call_tmp[591537](105453 call dsiNumIndices _mt[232] viewDom[105337]))
        unknown call_tmp[591542] "expr temp" "maybe param" "maybe type" "temp"
        (591545 'move' call_tmp[591542](105457 call - call_tmp[591537] 1))
        unknown call_tmp[591547] "expr temp" "maybe param" "maybe type" "temp"
        (591550 'move' call_tmp[591547](105460 call * call_tmp[591542] step[105448]))
        unknown call_tmp[591552] "maybe param" "maybe type" "temp"
        (591555 'move' call_tmp[591552](105462 call + first[105415] call_tmp[591547]))
        const last[105464] "const" "insert auto destroy"
        (490838 'init var' last[105464] call_tmp[591552])
        {
          unknown _indexOfInterest[105484] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[105485] "expr temp" "temp"
          unknown call_tmp[591557] "expr temp" "maybe param" "maybe type" "temp"
          (591560 'move' call_tmp[591557](105473 call chpl_direct_pos_stride_range_iter first[105415] last[105464] step[105448]))
          (105494 'move' _iterator[105485](105492 call _getIterator call_tmp[591557]))
          Defer
          {
            {
              (105511 call _freeIterator _iterator[105485])
            }
          }
          { scopeless type
            (105500 'move' _indexOfInterest[105484](105497 call iteratorIndex _iterator[105485]))
          }
          ForLoop
          {
            unknown i[105504] "index var" "insert auto destroy"
            (105506 'move' i[105504] _indexOfInterest[105484])
            {
              unknown yret[466168] "YVV" "temp"
              unknown call_tmp[591564] "expr temp" "maybe param" "maybe type" "temp"
              (591567 'move' call_tmp[591564](105480 call(105475 call (partial) theData _mt[232] info[105389]) i[105504]))
              (466171 'move' yret[466168](466170 'addr of' call_tmp[591564]))
              (466173 yield yret[466168])
            }
            label _continueLabel[105489]
            _indexOfInterest[105484]
            _iterator[105485]
          }
          label _breakLabel[105490]
        }
      }
      {
        unknown call_tmp[591571] "maybe param" "maybe type" "temp"
        (591574 'move' call_tmp[591571](105524 call(105519 call (partial) dsiDim _mt[232] viewDom[105337]) 1))
        const viewDomDim[105525] "const" "insert auto destroy"
        (490840 'init var' viewDomDim[105525] call_tmp[591571])
        unknown call_tmp[591578] "expr temp" "maybe param" "maybe type" "temp"
        (591581 'move' call_tmp[591578](105533 call intIdxType _mt[232] viewDom[105337]))
        unknown call_tmp[591585] "expr temp" "maybe param" "maybe type" "temp"
        (591588 'move' call_tmp[591585](105529 call stride _mt[232] viewDomDim[105525]))
        unknown call_tmp[591590] "maybe param" "maybe type" "temp"
        (591593 'move' call_tmp[591590](105536 call _cast call_tmp[591578] call_tmp[591585]))
        const stride[105538] "const" "insert auto destroy"
        (490842 'init var' stride[105538] call_tmp[591590])
        unknown call_tmp[591597] "maybe param" "maybe type" "temp"
        (591600 'move' call_tmp[591597](105542 call first _mt[232] viewDomDim[105525]))
        const start[105545] "const" "insert auto destroy"
        (490844 'init var' start[105545] call_tmp[591597])
        unknown call_tmp[591608] "expr temp" "maybe param" "maybe type" "temp"
        (591611 'move' call_tmp[591608](105557 call firstAsInt _mt[232] viewDomDim[105525]))
        unknown call_tmp[591613] "expr temp" "maybe param" "maybe type" "temp"
        (591616 'move' call_tmp[591613](105561 call + call_tmp[591608] stride[105538]))
        unknown call_tmp[591618] "expr temp" "maybe param" "maybe type" "temp"
        (591621 'move' call_tmp[591618](105564 call(105553 call (partial) chpl_intToIdx _mt[232] viewDom[105337]) call_tmp[591613]))
        unknown call_tmp[591623] "maybe param" "maybe type" "temp"
        (591626 'move' call_tmp[591623](105566 call(105549 call (partial) getDataIndex _mt[232] info[105389]) call_tmp[591618]))
        const second[105567] "const" "insert auto destroy"
        (490846 'init var' second[105567] call_tmp[591623])
        unknown call_tmp[591630] "maybe param" "maybe type" "temp"
        (591633 'move' call_tmp[591630](105577 call(105572 call (partial) getDataIndex _mt[232] info[105389]) start[105545]))
        unknown first[105578] "insert auto destroy"
        (490848 'init var' first[105578] call_tmp[591630])
        unknown call_tmp[591637] "expr temp" "maybe param" "maybe type" "temp"
        (591640 'move' call_tmp[591637](105587 call intIdxType _mt[232] viewDom[105337]))
        unknown call_tmp[591642] "expr temp" "maybe param" "maybe type" "temp"
        (591645 'move' call_tmp[591642](105591 call chpl__signedType call_tmp[591637]))
        unknown call_tmp[591647] "expr temp" "maybe param" "maybe type" "temp"
        (591650 'move' call_tmp[591647](105583 call - second[105567] first[105578]))
        unknown call_tmp[591652] "maybe param" "maybe type" "temp"
        (591655 'move' call_tmp[591652](105592 call _cast call_tmp[591642] call_tmp[591647]))
        const step[105594] "const" "insert auto destroy"
        (490850 'init var' step[105594] call_tmp[591652])
        unknown call_tmp[591659] "expr temp" "maybe param" "maybe type" "temp"
        (591662 'move' call_tmp[591659](105599 call length _mt[232] viewDomDim[105525]))
        unknown call_tmp[591664] "expr temp" "maybe param" "maybe type" "temp"
        (591667 'move' call_tmp[591664](105603 call - call_tmp[591659] 1))
        unknown call_tmp[591671] "expr temp" "maybe param" "maybe type" "temp"
        (591674 'move' call_tmp[591671](105607 call intIdxType _mt[232] viewDom[105337]))
        unknown call_tmp[591676] "expr temp" "maybe param" "maybe type" "temp"
        (591679 'move' call_tmp[591676](105610 call _cast call_tmp[591671] step[105594]))
        unknown call_tmp[591681] "expr temp" "maybe param" "maybe type" "temp"
        (591684 'move' call_tmp[591681](105612 call * call_tmp[591664] call_tmp[591676]))
        unknown call_tmp[591686] "maybe param" "maybe type" "temp"
        (591689 'move' call_tmp[591686](105614 call + first[105578] call_tmp[591681]))
        unknown last[105616] "insert auto destroy"
        (490852 'init var' last[105616] call_tmp[591686])
        unknown call_tmp[591691] "expr temp" "maybe param" "maybe type" "temp"
        (591694 'move' call_tmp[591691](105621 call < step[105594] 0))
        unknown call_tmp[591696] "expr temp" "maybe param" "maybe type" "temp"
        (591699 'move' call_tmp[591696](105628 call _cond_test call_tmp[591691]))
        if call_tmp[591696]
        {
          (105625 call <=> last[105616] first[105578])
        }
        unknown call_tmp[591703] "maybe param" "maybe type" "temp"
        (591706 'move' call_tmp[591703](105634 call theData _mt[232] info[105389]))
        unknown data[105637] "insert auto destroy"
        (490854 'init var' data[105637] call_tmp[591703])
        {
          unknown _indexOfInterest[105654] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[105655] "expr temp" "temp"
          unknown call_tmp[591708] "expr temp" "maybe param" "maybe type" "temp"
          (591711 'move' call_tmp[591708](105673 call chpl_direct_range_iter first[105578] last[105616] step[105594]))
          (105664 'move' _iterator[105655](105662 call _getIterator call_tmp[591708]))
          Defer
          {
            {
              (105689 call _freeIterator _iterator[105655])
            }
          }
          { scopeless type
            (105678 'move' _indexOfInterest[105654](105675 call iteratorIndex _iterator[105655]))
          }
          ForLoop
          {
            unknown i[105682] "index var" "insert auto destroy"
            (105684 'move' i[105682] _indexOfInterest[105654])
            unknown yret[466175] "YVV" "temp"
            unknown call_tmp[591713] "expr temp" "maybe param" "maybe type" "temp"
            (591716 'move' call_tmp[591713](105651 call data[105637] i[105682]))
            (466178 'move' yret[466175](466177 'addr of' call_tmp[591713]))
            (466180 yield yret[466175])
            label _continueLabel[105659]
            _indexOfInterest[105654]
            _iterator[105655]
          }
          label _breakLabel[105660]
        }
      }
    }
    {
      unknown call_tmp[591718] "expr temp" "maybe param" "maybe type" "temp"
      (591721 'move' call_tmp[591718](105804 call _cond_test useCache[105357]))
      if call_tmp[591718]
      {
        {
          unknown _indexOfInterest[105726] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[105727] "expr temp" "temp"
          (105736 'move' _iterator[105727](105734 call _getIterator viewDom[105337]))
          Defer
          {
            {
              (105752 call _freeIterator _iterator[105727])
            }
          }
          { scopeless type
            (105741 'move' _indexOfInterest[105726](105738 call iteratorIndex _iterator[105727]))
          }
          ForLoop
          {
            unknown i[105745] "index var" "insert auto destroy"
            (105747 'move' i[105745] _indexOfInterest[105726])
            {
              unknown call_tmp[591725] "maybe param" "maybe type" "temp"
              (591728 'move' call_tmp[591725](105710 call(105705 call (partial) getDataIndex _mt[232] info[105389]) i[105745]))
              const dataIdx[105711] "const" "insert auto destroy"
              (490856 'init var' dataIdx[105711] call_tmp[591725])
              unknown yret[466182] "YVV" "temp"
              unknown call_tmp[591732] "expr temp" "maybe param" "maybe type" "temp"
              (591735 'move' call_tmp[591732](105723 call(105718 call (partial) getDataElem _mt[232] info[105389]) dataIdx[105711]))
              (466185 'move' yret[466182](466184 'addr of' call_tmp[591732]))
              (466187 yield yret[466182])
            }
            label _continueLabel[105731]
            _indexOfInterest[105726]
            _iterator[105727]
          }
          label _breakLabel[105732]
        }
      }
      {
        {
          unknown _indexOfInterest[105769] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[105770] "expr temp" "temp"
          unknown call_tmp[591737] "expr temp" "maybe param" "maybe type" "temp"
          (591740 'move' call_tmp[591737](105765 call chpl__serialViewIterHelper arr[105333] viewDom[105337]))
          (105779 'move' _iterator[105770](105777 call _getIterator call_tmp[591737]))
          Defer
          {
            {
              (105796 call _freeIterator _iterator[105770])
            }
          }
          { scopeless type
            (105785 'move' _indexOfInterest[105769](105782 call iteratorIndex _iterator[105770]))
          }
          ForLoop
          {
            unknown elem[105789] "index var" "insert auto destroy"
            (105791 'move' elem[105789] _indexOfInterest[105769])
            unknown yret[466189] "YVV" "temp"
            (466192 'move' yret[466189](466191 'addr of' elem[105789]))
            (466194 yield yret[466189])
            label _continueLabel[105774]
            _indexOfInterest[105769]
            _iterator[105770]
          }
          label _breakLabel[105775]
        }
      }
    }
    (466166 return ret[466164])
  }
  where {
    (105342 call chpl__isDROrDRView arr[105333])
  }
  function chpl__serialViewIter[105820](arg arr[105818]:_any[170](?), arg viewDom[105822]:_any[170](?)) ref : _unknown[43] "iterator fn" "no return value for void"
  {
    unknown ret[466198] "RVV" "temp"
    {
      unknown _indexOfInterest[105833] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[105834] "expr temp" "temp"
      unknown call_tmp[591742] "expr temp" "maybe param" "maybe type" "temp"
      (591745 'move' call_tmp[591742](105829 call chpl__serialViewIterHelper arr[105818] viewDom[105822]))
      (105843 'move' _iterator[105834](105841 call _getIterator call_tmp[591742]))
      Defer
      {
        {
          (105860 call _freeIterator _iterator[105834])
        }
      }
      { scopeless type
        (105849 'move' _indexOfInterest[105833](105846 call iteratorIndex _iterator[105834]))
      }
      ForLoop
      {
        unknown elem[105853] "index var" "insert auto destroy"
        (105855 'move' elem[105853] _indexOfInterest[105833])
        unknown yret[466202] "YVV" "temp"
        (466205 'move' yret[466202](466204 'addr of' elem[105853]))
        (466207 yield yret[466202])
        label _continueLabel[105838]
        _indexOfInterest[105833]
        _iterator[105834]
      }
      label _breakLabel[105839]
    }
    (466200 return ret[466198])
  }
  function chpl__serialViewIterHelper[105874](arg arr[105872]:_any[170](?), arg viewDom[105876]:_any[170](?)) ref : _unknown[43] "iterator fn" "no return value for void"
  {
    unknown ret[466211] "RVV" "temp"
    {
      unknown _indexOfInterest[105961] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[105962] "expr temp" "temp"
      (105971 'move' _iterator[105962](105969 call _getIterator viewDom[105876]))
      Defer
      {
        {
          (105987 call _freeIterator _iterator[105962])
        }
      }
      { scopeless type
        (105976 'move' _indexOfInterest[105961](105973 call iteratorIndex _iterator[105962]))
      }
      ForLoop
      {
        unknown i[105980] "index var" "insert auto destroy"
        (105982 'move' i[105980] _indexOfInterest[105961])
        {
          const dataIdx[105933] "const" "insert auto destroy"
          unknown tmp[511588] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[511589] "maybe param" "temp"
          unknown call_tmp[591749] "expr temp" "maybe param" "maybe type" "temp"
          (591752 'move' call_tmp[591749](105887 call(105883 call (partial) isReindexArrayView _mt[232] arr[105872])))
          (511594 'move' tmp[511589](511592 call _cond_test call_tmp[591749]))
          if tmp[511589]
          {
            unknown tmp[511596] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[591756] "expr temp" "maybe param" "maybe type" "temp"
            (591759 'move' call_tmp[591756](105892 call dom _mt[232] arr[105872]))
            unknown call_tmp[591763] "expr temp" "maybe param" "maybe type" "temp"
            (591766 'move' call_tmp[591763](105898 call downdom _mt[232] arr[105872]))
            (511598 'move' tmp[511596](105901 call chpl_reindexConvertIdx i[105980] call_tmp[591756] call_tmp[591763]))
            (511603 'move' tmp[511588](511600 '_paramFoldLogical' tmp[511589] tmp[511596]))
          }
          {
            unknown tmp[511561] "expr temp" "if-expr result" "maybe type" "temp"
            unknown tmp[511562] "maybe param" "temp"
            unknown call_tmp[591770] "expr temp" "maybe param" "maybe type" "temp"
            (591773 'move' call_tmp[591770](105909 call(105905 call (partial) isRankChangeArrayView _mt[232] arr[105872])))
            (511567 'move' tmp[511562](511565 call _cond_test call_tmp[591770]))
            if tmp[511562]
            {
              unknown tmp[511569] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[591777] "expr temp" "maybe param" "maybe type" "temp"
              (591780 'move' call_tmp[591777](105916 call collapsedDim _mt[232] arr[105872]))
              unknown call_tmp[591784] "expr temp" "maybe param" "maybe type" "temp"
              (591787 'move' call_tmp[591784](105922 call idx _mt[232] arr[105872]))
              (511571 'move' tmp[511569](105925 call chpl_rankChangeConvertIdx i[105980] call_tmp[591777] call_tmp[591784]))
              (511576 'move' tmp[511561](511573 '_paramFoldLogical' tmp[511562] tmp[511569]))
            }
            {
              (511581 'move' tmp[511561](511578 '_paramFoldLogical' tmp[511562] i[105980]))
            }
            (511608 'move' tmp[511588](511605 '_paramFoldLogical' tmp[511589] tmp[511561]))
          }
          (490858 'init var' dataIdx[105933] tmp[511588])
          const info[105949] "const" "insert auto destroy"
          unknown tmp[511615] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[511616] "maybe param" "temp"
          unknown call_tmp[591789] "expr temp" "maybe param" "maybe type" "temp"
          (591792 'move' call_tmp[591789](105940 call chpl__isArrayView arr[105872]))
          (511621 'move' tmp[511616](511619 call _cond_test call_tmp[591789]))
          if tmp[511616]
          {
            unknown tmp[511623] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (511625 'move' tmp[511623](105942 call arr _mt[232] arr[105872]))
            (511630 'move' tmp[511615](511627 '_paramFoldLogical' tmp[511616] tmp[511623]))
          }
          {
            (511635 'move' tmp[511615](511632 '_paramFoldLogical' tmp[511616] arr[105872]))
          }
          (490860 'init var' info[105949] tmp[511615])
          unknown yret[466215] "YVV" "temp"
          unknown call_tmp[591798] "expr temp" "maybe param" "maybe type" "temp"
          (591801 'move' call_tmp[591798](105958 call(105953 call (partial) dsiAccess _mt[232] info[105949]) dataIdx[105933]))
          (466218 'move' yret[466215](466217 'addr of' call_tmp[591798]))
          (466220 yield yret[466215])
        }
        label _continueLabel[105966]
        _indexOfInterest[105961]
        _iterator[105962]
      }
      label _breakLabel[105967]
    }
    (466213 return ret[466211])
  }
  function DefaultRectangularDom[99677](?).dsiSerialReadWrite[106002](arg _mt[106007]:_MT[227], arg this[106004]:DefaultRectangularDom[99677](?) :
  DefaultRectangularDom[99677](?), arg f[106000]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    unknown call_tmp[591803] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (591806 'move' call_tmp[591803](691390 'new' ioLiteral[226016] "{"))
    unknown call_tmp[591808] "expr temp" "maybe param" "maybe type" "temp"
    (591811 'move' call_tmp[591808](106030 call <~> f[106000] call_tmp[591803]))
    unknown call_tmp[591815] "expr temp" "maybe param" "maybe type" "temp"
    (591818 'move' call_tmp[591815](106035 call(349641 call (partial) ranges _mt[232] this[106004]) 1))
    (106036 call <~> call_tmp[591808] call_tmp[591815])
    {
      unknown _indexOfInterest[106075] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[106076] "expr temp" "temp"
      unknown call_tmp[591822] "expr temp" "maybe param" "maybe type" "temp"
      (591825 'move' call_tmp[591822](349654 call rank _mt[232] this[106004]))
      unknown call_tmp[591827] "expr temp" "maybe param" "maybe type" "temp"
      (591830 'move' call_tmp[591827](106090 call chpl_direct_range_iter 2 call_tmp[591822] 1))
      (106085 'move' _iterator[106076](106083 call _getIterator call_tmp[591827]))
      Defer
      {
        {
          (106106 call _freeIterator _iterator[106076])
        }
      }
      { scopeless type
        (106095 'move' _indexOfInterest[106075](106092 call iteratorIndex _iterator[106076]))
      }
      ForLoop
      {
        unknown i[106099] "index var" "insert auto destroy"
        (106101 'move' i[106099] _indexOfInterest[106075])
        unknown call_tmp[591832] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (591835 'move' call_tmp[591832](691391 'new' ioLiteral[226016] ", "))
        unknown call_tmp[591837] "expr temp" "maybe param" "maybe type" "temp"
        (591840 'move' call_tmp[591837](106066 call <~> f[106000] call_tmp[591832]))
        unknown call_tmp[591844] "expr temp" "maybe param" "maybe type" "temp"
        (591847 'move' call_tmp[591844](106071 call(349648 call (partial) ranges _mt[232] this[106004]) i[106099]))
        (106072 call <~> call_tmp[591837] call_tmp[591844])
        label _continueLabel[106080]
        _indexOfInterest[106075]
        _iterator[106076]
      }
      label _breakLabel[106081]
    }
    unknown call_tmp[591849] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (591852 'move' call_tmp[591849](691392 'new' ioLiteral[226016] "}"))
    (106134 call <~> f[106000] call_tmp[591849])
    (466222 return _void[47])
  }
  function DefaultRectangularDom[99677](?).dsiSerialWrite[106144](arg _mt[106149]:_MT[227], arg this[106146]:DefaultRectangularDom[99677](?) :
  DefaultRectangularDom[99677](?), arg f[106142]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    (106159 call(106154 call (partial) dsiSerialReadWrite _mt[232] this[106146]) f[106142])
    (466224 return _void[47])
  }
  function DefaultRectangularDom[99677](?).dsiSerialRead[106169](arg _mt[106174]:_MT[227], arg this[106171]:DefaultRectangularDom[99677](?) :
  DefaultRectangularDom[99677](?), arg f[106167]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    (106182 call(106177 call (partial) dsiSerialReadWrite _mt[232] this[106171]) f[106167])
    (466226 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiSerialReadWrite[106192](arg _mt[106197]:_MT[227], arg this[106194]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg f[106190]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    (106203 call chpl_serialReadWriteRectangular f[106190] this[106194])
    (466228 return _void[47])
  }
  function chpl_serialReadWriteRectangular[106212](arg f[106210]:_any[170](?), arg arr[106214]:_any[170](?)) : _unknown[43] "no return value for void"
  {
    unknown call_tmp[591860] "expr temp" "maybe param" "maybe type" "temp"
    (591863 'move' call_tmp[591860](106221 call dom _mt[232] arr[106214]))
    (106224 call chpl_serialReadWriteRectangular f[106210] arr[106214] call_tmp[591860])
    (466230 return _void[47])
  }
  function chpl_serialReadWriteRectangular[106233](arg f[106231]:_any[170](?), arg arr[106235]:_any[170](?), arg dom[106237]:_any[170](?)) : _unknown[43] "last resort" "no return value for void"
  {
    (106244 call chpl_serialReadWriteRectangularHelper f[106231] arr[106235] dom[106237])
    (466232 return _void[47])
  }
  function chpl_serialReadWriteRectangularHelper[106253](arg f[106251]:_any[170](?), arg arr[106255]:_any[170](?), arg dom[106257]:_any[170](?)) : _unknown[43] "no return value for void"
  {
    unknown call_tmp[591867] "maybe param" "maybe type" "temp"
    (591870 'move' call_tmp[591867](106260 call rank _mt[232] arr[106255]))
    unknown rank[106263] "param"
    (490862 'init var' rank[106263] call_tmp[591867])
    unknown idxType[106271] "insert auto destroy" "type variable"(106268 call idxType _mt[232] arr[106255])
    (490868 'move' idxType[106271](490865 call idxType _mt[232] arr[106255]))
    unknown call_tmp[591876] "expr temp" "maybe param" "maybe type" "temp"
    (591879 'move' call_tmp[591876](106278 call chpl__idxTypeToIntIdxType idxType[106271]))
    unknown idxSignedType[106281] "insert auto destroy" "type variable"(106280 call chpl__signedType call_tmp[591876])
    unknown call_tmp[591881] "expr temp" "maybe param" "maybe type" "temp"
    (591884 'move' call_tmp[591881](490873 call chpl__idxTypeToIntIdxType idxType[106271]))
    (490875 'move' idxSignedType[106281](490871 call chpl__signedType call_tmp[591881]))
    unknown call_tmp[591888] "expr temp" "maybe param" "maybe type" "temp"
    (591891 'move' call_tmp[591888](106292 call(106287 call (partial) styleElement _mt[232] f[106251]) QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19382]))
    unknown call_tmp[591893] "maybe param" "maybe type" "temp"
    (591896 'move' call_tmp[591893](106294 call _cast bool[10] call_tmp[591888]))
    const isNative[106296] "const" "insert auto destroy"
    (490877 'init var' isNative[106296] call_tmp[591893])
    function writeSpaces[106305](arg dim[106302]:int(64)[13]) : _unknown[43] "no return value for void"
    {
      {
        unknown _indexOfInterest[106322] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[106323] "expr temp" "temp"
        unknown call_tmp[591898] "expr temp" "maybe param" "maybe type" "temp"
        (591901 'move' call_tmp[591898](106337 call chpl_direct_range_iter 1 dim[106302] 1))
        (106332 'move' _iterator[106323](106330 call _getIterator call_tmp[591898]))
        Defer
        {
          {
            (106353 call _freeIterator _iterator[106323])
          }
        }
        { scopeless type
          (106342 'move' _indexOfInterest[106322](106339 call iteratorIndex _iterator[106323]))
        }
        ForLoop
        {
          unknown i[106346] "index var" "insert auto destroy"
          (106348 'move' i[106346] _indexOfInterest[106322])
          {
            unknown call_tmp[591903] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
            (591906 'move' call_tmp[591903](691393 'new' ioLiteral[226016] " "))
            (106318 call <~> f[106251] call_tmp[591903])
          }
          label _continueLabel[106327]
          _indexOfInterest[106322]
          _iterator[106323]
        }
        label _breakLabel[106328]
      }
      (466234 return _void[47])
    }
    function recursiveArrayWriter[106372](in arg idx[106369] :
    (106367 call * rank[106263] idxType[106271]), arg dim[106375] :
    1 =
    1, in arg last[106379] :
    0 =
    0) : _unknown[43] "no return value for void"
    {
      unknown call_tmp[591910] "maybe param" "maybe type" "temp"
      (591913 'move' call_tmp[591910](106389 call(106385 call (partial) binary _mt[232] f[106251])))
      unknown binary[106390] "insert auto destroy"
      (490879 'init var' binary[106390] call_tmp[591910])
      unknown call_tmp[591917] "maybe param" "maybe type" "temp"
      (591920 'move' call_tmp[591917](106400 call(106395 call (partial) styleElement _mt[232] f[106251]) QIO_STYLE_ELEMENT_ARRAY[19366]))
      unknown arrayStyle[106401] "insert auto destroy"
      (490881 'init var' arrayStyle[106401] call_tmp[591917])
      unknown tmp[398598] "maybe param" "temp"
      (398609 'move' tmp[398598](106406 call == arrayStyle[106401] QIO_ARRAY_FORMAT_SPACE[19390]))
      unknown call_tmp[591922] "expr temp" "maybe param" "maybe type" "temp"
      (591925 'move' call_tmp[591922](398611 call _cond_invalid tmp[398598]))
      if call_tmp[591922]
      {
        (398614 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown isspace[106413] "insert auto destroy"
      unknown tmp[511642] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511643] "maybe param" "temp"
      unknown call_tmp[591927] "expr temp" "maybe param" "maybe type" "temp"
      (591930 'move' call_tmp[591927](398599 call isTrue tmp[398598]))
      (511648 'move' tmp[511643](511646 call _cond_test call_tmp[591927]))
      if tmp[511643]
      {
        unknown tmp[511650] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[591932] "expr temp" "maybe param" "maybe type" "temp"
        (591935 'move' call_tmp[591932](106409 call ! binary[106390]))
        (511652 'move' tmp[511650](398602 call isTrue call_tmp[591932]))
        (511657 'move' tmp[511642](511654 '_paramFoldLogical' tmp[511643] tmp[511650]))
      }
      {
        (511662 'move' tmp[511642](511659 '_paramFoldLogical' tmp[511643] 0))
      }
      (490883 'init var' isspace[106413] tmp[511642])
      unknown tmp[398619] "maybe param" "temp"
      (398630 'move' tmp[398619](106418 call == arrayStyle[106401] QIO_ARRAY_FORMAT_JSON[19398]))
      unknown call_tmp[591937] "expr temp" "maybe param" "maybe type" "temp"
      (591940 'move' call_tmp[591937](398632 call _cond_invalid tmp[398619]))
      if call_tmp[591937]
      {
        (398635 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown isjson[106425] "insert auto destroy"
      unknown tmp[511669] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511670] "maybe param" "temp"
      unknown call_tmp[591942] "expr temp" "maybe param" "maybe type" "temp"
      (591945 'move' call_tmp[591942](398620 call isTrue tmp[398619]))
      (511675 'move' tmp[511670](511673 call _cond_test call_tmp[591942]))
      if tmp[511670]
      {
        unknown tmp[511677] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[591947] "expr temp" "maybe param" "maybe type" "temp"
        (591950 'move' call_tmp[591947](106421 call ! binary[106390]))
        (511679 'move' tmp[511677](398623 call isTrue call_tmp[591947]))
        (511684 'move' tmp[511669](511681 '_paramFoldLogical' tmp[511670] tmp[511677]))
      }
      {
        (511689 'move' tmp[511669](511686 '_paramFoldLogical' tmp[511670] 0))
      }
      (490885 'init var' isjson[106425] tmp[511669])
      unknown tmp[398640] "maybe param" "temp"
      (398651 'move' tmp[398640](106430 call == arrayStyle[106401] QIO_ARRAY_FORMAT_CHPL[19394]))
      unknown call_tmp[591952] "expr temp" "maybe param" "maybe type" "temp"
      (591955 'move' call_tmp[591952](398653 call _cond_invalid tmp[398640]))
      if call_tmp[591952]
      {
        (398656 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown ischpl[106437] "insert auto destroy"
      unknown tmp[511696] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511697] "maybe param" "temp"
      unknown call_tmp[591957] "expr temp" "maybe param" "maybe type" "temp"
      (591960 'move' call_tmp[591957](398641 call isTrue tmp[398640]))
      (511702 'move' tmp[511697](511700 call _cond_test call_tmp[591957]))
      if tmp[511697]
      {
        unknown tmp[511704] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[591962] "expr temp" "maybe param" "maybe type" "temp"
        (591965 'move' call_tmp[591962](106433 call ! binary[106390]))
        (511706 'move' tmp[511704](398644 call isTrue call_tmp[591962]))
        (511711 'move' tmp[511696](511708 '_paramFoldLogical' tmp[511697] tmp[511704]))
      }
      {
        (511716 'move' tmp[511696](511713 '_paramFoldLogical' tmp[511697] 0))
      }
      (490887 'init var' ischpl[106437] tmp[511696])
      unknown strType[106441] "insert auto destroy" "type variable" idxSignedType[106281]
      (490890 'move' strType[106441] idxSignedType[106281])
      unknown makeStridePositive[106470] "insert auto destroy"
      unknown tmp[511723] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511724] "maybe param" "temp"
      unknown call_tmp[591969] "expr temp" "maybe param" "maybe type" "temp"
      (591972 'move' call_tmp[591969](106450 call(106445 call (partial) dsiDim _mt[232] dom[106257]) dim[106375]))
      unknown call_tmp[591976] "expr temp" "maybe param" "maybe type" "temp"
      (591979 'move' call_tmp[591976](106451 call stride _mt[232] call_tmp[591969]))
      unknown call_tmp[591981] "expr temp" "maybe param" "maybe type" "temp"
      (591984 'move' call_tmp[591981](106455 call > call_tmp[591976] 0))
      (511729 'move' tmp[511724](511727 call _cond_test call_tmp[591981]))
      if tmp[511724]
      {
        unknown tmp[511731] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (511733 'move' tmp[511731](106459 call _cast strType[106441] 1))
        (511738 'move' tmp[511723](511735 '_paramFoldLogical' tmp[511724] tmp[511731]))
      }
      {
        unknown tmp[511740] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[591986] "expr temp" "maybe param" "maybe type" "temp"
        (591989 'move' call_tmp[591986](106462 call - 1))
        (511742 'move' tmp[511740](106465 call _cast strType[106441] call_tmp[591986]))
        (511747 'move' tmp[511723](511744 '_paramFoldLogical' tmp[511724] tmp[511740]))
      }
      (490892 'init var' makeStridePositive[106470] tmp[511723])
      unknown tmp[398661] "maybe param" "temp"
      (398672 'move' tmp[398661] isjson[106425])
      unknown call_tmp[591991] "expr temp" "maybe param" "maybe type" "temp"
      (591994 'move' call_tmp[591991](398674 call _cond_invalid tmp[398661]))
      if call_tmp[591991]
      {
        (398677 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[511754] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[511755] "maybe param" "temp"
      unknown call_tmp[591996] "expr temp" "maybe param" "maybe type" "temp"
      (591999 'move' call_tmp[591996](398662 call isTrue tmp[398661]))
      (511760 'move' tmp[511755](511758 call _cond_test call_tmp[591996]))
      if tmp[511755]
      {
        (511765 'move' tmp[511754](511762 '_paramFoldLogical' tmp[511755] 1))
      }
      {
        unknown tmp[511767] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (511769 'move' tmp[511767](398666 call isTrue ischpl[106437]))
        (511774 'move' tmp[511754](511771 '_paramFoldLogical' tmp[511755] tmp[511767]))
      }
      unknown call_tmp[592001] "expr temp" "maybe param" "maybe type" "temp"
      (592004 'move' call_tmp[592001](106541 call _cond_test tmp[511754]))
      if call_tmp[592001]
      {
        unknown call_tmp[592006] "expr temp" "maybe param" "maybe type" "temp"
        (592009 'move' call_tmp[592006](106479 call != dim[106375] rank[106263]))
        unknown call_tmp[592011] "expr temp" "maybe param" "maybe type" "temp"
        (592014 'move' call_tmp[592011](106535 call _cond_test call_tmp[592006]))
        if call_tmp[592011]
        {
          unknown call_tmp[592016] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
          (592019 'move' call_tmp[592016](691394 'new' ioLiteral[226016] "[\n"))
          (106502 call <~> f[106251] call_tmp[592016])
          (106509 call writeSpaces dim[106375])
        }
        {
          unknown call_tmp[592021] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
          (592024 'move' call_tmp[592021](691395 'new' ioLiteral[226016] "["))
          (106532 call <~> f[106251] call_tmp[592021])
        }
      }
      unknown call_tmp[592026] "expr temp" "maybe param" "maybe type" "temp"
      (592029 'move' call_tmp[592026](106547 call == dim[106375] rank[106263]))
      unknown call_tmp[592031] "expr temp" "maybe param" "maybe type" "temp"
      (592034 'move' call_tmp[592031](106855 call _cond_test call_tmp[592026]))
      if call_tmp[592031]
      {
        unknown first[106550] "insert auto destroy"
        (490894 'init var' first[106550] 1)
        unknown tmp[398682] "maybe param" "temp"
        (398693 'move' tmp[398682] debugDefaultDist[92581])
        unknown call_tmp[592036] "expr temp" "maybe param" "maybe type" "temp"
        (592039 'move' call_tmp[592036](398695 call _cond_invalid tmp[398682]))
        if call_tmp[592036]
        {
          (398698 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[511781] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511782] "maybe param" "temp"
        unknown call_tmp[592041] "expr temp" "maybe param" "maybe type" "temp"
        (592044 'move' call_tmp[592041](398683 call isTrue tmp[398682]))
        (511787 'move' tmp[511782](511785 call _cond_test call_tmp[592041]))
        if tmp[511782]
        {
          unknown tmp[511789] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[592048] "expr temp" "maybe param" "maybe type" "temp"
          (592051 'move' call_tmp[592048](106558 call writing _mt[232] f[106251]))
          (511791 'move' tmp[511789](398686 call isTrue call_tmp[592048]))
          (511796 'move' tmp[511781](511793 '_paramFoldLogical' tmp[511782] tmp[511789]))
        }
        {
          (511801 'move' tmp[511781](511798 '_paramFoldLogical' tmp[511782] 0))
        }
        unknown call_tmp[592053] "expr temp" "maybe param" "maybe type" "temp"
        (592056 'move' call_tmp[592053](106579 call _cond_test tmp[511781]))
        if call_tmp[592053]
        {
          unknown call_tmp[592062] "expr temp" "maybe param" "maybe type" "temp"
          (592065 'move' call_tmp[592062](106575 call(106570 call (partial) dsiDim _mt[232] dom[106257]) dim[106375]))
          (106577 call(106566 call (partial) writeln _mt[232] f[106251]) call_tmp[592062])
        }
        {
          unknown _indexOfInterest[106661] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[106662] "expr temp" "temp"
          unknown call_tmp[592069] "expr temp" "maybe param" "maybe type" "temp"
          (592072 'move' call_tmp[592069](106591 call(106586 call (partial) dsiDim _mt[232] dom[106257]) dim[106375]))
          unknown call_tmp[592074] "expr temp" "maybe param" "maybe type" "temp"
          (592077 'move' call_tmp[592074](106593 call chpl_by call_tmp[592069] makeStridePositive[106470]))
          (106671 'move' _iterator[106662](106669 call _getIterator call_tmp[592074]))
          Defer
          {
            {
              (106694 call _freeIterator _iterator[106662])
            }
          }
          { scopeless type
            (106683 'move' _indexOfInterest[106661](106680 call iteratorIndex _iterator[106662]))
          }
          ForLoop
          {
            unknown j[106687] "index var" "insert auto destroy"
            (106689 'move' j[106687] _indexOfInterest[106661])
            {
              unknown call_tmp[592079] "expr temp" "maybe param" "maybe type" "temp"
              (592082 'move' call_tmp[592079](106635 call _cond_test first[106550]))
              if call_tmp[592079]
              {
                (106598 call = first[106550] 0)
              }
              {
                unknown call_tmp[592084] "expr temp" "maybe param" "maybe type" "temp"
                (592087 'move' call_tmp[592084](106629 call _cond_test isspace[106413]))
                if call_tmp[592084]
                {
                  unknown call_tmp[592089] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                  (592092 'move' call_tmp[592089](691396 'new' ioLiteral[226016] " "))
                  (106608 call <~> f[106251] call_tmp[592089])
                }
                {
                  unknown tmp[398703] "maybe param" "temp"
                  (398714 'move' tmp[398703] isjson[106425])
                  unknown call_tmp[592094] "expr temp" "maybe param" "maybe type" "temp"
                  (592097 'move' call_tmp[592094](398716 call _cond_invalid tmp[398703]))
                  if call_tmp[592094]
                  {
                    (398719 call compilerError "cannot promote short-circuiting || operator")
                  }
                  unknown tmp[511808] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[511809] "maybe param" "temp"
                  unknown call_tmp[592099] "expr temp" "maybe param" "maybe type" "temp"
                  (592102 'move' call_tmp[592099](398704 call isTrue tmp[398703]))
                  (511814 'move' tmp[511809](511812 call _cond_test call_tmp[592099]))
                  if tmp[511809]
                  {
                    (511819 'move' tmp[511808](511816 '_paramFoldLogical' tmp[511809] 1))
                  }
                  {
                    unknown tmp[511821] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    (511823 'move' tmp[511821](398708 call isTrue ischpl[106437]))
                    (511828 'move' tmp[511808](511825 '_paramFoldLogical' tmp[511809] tmp[511821]))
                  }
                  unknown call_tmp[592104] "expr temp" "maybe param" "maybe type" "temp"
                  (592107 'move' call_tmp[592104](106624 call _cond_test tmp[511808]))
                  if call_tmp[592104]
                  {
                    unknown call_tmp[592109] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                    (592112 'move' call_tmp[592109](691397 'new' ioLiteral[226016] ", "))
                    (106621 call <~> f[106251] call_tmp[592109])
                  }
                }
              }
              unknown call_tmp[592114] "expr temp" "maybe param" "maybe type" "temp"
              (592117 'move' call_tmp[592114](106645 call idx[106369] dim[106375]))
              (106647 call = call_tmp[592114] j[106687])
              unknown call_tmp[592121] "expr temp" "maybe param" "maybe type" "temp"
              (592124 'move' call_tmp[592121](106657 call(106652 call (partial) dsiAccess _mt[232] arr[106255]) idx[106369]))
              (106658 call <~> f[106251] call_tmp[592121])
            }
            label _continueLabel[106666]
            _indexOfInterest[106661]
            _iterator[106662]
          }
          label _breakLabel[106667]
        }
      }
      {
        {
          unknown _indexOfInterest[106814] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[106815] "expr temp" "temp"
          unknown call_tmp[592128] "expr temp" "maybe param" "maybe type" "temp"
          (592131 'move' call_tmp[592128](106708 call(106703 call (partial) dsiDim _mt[232] dom[106257]) dim[106375]))
          unknown call_tmp[592133] "expr temp" "maybe param" "maybe type" "temp"
          (592136 'move' call_tmp[592133](106710 call chpl_by call_tmp[592128] makeStridePositive[106470]))
          (106824 'move' _iterator[106815](106822 call _getIterator call_tmp[592133]))
          Defer
          {
            {
              (106847 call _freeIterator _iterator[106815])
            }
          }
          { scopeless type
            (106836 'move' _indexOfInterest[106814](106833 call iteratorIndex _iterator[106815]))
          }
          ForLoop
          {
            unknown j[106840] "index var" "insert auto destroy"
            (106842 'move' j[106840] _indexOfInterest[106814])
            {
              unknown call_tmp[592140] "expr temp" "maybe param" "maybe type" "temp"
              (592143 'move' call_tmp[592140](106718 call(106713 call (partial) dsiDim _mt[232] dom[106257]) dim[106375]))
              unknown call_tmp[592147] "maybe param" "maybe type" "temp"
              (592150 'move' call_tmp[592147](106719 call last _mt[232] call_tmp[592140]))
              unknown lastIdx[106722] "insert auto destroy"
              (490896 'init var' lastIdx[106722] call_tmp[592147])
              unknown call_tmp[592152] "expr temp" "maybe param" "maybe type" "temp"
              (592155 'move' call_tmp[592152](106729 call idx[106369] dim[106375]))
              (106731 call = call_tmp[592152] j[106840])
              unknown tmp[398724] "maybe param" "temp"
              unknown tmp[398745] "maybe param" "temp"
              (398756 'move' tmp[398745] last[106379])
              unknown call_tmp[592157] "expr temp" "maybe param" "maybe type" "temp"
              (592160 'move' call_tmp[592157](398758 call _cond_invalid tmp[398745]))
              if call_tmp[592157]
              {
                (398761 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[511835] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[511836] "maybe param" "temp"
              unknown call_tmp[592162] "expr temp" "maybe param" "maybe type" "temp"
              (592165 'move' call_tmp[592162](398746 call isTrue tmp[398745]))
              (511841 'move' tmp[511836](511839 call _cond_test call_tmp[592162]))
              if tmp[511836]
              {
                (511846 'move' tmp[511835](511843 '_paramFoldLogical' tmp[511836] 1))
              }
              {
                unknown tmp[511848] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[592167] "expr temp" "maybe param" "maybe type" "temp"
                (592170 'move' call_tmp[592167](106745 call == dim[106375] 1))
                (511850 'move' tmp[511848](398750 call isTrue call_tmp[592167]))
                (511855 'move' tmp[511835](511852 '_paramFoldLogical' tmp[511836] tmp[511848]))
              }
              (398735 'move' tmp[398724] tmp[511835])
              unknown call_tmp[592172] "expr temp" "maybe param" "maybe type" "temp"
              (592175 'move' call_tmp[592172](398737 call _cond_invalid tmp[398724]))
              if call_tmp[592172]
              {
                (398740 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[511862] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[511863] "maybe param" "temp"
              unknown call_tmp[592177] "expr temp" "maybe param" "maybe type" "temp"
              (592180 'move' call_tmp[592177](398725 call isTrue tmp[398724]))
              (511868 'move' tmp[511863](511866 call _cond_test call_tmp[592177]))
              if tmp[511863]
              {
                unknown tmp[511870] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[592184] "expr temp" "maybe param" "maybe type" "temp"
                (592187 'move' call_tmp[592184](106756 call(106751 call (partial) dsiDim _mt[232] dom[106257]) dim[106375]))
                unknown call_tmp[592191] "expr temp" "maybe param" "maybe type" "temp"
                (592194 'move' call_tmp[592191](106757 call alignedHigh _mt[232] call_tmp[592184]))
                unknown call_tmp[592196] "expr temp" "maybe param" "maybe type" "temp"
                (592199 'move' call_tmp[592196](106760 call == j[106840] call_tmp[592191]))
                (511872 'move' tmp[511870](398728 call isTrue call_tmp[592196]))
                (511877 'move' tmp[511862](511874 '_paramFoldLogical' tmp[511863] tmp[511870]))
              }
              {
                (511882 'move' tmp[511862](511879 '_paramFoldLogical' tmp[511863] 0))
              }
              unknown call_tmp[592201] "expr temp" "maybe param" "maybe type" "temp"
              (592204 'move' call_tmp[592201](106739 call + dim[106375] 1))
              (106765 call recursiveArrayWriter idx[106369](dim = call_tmp[592201])(last = tmp[511862]))
              unknown tmp[398766] "maybe param" "temp"
              (398777 'move' tmp[398766] isjson[106425])
              unknown call_tmp[592206] "expr temp" "maybe param" "maybe type" "temp"
              (592209 'move' call_tmp[592206](398779 call _cond_invalid tmp[398766]))
              if call_tmp[592206]
              {
                (398782 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[511889] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[511890] "maybe param" "temp"
              unknown call_tmp[592211] "expr temp" "maybe param" "maybe type" "temp"
              (592214 'move' call_tmp[592211](398767 call isTrue tmp[398766]))
              (511895 'move' tmp[511890](511893 call _cond_test call_tmp[592211]))
              if tmp[511890]
              {
                (511900 'move' tmp[511889](511897 '_paramFoldLogical' tmp[511890] 1))
              }
              {
                unknown tmp[511902] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                (511904 'move' tmp[511902](398771 call isTrue ischpl[106437]))
                (511909 'move' tmp[511889](511906 '_paramFoldLogical' tmp[511890] tmp[511902]))
              }
              unknown call_tmp[592216] "expr temp" "maybe param" "maybe type" "temp"
              (592219 'move' call_tmp[592216](106810 call _cond_test tmp[511889]))
              if call_tmp[592216]
              {
                unknown call_tmp[592221] "expr temp" "maybe param" "maybe type" "temp"
                (592224 'move' call_tmp[592221](106773 call != j[106840] lastIdx[106722]))
                unknown call_tmp[592226] "expr temp" "maybe param" "maybe type" "temp"
                (592229 'move' call_tmp[592226](106805 call _cond_test call_tmp[592221]))
                if call_tmp[592226]
                {
                  unknown call_tmp[592231] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                  (592234 'move' call_tmp[592231](691398 'new' ioLiteral[226016] ",\n"))
                  (106796 call <~> f[106251] call_tmp[592231])
                  (106803 call writeSpaces dim[106375])
                }
              }
            }
            label _continueLabel[106819]
            _indexOfInterest[106814]
            _iterator[106815]
          }
          label _breakLabel[106820]
        }
      }
      unknown call_tmp[592236] "expr temp" "maybe param" "maybe type" "temp"
      (592239 'move' call_tmp[592236](106953 call _cond_test isspace[106413]))
      if call_tmp[592236]
      {
        unknown tmp[398787] "maybe param" "temp"
        (398798 'move' tmp[398787](106861 call ! last[106379]))
        unknown call_tmp[592241] "expr temp" "maybe param" "maybe type" "temp"
        (592244 'move' call_tmp[592241](398800 call _cond_invalid tmp[398787]))
        if call_tmp[592241]
        {
          (398803 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[511916] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511917] "maybe param" "temp"
        unknown call_tmp[592246] "expr temp" "maybe param" "maybe type" "temp"
        (592249 'move' call_tmp[592246](398788 call isTrue tmp[398787]))
        (511922 'move' tmp[511917](511920 call _cond_test call_tmp[592246]))
        if tmp[511917]
        {
          unknown tmp[511924] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[592251] "expr temp" "maybe param" "maybe type" "temp"
          (592254 'move' call_tmp[592251](106865 call != dim[106375] 1))
          (511926 'move' tmp[511924](398791 call isTrue call_tmp[592251]))
          (511931 'move' tmp[511916](511928 '_paramFoldLogical' tmp[511917] tmp[511924]))
        }
        {
          (511936 'move' tmp[511916](511933 '_paramFoldLogical' tmp[511917] 0))
        }
        unknown call_tmp[592256] "expr temp" "maybe param" "maybe type" "temp"
        (592259 'move' call_tmp[592256](106879 call _cond_test tmp[511916]))
        if call_tmp[592256]
        {
          unknown call_tmp[592261] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
          (592264 'move' call_tmp[592261](691399 'new' ioLiteral[226016] "\n"))
          (106875 call <~> f[106251] call_tmp[592261])
        }
      }
      {
        unknown tmp[398808] "maybe param" "temp"
        (398819 'move' tmp[398808] isjson[106425])
        unknown call_tmp[592266] "expr temp" "maybe param" "maybe type" "temp"
        (592269 'move' call_tmp[592266](398821 call _cond_invalid tmp[398808]))
        if call_tmp[592266]
        {
          (398824 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[511943] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[511944] "maybe param" "temp"
        unknown call_tmp[592271] "expr temp" "maybe param" "maybe type" "temp"
        (592274 'move' call_tmp[592271](398809 call isTrue tmp[398808]))
        (511949 'move' tmp[511944](511947 call _cond_test call_tmp[592271]))
        if tmp[511944]
        {
          (511954 'move' tmp[511943](511951 '_paramFoldLogical' tmp[511944] 1))
        }
        {
          unknown tmp[511956] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (511958 'move' tmp[511956](398813 call isTrue ischpl[106437]))
          (511963 'move' tmp[511943](511960 '_paramFoldLogical' tmp[511944] tmp[511956]))
        }
        unknown call_tmp[592276] "expr temp" "maybe param" "maybe type" "temp"
        (592279 'move' call_tmp[592276](106949 call _cond_test tmp[511943]))
        if call_tmp[592276]
        {
          unknown call_tmp[592281] "expr temp" "maybe param" "maybe type" "temp"
          (592284 'move' call_tmp[592281](106890 call != dim[106375] rank[106263]))
          unknown call_tmp[592286] "expr temp" "maybe param" "maybe type" "temp"
          (592289 'move' call_tmp[592286](106943 call _cond_test call_tmp[592281]))
          if call_tmp[592286]
          {
            unknown call_tmp[592291] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
            (592294 'move' call_tmp[592291](691400 'new' ioLiteral[226016] "\n"))
            (106898 call <~> f[106251] call_tmp[592291])
            unknown call_tmp[592296] "expr temp" "maybe param" "maybe type" "temp"
            (592299 'move' call_tmp[592296](106905 call - dim[106375] 1))
            (106908 call writeSpaces call_tmp[592296])
            unknown call_tmp[592301] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
            (592304 'move' call_tmp[592301](691401 'new' ioLiteral[226016] "]"))
            (106931 call <~> f[106251] call_tmp[592301])
          }
          {
            unknown call_tmp[592306] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
            (592309 'move' call_tmp[592306](691402 'new' ioLiteral[226016] "]"))
            (106940 call <~> f[106251] call_tmp[592306])
          }
        }
      }
      (466236 return _void[47])
    }
    unknown tmp[399081] "maybe param" "temp"
    unknown tmp[399102] "maybe param" "temp"
    unknown tmp[399123] "maybe param" "temp"
    unknown tmp[399144] "maybe param" "temp"
    unknown tmp[399165] "maybe param" "temp"
    (399176 'move' tmp[399165] 0)
    unknown call_tmp[592311] "expr temp" "maybe param" "maybe type" "temp"
    (592314 'move' call_tmp[592311](399178 call _cond_invalid tmp[399165]))
    if call_tmp[592311]
    {
      (399181 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511970] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511971] "maybe param" "temp"
    unknown call_tmp[592316] "expr temp" "maybe param" "maybe type" "temp"
    (592319 'move' call_tmp[592316](399166 call isTrue tmp[399165]))
    (511976 'move' tmp[511971](511974 call _cond_test call_tmp[592316]))
    if tmp[511971]
    {
      unknown tmp[511978] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[592323] "expr temp" "maybe param" "maybe type" "temp"
      (592326 'move' call_tmp[592323](106962 call writing _mt[232] f[106251]))
      unknown call_tmp[592328] "expr temp" "maybe param" "maybe type" "temp"
      (592331 'move' call_tmp[592328](106965 call ! call_tmp[592323]))
      (511980 'move' tmp[511978](399169 call isTrue call_tmp[592328]))
      (511985 'move' tmp[511970](511982 '_paramFoldLogical' tmp[511971] tmp[511978]))
    }
    {
      (511990 'move' tmp[511970](511987 '_paramFoldLogical' tmp[511971] 0))
    }
    (399155 'move' tmp[399144] tmp[511970])
    unknown call_tmp[592333] "expr temp" "maybe param" "maybe type" "temp"
    (592336 'move' call_tmp[592333](399157 call _cond_invalid tmp[399144]))
    if call_tmp[592333]
    {
      (399160 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[511997] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[511998] "maybe param" "temp"
    unknown call_tmp[592338] "expr temp" "maybe param" "maybe type" "temp"
    (592341 'move' call_tmp[592338](399145 call isTrue tmp[399144]))
    (512003 'move' tmp[511998](512001 call _cond_test call_tmp[592338]))
    if tmp[511998]
    {
      unknown tmp[512005] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[592345] "expr temp" "maybe param" "maybe type" "temp"
      (592348 'move' call_tmp[592345](106974 call(106970 call (partial) binary _mt[232] f[106251])))
      unknown call_tmp[592350] "expr temp" "maybe param" "maybe type" "temp"
      (592353 'move' call_tmp[592350](106975 call ! call_tmp[592345]))
      (512007 'move' tmp[512005](399148 call isTrue call_tmp[592350]))
      (512012 'move' tmp[511997](512009 '_paramFoldLogical' tmp[511998] tmp[512005]))
    }
    {
      (512017 'move' tmp[511997](512014 '_paramFoldLogical' tmp[511998] 0))
    }
    (399134 'move' tmp[399123] tmp[511997])
    unknown call_tmp[592355] "expr temp" "maybe param" "maybe type" "temp"
    (592358 'move' call_tmp[592355](399136 call _cond_invalid tmp[399123]))
    if call_tmp[592355]
    {
      (399139 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512024] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512025] "maybe param" "temp"
    unknown call_tmp[592360] "expr temp" "maybe param" "maybe type" "temp"
    (592363 'move' call_tmp[592360](399124 call isTrue tmp[399123]))
    (512030 'move' tmp[512025](512028 call _cond_test call_tmp[592360]))
    if tmp[512025]
    {
      unknown tmp[512032] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[592365] "expr temp" "maybe param" "maybe type" "temp"
      (592368 'move' call_tmp[592365](106981 call == rank[106263] 1))
      (512034 'move' tmp[512032](399127 call isTrue call_tmp[592365]))
      (512039 'move' tmp[512024](512036 '_paramFoldLogical' tmp[512025] tmp[512032]))
    }
    {
      (512044 'move' tmp[512024](512041 '_paramFoldLogical' tmp[512025] 0))
    }
    (399113 'move' tmp[399102] tmp[512024])
    unknown call_tmp[592370] "expr temp" "maybe param" "maybe type" "temp"
    (592373 'move' call_tmp[592370](399115 call _cond_invalid tmp[399102]))
    if call_tmp[592370]
    {
      (399118 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512051] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512052] "maybe param" "temp"
    unknown call_tmp[592375] "expr temp" "maybe param" "maybe type" "temp"
    (592378 'move' call_tmp[592375](399103 call isTrue tmp[399102]))
    (512057 'move' tmp[512052](512055 call _cond_test call_tmp[592375]))
    if tmp[512052]
    {
      unknown tmp[512059] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[592382] "expr temp" "maybe param" "maybe type" "temp"
      (592385 'move' call_tmp[592382](106991 call(106986 call (partial) dsiDim _mt[232] dom[106257]) 1))
      unknown call_tmp[592389] "expr temp" "maybe param" "maybe type" "temp"
      (592392 'move' call_tmp[592389](106992 call stride _mt[232] call_tmp[592382]))
      unknown call_tmp[592394] "expr temp" "maybe param" "maybe type" "temp"
      (592397 'move' call_tmp[592394](106996 call == call_tmp[592389] 1))
      (512061 'move' tmp[512059](399106 call isTrue call_tmp[592394]))
      (512066 'move' tmp[512051](512063 '_paramFoldLogical' tmp[512052] tmp[512059]))
    }
    {
      (512071 'move' tmp[512051](512068 '_paramFoldLogical' tmp[512052] 0))
    }
    (399092 'move' tmp[399081] tmp[512051])
    unknown call_tmp[592399] "expr temp" "maybe param" "maybe type" "temp"
    (592402 'move' call_tmp[592399](399094 call _cond_invalid tmp[399081]))
    if call_tmp[592399]
    {
      (399097 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512078] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512079] "maybe param" "temp"
    unknown call_tmp[592404] "expr temp" "maybe param" "maybe type" "temp"
    (592407 'move' call_tmp[592404](399082 call isTrue tmp[399081]))
    (512084 'move' tmp[512079](512082 call _cond_test call_tmp[592404]))
    if tmp[512079]
    {
      unknown tmp[512086] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[592411] "expr temp" "maybe param" "maybe type" "temp"
      (592414 'move' call_tmp[592411](107003 call _arrs _mt[232] dom[106257]))
      unknown call_tmp[592418] "expr temp" "maybe param" "maybe type" "temp"
      (592421 'move' call_tmp[592418](107006 call length _mt[232] call_tmp[592411]))
      unknown call_tmp[592423] "expr temp" "maybe param" "maybe type" "temp"
      (592426 'move' call_tmp[592423](107010 call == call_tmp[592418] 1))
      (512088 'move' tmp[512086](399085 call isTrue call_tmp[592423]))
      (512093 'move' tmp[512078](512090 '_paramFoldLogical' tmp[512079] tmp[512086]))
    }
    {
      (512098 'move' tmp[512078](512095 '_paramFoldLogical' tmp[512079] 0))
    }
    unknown call_tmp[592428] "expr temp" "maybe param" "maybe type" "temp"
    (592431 'move' call_tmp[592428](107754 call _cond_test tmp[512078]))
    if call_tmp[592428]
    {
      unknown call_tmp[592435] "maybe param" "maybe type" "temp"
      (592438 'move' call_tmp[592435](107019 call(107015 call (partial) binary _mt[232] f[106251])))
      unknown binary[107020] "insert auto destroy"
      (490898 'init var' binary[107020] call_tmp[592435])
      unknown call_tmp[592442] "maybe param" "maybe type" "temp"
      (592445 'move' call_tmp[592442](107030 call(107025 call (partial) styleElement _mt[232] f[106251]) QIO_STYLE_ELEMENT_ARRAY[19366]))
      unknown arrayStyle[107031] "insert auto destroy"
      (490900 'init var' arrayStyle[107031] call_tmp[592442])
      unknown tmp[398829] "maybe param" "temp"
      (398840 'move' tmp[398829](107036 call == arrayStyle[107031] QIO_ARRAY_FORMAT_SPACE[19390]))
      unknown call_tmp[592447] "expr temp" "maybe param" "maybe type" "temp"
      (592450 'move' call_tmp[592447](398842 call _cond_invalid tmp[398829]))
      if call_tmp[592447]
      {
        (398845 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown isspace[107043] "insert auto destroy"
      unknown tmp[512105] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512106] "maybe param" "temp"
      unknown call_tmp[592452] "expr temp" "maybe param" "maybe type" "temp"
      (592455 'move' call_tmp[592452](398830 call isTrue tmp[398829]))
      (512111 'move' tmp[512106](512109 call _cond_test call_tmp[592452]))
      if tmp[512106]
      {
        unknown tmp[512113] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592457] "expr temp" "maybe param" "maybe type" "temp"
        (592460 'move' call_tmp[592457](107039 call ! binary[107020]))
        (512115 'move' tmp[512113](398833 call isTrue call_tmp[592457]))
        (512120 'move' tmp[512105](512117 '_paramFoldLogical' tmp[512106] tmp[512113]))
      }
      {
        (512125 'move' tmp[512105](512122 '_paramFoldLogical' tmp[512106] 0))
      }
      (490902 'init var' isspace[107043] tmp[512105])
      unknown tmp[398850] "maybe param" "temp"
      (398861 'move' tmp[398850](107048 call == arrayStyle[107031] QIO_ARRAY_FORMAT_JSON[19398]))
      unknown call_tmp[592462] "expr temp" "maybe param" "maybe type" "temp"
      (592465 'move' call_tmp[592462](398863 call _cond_invalid tmp[398850]))
      if call_tmp[592462]
      {
        (398866 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown isjson[107055] "insert auto destroy"
      unknown tmp[512132] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512133] "maybe param" "temp"
      unknown call_tmp[592467] "expr temp" "maybe param" "maybe type" "temp"
      (592470 'move' call_tmp[592467](398851 call isTrue tmp[398850]))
      (512138 'move' tmp[512133](512136 call _cond_test call_tmp[592467]))
      if tmp[512133]
      {
        unknown tmp[512140] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592472] "expr temp" "maybe param" "maybe type" "temp"
        (592475 'move' call_tmp[592472](107051 call ! binary[107020]))
        (512142 'move' tmp[512140](398854 call isTrue call_tmp[592472]))
        (512147 'move' tmp[512132](512144 '_paramFoldLogical' tmp[512133] tmp[512140]))
      }
      {
        (512152 'move' tmp[512132](512149 '_paramFoldLogical' tmp[512133] 0))
      }
      (490904 'init var' isjson[107055] tmp[512132])
      unknown tmp[398871] "maybe param" "temp"
      (398882 'move' tmp[398871](107060 call == arrayStyle[107031] QIO_ARRAY_FORMAT_CHPL[19394]))
      unknown call_tmp[592477] "expr temp" "maybe param" "maybe type" "temp"
      (592480 'move' call_tmp[592477](398884 call _cond_invalid tmp[398871]))
      if call_tmp[592477]
      {
        (398887 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown ischpl[107067] "insert auto destroy"
      unknown tmp[512159] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512160] "maybe param" "temp"
      unknown call_tmp[592482] "expr temp" "maybe param" "maybe type" "temp"
      (592485 'move' call_tmp[592482](398872 call isTrue tmp[398871]))
      (512165 'move' tmp[512160](512163 call _cond_test call_tmp[592482]))
      if tmp[512160]
      {
        unknown tmp[512167] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592487] "expr temp" "maybe param" "maybe type" "temp"
        (592490 'move' call_tmp[592487](107063 call ! binary[107020]))
        (512169 'move' tmp[512167](398875 call isTrue call_tmp[592487]))
        (512174 'move' tmp[512159](512171 '_paramFoldLogical' tmp[512160] tmp[512167]))
      }
      {
        (512179 'move' tmp[512159](512176 '_paramFoldLogical' tmp[512160] 0))
      }
      (490906 'init var' ischpl[107067] tmp[512159])
      unknown tmp[398892] "maybe param" "temp"
      (398903 'move' tmp[398892] isjson[107055])
      unknown call_tmp[592492] "expr temp" "maybe param" "maybe type" "temp"
      (592495 'move' call_tmp[592492](398905 call _cond_invalid tmp[398892]))
      if call_tmp[592492]
      {
        (398908 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[512186] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512187] "maybe param" "temp"
      unknown call_tmp[592497] "expr temp" "maybe param" "maybe type" "temp"
      (592500 'move' call_tmp[592497](398893 call isTrue tmp[398892]))
      (512192 'move' tmp[512187](512190 call _cond_test call_tmp[592497]))
      if tmp[512187]
      {
        (512197 'move' tmp[512186](512194 '_paramFoldLogical' tmp[512187] 1))
      }
      {
        unknown tmp[512199] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (512201 'move' tmp[512199](398897 call isTrue ischpl[107067]))
        (512206 'move' tmp[512186](512203 '_paramFoldLogical' tmp[512187] tmp[512199]))
      }
      unknown call_tmp[592502] "expr temp" "maybe param" "maybe type" "temp"
      (592505 'move' call_tmp[592502](107084 call _cond_test tmp[512186]))
      if call_tmp[592502]
      {
        unknown call_tmp[592507] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (592510 'move' call_tmp[592507](691403 'new' ioLiteral[226016] "["))
        (107080 call <~> f[106251] call_tmp[592507])
      }
      unknown first[107089] "insert auto destroy"
      (490908 'init var' first[107089] 1)
      unknown call_tmp[592514] "expr temp" "maybe param" "maybe type" "temp"
      (592517 'move' call_tmp[592514](107098 call(107093 call (partial) dsiDim _mt[232] dom[106257]) 1))
      unknown call_tmp[592521] "maybe param" "maybe type" "temp"
      (592524 'move' call_tmp[592521](107099 call low _mt[232] call_tmp[592514]))
      unknown offset[107102] "insert auto destroy"
      (490910 'init var' offset[107102] call_tmp[592521])
      unknown i[107106] "insert auto destroy"
      (490912 'init var' i[107106] 0)
      unknown read_end[107110] "insert auto destroy"
      (490914 'init var' read_end[107110] 0)
      {
        unknown tmp[107377] "temp"
        unknown call_tmp[592528] "expr temp" "maybe param" "maybe type" "temp"
        (592531 'move' call_tmp[592528](107406 call(107403 call (partial) error _mt[232] f[106251])))
        unknown call_tmp[592533] "expr temp" "maybe param" "maybe type" "temp"
        (592536 'move' call_tmp[592533](107401 call ! call_tmp[592528]))
        (107407 'move' tmp[107377](107399 call _cond_test call_tmp[592533]))
        WhileDo
        {
          {
            unknown call_tmp[592538] "expr temp" "maybe param" "maybe type" "temp"
            (592541 'move' call_tmp[592538](107254 call _cond_test first[107089]))
            if call_tmp[592538]
            {
              (107124 call = first[107089] 0)
              unknown tmp[398913] "maybe param" "temp"
              (398924 'move' tmp[398913] isjson[107055])
              unknown call_tmp[592543] "expr temp" "maybe param" "maybe type" "temp"
              (592546 'move' call_tmp[592543](398926 call _cond_invalid tmp[398913]))
              if call_tmp[592543]
              {
                (398929 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[512213] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[512214] "maybe param" "temp"
              unknown call_tmp[592548] "expr temp" "maybe param" "maybe type" "temp"
              (592551 'move' call_tmp[592548](398914 call isTrue tmp[398913]))
              (512219 'move' tmp[512214](512217 call _cond_test call_tmp[592548]))
              if tmp[512214]
              {
                (512224 'move' tmp[512213](512221 '_paramFoldLogical' tmp[512214] 1))
              }
              {
                unknown tmp[512226] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                (512228 'move' tmp[512226](398918 call isTrue ischpl[107067]))
                (512233 'move' tmp[512213](512230 '_paramFoldLogical' tmp[512214] tmp[512226]))
              }
              unknown call_tmp[592553] "expr temp" "maybe param" "maybe type" "temp"
              (592556 'move' call_tmp[592553](107158 call _cond_test tmp[512213]))
              if call_tmp[592553]
              {
                unknown call_tmp[592558] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (592561 'move' call_tmp[592558](691404 'new' ioLiteral[226016] "]"))
                (107138 call <~> f[106251] call_tmp[592558])
              }
              {
                unknown call_tmp[592563] "expr temp" "maybe param" "maybe type" "temp"
                (592566 'move' call_tmp[592563](107154 call _cond_test isspace[107043]))
                if call_tmp[592563]
                {
                  unknown call_tmp[592568] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                  (592571 'move' call_tmp[592568](691405 'new' ioNewline[225966](skipWhitespaceOnly = 1)))
                  (107150 call <~> f[106251] call_tmp[592568])
                }
              }
              unknown call_tmp[592575] "expr temp" "maybe param" "maybe type" "temp"
              (592578 'move' call_tmp[592575](107168 call(107164 call (partial) error _mt[232] f[106251])))
              unknown call_tmp[592580] "expr temp" "maybe param" "maybe type" "temp"
              (592583 'move' call_tmp[592580](349802 call EFORMAT[210730]))
              unknown call_tmp[592585] "expr temp" "maybe param" "maybe type" "temp"
              (592588 'move' call_tmp[592585](107170 call == call_tmp[592575] call_tmp[592580]))
              unknown call_tmp[592590] "expr temp" "maybe param" "maybe type" "temp"
              (592593 'move' call_tmp[592590](107191 call _cond_test call_tmp[592585]))
              if call_tmp[592590]
              {
                (107179 call(107175 call (partial) clearError _mt[232] f[106251]))
              }
              {
                (107184 call = read_end[107110] 1)
                break _breakLabel[107381] _breakLabel[107381]
              }
            }
            {
              unknown call_tmp[592597] "expr temp" "maybe param" "maybe type" "temp"
              (592600 'move' call_tmp[592597](107223 call _cond_test isspace[107043]))
              if call_tmp[592597]
              {
                unknown call_tmp[592602] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (592605 'move' call_tmp[592602](691406 'new' ioLiteral[226016] " "))
                (107202 call <~> f[106251] call_tmp[592602])
              }
              {
                unknown tmp[398934] "maybe param" "temp"
                (398945 'move' tmp[398934] isjson[107055])
                unknown call_tmp[592607] "expr temp" "maybe param" "maybe type" "temp"
                (592610 'move' call_tmp[592607](398947 call _cond_invalid tmp[398934]))
                if call_tmp[592607]
                {
                  (398950 call compilerError "cannot promote short-circuiting || operator")
                }
                unknown tmp[512240] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                unknown tmp[512241] "maybe param" "temp"
                unknown call_tmp[592612] "expr temp" "maybe param" "maybe type" "temp"
                (592615 'move' call_tmp[592612](398935 call isTrue tmp[398934]))
                (512246 'move' tmp[512241](512244 call _cond_test call_tmp[592612]))
                if tmp[512241]
                {
                  (512251 'move' tmp[512240](512248 '_paramFoldLogical' tmp[512241] 1))
                }
                {
                  unknown tmp[512253] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                  (512255 'move' tmp[512253](398939 call isTrue ischpl[107067]))
                  (512260 'move' tmp[512240](512257 '_paramFoldLogical' tmp[512241] tmp[512253]))
                }
                unknown call_tmp[592617] "expr temp" "maybe param" "maybe type" "temp"
                (592620 'move' call_tmp[592617](107218 call _cond_test tmp[512240]))
                if call_tmp[592617]
                {
                  unknown call_tmp[592622] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                  (592625 'move' call_tmp[592622](691407 'new' ioLiteral[226016] ","))
                  (107215 call <~> f[106251] call_tmp[592622])
                }
              }
              unknown call_tmp[592629] "expr temp" "maybe param" "maybe type" "temp"
              (592632 'move' call_tmp[592629](107235 call(107231 call (partial) error _mt[232] f[106251])))
              unknown call_tmp[592634] "expr temp" "maybe param" "maybe type" "temp"
              (592637 'move' call_tmp[592634](349814 call EFORMAT[210730]))
              unknown call_tmp[592639] "expr temp" "maybe param" "maybe type" "temp"
              (592642 'move' call_tmp[592639](107237 call == call_tmp[592629] call_tmp[592634]))
              unknown call_tmp[592644] "expr temp" "maybe param" "maybe type" "temp"
              (592647 'move' call_tmp[592644](107250 call _cond_test call_tmp[592639]))
              if call_tmp[592644]
              {
                (107244 call(107240 call (partial) clearError _mt[232] f[106251]))
                break _breakLabel[107381] _breakLabel[107381]
              }
            }
            unknown call_tmp[592653] "expr temp" "maybe param" "maybe type" "temp"
            (592656 'move' call_tmp[592653](107266 call(107261 call (partial) dsiDim _mt[232] dom[106257]) 1))
            unknown call_tmp[592660] "expr temp" "maybe param" "maybe type" "temp"
            (592663 'move' call_tmp[592660](107267 call size _mt[232] call_tmp[592653]))
            unknown call_tmp[592665] "expr temp" "maybe param" "maybe type" "temp"
            (592668 'move' call_tmp[592665](107270 call >= i[107106] call_tmp[592660]))
            unknown call_tmp[592670] "expr temp" "maybe param" "maybe type" "temp"
            (592673 'move' call_tmp[592670](107354 call _cond_test call_tmp[592665]))
            if call_tmp[592670]
            {
              unknown call_tmp[592677] "expr temp" "maybe param" "maybe type" "temp"
              (592680 'move' call_tmp[592677](107278 call(107273 call (partial) dsiDim _mt[232] dom[106257]) 1))
              unknown call_tmp[592684] "maybe param" "maybe type" "temp"
              (592687 'move' call_tmp[592684](107279 call size _mt[232] call_tmp[592677]))
              unknown sz[107282] "insert auto destroy"
              (490916 'init var' sz[107282] call_tmp[592684])
              unknown call_tmp[592689] "expr temp" "maybe param" "maybe type" "temp"
              (592692 'move' call_tmp[592689](107288 call < sz[107282] 4))
              unknown call_tmp[592694] "expr temp" "maybe param" "maybe type" "temp"
              (592697 'move' call_tmp[592694](107295 call _cond_test call_tmp[592689]))
              if call_tmp[592694]
              {
                (107292 call = sz[107282] 4)
              }
              unknown call_tmp[592699] "expr temp" "maybe param" "maybe type" "temp"
              (592702 'move' call_tmp[592699](107303 call * 2 sz[107282]))
              (107305 call = sz[107282] call_tmp[592699])
              unknown call_tmp[592704] "expr temp" "maybe param" "maybe type" "temp"
              (592707 'move' call_tmp[592704](107309 call chpl_build_low_bounded_range offset[107102]))
              unknown call_tmp[592709] "expr temp" "maybe param" "maybe type" "temp"
              (592712 'move' call_tmp[592709](107312 call # call_tmp[592704] sz[107282]))
              unknown call_tmp[592714] "maybe param" "maybe type" "temp"
              (592717 'move' call_tmp[592714](107315 call chpl__buildDomainExpr call_tmp[592709]))
              const newDom[107317] "const" "insert auto destroy"
              (490918 'init var' newDom[107317] call_tmp[592714])
              (107328 call(107323 call (partial) dsiReallocate _mt[232] arr[106255]) newDom[107317])
              unknown call_tmp[592725] "expr temp" "maybe param" "maybe type" "temp"
              (592728 'move' call_tmp[592725](107341 call(107337 call (partial) getIndices _mt[232] newDom[107317])))
              (107343 call(107331 call (partial) dsiSetIndices _mt[232] dom[106257]) call_tmp[592725])
              (107352 call(107348 call (partial) dsiPostReallocate _mt[232] arr[106255]))
            }
            unknown call_tmp[592734] "expr temp" "maybe param" "maybe type" "temp"
            (592737 'move' call_tmp[592734](107365 call + offset[107102] i[107106]))
            unknown call_tmp[592739] "expr temp" "maybe param" "maybe type" "temp"
            (592742 'move' call_tmp[592739](107368 call(107360 call (partial) dsiAccess _mt[232] arr[106255]) call_tmp[592734]))
            (107369 call <~> f[106251] call_tmp[592739])
            (107374 call += i[107106] 1)
          }
          label _continueLabel[107380]
          unknown call_tmp[592746] "expr temp" "maybe param" "maybe type" "temp"
          (592749 'move' call_tmp[592746](107393 call(107390 call (partial) error _mt[232] f[106251])))
          unknown call_tmp[592751] "expr temp" "maybe param" "maybe type" "temp"
          (592754 'move' call_tmp[592751](107388 call ! call_tmp[592746]))
          (107394 'move' tmp[107377](107386 call _cond_test call_tmp[592751]))
          tmp[107377]
        }
        label _breakLabel[107381]
      }
      unknown call_tmp[592756] "expr temp" "maybe param" "maybe type" "temp"
      (592759 'move' call_tmp[592756](107411 call ! read_end[107110]))
      unknown call_tmp[592761] "expr temp" "maybe param" "maybe type" "temp"
      (592764 'move' call_tmp[592761](107432 call _cond_test call_tmp[592756]))
      if call_tmp[592761]
      {
        unknown tmp[398955] "maybe param" "temp"
        (398966 'move' tmp[398955] isjson[107055])
        unknown call_tmp[592766] "expr temp" "maybe param" "maybe type" "temp"
        (592769 'move' call_tmp[592766](398968 call _cond_invalid tmp[398955]))
        if call_tmp[592766]
        {
          (398971 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[512267] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[512268] "maybe param" "temp"
        unknown call_tmp[592771] "expr temp" "maybe param" "maybe type" "temp"
        (592774 'move' call_tmp[592771](398956 call isTrue tmp[398955]))
        (512273 'move' tmp[512268](512271 call _cond_test call_tmp[592771]))
        if tmp[512268]
        {
          (512278 'move' tmp[512267](512275 '_paramFoldLogical' tmp[512268] 1))
        }
        {
          unknown tmp[512280] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (512282 'move' tmp[512280](398960 call isTrue ischpl[107067]))
          (512287 'move' tmp[512267](512284 '_paramFoldLogical' tmp[512268] tmp[512280]))
        }
        unknown call_tmp[592776] "expr temp" "maybe param" "maybe type" "temp"
        (592779 'move' call_tmp[592776](107427 call _cond_test tmp[512267]))
        if call_tmp[592776]
        {
          unknown call_tmp[592781] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
          (592784 'move' call_tmp[592781](691408 'new' ioLiteral[226016] "]"))
          (107423 call <~> f[106251] call_tmp[592781])
        }
      }
      {
        unknown call_tmp[592786] "expr temp" "maybe param" "maybe type" "temp"
        (592789 'move' call_tmp[592786](107437 call chpl_build_low_bounded_range offset[107102]))
        unknown call_tmp[592791] "expr temp" "maybe param" "maybe type" "temp"
        (592794 'move' call_tmp[592791](107440 call # call_tmp[592786] i[107106]))
        unknown call_tmp[592796] "maybe param" "maybe type" "temp"
        (592799 'move' call_tmp[592796](107443 call chpl__buildDomainExpr call_tmp[592791]))
        const newDom[107445] "const" "insert auto destroy"
        (490920 'init var' newDom[107445] call_tmp[592796])
        (107455 call(107450 call (partial) dsiReallocate _mt[232] arr[106255]) newDom[107445])
        unknown call_tmp[592807] "expr temp" "maybe param" "maybe type" "temp"
        (592810 'move' call_tmp[592807](107466 call(107462 call (partial) getIndices _mt[232] newDom[107445])))
        (107468 call(107458 call (partial) dsiSetIndices _mt[232] dom[106257]) call_tmp[592807])
        (107475 call(107471 call (partial) dsiPostReallocate _mt[232] arr[106255]))
      }
    }
    {
      unknown tmp[398976] "maybe param" "temp"
      unknown tmp[398997] "maybe param" "temp"
      unknown tmp[399018] "maybe param" "temp"
      unknown tmp[399039] "maybe param" "temp"
      unknown tmp[399060] "maybe param" "temp"
      (399071 'move' tmp[399060](107484 call(107480 call (partial) isDefaultRectangular _mt[232] arr[106255])))
      unknown call_tmp[592816] "expr temp" "maybe param" "maybe type" "temp"
      (592819 'move' call_tmp[592816](399073 call _cond_invalid tmp[399060]))
      if call_tmp[592816]
      {
        (399076 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[512294] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512295] "maybe param" "temp"
      unknown call_tmp[592821] "expr temp" "maybe param" "maybe type" "temp"
      (592824 'move' call_tmp[592821](399061 call isTrue tmp[399060]))
      (512300 'move' tmp[512295](512298 call _cond_test call_tmp[592821]))
      if tmp[512295]
      {
        unknown tmp[512302] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592826] "expr temp" "maybe param" "maybe type" "temp"
        (592829 'move' call_tmp[592826](107488 call chpl__isArrayView arr[106255]))
        unknown call_tmp[592831] "expr temp" "maybe param" "maybe type" "temp"
        (592834 'move' call_tmp[592831](107489 call ! call_tmp[592826]))
        (512304 'move' tmp[512302](399064 call isTrue call_tmp[592831]))
        (512309 'move' tmp[512294](512306 '_paramFoldLogical' tmp[512295] tmp[512302]))
      }
      {
        (512314 'move' tmp[512294](512311 '_paramFoldLogical' tmp[512295] 0))
      }
      (399050 'move' tmp[399039] tmp[512294])
      unknown call_tmp[592836] "expr temp" "maybe param" "maybe type" "temp"
      (592839 'move' call_tmp[592836](399052 call _cond_invalid tmp[399039]))
      if call_tmp[592836]
      {
        (399055 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[512321] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512322] "maybe param" "temp"
      unknown call_tmp[592841] "expr temp" "maybe param" "maybe type" "temp"
      (592844 'move' call_tmp[592841](399040 call isTrue tmp[399039]))
      (512327 'move' tmp[512322](512325 call _cond_test call_tmp[592841]))
      if tmp[512322]
      {
        unknown tmp[512329] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592848] "expr temp" "maybe param" "maybe type" "temp"
        (592851 'move' call_tmp[592848](107495 call eltType _mt[232] arr[106255]))
        unknown call_tmp[592853] "expr temp" "maybe param" "maybe type" "temp"
        (592856 'move' call_tmp[592853](107499 call _isSimpleIoType call_tmp[592848]))
        (512331 'move' tmp[512329](399043 call isTrue call_tmp[592853]))
        (512336 'move' tmp[512321](512333 '_paramFoldLogical' tmp[512322] tmp[512329]))
      }
      {
        (512341 'move' tmp[512321](512338 '_paramFoldLogical' tmp[512322] 0))
      }
      (399029 'move' tmp[399018] tmp[512321])
      unknown call_tmp[592858] "expr temp" "maybe param" "maybe type" "temp"
      (592861 'move' call_tmp[592858](399031 call _cond_invalid tmp[399018]))
      if call_tmp[592858]
      {
        (399034 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[512348] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512349] "maybe param" "temp"
      unknown call_tmp[592863] "expr temp" "maybe param" "maybe type" "temp"
      (592866 'move' call_tmp[592863](399019 call isTrue tmp[399018]))
      (512354 'move' tmp[512349](512352 call _cond_test call_tmp[592863]))
      if tmp[512349]
      {
        unknown tmp[512356] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592870] "expr temp" "maybe param" "maybe type" "temp"
        (592873 'move' call_tmp[592870](107507 call(107503 call (partial) binary _mt[232] f[106251])))
        (512358 'move' tmp[512356](399022 call isTrue call_tmp[592870]))
        (512363 'move' tmp[512348](512360 '_paramFoldLogical' tmp[512349] tmp[512356]))
      }
      {
        (512368 'move' tmp[512348](512365 '_paramFoldLogical' tmp[512349] 0))
      }
      (399008 'move' tmp[398997] tmp[512348])
      unknown call_tmp[592875] "expr temp" "maybe param" "maybe type" "temp"
      (592878 'move' call_tmp[592875](399010 call _cond_invalid tmp[398997]))
      if call_tmp[592875]
      {
        (399013 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[512375] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512376] "maybe param" "temp"
      unknown call_tmp[592880] "expr temp" "maybe param" "maybe type" "temp"
      (592883 'move' call_tmp[592880](398998 call isTrue tmp[398997]))
      (512381 'move' tmp[512376](512379 call _cond_test call_tmp[592880]))
      if tmp[512376]
      {
        unknown tmp[512383] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (512385 'move' tmp[512383](399001 call isTrue isNative[106296]))
        (512390 'move' tmp[512375](512387 '_paramFoldLogical' tmp[512376] tmp[512383]))
      }
      {
        (512395 'move' tmp[512375](512392 '_paramFoldLogical' tmp[512376] 0))
      }
      (398987 'move' tmp[398976] tmp[512375])
      unknown call_tmp[592885] "expr temp" "maybe param" "maybe type" "temp"
      (592888 'move' call_tmp[592885](398989 call _cond_invalid tmp[398976]))
      if call_tmp[592885]
      {
        (398992 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[512402] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512403] "maybe param" "temp"
      unknown call_tmp[592890] "expr temp" "maybe param" "maybe type" "temp"
      (592893 'move' call_tmp[592890](398977 call isTrue tmp[398976]))
      (512408 'move' tmp[512403](512406 call _cond_test call_tmp[592890]))
      if tmp[512403]
      {
        unknown tmp[512410] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[592897] "expr temp" "maybe param" "maybe type" "temp"
        (592900 'move' call_tmp[592897](107521 call(107516 call (partial) isDataContiguous _mt[232] arr[106255]) dom[106257]))
        (512412 'move' tmp[512410](398980 call isTrue call_tmp[592897]))
        (512417 'move' tmp[512402](512414 '_paramFoldLogical' tmp[512403] tmp[512410]))
      }
      {
        (512422 'move' tmp[512402](512419 '_paramFoldLogical' tmp[512403] 0))
      }
      unknown call_tmp[592902] "expr temp" "maybe param" "maybe type" "temp"
      (592905 'move' call_tmp[592902](107750 call _cond_test tmp[512402]))
      if call_tmp[592902]
      {
        unknown call_tmp[592909] "expr temp" "maybe param" "maybe type" "temp"
        (592912 'move' call_tmp[592909](107526 call eltType _mt[232] arr[106255]))
        unknown call_tmp[592914] "maybe param" "maybe type" "temp"
        (592917 'move' call_tmp[592914](107530 call c_sizeof call_tmp[592909]))
        const elemSize[107531] "const" "insert auto destroy"
        (490922 'init var' elemSize[107531] call_tmp[592914])
        unknown call_tmp[592919] "expr temp" "maybe param" "maybe type" "temp"
        (592922 'move' call_tmp[592919](107608 call _cond_test 1))
        if call_tmp[592919]
        {
          unknown rw[107545] "insert auto destroy"
          unknown tmp[512429] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[512430] "maybe param" "temp"
          unknown call_tmp[592926] "expr temp" "maybe param" "maybe type" "temp"
          (592929 'move' call_tmp[592926](107537 call writing _mt[232] f[106251]))
          (512435 'move' tmp[512430](512433 call _cond_test call_tmp[592926]))
          if tmp[512430]
          {
            (512440 'move' tmp[512429](512437 '_paramFoldLogical' tmp[512430] "write"))
          }
          {
            (512445 'move' tmp[512429](512442 '_paramFoldLogical' tmp[512430] "read"))
          }
          (490924 'init var' rw[107545] tmp[512429])
          unknown call_tmp[592933] "expr temp" "maybe param" "maybe type" "temp"
          (592936 'move' call_tmp[592933](107551 call dsiNumIndices _mt[232] dom[106257]))
          unknown call_tmp[592938] "expr temp" "maybe param" "maybe type" "temp"
          (592941 'move' call_tmp[592938](107555 call _cast uint(64)[107] call_tmp[592933]))
          unknown call_tmp[592943] "expr temp" "maybe param" "maybe type" "temp"
          (592946 'move' call_tmp[592943](107559 call _cast uint(64)[107] elemSize[107531]))
          unknown call_tmp[592948] "expr temp" "maybe param" "maybe type" "temp"
          (592951 'move' call_tmp[592948](107561 call * call_tmp[592938] call_tmp[592943]))
          unknown call_tmp[592953] "expr temp" "maybe param" "maybe type" "temp"
          (592956 'move' call_tmp[592953](107566 call max ssize_t[209667]))
          unknown call_tmp[592958] "expr temp" "maybe param" "maybe type" "temp"
          (592961 'move' call_tmp[592958](107568 call _cast uint(64)[107] call_tmp[592953]))
          unknown call_tmp[592963] "expr temp" "maybe param" "maybe type" "temp"
          (592966 'move' call_tmp[592963](107570 call <= call_tmp[592948] call_tmp[592958]))
          (107606 call assert call_tmp[592963] "length of array to " rw[107545] " is greater than ssize_t can hold")
        }
        unknown call_tmp[592970] "maybe param" "maybe type" "temp"
        (592973 'move' call_tmp[592970](107613 call dsiNumIndices _mt[232] dom[106257]))
        const len[107616] "const" "insert auto destroy"
        (490926 'init var' len[107616] call_tmp[592970])
        unknown call_tmp[592977] "maybe param" "maybe type" "temp"
        (592980 'move' call_tmp[592977](107620 call theData _mt[232] arr[106255]))
        const src[107623] "const" "insert auto destroy"
        (490928 'init var' src[107623] call_tmp[592977])
        unknown call_tmp[592986] "expr temp" "maybe param" "maybe type" "temp"
        (592989 'move' call_tmp[592986](107631 call dsiLow _mt[232] dom[106257]))
        unknown call_tmp[592991] "maybe param" "maybe type" "temp"
        (592994 'move' call_tmp[592991](107635 call(107627 call (partial) getDataIndex _mt[232] arr[106255]) call_tmp[592986]))
        const idx[107636] "const" "insert auto destroy"
        (490930 'init var' idx[107636] call_tmp[592991])
        unknown call_tmp[592996] "expr temp" "maybe param" "maybe type" "temp"
        (592999 'move' call_tmp[592996](107641 call _cast ssize_t[209667] len[107616]))
        unknown call_tmp[593001] "expr temp" "maybe param" "maybe type" "temp"
        (593004 'move' call_tmp[593001](107645 call _cast ssize_t[209667] elemSize[107531]))
        unknown call_tmp[593006] "maybe param" "maybe type" "temp"
        (593009 'move' call_tmp[593006](107647 call * call_tmp[592996] call_tmp[593001]))
        const size[107649] "const" "insert auto destroy"
        (490932 'init var' size[107649] call_tmp[593006])
        Try
        {
          {
            unknown call_tmp[593013] "expr temp" "maybe param" "maybe type" "temp"
            (593016 'move' call_tmp[593013](107653 call writing _mt[232] f[106251]))
            unknown call_tmp[593018] "expr temp" "maybe param" "maybe type" "temp"
            (593021 'move' call_tmp[593018](107696 call _cond_test call_tmp[593013]))
            if call_tmp[593018]
            {
              unknown call_tmp[593027] "expr temp" "maybe param" "maybe type" "temp"
              (593030 'move' call_tmp[593027](107664 call eltType _mt[232] arr[106255]))
              unknown call_tmp[593032] "expr temp" "maybe param" "maybe type" "temp"
              (593035 'move' call_tmp[593032](107670 call _ddata_shift call_tmp[593027] src[107623] idx[107636]))
              (107673 call(107659 call (partial) writeBytes _mt[232] f[106251]) call_tmp[593032] size[107649])
            }
            {
              unknown call_tmp[593041] "expr temp" "maybe param" "maybe type" "temp"
              (593044 'move' call_tmp[593041](107684 call eltType _mt[232] arr[106255]))
              unknown call_tmp[593046] "expr temp" "maybe param" "maybe type" "temp"
              (593049 'move' call_tmp[593046](107690 call _ddata_shift call_tmp[593041] src[107623] idx[107636]))
              (107693 call(107679 call (partial) readBytes _mt[232] f[106251]) call_tmp[593046] size[107649])
            }
          }
        }
        Catch e : anymanaged SystemError
        {
          unknown call_tmp[593051] "expr temp" "maybe param" "maybe type" "temp"
          (593054 'move' call_tmp[593051](328506 'current error'))
          unknown call_tmp[593056] "maybe param" "maybe type" "temp"
          (593059 'move' call_tmp[593056](328507 'dynamic_cast' unmanaged SystemError[390112] call_tmp[593051]))
          unknown tmp[328504] "insert auto destroy" "temp"
          (490934 'init var' tmp[328504] call_tmp[593056])
          unknown call_tmp[593061] "expr temp" "maybe param" "maybe type" "temp"
          (593064 'move' call_tmp[593061](328516 '!=' tmp[328504] nil[38]))
          if call_tmp[593061]
          {
            unknown call_tmp[593066] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
            (593069 'move' call_tmp[593066](691409 'new' _owned[39039](?) tmp[328504]))
            unknown e[328522] "insert auto destroy"
            (490936 'init var' e[328522] call_tmp[593066])
            {
              unknown call_tmp[593075] "expr temp" "maybe param" "maybe type" "temp"
              (593078 'move' call_tmp[593075](107714 call err _mt[232] e[328522]))
              (107718 call(107708 call (partial) setError _mt[232] f[106251]) call_tmp[593075])
            }
          }
          {
          }
        }
        Catch
        {
          unknown call_tmp[593080] "maybe param" "maybe type" "temp"
          (593083 'move' call_tmp[593080](328531 'current error'))
          unknown tmp[328529] "insert auto destroy" "temp"
          (490938 'init var' tmp[328529] call_tmp[593080])
          unknown call_tmp[593085] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
          (593088 'move' call_tmp[593085](691410 'new' _owned[39039](?) tmp[328529]))
          unknown chpl_anon_error[328534] "insert auto destroy"
          (490940 'init var' chpl_anon_error[328534] call_tmp[593085])
          {
            unknown call_tmp[593092] "expr temp" "maybe param" "maybe type" "temp"
            (593095 'move' call_tmp[593092](107728 call _cast syserr[210032] EINVAL[210884]))
            (107731 call(107723 call (partial) setError _mt[232] f[106251]) call_tmp[593092])
          }
        }
      }
      {
        const zeroTup[107741] "const" "insert auto destroy"
        unknown call_tmp[593097] "expr temp" "maybe param" "maybe type" "temp"
        (593100 'move' call_tmp[593097](107739 call * rank[106263] idxType[106271]))
        (490942 'default init var' zeroTup[107741] call_tmp[593097])
        (107748 call recursiveArrayWriter zeroTup[107741])
      }
    }
    (466238 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiSerialWrite[107766](arg _mt[107771]:_MT[227], arg this[107768]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg f[107764]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    (107776 call(349896 call (partial) dsiSerialReadWrite _mt[232] this[107768]) f[107764])
    (466240 return _void[47])
  }
  function DefaultRectangularArr[105188](?).dsiSerialRead[107786](arg _mt[107791]:_MT[227], arg this[107788]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg f[107784]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    (107796 call(349901 call (partial) dsiSerialReadWrite _mt[232] this[107788]) f[107784])
    (466242 return _void[47])
  }
  function DefaultRectangularArr[105188](?).isDataContiguous[107806](arg _mt[107811]:_MT[227], arg this[107808]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg dom[107804]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[466246] "RVV" "temp"
    unknown call_tmp[593106] "expr temp" "maybe param" "maybe type" "temp"
    (593109 'move' call_tmp[593106](107852 call _cond_test debugDefaultDistBulkTransfer[92585]))
    if call_tmp[593106]
    {
      unknown call_tmp[593113] "expr temp" "maybe param" "maybe type" "temp"
      (593116 'move' call_tmp[593113](349908 call off _mt[232] this[107808]))
      unknown call_tmp[593120] "expr temp" "maybe param" "maybe type" "temp"
      (593123 'move' call_tmp[593120](349913 call blk _mt[232] this[107808]))
      (107850 call chpl_debug_writeln "isDataContiguous(): off=" call_tmp[593113] " blk=" call_tmp[593120])
    }
    unknown call_tmp[593129] "expr temp" "maybe param" "maybe type" "temp"
    (593132 'move' call_tmp[593129](349923 call rank _mt[232] this[107808]))
    unknown call_tmp[593134] "expr temp" "maybe param" "maybe type" "temp"
    (593137 'move' call_tmp[593134](107861 call(349918 call (partial) blk _mt[232] this[107808]) call_tmp[593129]))
    unknown call_tmp[593139] "expr temp" "maybe param" "maybe type" "temp"
    (593142 'move' call_tmp[593139](107863 call != call_tmp[593134] 1))
    unknown call_tmp[593144] "expr temp" "maybe param" "maybe type" "temp"
    (593147 'move' call_tmp[593144](107868 call _cond_test call_tmp[593139]))
    if call_tmp[593144]
    {
      (466251 'move' ret[466246](466250 'deref' 0))
      gotoReturn _end_isDataContiguous[466244] _end_isDataContiguous[466244]
    }
    {
      unknown dim[107921] "insert auto destroy"
      (490944 'init var' dim[107921] 0)
      unknown tmp[107922] "maybe param" "temp"
      unknown call_tmp[593151] "expr temp" "maybe param" "maybe type" "temp"
      (593154 'move' call_tmp[593151](349928 call rank _mt[232] this[107808]))
      unknown call_tmp[593156] "expr temp" "maybe param" "maybe type" "temp"
      (593159 'move' call_tmp[593156](107876 call - call_tmp[593151] 1))
      (107933 'move' tmp[107922](107931 call chpl_compute_low_param_loop_bound 1 call_tmp[593156]))
      unknown tmp[107923] "maybe param" "temp"
      unknown call_tmp[593163] "expr temp" "maybe param" "maybe type" "temp"
      (593166 'move' call_tmp[593163](349947 call rank _mt[232] this[107808]))
      unknown call_tmp[593168] "expr temp" "maybe param" "maybe type" "temp"
      (593171 'move' call_tmp[593168](107938 call - call_tmp[593163] 1))
      (107943 'move' tmp[107923](107941 call chpl_compute_high_param_loop_bound 1 call_tmp[593168]))
      unknown tmp[107924] "maybe param" "temp"
      (107946 'move' tmp[107924](107881 call - 1))
      ParamForLoop
      { dim[107921] tmp[107922] tmp[107923] tmp[107924]
        unknown call_tmp[593175] "expr temp" "maybe param" "maybe type" "temp"
        (593178 'move' call_tmp[593175](107888 call(349933 call (partial) blk _mt[232] this[107808]) dim[107921]))
        unknown call_tmp[593182] "expr temp" "maybe param" "maybe type" "temp"
        (593185 'move' call_tmp[593182](107892 call + dim[107921] 1))
        unknown call_tmp[593187] "expr temp" "maybe param" "maybe type" "temp"
        (593190 'move' call_tmp[593187](107895 call(349939 call (partial) blk _mt[232] this[107808]) call_tmp[593182]))
        unknown call_tmp[593194] "expr temp" "maybe param" "maybe type" "temp"
        (593197 'move' call_tmp[593194](107902 call + dim[107921] 1))
        unknown call_tmp[593199] "expr temp" "maybe param" "maybe type" "temp"
        (593202 'move' call_tmp[593199](107905 call(107897 call (partial) dsiDim _mt[232] dom[107804]) call_tmp[593194]))
        unknown call_tmp[593206] "expr temp" "maybe param" "maybe type" "temp"
        (593209 'move' call_tmp[593206](107906 call length _mt[232] call_tmp[593199]))
        unknown call_tmp[593211] "expr temp" "maybe param" "maybe type" "temp"
        (593214 'move' call_tmp[593211](107909 call * call_tmp[593187] call_tmp[593206]))
        unknown call_tmp[593216] "expr temp" "maybe param" "maybe type" "temp"
        (593219 'move' call_tmp[593216](107911 call != call_tmp[593175] call_tmp[593211]))
        unknown call_tmp[593221] "expr temp" "maybe param" "maybe type" "temp"
        (593224 'move' call_tmp[593221](107916 call _cond_test call_tmp[593216]))
        if call_tmp[593221]
        {
          (466256 'move' ret[466246](466255 'deref' 0))
          gotoReturn _end_isDataContiguous[466244] _end_isDataContiguous[466244]
        }
      }
      label _unused_continueLabel[107926]
      label _breakLabel[107925]
    }
    unknown call_tmp[593226] "expr temp" "maybe param" "maybe type" "temp"
    (593229 'move' call_tmp[593226](107978 call _cond_test debugDefaultDistBulkTransfer[92585]))
    if call_tmp[593226]
    {
      (107976 call chpl_debug_writeln "\tYES!")
    }
    (466261 'move' ret[466246](466260 'deref' 1))
    label _end_isDataContiguous[466244]
    (466248 return ret[466246])
  }
  function _canDoSimpleTransfer[107992](arg A[107990]:_any[170](?), arg aView[107994]:_any[170](?), arg B[107996]:_any[170](?), arg bView[107998]:_any[170](?)) : _unknown[43] "private"
  {
    unknown ret[466265] "RVV" "temp"
    unknown tmp[399186] "maybe param" "temp"
    unknown call_tmp[593235] "expr temp" "maybe param" "maybe type" "temp"
    (593238 'move' call_tmp[593235](108005 call _value _mt[232] aView[107994]))
    unknown call_tmp[593240] "expr temp" "maybe param" "maybe type" "temp"
    (593243 'move' call_tmp[593240](108009 call(108001 call (partial) isDataContiguous _mt[232] A[107990]) call_tmp[593235]))
    (399197 'move' tmp[399186](108010 call ! call_tmp[593240]))
    unknown call_tmp[593245] "expr temp" "maybe param" "maybe type" "temp"
    (593248 'move' call_tmp[593245](399199 call _cond_invalid tmp[399186]))
    if call_tmp[593245]
    {
      (399202 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[512452] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512453] "maybe param" "temp"
    unknown call_tmp[593250] "expr temp" "maybe param" "maybe type" "temp"
    (593253 'move' call_tmp[593250](399187 call isTrue tmp[399186]))
    (512458 'move' tmp[512453](512456 call _cond_test call_tmp[593250]))
    if tmp[512453]
    {
      (512463 'move' tmp[512452](512460 '_paramFoldLogical' tmp[512453] 1))
    }
    {
      unknown tmp[512465] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[593259] "expr temp" "maybe param" "maybe type" "temp"
      (593262 'move' call_tmp[593259](108017 call _value _mt[232] bView[107998]))
      unknown call_tmp[593264] "expr temp" "maybe param" "maybe type" "temp"
      (593267 'move' call_tmp[593264](108021 call(108013 call (partial) isDataContiguous _mt[232] B[107996]) call_tmp[593259]))
      unknown call_tmp[593269] "expr temp" "maybe param" "maybe type" "temp"
      (593272 'move' call_tmp[593269](108022 call ! call_tmp[593264]))
      (512467 'move' tmp[512465](399191 call isTrue call_tmp[593269]))
      (512472 'move' tmp[512452](512469 '_paramFoldLogical' tmp[512453] tmp[512465]))
    }
    unknown call_tmp[593274] "expr temp" "maybe param" "maybe type" "temp"
    (593277 'move' call_tmp[593274](108056 call _cond_test tmp[512452]))
    if call_tmp[593274]
    {
      unknown call_tmp[593279] "expr temp" "maybe param" "maybe type" "temp"
      (593282 'move' call_tmp[593279](108047 call _cond_test debugDefaultDistBulkTransfer[92585]))
      if call_tmp[593279]
      {
        (108045 call chpl_debug_writeln "isDataContiguous return False")
      }
      (466270 'move' ret[466265](466269 'deref' 0))
      gotoReturn _end__canDoSimpleTransfer[466263] _end__canDoSimpleTransfer[466263]
    }
    (466275 'move' ret[466265](466274 'deref' 1))
    label _end__canDoSimpleTransfer[466263]
    (466267 return ret[466265])
  }
  function _canDoComplexTransfer[108070](arg A[108068]:_any[170](?), arg aView[108072]:_any[170](?), arg B[108074]:_any[170](?), arg bView[108076]:_any[170](?)) : _unknown[43] "private"
  {
    unknown ret[466279] "RVV" "temp"
    (466284 'move' ret[466279](466283 'deref' useBulkTransferStride[111837]))
    (466281 return ret[466279])
  }
  function DefaultRectangularArr[105188](?).doiCanBulkTransferRankChange[108087](arg _mt[108092]:_MT[227], arg this[108089]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?)) param : _unknown[43] "method"
  {
    unknown ret[466288] "RVV" "param" "temp"
    (466293 'move' ret[466288](466292 'deref' 1))
    (466290 return ret[466288])
  }
  function DefaultRectangularArr[105188](?).doiBulkTransferToKnown[108105](arg _mt[108116]:_MT[227], arg this[108113]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg srcDom[108103]:_any[170](?), arg destClass[108108]:anymanaged DefaultRectangularArr[347545](?), arg destDom[108111]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[466297] "RVV" "temp"
    unknown call_tmp[593284] "expr temp" "maybe param" "maybe type" "temp"
    (593287 'move' call_tmp[593284](108125 call transferHelper destClass[108108] destDom[108111] this[108113] srcDom[108103]))
    (466303 'move' ret[466297](466302 'coerce' call_tmp[593284] bool[10]))
    (466299 return ret[466297])
  }
  { scopeless type
    bool[10]
  }
  function DefaultRectangularArr[105188](?).doiBulkTransferFromKnown[108137](arg _mt[108148]:_MT[227], arg this[108145]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg destDom[108135]:_any[170](?), arg srcClass[108140]:anymanaged DefaultRectangularArr[347545](?), arg srcDom[108143]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[466307] "RVV" "temp"
    unknown call_tmp[593289] "expr temp" "maybe param" "maybe type" "temp"
    (593292 'move' call_tmp[593289](108157 call transferHelper this[108145] destDom[108135] srcClass[108140] srcDom[108143]))
    (466313 'move' ret[466307](466312 'coerce' call_tmp[593289] bool[10]))
    (466309 return ret[466307])
  }
  { scopeless type
    bool[10]
  }
  function transferHelper[108168](arg A[108166]:_any[170](?), arg aView[108170]:_any[170](?), arg B[108172]:_any[170](?), arg bView[108174]:_any[170](?)) : _unknown[43] "private"
  {
    unknown ret[466317] "RVV" "temp"
    unknown tmp[399207] "maybe param" "temp"
    unknown tmp[399228] "maybe param" "temp"
    unknown call_tmp[593296] "expr temp" "maybe param" "maybe type" "temp"
    (593299 'move' call_tmp[593296](108178 call rank _mt[232] A[108166]))
    unknown call_tmp[593303] "expr temp" "maybe param" "maybe type" "temp"
    (593306 'move' call_tmp[593303](108182 call rank _mt[232] B[108172]))
    (399239 'move' tmp[399228](108185 call == call_tmp[593296] call_tmp[593303]))
    unknown call_tmp[593308] "expr temp" "maybe param" "maybe type" "temp"
    (593311 'move' call_tmp[593308](399241 call _cond_invalid tmp[399228]))
    if call_tmp[593308]
    {
      (399244 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512506] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512507] "maybe param" "temp"
    unknown call_tmp[593313] "expr temp" "maybe param" "maybe type" "temp"
    (593316 'move' call_tmp[593313](399229 call isTrue tmp[399228]))
    (512512 'move' tmp[512507](512510 call _cond_test call_tmp[593313]))
    if tmp[512507]
    {
      unknown tmp[399249] "maybe param" "temp"
      unknown call_tmp[593320] "expr temp" "maybe param" "maybe type" "temp"
      (593323 'move' call_tmp[593320](108188 call stridable _mt[232] aView[108170]))
      (399260 'move' tmp[399249](108192 call == call_tmp[593320] 0))
      unknown call_tmp[593325] "expr temp" "maybe param" "maybe type" "temp"
      (593328 'move' call_tmp[593325](399262 call _cond_invalid tmp[399249]))
      if call_tmp[593325]
      {
        (399265 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[512479] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[512480] "maybe param" "temp"
      unknown call_tmp[593330] "expr temp" "maybe param" "maybe type" "temp"
      (593333 'move' call_tmp[593330](399250 call isTrue tmp[399249]))
      (512485 'move' tmp[512480](512483 call _cond_test call_tmp[593330]))
      if tmp[512480]
      {
        unknown tmp[512487] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[593337] "expr temp" "maybe param" "maybe type" "temp"
        (593340 'move' call_tmp[593337](108195 call stridable _mt[232] bView[108174]))
        unknown call_tmp[593342] "expr temp" "maybe param" "maybe type" "temp"
        (593345 'move' call_tmp[593342](108199 call == call_tmp[593337] 0))
        (512489 'move' tmp[512487](399253 call isTrue call_tmp[593342]))
        (512494 'move' tmp[512479](512491 '_paramFoldLogical' tmp[512480] tmp[512487]))
      }
      {
        (512499 'move' tmp[512479](512496 '_paramFoldLogical' tmp[512480] 0))
      }
      unknown tmp[512514] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (512516 'move' tmp[512514](399232 call isTrue tmp[512479]))
      (512521 'move' tmp[512506](512518 '_paramFoldLogical' tmp[512507] tmp[512514]))
    }
    {
      (512526 'move' tmp[512506](512523 '_paramFoldLogical' tmp[512507] 0))
    }
    (399218 'move' tmp[399207] tmp[512506])
    unknown call_tmp[593347] "expr temp" "maybe param" "maybe type" "temp"
    (593350 'move' call_tmp[593347](399220 call _cond_invalid tmp[399207]))
    if call_tmp[593347]
    {
      (399223 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512533] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512534] "maybe param" "temp"
    unknown call_tmp[593352] "expr temp" "maybe param" "maybe type" "temp"
    (593355 'move' call_tmp[593352](399208 call isTrue tmp[399207]))
    (512539 'move' tmp[512534](512537 call _cond_test call_tmp[593352]))
    if tmp[512534]
    {
      unknown tmp[512541] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[593357] "expr temp" "maybe param" "maybe type" "temp"
      (593360 'move' call_tmp[593357](108211 call _canDoSimpleTransfer A[108166] aView[108170] B[108172] bView[108174]))
      (512543 'move' tmp[512541](399211 call isTrue call_tmp[593357]))
      (512548 'move' tmp[512533](512545 '_paramFoldLogical' tmp[512534] tmp[512541]))
    }
    {
      (512553 'move' tmp[512533](512550 '_paramFoldLogical' tmp[512534] 0))
    }
    unknown call_tmp[593362] "expr temp" "maybe param" "maybe type" "temp"
    (593365 'move' call_tmp[593362](108299 call _cond_test tmp[512533]))
    if call_tmp[593362]
    {
      unknown call_tmp[593367] "expr temp" "maybe param" "maybe type" "temp"
      (593370 'move' call_tmp[593367](108235 call _cond_test debugDefaultDistBulkTransfer[92585]))
      if call_tmp[593367]
      {
        (108233 call chpl_debug_writeln "Performing simple DefaultRectangular transfer")
      }
      (108247 call _simpleTransfer A[108166] aView[108170] B[108172] bView[108174])
    }
    {
      unknown call_tmp[593372] "expr temp" "maybe param" "maybe type" "temp"
      (593375 'move' call_tmp[593372](108255 call _canDoComplexTransfer A[108166] aView[108170] B[108172] bView[108174]))
      unknown call_tmp[593377] "expr temp" "maybe param" "maybe type" "temp"
      (593380 'move' call_tmp[593377](108295 call _cond_test call_tmp[593372]))
      if call_tmp[593377]
      {
        unknown call_tmp[593382] "expr temp" "maybe param" "maybe type" "temp"
        (593385 'move' call_tmp[593382](108277 call _cond_test debugDefaultDistBulkTransfer[92585]))
        if call_tmp[593382]
        {
          (108275 call chpl_debug_writeln "Performing complex DefaultRectangular transfer")
        }
        (108289 call complexTransfer A[108166] aView[108170] B[108172] bView[108174])
      }
      {
        (466323 'move' ret[466317](466322 'coerce' 0 bool[10]))
        gotoReturn _end_transferHelper[466315] _end_transferHelper[466315]
      }
    }
    (466329 'move' ret[466317](466328 'coerce' 1 bool[10]))
    label _end_transferHelper[466315]
    (466319 return ret[466317])
  }
  { scopeless type
    bool[10]
  }
  function _simpleTransfer[108315](arg A[108313]:_any[170](?), arg aView[108317]:_any[170](?), arg B[108319]:_any[170](?), arg bView[108321]:_any[170](?)) : _unknown[43] "private" "no return value for void"
  {
    unknown call_tmp[593389] "maybe param" "maybe type" "temp"
    (593392 'move' call_tmp[593389](108324 call rank _mt[232] A[108313]))
    unknown rank[108327] "param"
    (490946 'init var' rank[108327] call_tmp[593389])
    unknown idxType[108335] "insert auto destroy" "type variable"(108332 call idxType _mt[232] A[108313])
    (490952 'move' idxType[108335](490949 call idxType _mt[232] A[108313]))
    unknown eltType[108342] "insert auto destroy" "type variable"(108339 call eltType _mt[232] A[108313])
    (490958 'move' eltType[108342](490955 call eltType _mt[232] A[108313]))
    unknown call_tmp[593404] "maybe param" "maybe type" "temp"
    (593407 'move' call_tmp[593404](108350 call(108346 call (partial) dims _mt[232] aView[108317])))
    const Adims[108351] "const" "insert auto destroy"
    (490960 'init var' Adims[108351] call_tmp[593404])
    unknown Alo[108361] "insert auto destroy"
    unknown call_tmp[593411] "expr temp" "maybe param" "maybe type" "temp"
    (593414 'move' call_tmp[593411](108356 call idxType _mt[232] aView[108317]))
    unknown call_tmp[593416] "expr temp" "maybe param" "maybe type" "temp"
    (593419 'move' call_tmp[593416](108359 call * rank[108327] call_tmp[593411]))
    (490962 'default init var' Alo[108361] call_tmp[593416])
    {
      unknown i[108382] "insert auto destroy"
      (490964 'init var' i[108382] 0)
      unknown tmp[108383] "maybe param" "temp"
      (108395 'move' tmp[108383](108393 call chpl_compute_low_param_loop_bound 1 rank[108327]))
      unknown tmp[108384] "maybe param" "temp"
      (108402 'move' tmp[108384](108400 call chpl_compute_high_param_loop_bound 1 rank[108327]))
      unknown tmp[108385] "maybe param" "temp"
      (108405 'move' tmp[108385] 1)
      ParamForLoop
      { i[108382] tmp[108383] tmp[108384] tmp[108385]
        unknown call_tmp[593421] "expr temp" "maybe param" "maybe type" "temp"
        (593424 'move' call_tmp[593421](108371 call Alo[108361] i[108382]))
        unknown call_tmp[593426] "expr temp" "maybe param" "maybe type" "temp"
        (593429 'move' call_tmp[593426](108375 call Adims[108351] i[108382]))
        unknown call_tmp[593433] "expr temp" "maybe param" "maybe type" "temp"
        (593436 'move' call_tmp[593433](108376 call first _mt[232] call_tmp[593426]))
        (108379 call = call_tmp[593421] call_tmp[593433])
      }
      label _unused_continueLabel[108387]
      label _breakLabel[108386]
    }
    unknown call_tmp[593440] "maybe param" "maybe type" "temp"
    (593443 'move' call_tmp[593440](108421 call(108417 call (partial) dims _mt[232] bView[108321])))
    const Bdims[108422] "const" "insert auto destroy"
    (490966 'init var' Bdims[108422] call_tmp[593440])
    unknown Blo[108432] "insert auto destroy"
    unknown call_tmp[593447] "expr temp" "maybe param" "maybe type" "temp"
    (593450 'move' call_tmp[593447](108427 call idxType _mt[232] B[108319]))
    unknown call_tmp[593452] "expr temp" "maybe param" "maybe type" "temp"
    (593455 'move' call_tmp[593452](108430 call * rank[108327] call_tmp[593447]))
    (490968 'default init var' Blo[108432] call_tmp[593452])
    {
      unknown i[108453] "insert auto destroy"
      (490970 'init var' i[108453] 0)
      unknown tmp[108454] "maybe param" "temp"
      (108466 'move' tmp[108454](108464 call chpl_compute_low_param_loop_bound 1 rank[108327]))
      unknown tmp[108455] "maybe param" "temp"
      (108473 'move' tmp[108455](108471 call chpl_compute_high_param_loop_bound 1 rank[108327]))
      unknown tmp[108456] "maybe param" "temp"
      (108476 'move' tmp[108456] 1)
      ParamForLoop
      { i[108453] tmp[108454] tmp[108455] tmp[108456]
        unknown call_tmp[593457] "expr temp" "maybe param" "maybe type" "temp"
        (593460 'move' call_tmp[593457](108442 call Blo[108432] i[108453]))
        unknown call_tmp[593462] "expr temp" "maybe param" "maybe type" "temp"
        (593465 'move' call_tmp[593462](108446 call Bdims[108422] i[108453]))
        unknown call_tmp[593469] "expr temp" "maybe param" "maybe type" "temp"
        (593472 'move' call_tmp[593469](108447 call first _mt[232] call_tmp[593462]))
        (108450 call = call_tmp[593457] call_tmp[593469])
      }
      label _unused_continueLabel[108458]
      label _breakLabel[108457]
    }
    unknown call_tmp[593476] "expr temp" "maybe param" "maybe type" "temp"
    (593479 'move' call_tmp[593476](108488 call numIndices _mt[232] aView[108317]))
    unknown call_tmp[593483] "maybe param" "maybe type" "temp"
    (593486 'move' call_tmp[593483](108496 call(108491 call (partial) safeCast _mt[232] call_tmp[593476]) size_t[209674]))
    const len[108497] "const" "insert auto destroy"
    (490972 'init var' len[108497] call_tmp[593483])
    unknown call_tmp[593488] "expr temp" "maybe param" "maybe type" "temp"
    (593491 'move' call_tmp[593488](108502 call == len[108497] 0))
    unknown call_tmp[593493] "expr temp" "maybe param" "maybe type" "temp"
    (593496 'move' call_tmp[593493](108506 call _cond_test call_tmp[593488]))
    if call_tmp[593493]
    {
      gotoReturn _end__simpleTransfer[466337] _end__simpleTransfer[466337]
    }
    unknown call_tmp[593498] "expr temp" "maybe param" "maybe type" "temp"
    (593501 'move' call_tmp[593498](108621 call _cond_test debugBulkTransfer[111829]))
    if call_tmp[593498]
    {
      function sizeof[108516](arg x[108514]:_any[170](?)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
        unknown ret[466333] "RVV" "temp"
        (466335 return ret[466333])
      }
      { scopeless type
        int(64)[13]
      }
      unknown call_tmp[593505] "expr temp" "maybe param" "maybe type" "temp"
      (593508 'move' call_tmp[593505](108525 call eltType _mt[232] B[108319]))
      unknown call_tmp[593510] "maybe param" "maybe type" "temp"
      (593513 'move' call_tmp[593510](108529 call sizeof call_tmp[593505]))
      const elemSize[108530] "const" "insert auto destroy"
      (490974 'init var' elemSize[108530] call_tmp[593510])
      (108619 call chpl_debug_writeln "In DefaultRectangular._simpleTransfer():" " Alo=" Alo[108361] ", Blo=" Blo[108432] ", len=" len[108497] ", elemSize=" elemSize[108530])
    }
    unknown call_tmp[593517] "maybe param" "maybe type" "temp"
    (593520 'move' call_tmp[593517](108631 call(108626 call (partial) getDataIndex _mt[232] A[108313]) Alo[108361]))
    const Aidx[108632] "const" "insert auto destroy"
    (490976 'init var' Aidx[108632] call_tmp[593517])
    unknown call_tmp[593524] "expr temp" "maybe param" "maybe type" "temp"
    (593527 'move' call_tmp[593524](108639 call theData _mt[232] A[108313]))
    unknown call_tmp[593529] "maybe param" "maybe type" "temp"
    (593532 'move' call_tmp[593529](108643 call _ddata_shift eltType[108342] call_tmp[593524] Aidx[108632]))
    const Adata[108644] "const" "insert auto destroy"
    (490978 'init var' Adata[108644] call_tmp[593529])
    unknown call_tmp[593536] "maybe param" "maybe type" "temp"
    (593539 'move' call_tmp[593536](108653 call(108648 call (partial) getDataIndex _mt[232] B[108319]) Blo[108432]))
    const Bidx[108654] "const" "insert auto destroy"
    (490980 'init var' Bidx[108654] call_tmp[593536])
    unknown call_tmp[593543] "expr temp" "maybe param" "maybe type" "temp"
    (593546 'move' call_tmp[593543](108661 call theData _mt[232] B[108319]))
    unknown call_tmp[593548] "maybe param" "maybe type" "temp"
    (593551 'move' call_tmp[593548](108665 call _ddata_shift eltType[108342] call_tmp[593543] Bidx[108654]))
    const Bdata[108666] "const" "insert auto destroy"
    (490982 'init var' Bdata[108666] call_tmp[593548])
    (108676 call _simpleTransferHelper A[108313] B[108319] Adata[108644] Bdata[108666] len[108497])
    label _end__simpleTransfer[466337]
    (466339 return _void[47])
  }
  function _simpleTransferHelper[108684](arg A[108682]:_any[170](?), arg B[108686]:_any[170](?), arg Adata[108688]:_any[170](?), arg Bdata[108690]:_any[170](?), arg len[108692]:_any[170](?)) : _unknown[43] "private" "no return value for void"
  {
    unknown call_tmp[593553] "expr temp" "maybe param" "maybe type" "temp"
    (593556 'move' call_tmp[593553](108696 call == Adata[108688] Bdata[108690]))
    unknown call_tmp[593558] "expr temp" "maybe param" "maybe type" "temp"
    (593561 'move' call_tmp[593558](108700 call _cond_test call_tmp[593553]))
    if call_tmp[593558]
    {
      gotoReturn _end__simpleTransferHelper[466343] _end__simpleTransferHelper[466343]
    }
    unknown call_tmp[593563] "expr temp" "maybe param" "maybe type" "temp"
    (593566 'move' call_tmp[593563](108710 '_wide_get_node' Adata[108688]))
    unknown call_tmp[593568] "expr temp" "maybe param" "maybe type" "temp"
    (593571 'move' call_tmp[593568](350037 call here[92085]))
    unknown call_tmp[593575] "expr temp" "maybe param" "maybe type" "temp"
    (593578 'move' call_tmp[593575](108714 call id _mt[232] call_tmp[593568]))
    unknown call_tmp[593580] "expr temp" "maybe param" "maybe type" "temp"
    (593583 'move' call_tmp[593580](108717 call == call_tmp[593563] call_tmp[593575]))
    unknown call_tmp[593585] "expr temp" "maybe param" "maybe type" "temp"
    (593588 'move' call_tmp[593585](108932 call _cond_test call_tmp[593580]))
    if call_tmp[593585]
    {
      unknown call_tmp[593590] "expr temp" "maybe param" "maybe type" "temp"
      (593593 'move' call_tmp[593590](108745 call _cond_test debugDefaultDistBulkTransfer[92585]))
      if call_tmp[593590]
      {
        unknown call_tmp[593595] "expr temp" "maybe param" "maybe type" "temp"
        (593598 'move' call_tmp[593595](108742 '_wide_get_node' B[108686]))
        (108743 call chpl_debug_writeln "\tlocal get() from " call_tmp[593595])
      }
      unknown call_tmp[593600] "expr temp" "maybe param" "maybe type" "temp"
      (593603 'move' call_tmp[593600](108756 call Adata[108688] 0))
      unknown call_tmp[593605] "expr temp" "maybe param" "maybe type" "temp"
      (593608 'move' call_tmp[593605](108761 '_wide_get_node' Bdata[108690]))
      unknown call_tmp[593610] "expr temp" "maybe param" "maybe type" "temp"
      (593613 'move' call_tmp[593610](108765 call Bdata[108690] 0))
      (108767 'chpl_comm_array_get' call_tmp[593600] call_tmp[593605] call_tmp[593610] len[108692])
    }
    {
      unknown call_tmp[593615] "expr temp" "maybe param" "maybe type" "temp"
      (593618 'move' call_tmp[593615](108773 '_wide_get_node' Bdata[108690]))
      unknown call_tmp[593620] "expr temp" "maybe param" "maybe type" "temp"
      (593623 'move' call_tmp[593620](350046 call here[92085]))
      unknown call_tmp[593627] "expr temp" "maybe param" "maybe type" "temp"
      (593630 'move' call_tmp[593627](108775 call id _mt[232] call_tmp[593620]))
      unknown call_tmp[593632] "expr temp" "maybe param" "maybe type" "temp"
      (593635 'move' call_tmp[593632](108778 call == call_tmp[593615] call_tmp[593627]))
      unknown call_tmp[593637] "expr temp" "maybe param" "maybe type" "temp"
      (593640 'move' call_tmp[593637](108927 call _cond_test call_tmp[593632]))
      if call_tmp[593637]
      {
        unknown call_tmp[593642] "expr temp" "maybe param" "maybe type" "temp"
        (593645 'move' call_tmp[593642](108806 call _cond_test debugDefaultDistBulkTransfer[92585]))
        if call_tmp[593642]
        {
          unknown call_tmp[593647] "expr temp" "maybe param" "maybe type" "temp"
          (593650 'move' call_tmp[593647](108803 '_wide_get_node' A[108682]))
          (108804 call chpl_debug_writeln "\tlocal put() to " call_tmp[593647])
        }
        unknown call_tmp[593652] "expr temp" "maybe param" "maybe type" "temp"
        (593655 'move' call_tmp[593652](108832 call Bdata[108690] 0))
        unknown call_tmp[593657] "expr temp" "maybe param" "maybe type" "temp"
        (593660 'move' call_tmp[593657](108837 '_wide_get_node' Adata[108688]))
        unknown call_tmp[593662] "expr temp" "maybe param" "maybe type" "temp"
        (593665 'move' call_tmp[593662](108841 call Adata[108688] 0))
        (108843 'chpl_comm_array_put' call_tmp[593652] call_tmp[593657] call_tmp[593662] len[108692])
      }
      {
        {
          const tmp[108922] "const" "temp"
          unknown call_tmp[593667] "expr temp" "maybe param" "maybe type" "temp"
          (593670 'move' call_tmp[593667](108846 '_wide_get_locale' Adata[108688]))
          unknown call_tmp[593672] "expr temp" "maybe param" "maybe type" "temp"
          (593675 'move' call_tmp[593672](108847 call chpl_localeID_to_locale call_tmp[593667]))
          unknown call_tmp[593677] "expr temp" "maybe param" "maybe type" "temp"
          (593680 'move' call_tmp[593677](108919 '_wide_get_locale' call_tmp[593672]))
          (108923 'move' tmp[108922](108920 'deref' call_tmp[593677]))
          {
            unknown call_tmp[593682] "expr temp" "maybe param" "maybe type" "temp"
            (593685 'move' call_tmp[593682](108895 call _cond_test debugDefaultDistBulkTransfer[92585]))
            if call_tmp[593682]
            {
              unknown call_tmp[593687] "expr temp" "maybe param" "maybe type" "temp"
              (593690 'move' call_tmp[593687](350056 call here[92085]))
              unknown call_tmp[593694] "expr temp" "maybe param" "maybe type" "temp"
              (593697 'move' call_tmp[593694](108869 call id _mt[232] call_tmp[593687]))
              unknown call_tmp[593699] "expr temp" "maybe param" "maybe type" "temp"
              (593702 'move' call_tmp[593699](108892 '_wide_get_node' B[108686]))
              (108893 call chpl_debug_writeln "\tremote get() on " call_tmp[593694] " from " call_tmp[593699])
            }
            unknown call_tmp[593704] "expr temp" "maybe param" "maybe type" "temp"
            (593707 'move' call_tmp[593704](108906 call Adata[108688] 0))
            unknown call_tmp[593709] "expr temp" "maybe param" "maybe type" "temp"
            (593712 'move' call_tmp[593709](108911 '_wide_get_node' Bdata[108690]))
            unknown call_tmp[593714] "expr temp" "maybe param" "maybe type" "temp"
            (593717 'move' call_tmp[593714](108915 call Bdata[108690] 0))
            (108917 'chpl_comm_array_get' call_tmp[593704] call_tmp[593709] call_tmp[593714] len[108692])
          }
        }
      }
    }
    label _end__simpleTransferHelper[466343]
    (466345 return _void[47])
  }
  function complexTransfer[108943](arg A[108941]:_any[170](?), arg aView[108945]:_any[170](?), arg B[108947]:_any[170](?), arg bView[108949]:_any[170](?)) : _unknown[43] "private" "no return value for void"
  {
    unknown tmp[399270] "maybe param" "temp"
    unknown call_tmp[593721] "expr temp" "maybe param" "maybe type" "temp"
    (593724 'move' call_tmp[593721](108952 call data _mt[232] A[108941]))
    unknown call_tmp[593726] "expr temp" "maybe param" "maybe type" "temp"
    (593729 'move' call_tmp[593726](108958 '_wide_get_node' call_tmp[593721]))
    unknown call_tmp[593731] "expr temp" "maybe param" "maybe type" "temp"
    (593734 'move' call_tmp[593731](350064 call here[92085]))
    unknown call_tmp[593738] "expr temp" "maybe param" "maybe type" "temp"
    (593741 'move' call_tmp[593738](108960 call id _mt[232] call_tmp[593731]))
    (399281 'move' tmp[399270](108963 call != call_tmp[593726] call_tmp[593738]))
    unknown call_tmp[593743] "expr temp" "maybe param" "maybe type" "temp"
    (593746 'move' call_tmp[593743](399283 call _cond_invalid tmp[399270]))
    if call_tmp[593743]
    {
      (399286 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512560] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512561] "maybe param" "temp"
    unknown call_tmp[593748] "expr temp" "maybe param" "maybe type" "temp"
    (593751 'move' call_tmp[593748](399271 call isTrue tmp[399270]))
    (512566 'move' tmp[512561](512564 call _cond_test call_tmp[593748]))
    if tmp[512561]
    {
      unknown tmp[512568] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[593755] "expr temp" "maybe param" "maybe type" "temp"
      (593758 'move' call_tmp[593755](108966 call data _mt[232] B[108947]))
      unknown call_tmp[593760] "expr temp" "maybe param" "maybe type" "temp"
      (593763 'move' call_tmp[593760](108972 '_wide_get_node' call_tmp[593755]))
      unknown call_tmp[593765] "expr temp" "maybe param" "maybe type" "temp"
      (593768 'move' call_tmp[593765](350067 call here[92085]))
      unknown call_tmp[593772] "expr temp" "maybe param" "maybe type" "temp"
      (593775 'move' call_tmp[593772](108974 call id _mt[232] call_tmp[593765]))
      unknown call_tmp[593777] "expr temp" "maybe param" "maybe type" "temp"
      (593780 'move' call_tmp[593777](108977 call != call_tmp[593760] call_tmp[593772]))
      (512570 'move' tmp[512568](399274 call isTrue call_tmp[593777]))
      (512575 'move' tmp[512560](512572 '_paramFoldLogical' tmp[512561] tmp[512568]))
    }
    {
      (512580 'move' tmp[512560](512577 '_paramFoldLogical' tmp[512561] 0))
    }
    unknown call_tmp[593782] "expr temp" "maybe param" "maybe type" "temp"
    (593785 'move' call_tmp[593782](109047 call _cond_test tmp[512560]))
    if call_tmp[593782]
    {
      unknown call_tmp[593787] "expr temp" "maybe param" "maybe type" "temp"
      (593790 'move' call_tmp[593787](109013 call _cond_test debugDefaultDistBulkTransfer[92585]))
      if call_tmp[593787]
      {
        unknown call_tmp[593794] "expr temp" "maybe param" "maybe type" "temp"
        (593797 'move' call_tmp[593794](109003 call data _mt[232] A[108941]))
        unknown call_tmp[593799] "expr temp" "maybe param" "maybe type" "temp"
        (593802 'move' call_tmp[593799](109009 '_wide_get_node' call_tmp[593794]))
        (109010 call chpl_debug_writeln "BulkTransferStride: Both arrays on different locale, moving to locale of destination: LOCALE" call_tmp[593799])
      }
      {
        const tmp[109033] "const" "temp"
        unknown call_tmp[593806] "expr temp" "maybe param" "maybe type" "temp"
        (593809 'move' call_tmp[593806](109019 call data _mt[232] A[108941]))
        unknown call_tmp[593811] "expr temp" "maybe param" "maybe type" "temp"
        (593814 'move' call_tmp[593811](109030 '_wide_get_locale' call_tmp[593806]))
        (109034 'move' tmp[109033](109031 'deref' call_tmp[593811]))
        (109028 call complexTransferCore A[108941] aView[108945] B[108947] bView[108949])
      }
    }
    {
      (109044 call complexTransferCore A[108941] aView[108945] B[108947] bView[108949])
    }
    (466349 return _void[47])
  }
  function complexTransferCore[109058](arg LHS[109056]:_any[170](?), arg LViewDom[109060]:_any[170](?), arg RHS[109062]:_any[170](?), arg RViewDom[109064]:_any[170](?)) : _unknown[43] "private"
  {
    unknown call_tmp[593818] "expr temp" "maybe param" "maybe type" "temp"
    (593821 'move' call_tmp[593818](109068 call rank _mt[232] LHS[109056]))
    unknown call_tmp[593825] "expr temp" "maybe param" "maybe type" "temp"
    (593828 'move' call_tmp[593825](109073 call rank _mt[232] RHS[109062]))
    unknown call_tmp[593830] "maybe param" "maybe type" "temp"
    (593833 'move' call_tmp[593830](109076 call min call_tmp[593818] call_tmp[593825]))
    unknown minRank[109077] "param"
    (490984 'init var' minRank[109077] call_tmp[593830])
    unknown idxType[109085] "insert auto destroy" "type variable"(109082 call idxType _mt[232] LHS[109056])
    (490990 'move' idxType[109085](490987 call idxType _mt[232] LHS[109056]))
    unknown intIdxType[109092] "insert auto destroy" "type variable"(109089 call intIdxType _mt[232] LHS[109056])
    (490996 'move' intIdxType[109092](490993 call intIdxType _mt[232] LHS[109056]))
    unknown call_tmp[593843] "expr temp" "maybe param" "maybe type" "temp"
    (593846 'move' call_tmp[593843](109176 call _cond_test debugDefaultDistBulkTransfer[92585]))
    if call_tmp[593843]
    {
      (109132 call writeln "Transferring views :" LViewDom[109060] " <-- " RViewDom[109064])
      unknown call_tmp[593850] "expr temp" "maybe param" "maybe type" "temp"
      (593853 'move' call_tmp[593850](109154 call dom _mt[232] LHS[109056]))
      unknown call_tmp[593857] "expr temp" "maybe param" "maybe type" "temp"
      (593860 'move' call_tmp[593857](109163 call(109159 call (partial) dsiDims _mt[232] call_tmp[593850])))
      unknown call_tmp[593864] "expr temp" "maybe param" "maybe type" "temp"
      (593867 'move' call_tmp[593864](109166 call dom _mt[232] RHS[109062]))
      unknown call_tmp[593871] "expr temp" "maybe param" "maybe type" "temp"
      (593874 'move' call_tmp[593871](109173 call(109169 call (partial) dsiDims _mt[232] call_tmp[593864])))
      (109174 call writeln "Original domains   :" call_tmp[593857] " <-- " call_tmp[593871])
    }
    unknown call_tmp[593878] "maybe param" "maybe type" "temp"
    (593881 'move' call_tmp[593878](109185 call(109181 call (partial) dims _mt[232] LViewDom[109060])))
    const LeftDims[109186] "const" "insert auto destroy"
    (490998 'init var' LeftDims[109186] call_tmp[593878])
    unknown call_tmp[593885] "maybe param" "maybe type" "temp"
    (593888 'move' call_tmp[593885](109194 call(109190 call (partial) dims _mt[232] RViewDom[109064])))
    const RightDims[109195] "const" "insert auto destroy"
    (491000 'init var' RightDims[109195] call_tmp[593885])
    unknown call_tmp[593890] "maybe param" "maybe type" "temp"
    (593893 'move' call_tmp[593890](109209 call bulkCommComputeActiveDims LeftDims[109186] RightDims[109195]))
    const tmp[109210] "const" "insert auto destroy" "no copy" "temp"
    (491002 'init var' tmp[109210] call_tmp[593890])
    (109220 call _check_tuple_var_decl tmp[109210] 3)
    unknown call_tmp[593895] "maybe param" "maybe type" "temp"
    (593898 'move' call_tmp[593895](109211 call tmp[109210] 1))
    const LeftActives[109198] "const" "insert auto destroy"
    (491004 'init var' LeftActives[109198] call_tmp[593895])
    unknown call_tmp[593900] "maybe param" "maybe type" "temp"
    (593903 'move' call_tmp[593900](109214 call tmp[109210] 2))
    const RightActives[109200] "const" "insert auto destroy"
    (491006 'init var' RightActives[109200] call_tmp[593900])
    unknown call_tmp[593905] "maybe param" "maybe type" "temp"
    (593908 'move' call_tmp[593905](109217 call tmp[109210] 3))
    const inferredRank[109202] "const" "insert auto destroy"
    (491008 'init var' inferredRank[109202] call_tmp[593905])
    { scopeless type
      unknown call_type_tmp[443325] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[593910] "expr temp" "maybe param" "maybe type" "temp"
      (593913 'move' call_tmp[593910](109233 call LeftDims[109186] 1))
      unknown call_tmp[593917] "expr temp" "maybe param" "maybe type" "temp"
      (593920 'move' call_tmp[593917](109234 call size _mt[232] call_tmp[593910]))
      (443329 'move' call_type_tmp[443325](109237 'typeof' call_tmp[593917]))
    }
    unknown DimSizes[109242] "insert auto destroy"
    unknown call_tmp[593922] "expr temp" "maybe param" "maybe type" "temp"
    (593925 'move' call_tmp[593922](109227 call chpl_build_bounded_range 1 inferredRank[109202]))
    unknown call_tmp[593927] "expr temp" "maybe param" "maybe type" "temp"
    (593930 'move' call_tmp[593927](109238 call chpl__ensureDomainExpr call_tmp[593922]))
    unknown call_tmp[593932] "expr temp" "maybe param" "maybe type" "temp"
    (593935 'move' call_tmp[593932](109240 call chpl__buildArrayRuntimeType call_tmp[593927] call_type_tmp[443325]))
    (491010 'default init var' DimSizes[109242] call_tmp[593932])
    {
      unknown _indexOfInterest[109272] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[109273] "expr temp" "temp"
      unknown call_tmp[593937] "expr temp" "maybe param" "maybe type" "temp"
      (593940 'move' call_tmp[593937](109287 call chpl_direct_range_iter 1 inferredRank[109202] 1))
      (109282 'move' _iterator[109273](109280 call _getIterator call_tmp[593937]))
      Defer
      {
        {
          (109303 call _freeIterator _iterator[109273])
        }
      }
      { scopeless type
        (109292 'move' _indexOfInterest[109272](109289 call iteratorIndex _iterator[109273]))
      }
      ForLoop
      {
        unknown i[109296] "index var" "insert auto destroy"
        (109298 'move' i[109296] _indexOfInterest[109272])
        {
          unknown call_tmp[593942] "maybe param" "maybe type" "temp"
          (593945 'move' call_tmp[593942](109253 call LeftActives[109198] i[109296]))
          const dimIdx[109254] "const" "insert auto destroy"
          (491012 'init var' dimIdx[109254] call_tmp[593942])
          unknown call_tmp[593947] "expr temp" "maybe param" "maybe type" "temp"
          (593950 'move' call_tmp[593947](109261 call DimSizes[109242] i[109296]))
          unknown call_tmp[593952] "expr temp" "maybe param" "maybe type" "temp"
          (593955 'move' call_tmp[593952](109265 call LeftDims[109186] dimIdx[109254]))
          unknown call_tmp[593959] "expr temp" "maybe param" "maybe type" "temp"
          (593962 'move' call_tmp[593959](109266 call size _mt[232] call_tmp[593952]))
          (109269 call = call_tmp[593947] call_tmp[593959])
        }
        label _continueLabel[109277]
        _indexOfInterest[109272]
        _iterator[109273]
      }
      label _breakLabel[109278]
    }
    unknown call_tmp[593964] "expr temp" "maybe param" "maybe type" "temp"
    (593967 'move' call_tmp[593964](109333 call _cond_test debugDefaultDistBulkTransfer[92585]))
    if call_tmp[593964]
    {
      (109330 call writeln "inferredRank = " inferredRank[109202])
    }
    unknown call_tmp[593969] "expr temp" "maybe param" "maybe type" "temp"
    (593972 'move' call_tmp[593969](109340 call <= inferredRank[109202] minRank[109077]))
    (109359 call assert call_tmp[593969] "complex DR transfer: computed rank greater than minimum rank!")
    unknown LBlk[109361] "insert auto destroy"
    unknown call_tmp[593974] "expr temp" "maybe param" "maybe type" "temp"
    (593977 'move' call_tmp[593974](109366 call * minRank[109077] intIdxType[109092]))
    (491014 'default init var' LBlk[109361] call_tmp[593974])
    unknown RBlk[109368] "insert auto destroy"
    unknown call_tmp[593979] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (593982 'move' call_tmp[593979](109372 'typeof' LBlk[109361]))
    (491016 'default init var' RBlk[109368] call_tmp[593979])
    {
      {
        unknown _indexOfInterest[109480] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[109481] "expr temp" "temp"
        unknown call_tmp[593984] "expr temp" "maybe param" "maybe type" "temp"
        (593987 'move' call_tmp[593984](109497 call - 1))
        unknown call_tmp[593989] "expr temp" "maybe param" "maybe type" "temp"
        (593992 'move' call_tmp[593989](109501 call chpl_direct_range_iter 1 inferredRank[109202] call_tmp[593984]))
        (109490 'move' _iterator[109481](109488 call _getIterator call_tmp[593989]))
        Defer
        {
          {
            (109517 call _freeIterator _iterator[109481])
          }
        }
        { scopeless type
          (109506 'move' _indexOfInterest[109480](109503 call iteratorIndex _iterator[109481]))
        }
        ForLoop
        {
          unknown idx[109510] "index var" "insert auto destroy"
          (109512 'move' idx[109510] _indexOfInterest[109480])
          {
            unknown call_tmp[593994] "maybe param" "maybe type" "temp"
            (593997 'move' call_tmp[593994](109386 call LeftActives[109198] idx[109510]))
            const li[109387] "const" "insert auto destroy"
            (491018 'init var' li[109387] call_tmp[593994])
            unknown call_tmp[593999] "expr temp" "maybe param" "maybe type" "temp"
            (594002 'move' call_tmp[593999](109394 call LBlk[109361] idx[109510]))
            unknown call_tmp[594006] "expr temp" "maybe param" "maybe type" "temp"
            (594009 'move' call_tmp[594006](109401 call(109396 call (partial) blk _mt[232] LHS[109056]) li[109387]))
            unknown call_tmp[594011] "expr temp" "maybe param" "maybe type" "temp"
            (594014 'move' call_tmp[594011](109405 call LeftDims[109186] li[109387]))
            unknown call_tmp[594018] "expr temp" "maybe param" "maybe type" "temp"
            (594021 'move' call_tmp[594018](109406 call stride _mt[232] call_tmp[594011]))
            unknown call_tmp[594025] "expr temp" "maybe param" "maybe type" "temp"
            (594028 'move' call_tmp[594025](109410 call dom _mt[232] LHS[109056]))
            unknown call_tmp[594032] "expr temp" "maybe param" "maybe type" "temp"
            (594035 'move' call_tmp[594032](109418 call(109413 call (partial) dsiDim _mt[232] call_tmp[594025]) li[109387]))
            unknown call_tmp[594039] "expr temp" "maybe param" "maybe type" "temp"
            (594042 'move' call_tmp[594039](109419 call stride _mt[232] call_tmp[594032]))
            unknown call_tmp[594044] "expr temp" "maybe param" "maybe type" "temp"
            (594047 'move' call_tmp[594044](109422 call / call_tmp[594018] call_tmp[594039]))
            unknown call_tmp[594049] "expr temp" "maybe param" "maybe type" "temp"
            (594052 'move' call_tmp[594049](109425 call _cast intIdxType[109092] call_tmp[594044]))
            unknown call_tmp[594054] "expr temp" "maybe param" "maybe type" "temp"
            (594057 'move' call_tmp[594054](109427 call * call_tmp[594006] call_tmp[594049]))
            (109429 call = call_tmp[593999] call_tmp[594054])
            unknown call_tmp[594059] "maybe param" "maybe type" "temp"
            (594062 'move' call_tmp[594059](109435 call RightActives[109200] idx[109510]))
            const ri[109436] "const" "insert auto destroy"
            (491020 'init var' ri[109436] call_tmp[594059])
            unknown call_tmp[594064] "expr temp" "maybe param" "maybe type" "temp"
            (594067 'move' call_tmp[594064](109442 call RBlk[109368] idx[109510]))
            unknown call_tmp[594071] "expr temp" "maybe param" "maybe type" "temp"
            (594074 'move' call_tmp[594071](109449 call(109444 call (partial) blk _mt[232] RHS[109062]) ri[109436]))
            unknown call_tmp[594076] "expr temp" "maybe param" "maybe type" "temp"
            (594079 'move' call_tmp[594076](109453 call RightDims[109195] ri[109436]))
            unknown call_tmp[594083] "expr temp" "maybe param" "maybe type" "temp"
            (594086 'move' call_tmp[594083](109454 call stride _mt[232] call_tmp[594076]))
            unknown call_tmp[594090] "expr temp" "maybe param" "maybe type" "temp"
            (594093 'move' call_tmp[594090](109458 call dom _mt[232] RHS[109062]))
            unknown call_tmp[594097] "expr temp" "maybe param" "maybe type" "temp"
            (594100 'move' call_tmp[594097](109466 call(109461 call (partial) dsiDim _mt[232] call_tmp[594090]) ri[109436]))
            unknown call_tmp[594104] "expr temp" "maybe param" "maybe type" "temp"
            (594107 'move' call_tmp[594104](109467 call stride _mt[232] call_tmp[594097]))
            unknown call_tmp[594109] "expr temp" "maybe param" "maybe type" "temp"
            (594112 'move' call_tmp[594109](109470 call / call_tmp[594083] call_tmp[594104]))
            unknown call_tmp[594114] "expr temp" "maybe param" "maybe type" "temp"
            (594117 'move' call_tmp[594114](109473 call _cast intIdxType[109092] call_tmp[594109]))
            unknown call_tmp[594119] "expr temp" "maybe param" "maybe type" "temp"
            (594122 'move' call_tmp[594119](109475 call * call_tmp[594071] call_tmp[594114]))
            (109477 call = call_tmp[594064] call_tmp[594119])
          }
          label _continueLabel[109485]
          _indexOfInterest[109480]
          _iterator[109481]
        }
        label _breakLabel[109486]
      }
    }
    unknown call_tmp[594124] "expr temp" "maybe param" "maybe type" "temp"
    (594127 'move' call_tmp[594124](109569 call _cond_test debugDefaultDistBulkTransfer[92585]))
    if call_tmp[594124]
    {
      (109545 call writeln "LBlk = " LBlk[109361])
      (109567 call writeln "RBlk = " RBlk[109368])
    }
    unknown stridelevels[109574] "insert auto destroy"
    (491022 'init var' stridelevels[109574] 0)
    unknown call_tmp[594129] "expr temp" "maybe param" "maybe type" "temp"
    (594132 'move' call_tmp[594129](109580 call + inferredRank[109202] 1))
    unknown call_tmp[594134] "expr temp" "maybe param" "maybe type" "temp"
    (594137 'move' call_tmp[594134](109582 call chpl_build_bounded_range 1 call_tmp[594129]))
    unknown call_tmp[594139] "maybe param" "maybe type" "temp"
    (594142 'move' call_tmp[594139](109585 call chpl__buildDomainExpr call_tmp[594134]))
    unknown countDom[109587] "insert auto destroy"
    (491024 'init var' countDom[109587] call_tmp[594139])
    unknown count[109597] "insert auto destroy"
    unknown call_tmp[594144] "expr temp" "maybe param" "maybe type" "temp"
    (594147 'move' call_tmp[594144](109593 call chpl__ensureDomainExpr countDom[109587]))
    unknown call_tmp[594149] "expr temp" "maybe param" "maybe type" "temp"
    (594152 'move' call_tmp[594149](109595 call chpl__buildArrayRuntimeType call_tmp[594144] size_t[209674]))
    (491026 'default init var' count[109597] call_tmp[594149])
    {
      unknown _indexOfInterest[109607] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[109608] "expr temp" "temp"
      (109617 'move' _iterator[109608](109615 call _getIterator count[109597]))
      Defer
      {
        {
          (109633 call _freeIterator _iterator[109608])
        }
      }
      { scopeless type
        (109622 'move' _indexOfInterest[109607](109619 call iteratorIndex _iterator[109608]))
      }
      ForLoop
      {
        unknown c[109626] "index var" "insert auto destroy"
        (109628 'move' c[109626] _indexOfInterest[109607])
        (109604 call = c[109626] 1)
        label _continueLabel[109612]
        _indexOfInterest[109607]
        _iterator[109608]
      }
      label _breakLabel[109613]
    }
    unknown call_tmp[594154] "expr temp" "maybe param" "maybe type" "temp"
    (594157 'move' call_tmp[594154](109642 call chpl_build_bounded_range 1 inferredRank[109202]))
    unknown call_tmp[594159] "maybe param" "maybe type" "temp"
    (594162 'move' call_tmp[594159](109645 call chpl__buildDomainExpr call_tmp[594154]))
    unknown strideDom[109647] "insert auto destroy"
    (491028 'init var' strideDom[109647] call_tmp[594159])
    unknown dstStride[109650] "insert auto destroy"
    unknown call_tmp[594164] "expr temp" "maybe param" "maybe type" "temp"
    (594167 'move' call_tmp[594164](109656 call chpl__ensureDomainExpr strideDom[109647]))
    unknown call_tmp[594169] "expr temp" "maybe param" "maybe type" "temp"
    (594172 'move' call_tmp[594169](109658 call chpl__buildArrayRuntimeType call_tmp[594164] size_t[209674]))
    (491030 'default init var' dstStride[109650] call_tmp[594169])
    unknown srcStride[109660] "insert auto destroy"
    unknown call_tmp[594174] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (594177 'move' call_tmp[594174](109664 'typeof' dstStride[109650]))
    (491032 'default init var' srcStride[109660] call_tmp[594174])
    unknown tmp[399291] "maybe param" "temp"
    unknown call_tmp[594179] "expr temp" "maybe param" "maybe type" "temp"
    (594182 'move' call_tmp[594179](109668 call LBlk[109361] inferredRank[109202]))
    (399302 'move' tmp[399291](109670 call > call_tmp[594179] 1))
    unknown call_tmp[594184] "expr temp" "maybe param" "maybe type" "temp"
    (594187 'move' call_tmp[594184](399304 call _cond_invalid tmp[399291]))
    if call_tmp[594184]
    {
      (399307 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[512587] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512588] "maybe param" "temp"
    unknown call_tmp[594189] "expr temp" "maybe param" "maybe type" "temp"
    (594192 'move' call_tmp[594189](399292 call isTrue tmp[399291]))
    (512593 'move' tmp[512588](512591 call _cond_test call_tmp[594189]))
    if tmp[512588]
    {
      (512598 'move' tmp[512587](512595 '_paramFoldLogical' tmp[512588] 1))
    }
    {
      unknown tmp[512600] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[594194] "expr temp" "maybe param" "maybe type" "temp"
      (594197 'move' call_tmp[594194](109675 call RBlk[109368] inferredRank[109202]))
      unknown call_tmp[594199] "expr temp" "maybe param" "maybe type" "temp"
      (594202 'move' call_tmp[594199](109677 call > call_tmp[594194] 1))
      (512602 'move' tmp[512600](399296 call isTrue call_tmp[594199]))
      (512607 'move' tmp[512587](512604 '_paramFoldLogical' tmp[512588] tmp[512600]))
    }
    unknown call_tmp[594204] "expr temp" "maybe param" "maybe type" "temp"
    (594207 'move' call_tmp[594204](109729 call _cond_test tmp[512587]))
    if call_tmp[594204]
    {
      (109683 call += stridelevels[109574] 1)
      unknown call_tmp[594209] "expr temp" "maybe param" "maybe type" "temp"
      (594212 'move' call_tmp[594209](109690 call count[109597] stridelevels[109574]))
      (109692 call = call_tmp[594209] 1)
      unknown call_tmp[594214] "expr temp" "maybe param" "maybe type" "temp"
      (594217 'move' call_tmp[594214](109698 call dstStride[109650] stridelevels[109574]))
      unknown call_tmp[594219] "expr temp" "maybe param" "maybe type" "temp"
      (594222 'move' call_tmp[594219](109702 call LBlk[109361] inferredRank[109202]))
      unknown call_tmp[594226] "expr temp" "maybe param" "maybe type" "temp"
      (594229 'move' call_tmp[594226](109708 call(109703 call (partial) safeCast _mt[232] call_tmp[594219]) size_t[209674]))
      (109709 call = call_tmp[594214] call_tmp[594226])
      unknown call_tmp[594231] "expr temp" "maybe param" "maybe type" "temp"
      (594234 'move' call_tmp[594231](109715 call srcStride[109660] stridelevels[109574]))
      unknown call_tmp[594236] "expr temp" "maybe param" "maybe type" "temp"
      (594239 'move' call_tmp[594236](109719 call RBlk[109368] inferredRank[109202]))
      unknown call_tmp[594243] "expr temp" "maybe param" "maybe type" "temp"
      (594246 'move' call_tmp[594243](109725 call(109720 call (partial) safeCast _mt[232] call_tmp[594236]) size_t[209674]))
      (109726 call = call_tmp[594231] call_tmp[594243])
    }
    {
      unknown _indexOfInterest[109838] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[109839] "expr temp" "temp"
      unknown call_tmp[594248] "expr temp" "maybe param" "maybe type" "temp"
      (594251 'move' call_tmp[594248](109855 call - 1))
      unknown call_tmp[594253] "expr temp" "maybe param" "maybe type" "temp"
      (594256 'move' call_tmp[594253](109859 call chpl_direct_range_iter 2 inferredRank[109202] call_tmp[594248]))
      (109848 'move' _iterator[109839](109846 call _getIterator call_tmp[594253]))
      Defer
      {
        {
          (109875 call _freeIterator _iterator[109839])
        }
      }
      { scopeless type
        (109864 'move' _indexOfInterest[109838](109861 call iteratorIndex _iterator[109839]))
      }
      ForLoop
      {
        unknown i[109868] "index var" "insert auto destroy"
        (109870 'move' i[109868] _indexOfInterest[109838])
        {
          unknown call_tmp[594258] "expr temp" "maybe param" "maybe type" "temp"
          (594261 'move' call_tmp[594258](109746 call + stridelevels[109574] 1))
          unknown call_tmp[594263] "expr temp" "maybe param" "maybe type" "temp"
          (594266 'move' call_tmp[594263](109749 call count[109597] call_tmp[594258]))
          unknown call_tmp[594268] "expr temp" "maybe param" "maybe type" "temp"
          (594271 'move' call_tmp[594268](109753 call DimSizes[109242] i[109868]))
          unknown call_tmp[594275] "expr temp" "maybe param" "maybe type" "temp"
          (594278 'move' call_tmp[594275](109759 call(109754 call (partial) safeCast _mt[232] call_tmp[594268]) size_t[209674]))
          (109760 call *= call_tmp[594263] call_tmp[594275])
          unknown tmp[399312] "maybe param" "temp"
          (399323 'move' tmp[399312](109771 call canReuseStride LBlk[109361] i[109868] stridelevels[109574] count[109597] dstStride[109650]))
          unknown call_tmp[594280] "expr temp" "maybe param" "maybe type" "temp"
          (594283 'move' call_tmp[594280](399325 call _cond_invalid tmp[399312]))
          if call_tmp[594280]
          {
            (399328 call compilerError "cannot promote short-circuiting && operator")
          }
          const bothReuse[109782] "const" "insert auto destroy"
          unknown tmp[512614] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[512615] "maybe param" "temp"
          unknown call_tmp[594285] "expr temp" "maybe param" "maybe type" "temp"
          (594288 'move' call_tmp[594285](399313 call isTrue tmp[399312]))
          (512620 'move' tmp[512615](512618 call _cond_test call_tmp[594285]))
          if tmp[512615]
          {
            unknown tmp[512622] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[594290] "expr temp" "maybe param" "maybe type" "temp"
            (594293 'move' call_tmp[594290](109779 call canReuseStride RBlk[109368] i[109868] stridelevels[109574] count[109597] srcStride[109660]))
            (512624 'move' tmp[512622](399316 call isTrue call_tmp[594290]))
            (512629 'move' tmp[512614](512626 '_paramFoldLogical' tmp[512615] tmp[512622]))
          }
          {
            (512634 'move' tmp[512614](512631 '_paramFoldLogical' tmp[512615] 0))
          }
          (491034 'init var' bothReuse[109782] tmp[512614])
          unknown call_tmp[594295] "expr temp" "maybe param" "maybe type" "temp"
          (594298 'move' call_tmp[594295](109786 call ! bothReuse[109782]))
          unknown call_tmp[594300] "expr temp" "maybe param" "maybe type" "temp"
          (594303 'move' call_tmp[594300](109834 call _cond_test call_tmp[594295]))
          if call_tmp[594300]
          {
            (109790 call += stridelevels[109574] 1)
            unknown call_tmp[594305] "expr temp" "maybe param" "maybe type" "temp"
            (594308 'move' call_tmp[594305](109797 call dstStride[109650] stridelevels[109574]))
            unknown call_tmp[594310] "expr temp" "maybe param" "maybe type" "temp"
            (594313 'move' call_tmp[594310](109801 call - i[109868] 1))
            unknown call_tmp[594315] "expr temp" "maybe param" "maybe type" "temp"
            (594318 'move' call_tmp[594315](109804 call LBlk[109361] call_tmp[594310]))
            unknown call_tmp[594322] "expr temp" "maybe param" "maybe type" "temp"
            (594325 'move' call_tmp[594322](109810 call(109805 call (partial) safeCast _mt[232] call_tmp[594315]) size_t[209674]))
            (109811 call = call_tmp[594305] call_tmp[594322])
            unknown call_tmp[594327] "expr temp" "maybe param" "maybe type" "temp"
            (594330 'move' call_tmp[594327](109817 call srcStride[109660] stridelevels[109574]))
            unknown call_tmp[594332] "expr temp" "maybe param" "maybe type" "temp"
            (594335 'move' call_tmp[594332](109821 call - i[109868] 1))
            unknown call_tmp[594337] "expr temp" "maybe param" "maybe type" "temp"
            (594340 'move' call_tmp[594337](109824 call RBlk[109368] call_tmp[594332]))
            unknown call_tmp[594344] "expr temp" "maybe param" "maybe type" "temp"
            (594347 'move' call_tmp[594344](109830 call(109825 call (partial) safeCast _mt[232] call_tmp[594337]) size_t[209674]))
            (109831 call = call_tmp[594327] call_tmp[594344])
          }
        }
        label _continueLabel[109843]
        _indexOfInterest[109838]
        _iterator[109839]
      }
      label _breakLabel[109844]
    }
    unknown call_tmp[594349] "expr temp" "maybe param" "maybe type" "temp"
    (594352 'move' call_tmp[594349](109885 call + stridelevels[109574] 1))
    unknown call_tmp[594354] "expr temp" "maybe param" "maybe type" "temp"
    (594357 'move' call_tmp[594354](109888 call count[109597] call_tmp[594349]))
    unknown call_tmp[594359] "expr temp" "maybe param" "maybe type" "temp"
    (594362 'move' call_tmp[594359](109892 call DimSizes[109242] 1))
    unknown call_tmp[594366] "expr temp" "maybe param" "maybe type" "temp"
    (594369 'move' call_tmp[594366](109898 call(109893 call (partial) safeCast _mt[232] call_tmp[594359]) size_t[209674]))
    (109899 call *= call_tmp[594354] call_tmp[594366])
    unknown call_tmp[594371] "expr temp" "maybe param" "maybe type" "temp"
    (594374 'move' call_tmp[594371](109905 call <= stridelevels[109574] inferredRank[109202]))
    (109924 call assert call_tmp[594371] "BulkTransferStride: stride levels greater than rank.")
    unknown call_tmp[594376] "expr temp" "maybe param" "maybe type" "temp"
    (594379 'move' call_tmp[594376](109928 call == stridelevels[109574] 0))
    unknown call_tmp[594381] "expr temp" "maybe param" "maybe type" "temp"
    (594384 'move' call_tmp[594381](109984 call _cond_test call_tmp[594376]))
    if call_tmp[594381]
    {
      unknown call_tmp[594386] "expr temp" "maybe param" "maybe type" "temp"
      (594389 'move' call_tmp[594386](109934 call count[109597] 1))
      unknown call_tmp[594393] "expr temp" "maybe param" "maybe type" "temp"
      (594396 'move' call_tmp[594393](109936 call numIndices _mt[232] LViewDom[109060]))
      unknown call_tmp[594398] "expr temp" "maybe param" "maybe type" "temp"
      (594401 'move' call_tmp[594398](109939 call == call_tmp[594386] call_tmp[594393]))
      unknown call_tmp[594403] "expr temp" "maybe param" "maybe type" "temp"
      (594406 'move' call_tmp[594403](109961 call count[109597] 1))
      unknown call_tmp[594410] "expr temp" "maybe param" "maybe type" "temp"
      (594413 'move' call_tmp[594410](109979 call numIndices _mt[232] LViewDom[109060]))
      (109982 call assert call_tmp[594398] "BulkTransferStride: bulk-count incorrect for stride level of 0: " call_tmp[594403] " != " call_tmp[594410])
    }
    unknown call_tmp[594415] "expr temp" "maybe param" "maybe type" "temp"
    (594418 'move' call_tmp[594415](109993 call + stridelevels[109574] 1))
    unknown call_tmp[594420] "expr temp" "maybe param" "maybe type" "temp"
    (594423 'move' call_tmp[594420](109995 call chpl_build_bounded_range 1 call_tmp[594415]))
    unknown call_tmp[594425] "expr temp" "maybe param" "maybe type" "temp"
    (594428 'move' call_tmp[594425](109998 call chpl__buildDomainExpr call_tmp[594420]))
    (110000 call = countDom[109587] call_tmp[594425])
    unknown call_tmp[594430] "expr temp" "maybe param" "maybe type" "temp"
    (594433 'move' call_tmp[594430](110006 call chpl_build_bounded_range 1 stridelevels[109574]))
    unknown call_tmp[594435] "expr temp" "maybe param" "maybe type" "temp"
    (594438 'move' call_tmp[594435](110009 call chpl__buildDomainExpr call_tmp[594430]))
    (110011 call = strideDom[109647] call_tmp[594435])
    function getFirstIdx[110018](arg dims[110016]:_any[170](?)) : _unknown[43]
    {
      unknown ret[466353] "RVV" "temp"
      unknown ret[110033] "insert auto destroy"
      unknown call_tmp[594442] "expr temp" "maybe param" "maybe type" "temp"
      (594445 'move' call_tmp[594442](110021 call size _mt[232] dims[110016]))
      unknown call_tmp[594447] "expr temp" "maybe param" "maybe type" "temp"
      (594450 'move' call_tmp[594447](110027 call dims[110016] 1))
      unknown call_tmp[594454] "expr temp" "maybe param" "maybe type" "temp"
      (594457 'move' call_tmp[594454](110028 call idxType _mt[232] call_tmp[594447]))
      unknown call_tmp[594459] "expr temp" "maybe param" "maybe type" "temp"
      (594462 'move' call_tmp[594459](110031 call * call_tmp[594442] call_tmp[594454]))
      (491036 'default init var' ret[110033] call_tmp[594459])
      {
        unknown i[110078] "insert auto destroy"
        (491038 'init var' i[110078] 0)
        unknown tmp[110079] "maybe param" "temp"
        unknown call_tmp[594466] "expr temp" "maybe param" "maybe type" "temp"
        (594469 'move' call_tmp[594466](110039 call size _mt[232] dims[110016]))
        (110091 'move' tmp[110079](110089 call chpl_compute_low_param_loop_bound 1 call_tmp[594466]))
        unknown tmp[110080] "maybe param" "temp"
        unknown call_tmp[594473] "expr temp" "maybe param" "maybe type" "temp"
        (594476 'move' call_tmp[594473](110096 call size _mt[232] dims[110016]))
        (110101 'move' tmp[110080](110099 call chpl_compute_high_param_loop_bound 1 call_tmp[594473]))
        unknown tmp[110081] "maybe param" "temp"
        (110104 'move' tmp[110081] 1)
        ParamForLoop
        { i[110078] tmp[110079] tmp[110080] tmp[110081]
          unknown tmp[512641] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[512642] "maybe param" "temp"
          unknown call_tmp[594478] "expr temp" "maybe param" "maybe type" "temp"
          (594481 'move' call_tmp[594478](110051 call dims[110016] i[110078]))
          unknown call_tmp[594485] "expr temp" "maybe param" "maybe type" "temp"
          (594488 'move' call_tmp[594485](110052 call stride _mt[232] call_tmp[594478]))
          unknown call_tmp[594490] "expr temp" "maybe param" "maybe type" "temp"
          (594493 'move' call_tmp[594490](110056 call < call_tmp[594485] 0))
          (512647 'move' tmp[512642](512645 call _cond_test call_tmp[594490]))
          if tmp[512642]
          {
            unknown tmp[512649] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[594495] "expr temp" "maybe param" "maybe type" "temp"
            (594498 'move' call_tmp[594495](110061 call dims[110016] i[110078]))
            (512651 'move' tmp[512649](110062 call last _mt[232] call_tmp[594495]))
            (512656 'move' tmp[512641](512653 '_paramFoldLogical' tmp[512642] tmp[512649]))
          }
          {
            unknown tmp[512658] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[594502] "expr temp" "maybe param" "maybe type" "temp"
            (594505 'move' call_tmp[594502](110068 call dims[110016] i[110078]))
            (512660 'move' tmp[512658](110069 call first _mt[232] call_tmp[594502]))
            (512665 'move' tmp[512641](512662 '_paramFoldLogical' tmp[512642] tmp[512658]))
          }
          unknown call_tmp[594509] "expr temp" "maybe param" "maybe type" "temp"
          (594512 'move' call_tmp[594509](110047 call ret[110033] i[110078]))
          (110075 call = call_tmp[594509] tmp[512641])
        }
        label _unused_continueLabel[110083]
        label _breakLabel[110082]
      }
      (466358 'move' ret[466353](466357 'deref' ret[110033]))
      (466355 return ret[466353])
    }
    unknown call_tmp[594514] "maybe param" "maybe type" "temp"
    (594517 'move' call_tmp[594514](110123 call getFirstIdx LeftDims[109186]))
    const LFirst[110124] "const" "insert auto destroy"
    (491040 'init var' LFirst[110124] call_tmp[594514])
    unknown call_tmp[594519] "maybe param" "maybe type" "temp"
    (594522 'move' call_tmp[594519](110130 call getFirstIdx RightDims[109195]))
    const RFirst[110131] "const" "insert auto destroy"
    (491042 'init var' RFirst[110131] call_tmp[594519])
    unknown call_tmp[594524] "expr temp" "maybe param" "maybe type" "temp"
    (594527 'move' call_tmp[594524](110142 call int(64)[13] 32))
    unknown call_tmp[594529] "expr temp" "maybe param" "maybe type" "temp"
    (594532 'move' call_tmp[594529](110143 call _cast call_tmp[594524] stridelevels[109574]))
    (110150 call complexTransferComm LHS[109056] RHS[109062] call_tmp[594529] dstStride[109650] srcStride[109660] count[109597] LFirst[110124] RFirst[110131])
    (466360 return _void[47])
  }
  function complexTransferComm[110158](arg A[110156]:_any[170](?), arg B[110160]:_any[170](?), arg stridelevels[110166] :
  (110165 call int(64)[13] 32), arg dstStride[110169]:_any[170](?), arg srcStride[110171]:_any[170](?), arg count[110173]:_any[170](?), arg AFirst[110175]:_any[170](?), arg BFirst[110177]:_any[170](?)) : _unknown[43] "private" "no return value for void"
  {
    unknown call_tmp[594534] "expr temp" "maybe param" "maybe type" "temp"
    (594537 'move' call_tmp[594534](110308 call _cond_test debugDefaultDistBulkTransfer[92585]))
    if call_tmp[594534]
    {
      unknown call_tmp[594539] "expr temp" "maybe param" "maybe type" "temp"
      (594542 'move' call_tmp[594539](350228 call here[92085]))
      unknown call_tmp[594546] "expr temp" "maybe param" "maybe type" "temp"
      (594549 'move' call_tmp[594546](110216 call id _mt[232] call_tmp[594539]))
      unknown call_tmp[594551] "expr temp" "maybe param" "maybe type" "temp"
      (594554 'move' call_tmp[594551](110220 call stringify call_tmp[594546]))
      unknown call_tmp[594556] "expr temp" "maybe param" "maybe type" "temp"
      (594559 'move' call_tmp[594556](110241 call stringify stridelevels[110166]))
      unknown call_tmp[594561] "expr temp" "maybe param" "maybe type" "temp"
      (594564 'move' call_tmp[594561](110262 call stringify dstStride[110169]))
      unknown call_tmp[594566] "expr temp" "maybe param" "maybe type" "temp"
      (594569 'move' call_tmp[594566](110283 call stringify srcStride[110171]))
      unknown call_tmp[594571] "expr temp" "maybe param" "maybe type" "temp"
      (594574 'move' call_tmp[594571](110304 call stringify count[110173]))
      (110305 call chpl_debug_writeln "BulkTransferStride with values:\n" "\tLocale        = " call_tmp[594551] "\n" "\tStride levels = " call_tmp[594556] "\n" "\tdstStride     = " call_tmp[594561] "\n" "\tsrcStride     = " call_tmp[594566] "\n" "\tcount         = " call_tmp[594571])
    }
    unknown call_tmp[594578] "maybe param" "maybe type" "temp"
    (594581 'move' call_tmp[594578](110321 call(110314 call (partial) getDataIndex _mt[232] A[110156]) AFirst[110175](getShifted = 0)))
    const AO[110322] "const" "insert auto destroy"
    (491044 'init var' AO[110322] call_tmp[594578])
    unknown call_tmp[594585] "maybe param" "maybe type" "temp"
    (594588 'move' call_tmp[594585](110333 call(110326 call (partial) getDataIndex _mt[232] B[110160]) BFirst[110177](getShifted = 0)))
    const BO[110334] "const" "insert auto destroy"
    (491046 'init var' BO[110334] call_tmp[594585])
    unknown call_tmp[594592] "maybe param" "maybe type" "temp"
    (594595 'move' call_tmp[594592](110338 call data _mt[232] A[110156]))
    const dest[110341] "const" "insert auto destroy"
    (491048 'init var' dest[110341] call_tmp[594592])
    unknown call_tmp[594599] "maybe param" "maybe type" "temp"
    (594602 'move' call_tmp[594599](110345 call data _mt[232] B[110160]))
    const src[110348] "const" "insert auto destroy"
    (491050 'init var' src[110348] call_tmp[594599])
    unknown call_tmp[594606] "expr temp" "maybe param" "maybe type" "temp"
    (594609 'move' call_tmp[594606](110352 call _value _mt[232] dstStride[110169]))
    unknown call_tmp[594613] "maybe param" "maybe type" "temp"
    (594616 'move' call_tmp[594613](110355 call data _mt[232] call_tmp[594606]))
    const dststr[110358] "const" "insert auto destroy"
    (491052 'init var' dststr[110358] call_tmp[594613])
    unknown call_tmp[594620] "expr temp" "maybe param" "maybe type" "temp"
    (594623 'move' call_tmp[594620](110362 call _value _mt[232] srcStride[110171]))
    unknown call_tmp[594627] "maybe param" "maybe type" "temp"
    (594630 'move' call_tmp[594627](110365 call data _mt[232] call_tmp[594620]))
    const srcstr[110368] "const" "insert auto destroy"
    (491054 'init var' srcstr[110368] call_tmp[594627])
    unknown call_tmp[594634] "expr temp" "maybe param" "maybe type" "temp"
    (594637 'move' call_tmp[594634](110372 call _value _mt[232] count[110173]))
    unknown call_tmp[594641] "maybe param" "maybe type" "temp"
    (594644 'move' call_tmp[594641](110375 call data _mt[232] call_tmp[594634]))
    const cnt[110378] "const" "insert auto destroy"
    (491056 'init var' cnt[110378] call_tmp[594641])
    unknown call_tmp[594646] "expr temp" "maybe param" "maybe type" "temp"
    (594649 'move' call_tmp[594646](110385 '_wide_get_node' dest[110341]))
    unknown call_tmp[594651] "expr temp" "maybe param" "maybe type" "temp"
    (594654 'move' call_tmp[594651](350244 call here[92085]))
    unknown call_tmp[594658] "expr temp" "maybe param" "maybe type" "temp"
    (594661 'move' call_tmp[594658](110387 call id _mt[232] call_tmp[594651]))
    unknown call_tmp[594663] "expr temp" "maybe param" "maybe type" "temp"
    (594666 'move' call_tmp[594663](110390 call == call_tmp[594646] call_tmp[594658]))
    unknown call_tmp[594668] "expr temp" "maybe param" "maybe type" "temp"
    (594671 'move' call_tmp[594668](110620 call _cond_test call_tmp[594663]))
    if call_tmp[594668]
    {
      unknown call_tmp[594673] "expr temp" "maybe param" "maybe type" "temp"
      (594676 'move' call_tmp[594673](110400 call int(64)[13] 32))
      unknown call_tmp[594678] "expr temp" "maybe param" "maybe type" "temp"
      (594681 'move' call_tmp[594678](110396 '_wide_get_node' src[110348]))
      unknown call_tmp[594683] "maybe param" "maybe type" "temp"
      (594686 'move' call_tmp[594683](110401 call _cast call_tmp[594673] call_tmp[594678]))
      const srclocale[110403] "const" "insert auto destroy"
      (491058 'init var' srclocale[110403] call_tmp[594683])
      unknown call_tmp[594688] "expr temp" "maybe param" "maybe type" "temp"
      (594691 'move' call_tmp[594688](110430 call _cond_test debugBulkTransfer[111829]))
      if call_tmp[594688]
      {
        (110427 call chpl_debug_writeln "BulkTransferStride: On LHS - GET from " srclocale[110403])
      }
      unknown call_tmp[594693] "expr temp" "maybe param" "maybe type" "temp"
      (594696 'move' call_tmp[594693](110454 call dest[110341] AO[110322]))
      unknown call_tmp[594698] "expr temp" "maybe param" "maybe type" "temp"
      (594701 'move' call_tmp[594698](110458 call dststr[110358] 0))
      unknown call_tmp[594703] "expr temp" "maybe param" "maybe type" "temp"
      (594706 'move' call_tmp[594703](110463 call src[110348] BO[110334]))
      unknown call_tmp[594708] "expr temp" "maybe param" "maybe type" "temp"
      (594711 'move' call_tmp[594708](110467 call srcstr[110368] 0))
      unknown call_tmp[594713] "expr temp" "maybe param" "maybe type" "temp"
      (594716 'move' call_tmp[594713](110471 call cnt[110378] 0))
      (110473 'chpl_comm_get_strd' call_tmp[594693] call_tmp[594698] srclocale[110403] call_tmp[594703] call_tmp[594708] call_tmp[594713] stridelevels[110166])
    }
    {
      unknown call_tmp[594718] "expr temp" "maybe param" "maybe type" "temp"
      (594721 'move' call_tmp[594718](110483 call int(64)[13] 32))
      unknown call_tmp[594723] "expr temp" "maybe param" "maybe type" "temp"
      (594726 'move' call_tmp[594723](110479 '_wide_get_node' dest[110341]))
      unknown call_tmp[594728] "maybe param" "maybe type" "temp"
      (594731 'move' call_tmp[594728](110484 call _cast call_tmp[594718] call_tmp[594723]))
      const destlocale[110486] "const" "insert auto destroy"
      (491060 'init var' destlocale[110486] call_tmp[594728])
      unknown call_tmp[594733] "expr temp" "maybe param" "maybe type" "temp"
      (594736 'move' call_tmp[594733](110548 call _cond_test debugDefaultDistBulkTransfer[92585]))
      if call_tmp[594733]
      {
        unknown call_tmp[594738] "expr temp" "maybe param" "maybe type" "temp"
        (594741 'move' call_tmp[594738](110496 '_wide_get_node' src[110348]))
        unknown call_tmp[594743] "expr temp" "maybe param" "maybe type" "temp"
        (594746 'move' call_tmp[594743](350261 call here[92085]))
        unknown call_tmp[594750] "expr temp" "maybe param" "maybe type" "temp"
        (594753 'move' call_tmp[594750](110498 call id _mt[232] call_tmp[594743]))
        unknown call_tmp[594755] "expr temp" "maybe param" "maybe type" "temp"
        (594758 'move' call_tmp[594755](110501 call == call_tmp[594738] call_tmp[594750]))
        unknown call_tmp[594760] "expr temp" "maybe param" "maybe type" "temp"
        (594763 'move' call_tmp[594760](110524 '_wide_get_node' src[110348]))
        unknown call_tmp[594765] "expr temp" "maybe param" "maybe type" "temp"
        (594768 'move' call_tmp[594765](350264 call here[92085]))
        unknown call_tmp[594772] "expr temp" "maybe param" "maybe type" "temp"
        (594775 'move' call_tmp[594772](110542 call id _mt[232] call_tmp[594765]))
        (110545 call assert call_tmp[594755] "BulkTransferStride: Expected to be on " call_tmp[594760] ", actually on " call_tmp[594772])
      }
      unknown call_tmp[594777] "expr temp" "maybe param" "maybe type" "temp"
      (594780 'move' call_tmp[594777](110575 call _cond_test debugBulkTransfer[111829]))
      if call_tmp[594777]
      {
        (110572 call chpl_debug_writeln "BulkTransferStride: On RHS - PUT to " destlocale[110486])
      }
      unknown call_tmp[594782] "expr temp" "maybe param" "maybe type" "temp"
      (594785 'move' call_tmp[594782](110599 call dest[110341] AO[110322]))
      unknown call_tmp[594787] "expr temp" "maybe param" "maybe type" "temp"
      (594790 'move' call_tmp[594787](110603 call dststr[110358] 0))
      unknown call_tmp[594792] "expr temp" "maybe param" "maybe type" "temp"
      (594795 'move' call_tmp[594792](110608 call src[110348] BO[110334]))
      unknown call_tmp[594797] "expr temp" "maybe param" "maybe type" "temp"
      (594800 'move' call_tmp[594797](110612 call srcstr[110368] 0))
      unknown call_tmp[594802] "expr temp" "maybe param" "maybe type" "temp"
      (594805 'move' call_tmp[594802](110616 call cnt[110378] 0))
      (110618 'chpl_comm_put_strd' call_tmp[594782] call_tmp[594787] destlocale[110486] call_tmp[594792] call_tmp[594797] call_tmp[594802] stridelevels[110166])
    }
    (466362 return _void[47])
  }
  function DefaultRectangularArr[105188](?).isDefaultRectangular[110629](arg _mt[110634]:_MT[227], arg this[110631]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?)) param : _unknown[43] "method"
  {
    unknown ret[466366] "RVV" "param" "temp"
    (466371 'move' ret[466366](466370 'deref' 1))
    (466368 return ret[466366])
  }
  function anymanaged anynil DefaultRectangularArr[389608](?).isDefaultRectangular[110645](arg _mt[110650]:_MT[227], arg this[110647]:anymanaged anynil DefaultRectangularArr[389608](?)) param : _unknown[43] "method"
  {
    unknown ret[466375] "RVV" "param" "temp"
    (466380 'move' ret[466375](466379 'deref' 1))
    (466377 return ret[466375])
  }
  unknown debugDRScan[110659] "config" "param"
  function DefaultRectangularArr[105188](?).doiScan[110667](arg _mt[110674]:_MT[227], arg this[110671]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg op[110665]:_any[170](?), arg dom[110669]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[466384] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[443331] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[594809] "expr temp" "maybe param" "maybe type" "temp"
      (594812 'move' call_tmp[594809](110696 call(110692 call (partial) generate _mt[232] op[110665])))
      (443335 'move' call_type_tmp[443331](110697 'typeof' call_tmp[594809]))
    }
    unknown resType[110698] "insert auto destroy" "type variable" call_type_tmp[443331]
    (491065 'move' resType[110698] call_type_tmp[443331])
    unknown res[110708] "insert auto destroy"
    unknown call_tmp[594814] "expr temp" "maybe param" "maybe type" "temp"
    (594817 'move' call_tmp[594814](110704 call chpl__ensureDomainExpr dom[110669]))
    unknown call_tmp[594819] "expr temp" "maybe param" "maybe type" "temp"
    (594822 'move' call_tmp[594819](110706 call chpl__buildArrayRuntimeType call_tmp[594814] resType[110698]))
    (491067 'default init var' res[110708] call_tmp[594819])
    unknown call_tmp[594826] "maybe param" "maybe type" "temp"
    (594829 'move' call_tmp[594826](110730 call(110723 call (partial) chpl__preScan _mt[232] this[110671]) op[110665] res[110708] dom[110669]))
    unknown tmp[110731] "insert auto destroy" "no copy" "temp"
    (491069 'init var' tmp[110731] call_tmp[594826])
    (110741 call _check_tuple_var_decl tmp[110731] 4)
    unknown call_tmp[594831] "maybe param" "maybe type" "temp"
    (594834 'move' call_tmp[594831](110732 call tmp[110731] 1))
    unknown numTasks[110711] "insert auto destroy"
    (491071 'init var' numTasks[110711] call_tmp[594831])
    unknown call_tmp[594836] "maybe param" "maybe type" "temp"
    (594839 'move' call_tmp[594836](110735 call tmp[110731] 2))
    unknown rngs[110713] "insert auto destroy"
    (491073 'init var' rngs[110713] call_tmp[594836])
    unknown call_tmp[594841] "maybe param" "maybe type" "temp"
    (594844 'move' call_tmp[594841](110738 call tmp[110731] 3))
    unknown state[110715] "insert auto destroy"
    (491075 'init var' state[110715] call_tmp[594841])
    (110758 call(110749 call (partial) chpl__postScan _mt[232] this[110671]) op[110665] res[110708] numTasks[110711] rngs[110713] state[110715])
    (110762 call chpl__delete op[110665])
    (466389 'move' ret[466384](466388 'deref' res[110708]))
    (466386 return ret[466384])
    (329378 'used modules list'(110688 'use' RangeChunk[250319]))
  }
  where {
    unknown tmp[399333] "maybe param" "temp"
    unknown call_tmp[594850] "expr temp" "maybe param" "maybe type" "temp"
    (594853 'move' call_tmp[594850](350279 call rank _mt[232] this[110671]))
    (399344 'move' tmp[399333](110678 call == call_tmp[594850] 1))
    unknown call_tmp[594855] "expr temp" "maybe param" "maybe type" "temp"
    (594858 'move' call_tmp[594855](399346 call _cond_invalid tmp[399333]))
    if call_tmp[594855]
    {
      (399349 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[512672] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512673] "maybe param" "temp"
    unknown call_tmp[594860] "expr temp" "maybe param" "maybe type" "temp"
    (594863 'move' call_tmp[594860](399334 call isTrue tmp[399333]))
    (512678 'move' tmp[512673](512676 call _cond_test call_tmp[594860]))
    if tmp[512673]
    {
      unknown tmp[512680] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[594865] "expr temp" "maybe param" "maybe type" "temp"
      (594868 'move' call_tmp[594865](110683 call chpl__scanStateResTypesMatch op[110665]))
      (512682 'move' tmp[512680](399337 call isTrue call_tmp[594865]))
      (512687 'move' tmp[512672](512684 '_paramFoldLogical' tmp[512673] tmp[512680]))
    }
    {
      (512692 'move' tmp[512672](512689 '_paramFoldLogical' tmp[512673] 0))
    }
    (691849 call _statementLevelSymbol tmp[512672])
  }
  function DefaultRectangularArr[105188](?).chpl__preScan[110776](arg _mt[110791]:_MT[227], arg this[110788]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg op[110774]:_any[170](?), arg res[110783]:_array[133150](?), arg dom[110786]:_any[170](?)) : _unknown[43] "method"
  {
    unknown ret[466395] "RVV" "temp"
    unknown call_tmp[594872] "maybe param" "maybe type" "temp"
    (594875 'move' call_tmp[594872](110806 call(110801 call (partial) dim _mt[232] dom[110786]) 1))
    const rng[110807] "const" "insert auto destroy"
    (491077 'init var' rng[110807] call_tmp[594872])
    const numTasks[110824] "const" "insert auto destroy"
    unknown tmp[512699] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512700] "maybe param" "temp"
    unknown call_tmp[594877] "expr temp" "maybe param" "maybe type" "temp"
    (594880 'move' call_tmp[594877](110812 'task_get_serial'))
    (512705 'move' tmp[512700](512703 call _cond_test call_tmp[594877]))
    if tmp[512700]
    {
      (512710 'move' tmp[512699](512707 '_paramFoldLogical' tmp[512700] 1))
    }
    {
      unknown tmp[512712] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[594884] "expr temp" "maybe param" "maybe type" "temp"
      (594887 'move' call_tmp[594884](110816 call size _mt[232] rng[110807]))
      (512714 'move' tmp[512712](110820 call _computeNumChunks call_tmp[594884]))
      (512719 'move' tmp[512699](512716 '_paramFoldLogical' tmp[512700] tmp[512712]))
    }
    (491079 'init var' numTasks[110824] tmp[512699])
    unknown call_tmp[594889] "maybe param" "maybe type" "temp"
    (594892 'move' call_tmp[594889](110836 call chunks module=[244] RangeChunk[250319] rng[110807] numTasks[110824]))
    const rngs[110837] "const" "insert auto destroy"
    (491081 'init var' rngs[110837] call_tmp[594889])
    unknown call_tmp[594894] "expr temp" "maybe param" "maybe type" "temp"
    (594897 'move' call_tmp[594894](110900 call _cond_test debugDRScan[110659]))
    if call_tmp[594894]
    {
      (110876 call writeln "Using " numTasks[110824] " tasks")
      (110898 call writeln "Whose chunks are: " rngs[110837])
    }
    unknown state[110914] "insert auto destroy"
    unknown call_tmp[594899] "expr temp" "maybe param" "maybe type" "temp"
    (594902 'move' call_tmp[594899](110906 call chpl_build_bounded_range 1 numTasks[110824]))
    unknown call_tmp[594904] "expr temp" "maybe param" "maybe type" "temp"
    (594907 'move' call_tmp[594904](110910 call chpl__ensureDomainExpr call_tmp[594899]))
    unknown call_tmp[594911] "expr temp" "maybe param" "maybe type" "temp"
    (594914 'move' call_tmp[594911](436152 call eltType _mt[232] res[110783]))
    unknown call_tmp[594916] "expr temp" "maybe param" "maybe type" "temp"
    (594919 'move' call_tmp[594916](110912 call chpl__buildArrayRuntimeType call_tmp[594904] call_tmp[594911]))
    (491083 'default init var' state[110914] call_tmp[594916])
    unknown call_tmp[594921] "expr temp" "maybe param" "maybe type" "temp"
    (594924 'move' call_tmp[594921](110919 call == numTasks[110824] 1))
    unknown call_tmp[594926] "expr temp" "maybe param" "maybe type" "temp"
    (594929 'move' call_tmp[594926](111101 call _cond_test call_tmp[594921]))
    if call_tmp[594926]
    {
      (110924 call preScanChunk 1)
    }
    {
      {
        unknown tmpIter[110938] "expr temp" "maybe ref" "no copy" "temp"
        (110941 'move' tmpIter[110938](110930 call chpl_build_bounded_range 1 numTasks[110824]))
        unknown isRngDomArr[111081] "maybe param" "temp"
        unknown tmp[399354] "maybe param" "temp"
        (399365 'move' tmp[399354](111083 call isBoundedRange tmpIter[110938]))
        unknown call_tmp[594931] "expr temp" "maybe param" "maybe type" "temp"
        (594934 'move' call_tmp[594931](399367 call _cond_invalid tmp[399354]))
        if call_tmp[594931]
        {
          (399370 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[512753] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[512754] "maybe param" "temp"
        unknown call_tmp[594936] "expr temp" "maybe param" "maybe type" "temp"
        (594939 'move' call_tmp[594936](399355 call isTrue tmp[399354]))
        (512759 'move' tmp[512754](512757 call _cond_test call_tmp[594936]))
        if tmp[512754]
        {
          (512764 'move' tmp[512753](512761 '_paramFoldLogical' tmp[512754] 1))
        }
        {
          unknown tmp[399375] "maybe param" "temp"
          (399386 'move' tmp[399375](111086 call isDomain tmpIter[110938]))
          unknown call_tmp[594941] "expr temp" "maybe param" "maybe type" "temp"
          (594944 'move' call_tmp[594941](399388 call _cond_invalid tmp[399375]))
          if call_tmp[594941]
          {
            (399391 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[512726] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[512727] "maybe param" "temp"
          unknown call_tmp[594946] "expr temp" "maybe param" "maybe type" "temp"
          (594949 'move' call_tmp[594946](399376 call isTrue tmp[399375]))
          (512732 'move' tmp[512727](512730 call _cond_test call_tmp[594946]))
          if tmp[512727]
          {
            (512737 'move' tmp[512726](512734 '_paramFoldLogical' tmp[512727] 1))
          }
          {
            unknown tmp[512739] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[594951] "expr temp" "maybe param" "maybe type" "temp"
            (594954 'move' call_tmp[594951](111089 call isArray tmpIter[110938]))
            (512741 'move' tmp[512739](399380 call isTrue call_tmp[594951]))
            (512746 'move' tmp[512726](512743 '_paramFoldLogical' tmp[512727] tmp[512739]))
          }
          unknown tmp[512766] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (512768 'move' tmp[512766](399359 call isTrue tmp[512726]))
          (512773 'move' tmp[512753](512770 '_paramFoldLogical' tmp[512754] tmp[512766]))
        }
        (111096 'move' isRngDomArr[111081] tmp[512753])
        if isRngDomArr[111081]
        {
          const _coforallCount[110948] "const" "end count" "temp"
          (111017 'move' _coforallCount[110948](111014 call _endCountAlloc 1))
          unknown numTasks[110949] "temp"
          (111001 'move' numTasks[110949](110997 call size _mt[232] tmpIter[110938]))
          (110992 call _upEndCount _coforallCount[110948] 1 numTasks[110949])
          (110989 call chpl_resetTaskSpawn numTasks[110949])
          unknown _indexOfInterest[110956] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[110957] "expr temp" "temp"
          (110966 'move' _iterator[110957](110964 call _getIterator tmpIter[110938]))
          Defer
          {
            {
              (110982 call _freeIterator _iterator[110957])
            }
          }
          { scopeless type
            (110971 'move' _indexOfInterest[110956](110968 call iteratorIndex _iterator[110957]))
          }
          ForLoop
          {
            unknown tid[110975] "coforall index var" "index var" "insert auto destroy"
            (110977 'move' tid[110975] _indexOfInterest[110956])
            (767187 call coforall_fn[767185])
            function coforall_fn[767185]() : void[4] "cobegin or coforall"
            {
              {
                (110945 call preScanChunk tid[110975])
              }
              (110951 call _downEndCount _coforallCount[110948] nil[38])
              (767190 return _void[47])
            }
            {
            }
            label _continueLabel[110961]
            _indexOfInterest[110956]
            _iterator[110957]
          }
          label _breakLabel[110962]
          Defer
          {
            {
              (111004 call _endCountFree _coforallCount[110948])
            }
          }
          (111009 call _waitEndCount _coforallCount[110948] 1 numTasks[110949])
        }
        {
          const _coforallCount[111021] "const" "end count" "temp"
          (111078 'move' _coforallCount[111021](111075 call _endCountAlloc 1))
          unknown _indexOfInterest[111029] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[111030] "expr temp" "temp"
          (111039 'move' _iterator[111030](111037 call _getIterator tmpIter[110938]))
          Defer
          {
            {
              (111055 call _freeIterator _iterator[111030])
            }
          }
          { scopeless type
            (111044 'move' _indexOfInterest[111029](111041 call iteratorIndex _iterator[111030]))
          }
          ForLoop
          {
            unknown tid[111048] "coforall index var" "index var" "insert auto destroy"
            (111050 'move' tid[111048] _indexOfInterest[111029])
            (111062 call _upEndCount _coforallCount[111021] 1)
            (767194 call coforall_fn[767192])
            function coforall_fn[767192]() : void[4] "cobegin or coforall"
            {
              {
                (110935 call preScanChunk tid[111048])
              }
              (111024 call _downEndCount _coforallCount[111021] nil[38])
              (767197 return _void[47])
            }
            {
            }
            label _continueLabel[111034]
            _indexOfInterest[111029]
            _iterator[111030]
          }
          label _breakLabel[111035]
          Defer
          {
            {
              (111066 call _endCountFree _coforallCount[111021])
            }
          }
          (111071 call _waitEndCount _coforallCount[111021] 1)
        }
      }
    }
    function preScanChunk[111109](arg tid[111107]:_any[170](?)) : _unknown[43] "no return value for void"
    {
      const current[111112] "const" "insert auto destroy"
      unknown call_tmp[594960] "expr temp" "maybe param" "maybe type" "temp"
      (594963 'move' call_tmp[594960](436156 call eltType _mt[232] res[110783]))
      (491085 'default init var' current[111112] call_tmp[594960])
      unknown call_tmp[594967] "maybe param" "maybe type" "temp"
      (594970 'move' call_tmp[594967](111121 call(111117 call (partial) clone _mt[232] op[110774])))
      const myop[111122] "const" "insert auto destroy"
      (491087 'init var' myop[111122] call_tmp[594967])
      {
        unknown _indexOfInterest[111159] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[111160] "expr temp" "temp"
        unknown call_tmp[594972] "expr temp" "maybe param" "maybe type" "temp"
        (594975 'move' call_tmp[594972](111129 call rngs[110837] tid[111107]))
        (111169 'move' _iterator[111160](111167 call _getIterator call_tmp[594972]))
        Defer
        {
          {
            (111186 call _freeIterator _iterator[111160])
          }
        }
        { scopeless type
          (111175 'move' _indexOfInterest[111159](111172 call iteratorIndex _iterator[111160]))
        }
        ForLoop
        {
          unknown i[111179] "index var" "insert auto destroy"
          (111181 'move' i[111179] _indexOfInterest[111159])
          {
            unknown elem[111134] "ref var"
            unknown call_tmp[594979] "expr temp" "maybe param" "maybe type" "temp"
            (594982 'move' call_tmp[594979](111133 call(350317 call (partial) dsiAccess _mt[232] this[110788]) i[111179]))
            (491090 'move' elem[111134](491089 'addr of' call_tmp[594979]))
            (111144 call(111139 call (partial) accumulate _mt[232] myop[111122]) elem[111134])
            unknown call_tmp[594986] "expr temp" "maybe param" "maybe type" "temp"
            (594989 'move' call_tmp[594986](111149 call res[110783] i[111179]))
            unknown call_tmp[594993] "expr temp" "maybe param" "maybe type" "temp"
            (594996 'move' call_tmp[594993](111155 call(111151 call (partial) generate _mt[232] myop[111122])))
            (111156 call = call_tmp[594986] call_tmp[594993])
          }
          label _continueLabel[111164]
          _indexOfInterest[111159]
          _iterator[111160]
        }
        label _breakLabel[111165]
      }
      unknown call_tmp[594998] "expr temp" "maybe param" "maybe type" "temp"
      (595001 'move' call_tmp[594998](111196 call state[110914] tid[111107]))
      unknown call_tmp[595003] "expr temp" "maybe param" "maybe type" "temp"
      (595006 'move' call_tmp[595003](111201 call rngs[110837] tid[111107]))
      unknown call_tmp[595010] "expr temp" "maybe param" "maybe type" "temp"
      (595013 'move' call_tmp[595010](111202 call high _mt[232] call_tmp[595003]))
      unknown call_tmp[595015] "expr temp" "maybe param" "maybe type" "temp"
      (595018 'move' call_tmp[595015](111206 call res[110783] call_tmp[595010]))
      (111207 call = call_tmp[594998] call_tmp[595015])
      (111212 call chpl__delete myop[111122])
      (466391 return _void[47])
    }
    unknown call_tmp[595020] "expr temp" "maybe param" "maybe type" "temp"
    (595023 'move' call_tmp[595020](111261 call _cond_test debugDRScan[110659]))
    if call_tmp[595020]
    {
      (111237 call writeln "res = " res[110783])
      (111259 call writeln "state = " state[110914])
    }
    unknown call_tmp[595027] "maybe param" "maybe type" "temp"
    (595030 'move' call_tmp[595027](111270 call(111266 call (partial) clone _mt[232] op[110774])))
    const metaop[111271] "const" "insert auto destroy"
    (491092 'init var' metaop[111271] call_tmp[595027])
    unknown call_tmp[595034] "maybe param" "maybe type" "temp"
    (595037 'move' call_tmp[595034](111276 call identity _mt[232] metaop[111271]))
    unknown call_tmp[595041] "maybe param" "maybe type" "temp"
    (595044 'move' call_tmp[595041](436160 call eltType _mt[232] res[110783]))
    unknown next[111279] "insert auto destroy"
    (491094 'init var' next[111279] call_tmp[595034] call_tmp[595041])
    {
      unknown _indexOfInterest[111310] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[111311] "expr temp" "temp"
      unknown call_tmp[595046] "expr temp" "maybe param" "maybe type" "temp"
      (595049 'move' call_tmp[595046](111325 call chpl_direct_range_iter 1 numTasks[110824] 1))
      (111320 'move' _iterator[111311](111318 call _getIterator call_tmp[595046]))
      Defer
      {
        {
          (111341 call _freeIterator _iterator[111311])
        }
      }
      { scopeless type
        (111330 'move' _indexOfInterest[111310](111327 call iteratorIndex _iterator[111311]))
      }
      ForLoop
      {
        unknown i[111334] "index var" "insert auto destroy"
        (111336 'move' i[111334] _indexOfInterest[111310])
        {
          unknown call_tmp[595051] "expr temp" "maybe param" "maybe type" "temp"
          (595054 'move' call_tmp[595051](111290 call state[110914] i[111334]))
          (111292 call <=> call_tmp[595051] next[111279])
          unknown call_tmp[595058] "expr temp" "maybe param" "maybe type" "temp"
          (595061 'move' call_tmp[595058](111307 call state[110914] i[111334]))
          (111308 call(111299 call (partial) accumulateOntoState _mt[232] metaop[111271]) next[111279] call_tmp[595058])
        }
        label _continueLabel[111315]
        _indexOfInterest[111310]
        _iterator[111311]
      }
      label _breakLabel[111316]
    }
    (111350 call chpl__delete metaop[111271])
    unknown call_tmp[595063] "expr temp" "maybe param" "maybe type" "temp"
    (595066 'move' call_tmp[595063](111360 call _cond_test debugDRScan[110659]))
    if call_tmp[595063]
    {
      (111358 call writeln "state = " state[110914])
    }
    unknown call_tmp[595068] "expr temp" "maybe param" "maybe type" "temp"
    (595071 'move' call_tmp[595068](111370 call _build_tuple numTasks[110824] rngs[110837] state[110914] next[111279]))
    (466400 'move' ret[466395](466399 'deref' call_tmp[595068]))
    (466397 return ret[466395])
    (329380 'used modules list'(110795 'use' RangeChunk[250319] 'only' ))
  }
  function DefaultRectangularArr[105188](?).chpl__postScan[111381](arg _mt[111394]:_MT[227], arg this[111391]:DefaultRectangularArr[105188](?) :
  DefaultRectangularArr[105188](?), arg op[111379]:_any[170](?), arg res[111383]:_any[170](?), arg numTasks[111385]:_any[170](?), arg rngs[111387]:_any[170](?), arg state[111389]:_any[170](?)) : _unknown[43] "method" "no return value for void"
  {
    unknown call_tmp[595073] "expr temp" "maybe param" "maybe type" "temp"
    (595076 'move' call_tmp[595073](111398 call == numTasks[111385] 1))
    unknown call_tmp[595078] "expr temp" "maybe param" "maybe type" "temp"
    (595081 'move' call_tmp[595078](111580 call _cond_test call_tmp[595073]))
    if call_tmp[595078]
    {
      (111403 call postScanChunk 1)
    }
    {
      {
        unknown tmpIter[111417] "expr temp" "maybe ref" "no copy" "temp"
        (111420 'move' tmpIter[111417](111409 call chpl_build_bounded_range 1 numTasks[111385]))
        unknown isRngDomArr[111560] "maybe param" "temp"
        unknown tmp[399396] "maybe param" "temp"
        (399407 'move' tmp[399396](111562 call isBoundedRange tmpIter[111417]))
        unknown call_tmp[595083] "expr temp" "maybe param" "maybe type" "temp"
        (595086 'move' call_tmp[595083](399409 call _cond_invalid tmp[399396]))
        if call_tmp[595083]
        {
          (399412 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[512807] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[512808] "maybe param" "temp"
        unknown call_tmp[595088] "expr temp" "maybe param" "maybe type" "temp"
        (595091 'move' call_tmp[595088](399397 call isTrue tmp[399396]))
        (512813 'move' tmp[512808](512811 call _cond_test call_tmp[595088]))
        if tmp[512808]
        {
          (512818 'move' tmp[512807](512815 '_paramFoldLogical' tmp[512808] 1))
        }
        {
          unknown tmp[399417] "maybe param" "temp"
          (399428 'move' tmp[399417](111565 call isDomain tmpIter[111417]))
          unknown call_tmp[595093] "expr temp" "maybe param" "maybe type" "temp"
          (595096 'move' call_tmp[595093](399430 call _cond_invalid tmp[399417]))
          if call_tmp[595093]
          {
            (399433 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[512780] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[512781] "maybe param" "temp"
          unknown call_tmp[595098] "expr temp" "maybe param" "maybe type" "temp"
          (595101 'move' call_tmp[595098](399418 call isTrue tmp[399417]))
          (512786 'move' tmp[512781](512784 call _cond_test call_tmp[595098]))
          if tmp[512781]
          {
            (512791 'move' tmp[512780](512788 '_paramFoldLogical' tmp[512781] 1))
          }
          {
            unknown tmp[512793] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[595103] "expr temp" "maybe param" "maybe type" "temp"
            (595106 'move' call_tmp[595103](111568 call isArray tmpIter[111417]))
            (512795 'move' tmp[512793](399422 call isTrue call_tmp[595103]))
            (512800 'move' tmp[512780](512797 '_paramFoldLogical' tmp[512781] tmp[512793]))
          }
          unknown tmp[512820] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (512822 'move' tmp[512820](399401 call isTrue tmp[512780]))
          (512827 'move' tmp[512807](512824 '_paramFoldLogical' tmp[512808] tmp[512820]))
        }
        (111575 'move' isRngDomArr[111560] tmp[512807])
        if isRngDomArr[111560]
        {
          const _coforallCount[111427] "const" "end count" "temp"
          (111496 'move' _coforallCount[111427](111493 call _endCountAlloc 1))
          unknown numTasks[111428] "temp"
          (111480 'move' numTasks[111428](111476 call size _mt[232] tmpIter[111417]))
          (111471 call _upEndCount _coforallCount[111427] 1 numTasks[111428])
          (111468 call chpl_resetTaskSpawn numTasks[111428])
          unknown _indexOfInterest[111435] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[111436] "expr temp" "temp"
          (111445 'move' _iterator[111436](111443 call _getIterator tmpIter[111417]))
          Defer
          {
            {
              (111461 call _freeIterator _iterator[111436])
            }
          }
          { scopeless type
            (111450 'move' _indexOfInterest[111435](111447 call iteratorIndex _iterator[111436]))
          }
          ForLoop
          {
            unknown tid[111454] "coforall index var" "index var" "insert auto destroy"
            (111456 'move' tid[111454] _indexOfInterest[111435])
            (767201 call coforall_fn[767199])
            function coforall_fn[767199]() : void[4] "cobegin or coforall"
            {
              {
                (111424 call postScanChunk tid[111454])
              }
              (111430 call _downEndCount _coforallCount[111427] nil[38])
              (767204 return _void[47])
            }
            {
            }
            label _continueLabel[111440]
            _indexOfInterest[111435]
            _iterator[111436]
          }
          label _breakLabel[111441]
          Defer
          {
            {
              (111483 call _endCountFree _coforallCount[111427])
            }
          }
          (111488 call _waitEndCount _coforallCount[111427] 1 numTasks[111428])
        }
        {
          const _coforallCount[111500] "const" "end count" "temp"
          (111557 'move' _coforallCount[111500](111554 call _endCountAlloc 1))
          unknown _indexOfInterest[111508] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[111509] "expr temp" "temp"
          (111518 'move' _iterator[111509](111516 call _getIterator tmpIter[111417]))
          Defer
          {
            {
              (111534 call _freeIterator _iterator[111509])
            }
          }
          { scopeless type
            (111523 'move' _indexOfInterest[111508](111520 call iteratorIndex _iterator[111509]))
          }
          ForLoop
          {
            unknown tid[111527] "coforall index var" "index var" "insert auto destroy"
            (111529 'move' tid[111527] _indexOfInterest[111508])
            (111541 call _upEndCount _coforallCount[111500] 1)
            (767208 call coforall_fn[767206])
            function coforall_fn[767206]() : void[4] "cobegin or coforall"
            {
              {
                (111414 call postScanChunk tid[111527])
              }
              (111503 call _downEndCount _coforallCount[111500] nil[38])
              (767211 return _void[47])
            }
            {
            }
            label _continueLabel[111513]
            _indexOfInterest[111508]
            _iterator[111509]
          }
          label _breakLabel[111514]
          Defer
          {
            {
              (111545 call _endCountFree _coforallCount[111500])
            }
          }
          (111550 call _waitEndCount _coforallCount[111500] 1)
        }
      }
    }
    function postScanChunk[111589](arg tid[111587]:_any[170](?)) : _unknown[43] "no return value for void"
    {
      unknown call_tmp[595110] "maybe param" "maybe type" "temp"
      (595113 'move' call_tmp[595110](111594 call state[111389] tid[111587]))
      const myadjust[111595] "const" "insert auto destroy"
      (491096 'init var' myadjust[111595] call_tmp[595110])
      {
        unknown _indexOfInterest[111617] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[111618] "expr temp" "temp"
        unknown call_tmp[595115] "expr temp" "maybe param" "maybe type" "temp"
        (595118 'move' call_tmp[595115](111603 call rngs[111387] tid[111587]))
        (111627 'move' _iterator[111618](111625 call _getIterator call_tmp[595115]))
        Defer
        {
          {
            (111644 call _freeIterator _iterator[111618])
          }
        }
        { scopeless type
          (111633 'move' _indexOfInterest[111617](111630 call iteratorIndex _iterator[111618]))
        }
        ForLoop
        {
          unknown i[111637] "index var" "insert auto destroy"
          (111639 'move' i[111637] _indexOfInterest[111617])
          {
            unknown call_tmp[595122] "expr temp" "maybe param" "maybe type" "temp"
            (595125 'move' call_tmp[595122](111611 call res[111383] i[111637]))
            (111614 call(111605 call (partial) accumulateOntoState _mt[232] op[111379]) call_tmp[595122] myadjust[111595])
          }
          label _continueLabel[111622]
          _indexOfInterest[111617]
          _iterator[111618]
        }
        label _breakLabel[111623]
      }
      (466402 return _void[47])
    }
    unknown call_tmp[595127] "expr temp" "maybe param" "maybe type" "temp"
    (595130 'move' call_tmp[595127](111660 call _cond_test debugDRScan[110659]))
    if call_tmp[595127]
    {
      (111658 call writeln "res = " res[111383])
    }
    (466404 return _void[47])
  }
  function canReuseStride[111671](arg blk[111669]:_any[170](?), arg curDim[111674]:int(64)[13], arg levels[111677]:_any[170](?), arg count[111679]:_any[170](?), arg stride[111681]:_any[170](?)) : _unknown[43] "private"
  {
    unknown ret[466408] "RVV" "temp"
    unknown call_tmp[595132] "expr temp" "maybe param" "maybe type" "temp"
    (595135 'move' call_tmp[595132](111686 call + levels[111677] 1))
    unknown call_tmp[595137] "maybe param" "maybe type" "temp"
    (595140 'move' call_tmp[595137](111689 call count[111679] call_tmp[595132]))
    const lastCount[111690] "const" "insert auto destroy"
    (491098 'init var' lastCount[111690] call_tmp[595137])
    const curStride[111706] "const" "insert auto destroy"
    unknown tmp[512834] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[512835] "maybe param" "temp"
    unknown call_tmp[595142] "expr temp" "maybe param" "maybe type" "temp"
    (595145 'move' call_tmp[595142](111696 call < levels[111677] 1))
    (512840 'move' tmp[512835](512838 call _cond_test call_tmp[595142]))
    if tmp[512835]
    {
      (512845 'move' tmp[512834](512842 '_paramFoldLogical' tmp[512835] 1))
    }
    {
      unknown tmp[512847] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (512849 'move' tmp[512847](111702 call stride[111681] levels[111677]))
      (512854 'move' tmp[512834](512851 '_paramFoldLogical' tmp[512835] tmp[512847]))
    }
    (491100 'init var' curStride[111706] tmp[512834])
    unknown call_tmp[595147] "expr temp" "maybe param" "maybe type" "temp"
    (595150 'move' call_tmp[595147](111711 call - lastCount[111690] 1))
    unknown call_tmp[595152] "maybe param" "maybe type" "temp"
    (595155 'move' call_tmp[595152](111714 call * call_tmp[595147] curStride[111706]))
    const lastIndex[111716] "const" "insert auto destroy"
    (491102 'init var' lastIndex[111716] call_tmp[595152])
    unknown call_tmp[595157] "maybe param" "maybe type" "temp"
    (595160 'move' call_tmp[595157](111721 call + lastIndex[111716] curStride[111706]))
    const nextIndex[111723] "const" "insert auto destroy"
    (491104 'init var' nextIndex[111723] call_tmp[595157])
    unknown call_tmp[595162] "expr temp" "maybe param" "maybe type" "temp"
    (595165 'move' call_tmp[595162](111729 call - curDim[111674] 1))
    unknown call_tmp[595167] "expr temp" "maybe param" "maybe type" "temp"
    (595170 'move' call_tmp[595167](111732 call blk[111669] call_tmp[595162]))
    unknown call_tmp[595172] "expr temp" "maybe param" "maybe type" "temp"
    (595175 'move' call_tmp[595172](111734 call == call_tmp[595167] nextIndex[111723]))
    (466413 'move' ret[466408](466412 'deref' call_tmp[595172]))
    (466410 return ret[466408])
  }
  function _serialized_domain[93402](?).rank[715968](arg _mt[715970]:_MT[227], arg this[715972]:_serialized_domain[93402](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[715989] "RVV" "param" "temp"
    unknown call_tmp[716003] "expr temp" "maybe param" "maybe type" "temp"
    (716006 'move' call_tmp[716003](715977 'is bound' this[715972] c"rank"))
    if call_tmp[716003]
    {
      unknown call_tmp[716008] "expr temp" "maybe param" "maybe type" "temp"
      (716011 'move' call_tmp[716008](715976 '.' this[715972] c"rank"))
      (715994 'move' ret[715989](715993 'deref' call_tmp[716008]))
      gotoReturn _end_rank[715987] _end_rank[715987]
    }
    {
      (715999 'move' ret[715989](715998 'deref' ?[249]))
      gotoReturn _end_rank[715987] _end_rank[715987]
    }
    label _end_rank[715987]
    (715991 return ret[715989])
  }
  function _serialized_domain[93402](?).rank[716013](arg _mt[716015]:_MT[227], arg this[716017]:_serialized_domain[93402](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[716034] "RVV" "param" "temp"
    unknown call_tmp[716048] "expr temp" "maybe param" "maybe type" "temp"
    (716051 'move' call_tmp[716048](716022 'is bound' this[716017] c"rank"))
    if call_tmp[716048]
    {
      unknown call_tmp[716053] "expr temp" "maybe param" "maybe type" "temp"
      (716056 'move' call_tmp[716053](716021 '.' this[716017] c"rank"))
      (716039 'move' ret[716034](716038 'deref' call_tmp[716053]))
      gotoReturn _end_rank[716032] _end_rank[716032]
    }
    {
      (716044 'move' ret[716034](716043 'deref' ?[249]))
      gotoReturn _end_rank[716032] _end_rank[716032]
    }
    label _end_rank[716032]
    (716036 return ret[716034])
  }
  function _serialized_domain[93402](?).idxType[716058](arg _mt[716060]:_MT[227], arg this[716062]:_serialized_domain[93402](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[716079] "RVV" "temp" "type variable"
    unknown call_tmp[716093] "expr temp" "maybe param" "maybe type" "temp"
    (716096 'move' call_tmp[716093](716067 'is bound' this[716062] c"idxType"))
    if call_tmp[716093]
    {
      unknown call_tmp[716098] "expr temp" "maybe param" "maybe type" "temp"
      (716101 'move' call_tmp[716098](716066 '.v' this[716062] c"idxType"))
      (716084 'move' ret[716079](716083 'deref' call_tmp[716098]))
      gotoReturn _end_idxType[716077] _end_idxType[716077]
    }
    {
      (716089 'move' ret[716079](716088 'deref' _uninstantiated[247]))
      gotoReturn _end_idxType[716077] _end_idxType[716077]
    }
    label _end_idxType[716077]
    (716081 return ret[716079])
  }
  function _serialized_domain[93402](?).idxType[716103](arg _mt[716105]:_MT[227], arg this[716107]:_serialized_domain[93402](?)) type : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[716124] "RVV" "temp" "type variable"
    unknown call_tmp[716138] "expr temp" "maybe param" "maybe type" "temp"
    (716141 'move' call_tmp[716138](716112 'is bound' this[716107] c"idxType"))
    if call_tmp[716138]
    {
      unknown call_tmp[716143] "expr temp" "maybe param" "maybe type" "temp"
      (716146 'move' call_tmp[716143](716111 '.v' this[716107] c"idxType"))
      (716129 'move' ret[716124](716128 'deref' call_tmp[716143]))
      gotoReturn _end_idxType[716122] _end_idxType[716122]
    }
    {
      (716134 'move' ret[716124](716133 'deref' _uninstantiated[247]))
      gotoReturn _end_idxType[716122] _end_idxType[716122]
    }
    label _end_idxType[716122]
    (716126 return ret[716124])
  }
  function _serialized_domain[93402](?).stridable[716148](arg _mt[716150]:_MT[227], arg this[716152]:_serialized_domain[93402](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[716169] "RVV" "param" "temp"
    unknown call_tmp[716183] "expr temp" "maybe param" "maybe type" "temp"
    (716186 'move' call_tmp[716183](716157 'is bound' this[716152] c"stridable"))
    if call_tmp[716183]
    {
      unknown call_tmp[716188] "expr temp" "maybe param" "maybe type" "temp"
      (716191 'move' call_tmp[716188](716156 '.' this[716152] c"stridable"))
      (716174 'move' ret[716169](716173 'deref' call_tmp[716188]))
      gotoReturn _end_stridable[716167] _end_stridable[716167]
    }
    {
      (716179 'move' ret[716169](716178 'deref' ?[249]))
      gotoReturn _end_stridable[716167] _end_stridable[716167]
    }
    label _end_stridable[716167]
    (716171 return ret[716169])
  }
  function _serialized_domain[93402](?).stridable[716193](arg _mt[716195]:_MT[227], arg this[716197]:_serialized_domain[93402](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[716214] "RVV" "param" "temp"
    unknown call_tmp[716228] "expr temp" "maybe param" "maybe type" "temp"
    (716231 'move' call_tmp[716228](716202 'is bound' this[716197] c"stridable"))
    if call_tmp[716228]
    {
      unknown call_tmp[716233] "expr temp" "maybe param" "maybe type" "temp"
      (716236 'move' call_tmp[716233](716201 '.' this[716197] c"stridable"))
      (716219 'move' ret[716214](716218 'deref' call_tmp[716233]))
      gotoReturn _end_stridable[716212] _end_stridable[716212]
    }
    {
      (716224 'move' ret[716214](716223 'deref' ?[249]))
      gotoReturn _end_stridable[716212] _end_stridable[716212]
    }
    label _end_stridable[716212]
    (716216 return ret[716214])
  }
  function _serialized_domain[93402](?).dims[716238](arg _mt[716240]:_MT[227], ref arg this[716242]:_serialized_domain[93402](?)) ref : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[716251] "RVV" "temp"
    unknown call_tmp[716258] "expr temp" "maybe param" "maybe type" "temp"
    (716261 'move' call_tmp[716258](716246 '.' this[716242] c"dims"))
    (716256 'move' ret[716251](716255 'addr of' call_tmp[716258]))
    (716253 return ret[716251])
  }
  function _serialized_domain[93402](?).isDefaultRectangular[716263](arg _mt[716265]:_MT[227], arg this[716267]:_serialized_domain[93402](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[716284] "RVV" "param" "temp"
    unknown call_tmp[716298] "expr temp" "maybe param" "maybe type" "temp"
    (716301 'move' call_tmp[716298](716272 'is bound' this[716267] c"isDefaultRectangular"))
    if call_tmp[716298]
    {
      unknown call_tmp[716303] "expr temp" "maybe param" "maybe type" "temp"
      (716306 'move' call_tmp[716303](716271 '.' this[716267] c"isDefaultRectangular"))
      (716289 'move' ret[716284](716288 'deref' call_tmp[716303]))
      gotoReturn _end_isDefaultRectangular[716282] _end_isDefaultRectangular[716282]
    }
    {
      (716294 'move' ret[716284](716293 'deref' ?[249]))
      gotoReturn _end_isDefaultRectangular[716282] _end_isDefaultRectangular[716282]
    }
    label _end_isDefaultRectangular[716282]
    (716286 return ret[716284])
  }
  function _serialized_domain[93402](?).isDefaultRectangular[716308](arg _mt[716310]:_MT[227], arg this[716312]:_serialized_domain[93402](?)) param : _unknown[43] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[716329] "RVV" "param" "temp"
    unknown call_tmp[716343] "expr temp" "maybe param" "maybe type" "temp"
    (716346 'move' call_tmp[716343](716317 'is bound' this[716312] c"isDefaultRectangular"))
    if call_tmp[716343]
    {
      unknown call_tmp[716348] "expr temp" "maybe param" "maybe type" "temp"
      (716351 'move' call_tmp[716348](716316 '.' this[716312] c"isDefaultRectangular"))
      (716334 'move' ret[716329](716333 'deref' call_tmp[716348]))
      gotoReturn _end_isDefaultRectangular[716327] _end_isDefaultRectangular[716327]
    }
    {
      (716339 'move' ret[716329](716338 'deref' ?[249]))
      gotoReturn _end_isDefaultRectangular[716327] _end_isDefaultRectangular[716327]
    }
    label _end_isDefaultRectangular[716327]
    (716331 return ret[716329])
  }
  function _serialized_domain[93402](?).init[716353](arg _mt[716355]:_MT[227], ref arg this[716356]:_serialized_domain[93402](?), param arg rank[716359]:_any[170](?), arg idxType[716368]:_any[170](?), param arg stridable[716377]:_any[170](?), in arg dims[716386]:_any[170](?), param arg isDefaultRectangular[716395]:_any[170](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (716405 'init field' this[716356] c"rank" rank[716359])
    (716408 'init field' this[716356] c"idxType" idxType[716368])
    (716411 'init field' this[716356] c"stridable" stridable[716377])
    (716414 'init field' this[716356] c"dims" dims[716386])
    (716417 'init field' this[716356] c"isDefaultRectangular" isDefaultRectangular[716395])
    (716420 return _void[47])
  }
  function _serialized_domain[93402](?).init=[716422](arg _mt[716425]:_MT[227], ref arg this[716426]:_serialized_domain[93402](?), arg other[716429] :
  (716428 'typeof' this[716426])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method"
  {
    unknown call_tmp[716528] "maybe param" "maybe type" "temp"
    (716531 'move' call_tmp[716528](716438 call rank _mt[232] other[716429]))
    unknown tmp[716484] "param" "temp"
    (716486 'init var' tmp[716484] call_tmp[716528])
    (716488 'init field' this[716426] c"rank" tmp[716484])
    unknown tmp[716492] "temp" "type variable"
    (716494 'move' tmp[716492](716448 call idxType _mt[232] other[716429]))
    (716496 'init field' this[716426] c"idxType" tmp[716492])
    unknown call_tmp[716537] "maybe param" "maybe type" "temp"
    (716540 'move' call_tmp[716537](716458 call stridable _mt[232] other[716429]))
    unknown tmp[716500] "param" "temp"
    (716502 'init var' tmp[716500] call_tmp[716537])
    (716504 'init field' this[716426] c"stridable" tmp[716500])
    unknown call_tmp[716544] "maybe param" "maybe type" "temp"
    (716547 'move' call_tmp[716544](716468 call dims _mt[232] other[716429]))
    unknown tmp[716508] "temp"
    (716510 'init var' tmp[716508] call_tmp[716544])
    (716512 'init field' this[716426] c"dims" tmp[716508])
    unknown call_tmp[716551] "maybe param" "maybe type" "temp"
    (716554 'move' call_tmp[716551](716478 call isDefaultRectangular _mt[232] other[716429]))
    unknown tmp[716516] "param" "temp"
    (716518 'init var' tmp[716516] call_tmp[716551])
    (716520 'init field' this[716426] c"isDefaultRectangular" tmp[716516])
    (716524 return _void[47])
  }
  function _serialized_domain[93402](?).deinit[716556](arg _mt[716558]:_MT[227], arg this[716560]:_serialized_domain[93402](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (716562 return _void[47])
  }
  function _serialized_domain[93402](?).writeThis[716565](arg _mt[716569]:_MT[227], arg this[716567]:_serialized_domain[93402](?), arg f[716568]:_any[170](?)) : void[4] "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (716574 call writeThisDefaultImpl f[716568] this[716567])
    (716578 return _void[47])
  }
  function _serialized_domain[93402](?).readThis[716580](arg _mt[716584]:_MT[227], arg this[716582]:_serialized_domain[93402](?), arg f[716583]:_any[170](?)) : void[4] "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (716588 call readThisDefaultImpl f[716583] this[716582])
    (716593 return _void[47])
  }
  function ==[716595](arg _arg1[716597]:_serialized_domain[93402](?), arg _arg2[716598]:_serialized_domain[93402](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[716683]:bool[10] "RVV" "temp"
    unknown call_tmp[716715] "expr temp" "maybe param" "maybe type" "temp"
    (716718 'move' call_tmp[716715](716608 call rank _mt[232] _arg1[716597]))
    unknown call_tmp[716720] "expr temp" "maybe param" "maybe type" "temp"
    (716723 'move' call_tmp[716720](716612 call rank _mt[232] _arg2[716598]))
    unknown call_tmp[716725] "expr temp" "maybe param" "maybe type" "temp"
    (716728 'move' call_tmp[716725](716616 call != call_tmp[716715] call_tmp[716720]))
    if call_tmp[716725]
    {
      (716688 'move' ret[716683](716687 'deref' 0))
      gotoReturn _end_==[716681] _end_==[716681]
    }
    unknown call_tmp[716730] "expr temp" "maybe param" "maybe type" "temp"
    (716733 'move' call_tmp[716730](716622 call idxType _mt[232] _arg1[716597]))
    unknown call_tmp[716735] "expr temp" "maybe param" "maybe type" "temp"
    (716738 'move' call_tmp[716735](716626 call idxType _mt[232] _arg2[716598]))
    unknown call_tmp[716740] "expr temp" "maybe param" "maybe type" "temp"
    (716743 'move' call_tmp[716740](716630 call != call_tmp[716730] call_tmp[716735]))
    if call_tmp[716740]
    {
      (716693 'move' ret[716683](716692 'deref' 0))
      gotoReturn _end_==[716681] _end_==[716681]
    }
    unknown call_tmp[716745] "expr temp" "maybe param" "maybe type" "temp"
    (716748 'move' call_tmp[716745](716636 call stridable _mt[232] _arg1[716597]))
    unknown call_tmp[716750] "expr temp" "maybe param" "maybe type" "temp"
    (716753 'move' call_tmp[716750](716640 call stridable _mt[232] _arg2[716598]))
    unknown call_tmp[716755] "expr temp" "maybe param" "maybe type" "temp"
    (716758 'move' call_tmp[716755](716644 call != call_tmp[716745] call_tmp[716750]))
    if call_tmp[716755]
    {
      (716698 'move' ret[716683](716697 'deref' 0))
      gotoReturn _end_==[716681] _end_==[716681]
    }
    unknown call_tmp[716760] "expr temp" "maybe param" "maybe type" "temp"
    (716763 'move' call_tmp[716760](716650 call dims _mt[232] _arg1[716597]))
    unknown call_tmp[716765] "expr temp" "maybe param" "maybe type" "temp"
    (716768 'move' call_tmp[716765](716654 call dims _mt[232] _arg2[716598]))
    unknown call_tmp[716770] "expr temp" "maybe param" "maybe type" "temp"
    (716773 'move' call_tmp[716770](716658 call != call_tmp[716760] call_tmp[716765]))
    if call_tmp[716770]
    {
      (716703 'move' ret[716683](716702 'deref' 0))
      gotoReturn _end_==[716681] _end_==[716681]
    }
    unknown call_tmp[716775] "expr temp" "maybe param" "maybe type" "temp"
    (716778 'move' call_tmp[716775](716664 call isDefaultRectangular _mt[232] _arg1[716597]))
    unknown call_tmp[716780] "expr temp" "maybe param" "maybe type" "temp"
    (716783 'move' call_tmp[716780](716668 call isDefaultRectangular _mt[232] _arg2[716598]))
    unknown call_tmp[716785] "expr temp" "maybe param" "maybe type" "temp"
    (716788 'move' call_tmp[716785](716672 call != call_tmp[716775] call_tmp[716780]))
    if call_tmp[716785]
    {
      (716708 'move' ret[716683](716707 'deref' 0))
      gotoReturn _end_==[716681] _end_==[716681]
    }
    (716713 'move' ret[716683](716712 'deref' 1))
    label _end_==[716681]
    (716685 return ret[716683])
  }
  where {
    unknown call_tmp[716790] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (716793 'move' call_tmp[716790](716601 'typeof' _arg1[716597]))
    unknown call_tmp[716795] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (716798 'move' call_tmp[716795](716603 'typeof' _arg2[716598]))
    (716605 call == call_tmp[716790] call_tmp[716795])
  }
  function !=[716800](arg _arg1[716802]:_serialized_domain[93402](?), arg _arg2[716803]:_serialized_domain[93402](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[716888]:bool[10] "RVV" "temp"
    unknown call_tmp[716920] "expr temp" "maybe param" "maybe type" "temp"
    (716923 'move' call_tmp[716920](716813 call rank _mt[232] _arg1[716802]))
    unknown call_tmp[716925] "expr temp" "maybe param" "maybe type" "temp"
    (716928 'move' call_tmp[716925](716817 call rank _mt[232] _arg2[716803]))
    unknown call_tmp[716930] "expr temp" "maybe param" "maybe type" "temp"
    (716933 'move' call_tmp[716930](716821 call != call_tmp[716920] call_tmp[716925]))
    if call_tmp[716930]
    {
      (716893 'move' ret[716888](716892 'deref' 1))
      gotoReturn _end_!=[716886] _end_!=[716886]
    }
    unknown call_tmp[716935] "expr temp" "maybe param" "maybe type" "temp"
    (716938 'move' call_tmp[716935](716827 call idxType _mt[232] _arg1[716802]))
    unknown call_tmp[716940] "expr temp" "maybe param" "maybe type" "temp"
    (716943 'move' call_tmp[716940](716831 call idxType _mt[232] _arg2[716803]))
    unknown call_tmp[716945] "expr temp" "maybe param" "maybe type" "temp"
    (716948 'move' call_tmp[716945](716835 call != call_tmp[716935] call_tmp[716940]))
    if call_tmp[716945]
    {
      (716898 'move' ret[716888](716897 'deref' 1))
      gotoReturn _end_!=[716886] _end_!=[716886]
    }
    unknown call_tmp[716950] "expr temp" "maybe param" "maybe type" "temp"
    (716953 'move' call_tmp[716950](716841 call stridable _mt[232] _arg1[716802]))
    unknown call_tmp[716955] "expr temp" "maybe param" "maybe type" "temp"
    (716958 'move' call_tmp[716955](716845 call stridable _mt[232] _arg2[716803]))
    unknown call_tmp[716960] "expr temp" "maybe param" "maybe type" "temp"
    (716963 'move' call_tmp[716960](716849 call != call_tmp[716950] call_tmp[716955]))
    if call_tmp[716960]
    {
      (716903 'move' ret[716888](716902 'deref' 1))
      gotoReturn _end_!=[716886] _end_!=[716886]
    }
    unknown call_tmp[716965] "expr temp" "maybe param" "maybe type" "temp"
    (716968 'move' call_tmp[716965](716855 call dims _mt[232] _arg1[716802]))
    unknown call_tmp[716970] "expr temp" "maybe param" "maybe type" "temp"
    (716973 'move' call_tmp[716970](716859 call dims _mt[232] _arg2[716803]))
    unknown call_tmp[716975] "expr temp" "maybe param" "maybe type" "temp"
    (716978 'move' call_tmp[716975](716863 call != call_tmp[716965] call_tmp[716970]))
    if call_tmp[716975]
    {
      (716908 'move' ret[716888](716907 'deref' 1))
      gotoReturn _end_!=[716886] _end_!=[716886]
    }
    unknown call_tmp[716980] "expr temp" "maybe param" "maybe type" "temp"
    (716983 'move' call_tmp[716980](716869 call isDefaultRectangular _mt[232] _arg1[716802]))
    unknown call_tmp[716985] "expr temp" "maybe param" "maybe type" "temp"
    (716988 'move' call_tmp[716985](716873 call isDefaultRectangular _mt[232] _arg2[716803]))
    unknown call_tmp[716990] "expr temp" "maybe param" "maybe type" "temp"
    (716993 'move' call_tmp[716990](716877 call != call_tmp[716980] call_tmp[716985]))
    if call_tmp[716990]
    {
      (716913 'move' ret[716888](716912 'deref' 1))
      gotoReturn _end_!=[716886] _end_!=[716886]
    }
    (716918 'move' ret[716888](716917 'deref' 0))
    label _end_!=[716886]
    (716890 return ret[716888])
  }
  where {
    unknown call_tmp[716995] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (716998 'move' call_tmp[716995](716806 'typeof' _arg1[716802]))
    unknown call_tmp[717000] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (717003 'move' call_tmp[717000](716808 'typeof' _arg2[716803]))
    (716810 call == call_tmp[716995] call_tmp[717000])
  }
  function =[717005](ref arg _arg1[717007]:_serialized_domain[93402](?), const?  ref arg _arg2[717008]:_serialized_domain[93402](?)) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[717033] "expr temp" "maybe param" "maybe type" "temp"
    (717036 'move' call_tmp[717033](717018 call dims _mt[232] _arg1[717007]))
    unknown call_tmp[717040] "expr temp" "maybe param" "maybe type" "temp"
    (717043 'move' call_tmp[717040](717022 call dims _mt[232] _arg2[717008]))
    (717026 call = call_tmp[717033] call_tmp[717040])
    (717029 return _void[47])
  }
  where {
    unknown call_tmp[717045] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (717048 'move' call_tmp[717045](717011 'typeof' _arg1[717007]))
    unknown call_tmp[717050] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (717053 'move' call_tmp[717050](717013 'typeof' _arg2[717008]))
    (717015 call == call_tmp[717045] call_tmp[717050])
  }
  function chpl__defaultHash[717055](arg r[717057]:_serialized_domain[93402](?)) : _unknown[43] "compiler generated" "last resort"
  {
    unknown ret[717105] "RVV" "temp"
    unknown call_tmp[717112] "expr temp" "maybe param" "maybe type" "temp"
    (717115 'move' call_tmp[717112](717092 call isDefaultRectangular _mt[232] r[717057]))
    unknown call_tmp[717117] "expr temp" "maybe param" "maybe type" "temp"
    (717120 'move' call_tmp[717117](717096 call chpl__defaultHash call_tmp[717112]))
    unknown call_tmp[717122] "expr temp" "maybe param" "maybe type" "temp"
    (717125 'move' call_tmp[717122](717083 call dims _mt[232] r[717057]))
    unknown call_tmp[717127] "expr temp" "maybe param" "maybe type" "temp"
    (717130 'move' call_tmp[717127](717087 call chpl__defaultHash call_tmp[717122]))
    unknown call_tmp[717132] "expr temp" "maybe param" "maybe type" "temp"
    (717135 'move' call_tmp[717132](717074 call stridable _mt[232] r[717057]))
    unknown call_tmp[717137] "expr temp" "maybe param" "maybe type" "temp"
    (717140 'move' call_tmp[717137](717078 call chpl__defaultHash call_tmp[717132]))
    unknown call_tmp[717142] "expr temp" "maybe param" "maybe type" "temp"
    (717145 'move' call_tmp[717142](717065 call idxType _mt[232] r[717057]))
    unknown call_tmp[717147] "expr temp" "maybe param" "maybe type" "temp"
    (717150 'move' call_tmp[717147](717069 call chpl__defaultHash call_tmp[717142]))
    unknown call_tmp[717152] "expr temp" "maybe param" "maybe type" "temp"
    (717155 'move' call_tmp[717152](717059 call rank _mt[232] r[717057]))
    unknown call_tmp[717157] "expr temp" "maybe param" "maybe type" "temp"
    (717160 'move' call_tmp[717157](717063 call chpl__defaultHash call_tmp[717152]))
    unknown call_tmp[717162] "expr temp" "maybe param" "maybe type" "temp"
    (717165 'move' call_tmp[717162](717071 call chpl__defaultHashCombine call_tmp[717147] call_tmp[717157] 2))
    unknown call_tmp[717167] "expr temp" "maybe param" "maybe type" "temp"
    (717170 'move' call_tmp[717167](717080 call chpl__defaultHashCombine call_tmp[717137] call_tmp[717162] 3))
    unknown call_tmp[717172] "expr temp" "maybe param" "maybe type" "temp"
    (717175 'move' call_tmp[717172](717089 call chpl__defaultHashCombine call_tmp[717127] call_tmp[717167] 4))
    unknown call_tmp[717177] "expr temp" "maybe param" "maybe type" "temp"
    (717180 'move' call_tmp[717177](717098 call chpl__defaultHashCombine call_tmp[717117] call_tmp[717172] 5))
    (717110 'move' ret[717105](717109 'deref' call_tmp[717177]))
    (717107 return ret[717105])
  }
  type _serialized_domain[93402](?) unknown rank[93386] "param" unknown idxType[93389] "type variable" unknown stridable[93392] "param" unknown dims[93395] unknown isDefaultRectangular[93398] "param"
  (329363 'used modules list'(92545 'use' DSIUtil[216461])(92547 'use' ChapelArray[111781])(92553 'use' ChapelDistribution[141791])(92555 'use' ChapelRange[66056])(92556 'use' SysBasic[209963])(92557 'use' SysError[216464])(92563 'use' ChapelDebugPrint[181115])(92565 'use' ChapelLocks[180347])(92566 'use' OwnedObject[38104])(92567 'use' IO[218633])(92572 'use' DefaultSparse[159030])(92574 'use' DefaultAssociative[151157])(92575 'use' DefaultOpaque[163704])(92578 'use' ExternalArray[181514]))
}