AST dump for List after pass normalize.
Module use list: ChapelStandard Sort ChapelLocks 

{
  function chpl__init_List[390396]() : void[4] "insert line file info" "module init"
  {
    (496900 'init var' _initialCapacity[282025] 8)
    (496902 'init var' _initialArrayCapacity[282029] 16)
    (496904 'init var' _sanityChecks[282033] 0)
    (496910 'move' _lockType[282064](496909 call chpl_LocalSpinlock[180469]))
    (488317 return _void[47])
  }
  const _initialCapacity[282025] "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[282029] "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[282033] "no doc" "param" "private"
  function _sanity[282042](arg expr[282039]:bool[10]) : _unknown[43] "inline" "private" "no return value for void"
  {
    unknown call_tmp[688131] "expr temp" "maybe param" "maybe type" "temp"
    (688134 'move' call_tmp[688131](282050 call _cond_test _sanityChecks[282033]))
    if call_tmp[688131]
    {
      (282048 call assert expr[282039])
    }
    (487843 return _void[47])
  }
  unknown _lockType[282064] "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[180469]
  function _LockWrapper[282104].lock[282077](arg _mt[282108]:_MT[227], arg this[282106]:_LockWrapper[282104]) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[688138] "expr temp" "maybe param" "maybe type" "temp"
    (688141 'move' call_tmp[688138](378261 call lock$ _mt[232] this[282106]))
    (282084 call(282080 call (partial) lock _mt[232] call_tmp[688138]))
    (487845 return _void[47])
  }
  function _LockWrapper[282104].unlock[282091](arg _mt[282112]:_MT[227], arg this[282110]:_LockWrapper[282104]) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[688147] "expr temp" "maybe param" "maybe type" "temp"
    (688150 'move' call_tmp[688147](378266 call lock$ _mt[232] this[282110]))
    (282098 call(282094 call (partial) unlock _mt[232] call_tmp[688147]))
    (487847 return _void[47])
  }
  type _LockWrapper[282104] val super[331127]:object[253] "super class" unknown lock$[282072](282071 'new'(282070 call _lockType[282064]))
  type anymanaged _LockWrapper[378271](?)
  function list[287241](?).init[282162](arg _mt[287245]:_MT[227], ref arg this[287243]:list[287241](?), arg eltType[282160]:_any[170](?), param arg parSafe[282165] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[441802] "temp" "type variable"
    (441804 'move' tmp[441802] eltType[282160])
    (441806 'init field' this[287243] c"eltType" tmp[441802])
    unknown tmp[441810] "param" "temp"
    (441812 'init var' tmp[441810] parSafe[282165])
    (441814 'init field' this[287243] c"parSafe" tmp[441810])
    unknown tmp[441819] "temp"
    (441821 'init var' tmp[441819] 0)
    (441823 '.=' this[287243] c"_size" tmp[441819])
    unknown tmp[441835] "temp"
    unknown tmp[528515] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528516] "maybe param" "temp"
    unknown call_tmp[688154] "expr temp" "maybe param" "maybe type" "temp"
    (688157 'move' call_tmp[688154](441843 '.v' this[287243] c"parSafe"))
    (528521 'move' tmp[528516](528519 call _cond_test call_tmp[688154]))
    if tmp[528516]
    {
      unknown tmp[528523] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528525 'move' tmp[528523](691670 'new' anymanaged _LockWrapper[378271](?)))
      (528530 'move' tmp[528515](528527 '_paramFoldLogical' tmp[528516] tmp[528523]))
    }
    {
      (528535 'move' tmp[528515](528532 '_paramFoldLogical' tmp[528516] none[49]))
    }
    (441837 'init var' tmp[441835] tmp[528515])
    (441839 '.=' this[287243] c"_lock$" tmp[441835])
    unknown call_tmp[688159] "expr temp" "maybe param" "maybe type" "temp"
    (688162 'move' call_tmp[688159](441860 '.v' this[287243] c"eltType"))
    unknown call_tmp[688164] "expr temp" "maybe param" "maybe type" "temp"
    (688167 'move' call_tmp[688164](441852 call _ddata[11791](?) call_tmp[688159]))
    unknown call_tmp[688169] "maybe param" "maybe type" "temp"
    (688172 'move' call_tmp[688169](441850 call _ddata[11791](?) call_tmp[688164]))
    unknown tmp[441847] "temp"
    (441854 'init var' tmp[441847] nil[38] call_tmp[688169])
    (441856 'init field' this[287243] c"_arrays" tmp[441847])
    unknown tmp[441864] "temp"
    (441866 'init var' tmp[441864] 0)
    (441868 '.=' this[287243] c"_arrayCapacity" tmp[441864])
    unknown tmp[441873] "temp"
    (441875 'init var' tmp[441873] 0)
    (441877 '.=' this[287243] c"_totalCapacity" tmp[441873])
    (282199 call(282195 call (partial) _firstTimeInitializeArrays _mt[232] this[287243]))
    (487849 return _void[47])
  }
  function list[287241](?).init[282213](arg _mt[287249]:_MT[227], ref arg this[287247]:list[287241](?), arg other[282210]:list[287241](?), param arg parSafe[282216] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[441890] "temp" "type variable"
    (441892 'move' tmp[441890](441886 'query' other[282210] 1))
    (441894 'init field' this[287247] c"eltType" tmp[441890])
    unknown tmp[441898] "param" "temp"
    (441900 'init var' tmp[441898] parSafe[282216])
    (441902 'init field' this[287247] c"parSafe" tmp[441898])
    unknown tmp[441907] "temp"
    (441909 'init var' tmp[441907] 0)
    (441911 '.=' this[287247] c"_size" tmp[441907])
    unknown tmp[441923] "temp"
    unknown tmp[528542] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528543] "maybe param" "temp"
    unknown call_tmp[688176] "expr temp" "maybe param" "maybe type" "temp"
    (688179 'move' call_tmp[688176](441931 '.v' this[287247] c"parSafe"))
    (528548 'move' tmp[528543](528546 call _cond_test call_tmp[688176]))
    if tmp[528543]
    {
      unknown tmp[528550] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528552 'move' tmp[528550](691671 'new' anymanaged _LockWrapper[378271](?)))
      (528557 'move' tmp[528542](528554 '_paramFoldLogical' tmp[528543] tmp[528550]))
    }
    {
      (528562 'move' tmp[528542](528559 '_paramFoldLogical' tmp[528543] none[49]))
    }
    (441925 'init var' tmp[441923] tmp[528542])
    (441927 '.=' this[287247] c"_lock$" tmp[441923])
    unknown call_tmp[688181] "expr temp" "maybe param" "maybe type" "temp"
    (688184 'move' call_tmp[688181](441948 '.v' this[287247] c"eltType"))
    unknown call_tmp[688186] "expr temp" "maybe param" "maybe type" "temp"
    (688189 'move' call_tmp[688186](441940 call _ddata[11791](?) call_tmp[688181]))
    unknown call_tmp[688191] "maybe param" "maybe type" "temp"
    (688194 'move' call_tmp[688191](441938 call _ddata[11791](?) call_tmp[688186]))
    unknown tmp[441935] "temp"
    (441942 'init var' tmp[441935] nil[38] call_tmp[688191])
    (441944 'init field' this[287247] c"_arrays" tmp[441935])
    unknown tmp[441952] "temp"
    (441954 'init var' tmp[441952] 0)
    (441956 '.=' this[287247] c"_arrayCapacity" tmp[441952])
    unknown tmp[441961] "temp"
    (441963 'init var' tmp[441961] 0)
    (441965 '.=' this[287247] c"_totalCapacity" tmp[441961])
    (282246 call(378292 call (partial) _commonInitFromIterable _mt[232] this[287247]) other[282210])
    (487851 return _void[47])
  }
  function list[287241](?).init[282262](arg _mt[287253]:_MT[227], ref arg this[287251]:list[287241](?), arg other[282259]:_array[133150](?), param arg parSafe[282265] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[441975] "temp" "type variable"
    (441977 'move' tmp[441975](441971 call eltType _mt[232] other[282259]))
    (441979 'init field' this[287251] c"eltType" tmp[441975])
    unknown tmp[441983] "param" "temp"
    (441985 'init var' tmp[441983] parSafe[282265])
    (441987 'init field' this[287251] c"parSafe" tmp[441983])
    unknown tmp[441992] "temp"
    (441994 'init var' tmp[441992] 0)
    (441996 '.=' this[287251] c"_size" tmp[441992])
    unknown tmp[442008] "temp"
    unknown tmp[528569] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528570] "maybe param" "temp"
    unknown call_tmp[688200] "expr temp" "maybe param" "maybe type" "temp"
    (688203 'move' call_tmp[688200](442016 '.v' this[287251] c"parSafe"))
    (528575 'move' tmp[528570](528573 call _cond_test call_tmp[688200]))
    if tmp[528570]
    {
      unknown tmp[528577] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528579 'move' tmp[528577](691672 'new' anymanaged _LockWrapper[378271](?)))
      (528584 'move' tmp[528569](528581 '_paramFoldLogical' tmp[528570] tmp[528577]))
    }
    {
      (528589 'move' tmp[528569](528586 '_paramFoldLogical' tmp[528570] none[49]))
    }
    (442010 'init var' tmp[442008] tmp[528569])
    (442012 '.=' this[287251] c"_lock$" tmp[442008])
    unknown call_tmp[688205] "expr temp" "maybe param" "maybe type" "temp"
    (688208 'move' call_tmp[688205](442033 '.v' this[287251] c"eltType"))
    unknown call_tmp[688210] "expr temp" "maybe param" "maybe type" "temp"
    (688213 'move' call_tmp[688210](442025 call _ddata[11791](?) call_tmp[688205]))
    unknown call_tmp[688215] "maybe param" "maybe type" "temp"
    (688218 'move' call_tmp[688215](442023 call _ddata[11791](?) call_tmp[688210]))
    unknown tmp[442020] "temp"
    (442027 'init var' tmp[442020] nil[38] call_tmp[688215])
    (442029 'init field' this[287251] c"_arrays" tmp[442020])
    unknown tmp[442037] "temp"
    (442039 'init var' tmp[442037] 0)
    (442041 '.=' this[287251] c"_arrayCapacity" tmp[442037])
    unknown tmp[442046] "temp"
    (442048 'init var' tmp[442046] 0)
    (442050 '.=' this[287251] c"_totalCapacity" tmp[442046])
    (282295 call(378302 call (partial) _commonInitFromIterable _mt[232] this[287251]) other[282259])
    (487853 return _void[47])
  }
  function list[287241](?).init[282309](arg _mt[287257]:_MT[227], ref arg this[287255]:list[287241](?), arg other[282306]:range[66183](?), param arg parSafe[282312] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[442063] "temp" "type variable"
    (442065 'move' tmp[442063](442059 'query' other[282306] 1))
    (442067 'init field' this[287255] c"eltType" tmp[442063])
    unknown tmp[442071] "param" "temp"
    (442073 'init var' tmp[442071] parSafe[282312])
    (442075 'init field' this[287255] c"parSafe" tmp[442071])
    unknown call_tmp[688222] "expr temp" "maybe param" "maybe type" "temp"
    (688225 'move' call_tmp[688222](282335 call isBoundedRange other[282306]))
    unknown call_tmp[688227] "expr temp" "maybe param" "maybe type" "temp"
    (688230 'move' call_tmp[688227](282336 call ! call_tmp[688222]))
    unknown call_tmp[688232] "expr temp" "maybe param" "maybe type" "temp"
    (688235 'move' call_tmp[688232](282403 call _cond_test call_tmp[688227]))
    if call_tmp[688232]
    {
      unknown call_tmp[688237] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (688240 'move' call_tmp[688237](282339 'typeof' this[287255]))
      unknown call_tmp[688242] "maybe param" "maybe type" "temp"
      (688245 'move' call_tmp[688242](282341 call _cast string[24] call_tmp[688237]))
      unknown e[282343] "param"
      (496912 'init var' e[282343] call_tmp[688242])
      unknown call_tmp[688247] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (688250 'move' call_tmp[688247](282348 'typeof' other[282306]))
      unknown call_tmp[688252] "maybe param" "maybe type" "temp"
      (688255 'move' call_tmp[688252](282350 call _cast string[24] call_tmp[688247]))
      unknown f[282352] "param"
      (496914 'init var' f[282352] call_tmp[688252])
      unknown call_tmp[688257] "expr temp" "maybe param" "maybe type" "temp"
      (688260 'move' call_tmp[688257](282372 call + "Cannot init " e[282343]))
      unknown call_tmp[688262] "expr temp" "maybe param" "maybe type" "temp"
      (688265 'move' call_tmp[688262](282390 call + call_tmp[688257] " from unbounded "))
      unknown call_tmp[688267] "maybe param" "maybe type" "temp"
      (688270 'move' call_tmp[688267](282393 call + call_tmp[688262] f[282352]))
      unknown msg[282395] "param"
      (496916 'init var' msg[282395] call_tmp[688267])
      (282401 call compilerError msg[282395])
    }
    unknown tmp[442080] "temp"
    (442082 'init var' tmp[442080] 0)
    (442084 '.=' this[287255] c"_size" tmp[442080])
    unknown tmp[442096] "temp"
    unknown tmp[528596] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528597] "maybe param" "temp"
    unknown call_tmp[688272] "expr temp" "maybe param" "maybe type" "temp"
    (688275 'move' call_tmp[688272](442104 '.v' this[287255] c"parSafe"))
    (528602 'move' tmp[528597](528600 call _cond_test call_tmp[688272]))
    if tmp[528597]
    {
      unknown tmp[528604] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528606 'move' tmp[528604](691673 'new' anymanaged _LockWrapper[378271](?)))
      (528611 'move' tmp[528596](528608 '_paramFoldLogical' tmp[528597] tmp[528604]))
    }
    {
      (528616 'move' tmp[528596](528613 '_paramFoldLogical' tmp[528597] none[49]))
    }
    (442098 'init var' tmp[442096] tmp[528596])
    (442100 '.=' this[287255] c"_lock$" tmp[442096])
    unknown call_tmp[688277] "expr temp" "maybe param" "maybe type" "temp"
    (688280 'move' call_tmp[688277](442121 '.v' this[287255] c"eltType"))
    unknown call_tmp[688282] "expr temp" "maybe param" "maybe type" "temp"
    (688285 'move' call_tmp[688282](442113 call _ddata[11791](?) call_tmp[688277]))
    unknown call_tmp[688287] "maybe param" "maybe type" "temp"
    (688290 'move' call_tmp[688287](442111 call _ddata[11791](?) call_tmp[688282]))
    unknown tmp[442108] "temp"
    (442115 'init var' tmp[442108] nil[38] call_tmp[688287])
    (442117 'init field' this[287255] c"_arrays" tmp[442108])
    unknown tmp[442125] "temp"
    (442127 'init var' tmp[442125] 0)
    (442129 '.=' this[287255] c"_arrayCapacity" tmp[442125])
    unknown tmp[442134] "temp"
    (442136 'init var' tmp[442134] 0)
    (442138 '.=' this[287255] c"_totalCapacity" tmp[442134])
    (282417 call(378319 call (partial) _commonInitFromIterable _mt[232] this[287255]) other[282306])
    (487855 return _void[47])
  }
  function list[287241](?).init=[282436](arg _mt[287261]:_MT[227], ref arg this[287259]:list[287241](?), arg other[282433]:list[287241](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[442162] "temp" "type variable"
    unknown call_tmp[688294] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688297 'move' call_tmp[688294](282443 'typeof' this[287259]))
    (442164 'move' tmp[442162](282444 call eltType _mt[232] call_tmp[688294]))
    (442166 'init field' this[287259] c"eltType" tmp[442162])
    unknown call_tmp[688301] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688304 'move' call_tmp[688301](282456 'typeof' this[287259]))
    unknown call_tmp[688308] "maybe param" "maybe type" "temp"
    (688311 'move' call_tmp[688308](282457 call parSafe _mt[232] call_tmp[688301]))
    unknown tmp[442170] "param" "temp"
    (442172 'init var' tmp[442170] call_tmp[688308])
    (442174 'init field' this[287259] c"parSafe" tmp[442170])
    unknown tmp[442179] "temp"
    (442181 'init var' tmp[442179] 0)
    (442183 '.=' this[287259] c"_size" tmp[442179])
    unknown tmp[442195] "temp"
    unknown tmp[528623] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528624] "maybe param" "temp"
    unknown call_tmp[688313] "expr temp" "maybe param" "maybe type" "temp"
    (688316 'move' call_tmp[688313](442203 '.v' this[287259] c"parSafe"))
    (528629 'move' tmp[528624](528627 call _cond_test call_tmp[688313]))
    if tmp[528624]
    {
      unknown tmp[528631] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528633 'move' tmp[528631](691674 'new' anymanaged _LockWrapper[378271](?)))
      (528638 'move' tmp[528623](528635 '_paramFoldLogical' tmp[528624] tmp[528631]))
    }
    {
      (528643 'move' tmp[528623](528640 '_paramFoldLogical' tmp[528624] none[49]))
    }
    (442197 'init var' tmp[442195] tmp[528623])
    (442199 '.=' this[287259] c"_lock$" tmp[442195])
    unknown call_tmp[688318] "expr temp" "maybe param" "maybe type" "temp"
    (688321 'move' call_tmp[688318](442220 '.v' this[287259] c"eltType"))
    unknown call_tmp[688323] "expr temp" "maybe param" "maybe type" "temp"
    (688326 'move' call_tmp[688323](442212 call _ddata[11791](?) call_tmp[688318]))
    unknown call_tmp[688328] "maybe param" "maybe type" "temp"
    (688331 'move' call_tmp[688328](442210 call _ddata[11791](?) call_tmp[688323]))
    unknown tmp[442207] "temp"
    (442214 'init var' tmp[442207] nil[38] call_tmp[688328])
    (442216 'init field' this[287259] c"_arrays" tmp[442207])
    unknown tmp[442224] "temp"
    (442226 'init var' tmp[442224] 0)
    (442228 '.=' this[287259] c"_arrayCapacity" tmp[442224])
    unknown tmp[442233] "temp"
    (442235 'init var' tmp[442233] 0)
    (442237 '.=' this[287259] c"_totalCapacity" tmp[442233])
    (282473 call(378331 call (partial) _commonInitFromIterable _mt[232] this[287259]) other[282433])
    (487857 return _void[47])
  }
  where {
    unknown call_tmp[688335] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688338 'move' call_tmp[688335](442149 'typeof' this[287259]))
    unknown call_tmp[688342] "expr temp" "maybe param" "maybe type" "temp"
    (688345 'move' call_tmp[688342](442148 call eltType _mt[232] call_tmp[688335]))
    unknown call_tmp[688347] "expr temp" "maybe param" "maybe type" "temp"
    (688350 'move' call_tmp[688347](442144 'query' other[282433] 1))
    unknown call_tmp[688352] "expr temp" "maybe param" "maybe type" "temp"
    (688355 'move' call_tmp[688352](442152 call == call_tmp[688342] call_tmp[688347]))
    (442156 call & 1 call_tmp[688352])
  }
  function list[287241](?).init=[282492](arg _mt[287265]:_MT[227], ref arg this[287263]:list[287241](?), arg other[282489]:_array[133150](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[442253] "temp" "type variable"
    unknown call_tmp[688357] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688360 'move' call_tmp[688357](282499 'typeof' this[287263]))
    (442255 'move' tmp[442253](282500 call eltType _mt[232] call_tmp[688357]))
    (442257 'init field' this[287263] c"eltType" tmp[442253])
    unknown call_tmp[688364] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688367 'move' call_tmp[688364](282512 'typeof' this[287263]))
    unknown call_tmp[688371] "maybe param" "maybe type" "temp"
    (688374 'move' call_tmp[688371](282513 call parSafe _mt[232] call_tmp[688364]))
    unknown tmp[442261] "param" "temp"
    (442263 'init var' tmp[442261] call_tmp[688371])
    (442265 'init field' this[287263] c"parSafe" tmp[442261])
    unknown tmp[442270] "temp"
    (442272 'init var' tmp[442270] 0)
    (442274 '.=' this[287263] c"_size" tmp[442270])
    unknown tmp[442286] "temp"
    unknown tmp[528650] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528651] "maybe param" "temp"
    unknown call_tmp[688376] "expr temp" "maybe param" "maybe type" "temp"
    (688379 'move' call_tmp[688376](442294 '.v' this[287263] c"parSafe"))
    (528656 'move' tmp[528651](528654 call _cond_test call_tmp[688376]))
    if tmp[528651]
    {
      unknown tmp[528658] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528660 'move' tmp[528658](691675 'new' anymanaged _LockWrapper[378271](?)))
      (528665 'move' tmp[528650](528662 '_paramFoldLogical' tmp[528651] tmp[528658]))
    }
    {
      (528670 'move' tmp[528650](528667 '_paramFoldLogical' tmp[528651] none[49]))
    }
    (442288 'init var' tmp[442286] tmp[528650])
    (442290 '.=' this[287263] c"_lock$" tmp[442286])
    unknown call_tmp[688381] "expr temp" "maybe param" "maybe type" "temp"
    (688384 'move' call_tmp[688381](442311 '.v' this[287263] c"eltType"))
    unknown call_tmp[688386] "expr temp" "maybe param" "maybe type" "temp"
    (688389 'move' call_tmp[688386](442303 call _ddata[11791](?) call_tmp[688381]))
    unknown call_tmp[688391] "maybe param" "maybe type" "temp"
    (688394 'move' call_tmp[688391](442301 call _ddata[11791](?) call_tmp[688386]))
    unknown tmp[442298] "temp"
    (442305 'init var' tmp[442298] nil[38] call_tmp[688391])
    (442307 'init field' this[287263] c"_arrays" tmp[442298])
    unknown tmp[442315] "temp"
    (442317 'init var' tmp[442315] 0)
    (442319 '.=' this[287263] c"_arrayCapacity" tmp[442315])
    unknown tmp[442324] "temp"
    (442326 'init var' tmp[442324] 0)
    (442328 '.=' this[287263] c"_totalCapacity" tmp[442324])
    (282529 call(378342 call (partial) _commonInitFromIterable _mt[232] this[287263]) other[282489])
    (487859 return _void[47])
  }
  where {
    unknown call_tmp[688398] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688401 'move' call_tmp[688398](282483 'typeof' this[287263]))
    unknown call_tmp[688405] "expr temp" "maybe param" "maybe type" "temp"
    (688408 'move' call_tmp[688405](282484 call eltType _mt[232] call_tmp[688398]))
    unknown call_tmp[688412] "expr temp" "maybe param" "maybe type" "temp"
    (688415 'move' call_tmp[688412](442247 call eltType _mt[232] other[282489]))
    unknown call_tmp[688417] "expr temp" "maybe param" "maybe type" "temp"
    (688420 'move' call_tmp[688417](442251 call == call_tmp[688405] call_tmp[688412]))
    (442245 call & 1 call_tmp[688417])
  }
  function list[287241](?).init=[282550](arg _mt[287269]:_MT[227], ref arg this[287267]:list[287241](?), arg other[282547]:range[66183](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[442355] "temp" "type variable"
    unknown call_tmp[688422] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688425 'move' call_tmp[688422](282557 'typeof' this[287267]))
    (442357 'move' tmp[442355](282558 call eltType _mt[232] call_tmp[688422]))
    (442359 'init field' this[287267] c"eltType" tmp[442355])
    unknown call_tmp[688429] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688432 'move' call_tmp[688429](282570 'typeof' this[287267]))
    unknown call_tmp[688436] "maybe param" "maybe type" "temp"
    (688439 'move' call_tmp[688436](282571 call parSafe _mt[232] call_tmp[688429]))
    unknown tmp[442363] "param" "temp"
    (442365 'init var' tmp[442363] call_tmp[688436])
    (442367 'init field' this[287267] c"parSafe" tmp[442363])
    unknown call_tmp[688441] "expr temp" "maybe param" "maybe type" "temp"
    (688444 'move' call_tmp[688441](282580 call isBoundedRange other[282547]))
    unknown call_tmp[688446] "expr temp" "maybe param" "maybe type" "temp"
    (688449 'move' call_tmp[688446](282581 call ! call_tmp[688441]))
    unknown call_tmp[688451] "expr temp" "maybe param" "maybe type" "temp"
    (688454 'move' call_tmp[688451](282618 call _cond_test call_tmp[688446]))
    if call_tmp[688451]
    {
      unknown call_tmp[688456] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (688459 'move' call_tmp[688456](282584 'typeof' this[287267]))
      unknown call_tmp[688461] "maybe param" "maybe type" "temp"
      (688464 'move' call_tmp[688461](282586 call _cast string[24] call_tmp[688456]))
      unknown e[282588] "param"
      (496918 'init var' e[282588] call_tmp[688461])
      unknown call_tmp[688466] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (688469 'move' call_tmp[688466](282593 'typeof' other[282547]))
      unknown call_tmp[688471] "maybe param" "maybe type" "temp"
      (688474 'move' call_tmp[688471](282595 call _cast string[24] call_tmp[688466]))
      unknown f[282597] "param"
      (496920 'init var' f[282597] call_tmp[688471])
      unknown call_tmp[688476] "expr temp" "maybe param" "maybe type" "temp"
      (688479 'move' call_tmp[688476](282602 call + "Cannot init " e[282588]))
      unknown call_tmp[688481] "expr temp" "maybe param" "maybe type" "temp"
      (688484 'move' call_tmp[688481](282605 call + call_tmp[688476] " from unbounded "))
      unknown call_tmp[688486] "maybe param" "maybe type" "temp"
      (688489 'move' call_tmp[688486](282608 call + call_tmp[688481] f[282597]))
      unknown msg[282610] "param"
      (496922 'init var' msg[282610] call_tmp[688486])
      (282616 call compilerError msg[282610])
    }
    unknown tmp[442372] "temp"
    (442374 'init var' tmp[442372] 0)
    (442376 '.=' this[287267] c"_size" tmp[442372])
    unknown tmp[442388] "temp"
    unknown tmp[528677] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528678] "maybe param" "temp"
    unknown call_tmp[688491] "expr temp" "maybe param" "maybe type" "temp"
    (688494 'move' call_tmp[688491](442396 '.v' this[287267] c"parSafe"))
    (528683 'move' tmp[528678](528681 call _cond_test call_tmp[688491]))
    if tmp[528678]
    {
      unknown tmp[528685] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528687 'move' tmp[528685](691676 'new' anymanaged _LockWrapper[378271](?)))
      (528692 'move' tmp[528677](528689 '_paramFoldLogical' tmp[528678] tmp[528685]))
    }
    {
      (528697 'move' tmp[528677](528694 '_paramFoldLogical' tmp[528678] none[49]))
    }
    (442390 'init var' tmp[442388] tmp[528677])
    (442392 '.=' this[287267] c"_lock$" tmp[442388])
    unknown call_tmp[688496] "expr temp" "maybe param" "maybe type" "temp"
    (688499 'move' call_tmp[688496](442413 '.v' this[287267] c"eltType"))
    unknown call_tmp[688501] "expr temp" "maybe param" "maybe type" "temp"
    (688504 'move' call_tmp[688501](442405 call _ddata[11791](?) call_tmp[688496]))
    unknown call_tmp[688506] "maybe param" "maybe type" "temp"
    (688509 'move' call_tmp[688506](442403 call _ddata[11791](?) call_tmp[688501]))
    unknown tmp[442400] "temp"
    (442407 'init var' tmp[442400] nil[38] call_tmp[688506])
    (442409 'init field' this[287267] c"_arrays" tmp[442400])
    unknown tmp[442417] "temp"
    (442419 'init var' tmp[442417] 0)
    (442421 '.=' this[287267] c"_arrayCapacity" tmp[442417])
    unknown tmp[442426] "temp"
    (442428 'init var' tmp[442426] 0)
    (442430 '.=' this[287267] c"_totalCapacity" tmp[442426])
    (282632 call(378360 call (partial) _commonInitFromIterable _mt[232] this[287267]) other[282547])
    (487861 return _void[47])
  }
  where {
    unknown call_tmp[688513] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (688516 'move' call_tmp[688513](442339 'typeof' this[287267]))
    unknown call_tmp[688520] "expr temp" "maybe param" "maybe type" "temp"
    (688523 'move' call_tmp[688520](442338 call eltType _mt[232] call_tmp[688513]))
    unknown call_tmp[688525] "expr temp" "maybe param" "maybe type" "temp"
    (688528 'move' call_tmp[688525](442334 'query' other[282547] 1))
    unknown call_tmp[688530] "expr temp" "maybe param" "maybe type" "temp"
    (688533 'move' call_tmp[688530](442342 call == call_tmp[688520] call_tmp[688525]))
    (442346 call & 1 call_tmp[688530])
  }
  function list[287241](?)._commonInitFromIterable[282640](arg _mt[287273]:_MT[227], arg this[287271]:list[287241](?), arg iterable[282638]:_any[170](?)) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    (282647 call(282643 call (partial) _firstTimeInitializeArrays _mt[232] this[287271]))
    {
      unknown _indexOfInterest[282657] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[282658] "expr temp" "temp"
      (282667 'move' _iterator[282658](282665 call _getIterator iterable[282638]))
      Defer
      {
        {
          (282683 call _freeIterator _iterator[282658])
        }
      }
      { scopeless type
        (282672 'move' _indexOfInterest[282657](282669 call iteratorIndex _iterator[282658]))
      }
      ForLoop
      {
        unknown x[282676] "index var" "insert auto destroy"
        (282678 'move' x[282676] _indexOfInterest[282657])
        (282655 call(378367 call (partial) append _mt[232] this[287271]) x[282676])
        label _continueLabel[282662]
        _indexOfInterest[282657]
        _iterator[282658]
      }
      label _breakLabel[282663]
    }
    (487863 return _void[47])
  }
  function list[287241](?)._firstTimeInitializeArrays[282694](arg _mt[287277]:_MT[227], arg this[287275]:list[287241](?)) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[688541] "expr temp" "maybe param" "maybe type" "temp"
    (688544 'move' call_tmp[688541](378375 call _arrays _mt[232] this[287275]))
    unknown call_tmp[688546] "expr temp" "maybe param" "maybe type" "temp"
    (688549 'move' call_tmp[688546](282699 call == call_tmp[688541] nil[38]))
    (282702 call _sanity call_tmp[688546])
    unknown call_tmp[688553] "expr temp" "maybe param" "maybe type" "temp"
    (688556 'move' call_tmp[688553](378382 call _totalCapacity _mt[232] this[287275]))
    unknown call_tmp[688558] "expr temp" "maybe param" "maybe type" "temp"
    (688561 'move' call_tmp[688558](282708 call == call_tmp[688553] 0))
    (282711 call _sanity call_tmp[688558])
    unknown call_tmp[688565] "expr temp" "maybe param" "maybe type" "temp"
    (688568 'move' call_tmp[688565](378387 call _size _mt[232] this[287275]))
    unknown call_tmp[688570] "expr temp" "maybe param" "maybe type" "temp"
    (688573 'move' call_tmp[688570](282716 call == call_tmp[688565] 0))
    (282719 call _sanity call_tmp[688570])
    unknown call_tmp[688577] "expr temp" "maybe param" "maybe type" "temp"
    (688580 'move' call_tmp[688577](378392 call _arrays _mt[232] this[287275]))
    unknown call_tmp[688584] "expr temp" "maybe param" "maybe type" "temp"
    (688587 'move' call_tmp[688584](282725 call(378398 call (partial) _makeBlockArray _mt[232] this[287275]) _initialArrayCapacity[282029]))
    (282726 call = call_tmp[688577] call_tmp[688584])
    unknown call_tmp[688591] "expr temp" "maybe param" "maybe type" "temp"
    (688594 'move' call_tmp[688591](378406 call _arrayCapacity _mt[232] this[287275]))
    (282731 call = call_tmp[688591] _initialArrayCapacity[282029])
    unknown call_tmp[688598] "expr temp" "maybe param" "maybe type" "temp"
    (688601 'move' call_tmp[688598](282737 call(378412 call (partial) _arrays _mt[232] this[287275]) 0))
    unknown call_tmp[688605] "expr temp" "maybe param" "maybe type" "temp"
    (688608 'move' call_tmp[688605](282741 call(378418 call (partial) _makeArray _mt[232] this[287275]) _initialCapacity[282025]))
    (282742 call = call_tmp[688598] call_tmp[688605])
    unknown call_tmp[688612] "expr temp" "maybe param" "maybe type" "temp"
    (688615 'move' call_tmp[688612](378424 call _totalCapacity _mt[232] this[287275]))
    (282747 call = call_tmp[688612] _initialCapacity[282025])
    (487865 return _void[47])
  }
  function list[287241](?).deinit[282754](arg _mt[287281]:_MT[227], arg this[287279]:list[287241](?)) : _unknown[43] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (282758 call(378431 call (partial) _fireAllDestructors _mt[232] this[287279]))
    (282763 call(378437 call (partial) _freeAllArrays _mt[232] this[287279]))
    unknown call_tmp[688623] "expr temp" "maybe param" "maybe type" "temp"
    (688626 'move' call_tmp[688623](378442 call _totalCapacity _mt[232] this[287279]))
    unknown call_tmp[688628] "expr temp" "maybe param" "maybe type" "temp"
    (688631 'move' call_tmp[688628](282768 call == call_tmp[688623] 0))
    (282771 call _sanity call_tmp[688628])
    unknown call_tmp[688635] "expr temp" "maybe param" "maybe type" "temp"
    (688638 'move' call_tmp[688635](378447 call _size _mt[232] this[287279]))
    unknown call_tmp[688640] "expr temp" "maybe param" "maybe type" "temp"
    (688643 'move' call_tmp[688640](282776 call == call_tmp[688635] 0))
    (282779 call _sanity call_tmp[688640])
    unknown call_tmp[688647] "expr temp" "maybe param" "maybe type" "temp"
    (688650 'move' call_tmp[688647](378452 call _arrays _mt[232] this[287279]))
    unknown call_tmp[688652] "expr temp" "maybe param" "maybe type" "temp"
    (688655 'move' call_tmp[688652](282784 call == call_tmp[688647] nil[38]))
    (282787 call _sanity call_tmp[688652])
    (487867 return _void[47])
  }
  function list[287241](?)._destroy[282797](arg _mt[287285]:_MT[227], arg this[287283]:list[287241](?), ref arg item[282794] :
  (378457 call eltType _mt[232] this[287283])) : _unknown[43] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (282802 call chpl__autoDestroy item[282794])
    (487869 return _void[47])
  }
  function list[287241](?)._move[282814](arg _mt[287289]:_MT[227], arg this[287287]:list[287241](?), ref arg src[282811]:_any[170](?), ref arg dst[282817] :
  (442434 'typeof' src[282811])) : _unknown[43] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (282830 '=' dst[282817] src[282811])
    (487871 return _void[47])
  }
  {
    (282824 call ==(282821 'lifetime_of' src[282811])(282823 'lifetime_of' dst[282817]))
  }
  function list[287241](?)._getArrayCapacity[282842](arg _mt[287293]:_MT[227], arg this[287291]:list[287241](?), arg array[282839]:int(64)[13]) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    unknown ret[487875] "RVV" "temp"
    unknown call_tmp[688659] "expr temp" "maybe param" "maybe type" "temp"
    (688662 'move' call_tmp[688659](282849 call log2 _initialCapacity[282025]))
    unknown call_tmp[688664] "maybe param" "maybe type" "temp"
    (688667 'move' call_tmp[688664](282850 call + array[282839] call_tmp[688659]))
    const exp[282852] "const" "insert auto destroy"
    (496924 'init var' exp[282852] call_tmp[688664])
    unknown call_tmp[688669] "maybe param" "maybe type" "temp"
    (688672 'move' call_tmp[688669](282858 call ** 2 exp[282852]))
    const result[282860] "const" "insert auto destroy"
    (496926 'init var' result[282860] call_tmp[688669])
    (487881 'move' ret[487875](487880 'coerce' result[282860] int(64)[13]))
    (487877 return ret[487875])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?)._getArrayIdx[282875](arg _mt[287297]:_MT[227], arg this[287295]:list[287241](?), arg zpos[282872]:int(64)[13]) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    unknown ret[487885] "RVV" "temp"
    unknown call_tmp[688674] "maybe param" "maybe type" "temp"
    (688677 'move' call_tmp[688674](282880 call + zpos[282872] _initialCapacity[282025]))
    const adj[282882] "const" "insert auto destroy"
    (496928 'init var' adj[282882] call_tmp[688674])
    unknown call_tmp[688679] "expr temp" "maybe param" "maybe type" "temp"
    (688682 'move' call_tmp[688679](282889 call log2 adj[282882]))
    unknown call_tmp[688684] "expr temp" "maybe param" "maybe type" "temp"
    (688687 'move' call_tmp[688684](282893 call log2 _initialCapacity[282025]))
    unknown call_tmp[688689] "maybe param" "maybe type" "temp"
    (688692 'move' call_tmp[688689](282894 call - call_tmp[688679] call_tmp[688684]))
    const result[282896] "const" "insert auto destroy"
    (496930 'init var' result[282896] call_tmp[688689])
    (487891 'move' ret[487885](487890 'coerce' result[282896] int(64)[13]))
    (487887 return ret[487885])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?)._getLastArrayIdx[282907](arg _mt[287301]:_MT[227], arg this[287299]:list[287241](?)) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    unknown ret[487895] "RVV" "temp"
    unknown call_tmp[688698] "expr temp" "maybe param" "maybe type" "temp"
    (688701 'move' call_tmp[688698](378483 call _size _mt[232] this[287299]))
    unknown call_tmp[688703] "expr temp" "maybe param" "maybe type" "temp"
    (688706 'move' call_tmp[688703](282913 call - call_tmp[688698] 1))
    unknown call_tmp[688708] "maybe param" "maybe type" "temp"
    (688711 'move' call_tmp[688708](282916 call(378478 call (partial) _getArrayIdx _mt[232] this[287299]) call_tmp[688703]))
    const result[282917] "const" "insert auto destroy"
    (496932 'init var' result[282917] call_tmp[688708])
    unknown call_tmp[688713] "expr temp" "maybe param" "maybe type" "temp"
    (688716 'move' call_tmp[688713](282924 call >= result[282917] 0))
    (282927 call _sanity call_tmp[688713])
    (487901 'move' ret[487895](487900 'coerce' result[282917] int(64)[13]))
    (487897 return ret[487895])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?)._getItemIdx[282941](arg _mt[287305]:_MT[227], arg this[287303]:list[287241](?), arg zpos[282938]:int(64)[13]) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    unknown ret[487905] "RVV" "temp"
    unknown call_tmp[688718] "maybe param" "maybe type" "temp"
    (688721 'move' call_tmp[688718](282946 call + zpos[282938] _initialCapacity[282025]))
    const adj[282948] "const" "insert auto destroy"
    (496934 'init var' adj[282948] call_tmp[688718])
    unknown call_tmp[688723] "expr temp" "maybe param" "maybe type" "temp"
    (688726 'move' call_tmp[688723](282957 call log2 adj[282948]))
    unknown call_tmp[688728] "expr temp" "maybe param" "maybe type" "temp"
    (688731 'move' call_tmp[688728](282958 call << 1 call_tmp[688723]))
    unknown call_tmp[688733] "maybe param" "maybe type" "temp"
    (688736 'move' call_tmp[688733](282960 call ^ adj[282948] call_tmp[688728]))
    const result[282962] "const" "insert auto destroy"
    (496936 'init var' result[282962] call_tmp[688733])
    (487911 'move' ret[487905](487910 'coerce' result[282962] int(64)[13]))
    (487907 return ret[487905])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?)._getRef[282977](arg _mt[287309]:_MT[227], arg this[287307]:list[287241](?), arg idx[282974]:int(64)[13]) ref : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    unknown ret[487915] "RVV" "temp"
    unknown tmp[409707] "maybe param" "temp"
    (409718 'move' tmp[409707](282982 call >= idx[282974] 1))
    unknown call_tmp[688738] "expr temp" "maybe param" "maybe type" "temp"
    (688741 'move' call_tmp[688738](409720 call _cond_invalid tmp[409707]))
    if call_tmp[688738]
    {
      (409723 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[528704] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528705] "maybe param" "temp"
    unknown call_tmp[688743] "expr temp" "maybe param" "maybe type" "temp"
    (688746 'move' call_tmp[688743](409708 call isTrue tmp[409707]))
    (528710 'move' tmp[528705](528708 call _cond_test call_tmp[688743]))
    if tmp[528705]
    {
      unknown tmp[528712] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[688750] "expr temp" "maybe param" "maybe type" "temp"
      (688753 'move' call_tmp[688750](378497 call _totalCapacity _mt[232] this[287307]))
      unknown call_tmp[688755] "expr temp" "maybe param" "maybe type" "temp"
      (688758 'move' call_tmp[688755](282986 call <= idx[282974] call_tmp[688750]))
      (528714 'move' tmp[528712](409711 call isTrue call_tmp[688755]))
      (528719 'move' tmp[528704](528716 '_paramFoldLogical' tmp[528705] tmp[528712]))
    }
    {
      (528724 'move' tmp[528704](528721 '_paramFoldLogical' tmp[528705] 0))
    }
    (282991 call _sanity tmp[528704])
    unknown call_tmp[688760] "maybe param" "maybe type" "temp"
    (688763 'move' call_tmp[688760](282996 call - idx[282974] 1))
    const zpos[282998] "const" "insert auto destroy"
    (496938 'init var' zpos[282998] call_tmp[688760])
    unknown call_tmp[688767] "maybe param" "maybe type" "temp"
    (688770 'move' call_tmp[688767](283004 call(378502 call (partial) _getArrayIdx _mt[232] this[287307]) zpos[282998]))
    const arrayIdx[283005] "const" "insert auto destroy"
    (496940 'init var' arrayIdx[283005] call_tmp[688767])
    unknown call_tmp[688774] "maybe param" "maybe type" "temp"
    (688777 'move' call_tmp[688774](283011 call(378509 call (partial) _getItemIdx _mt[232] this[287307]) zpos[282998]))
    const itemIdx[283012] "const" "insert auto destroy"
    (496942 'init var' itemIdx[283012] call_tmp[688774])
    unknown call_tmp[688781] "maybe param" "maybe type" "temp"
    (688784 'move' call_tmp[688781](283018 call(378515 call (partial) _arrays _mt[232] this[287307]) arrayIdx[283005]))
    const array[283019] "const" "insert auto destroy"
    (496944 'init var' array[283019] call_tmp[688781])
    unknown call_tmp[688786] "expr temp" "maybe param" "maybe type" "temp"
    (688789 'move' call_tmp[688786](283025 call != array[283019] nil[38]))
    (283028 call _sanity call_tmp[688786])
    unknown result[283034] "ref var"
    unknown call_tmp[688791] "expr temp" "maybe param" "maybe type" "temp"
    (688794 'move' call_tmp[688791](283033 call array[283019] itemIdx[283012]))
    (496947 'move' result[283034](496946 'addr of' call_tmp[688791]))
    (487920 'move' ret[487915](487919 'addr of' result[283034]))
    (487917 return ret[487915])
  }
  function list[287241](?)._enter[283044](arg _mt[287313]:_MT[227], arg this[287311]:list[287241](?)) : _unknown[43] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[688798] "expr temp" "maybe param" "maybe type" "temp"
    (688801 'move' call_tmp[688798](378525 call parSafe _mt[232] this[287311]))
    unknown call_tmp[688803] "expr temp" "maybe param" "maybe type" "temp"
    (688806 'move' call_tmp[688803](283054 call _cond_test call_tmp[688798]))
    if call_tmp[688803]
    {
      unknown call_tmp[688810] "expr temp" "maybe param" "maybe type" "temp"
      (688813 'move' call_tmp[688810](378532 call _lock$ _mt[232] this[287311]))
      (283052 call(283048 call (partial) lock _mt[232] call_tmp[688810]))
    }
    (487922 return _void[47])
  }
  function list[287241](?)._leave[283064](arg _mt[287317]:_MT[227], arg this[287315]:list[287241](?)) : _unknown[43] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[688819] "expr temp" "maybe param" "maybe type" "temp"
    (688822 'move' call_tmp[688819](378537 call parSafe _mt[232] this[287315]))
    unknown call_tmp[688824] "expr temp" "maybe param" "maybe type" "temp"
    (688827 'move' call_tmp[688824](283074 call _cond_test call_tmp[688819]))
    if call_tmp[688824]
    {
      unknown call_tmp[688831] "expr temp" "maybe param" "maybe type" "temp"
      (688834 'move' call_tmp[688831](378542 call _lock$ _mt[232] this[287315]))
      (283072 call(283068 call (partial) unlock _mt[232] call_tmp[688831]))
    }
    (487924 return _void[47])
  }
  function list[287241](?)._withinBounds[283088](arg _mt[287321]:_MT[227], arg this[287319]:list[287241](?), arg idx[283085]:int(64)[13]) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    unknown ret[487928] "RVV" "temp"
    unknown tmp[409728] "maybe param" "temp"
    (409739 'move' tmp[409728](283093 call >= idx[283085] 1))
    unknown call_tmp[688838] "expr temp" "maybe param" "maybe type" "temp"
    (688841 'move' call_tmp[688838](409741 call _cond_invalid tmp[409728]))
    if call_tmp[688838]
    {
      (409744 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[528731] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528732] "maybe param" "temp"
    unknown call_tmp[688843] "expr temp" "maybe param" "maybe type" "temp"
    (688846 'move' call_tmp[688843](409729 call isTrue tmp[409728]))
    (528737 'move' tmp[528732](528735 call _cond_test call_tmp[688843]))
    if tmp[528732]
    {
      unknown tmp[528739] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[688850] "expr temp" "maybe param" "maybe type" "temp"
      (688853 'move' call_tmp[688850](378549 call _size _mt[232] this[287319]))
      unknown call_tmp[688855] "expr temp" "maybe param" "maybe type" "temp"
      (688858 'move' call_tmp[688855](283097 call <= idx[283085] call_tmp[688850]))
      (528741 'move' tmp[528739](409732 call isTrue call_tmp[688855]))
      (528746 'move' tmp[528731](528743 '_paramFoldLogical' tmp[528732] tmp[528739]))
    }
    {
      (528751 'move' tmp[528731](528748 '_paramFoldLogical' tmp[528732] 0))
    }
    (487934 'move' ret[487928](487933 'coerce' tmp[528731] bool[10]))
    (487930 return ret[487928])
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?)._boundsCheckLeaveOnThrow[283113](arg _mt[287325]:_MT[227], arg this[287323]:list[287241](?), arg i[283110]:int(64)[13], arg umsg[283132]:string[24] =
  "") : _unknown[43] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[688862] "expr temp" "maybe param" "maybe type" "temp"
    (688865 'move' call_tmp[688862](283139 call(378555 call (partial) _withinBounds _mt[232] this[287323]) i[283110]))
    unknown call_tmp[688867] "expr temp" "maybe param" "maybe type" "temp"
    (688870 'move' call_tmp[688867](283140 call ! call_tmp[688862]))
    unknown call_tmp[688872] "expr temp" "maybe param" "maybe type" "temp"
    (688875 'move' call_tmp[688872](283204 call _cond_test call_tmp[688867]))
    if call_tmp[688872]
    {
      (283144 call(378562 call (partial) _leave _mt[232] this[287323]))
      const msg[283192] "const" "insert auto destroy"
      unknown tmp[528758] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[528759] "maybe param" "temp"
      unknown call_tmp[688879] "expr temp" "maybe param" "maybe type" "temp"
      (688882 'move' call_tmp[688879](283164 call != umsg[283132] ""))
      (528764 'move' tmp[528759](528762 call _cond_test call_tmp[688879]))
      if tmp[528759]
      {
        (528769 'move' tmp[528758](528766 '_paramFoldLogical' tmp[528759] umsg[283132]))
      }
      {
        unknown tmp[528771] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[688884] "expr temp" "maybe param" "maybe type" "temp"
        (688887 'move' call_tmp[688884](283185 call _cast string[24] i[283110]))
        (528773 'move' tmp[528771](283187 call + "Index out of bounds: " call_tmp[688884]))
        (528778 'move' tmp[528758](528775 '_paramFoldLogical' tmp[528759] tmp[528771]))
      }
      (496949 'init var' msg[283192] tmp[528758])
      unknown call_tmp[688889] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (688892 'move' call_tmp[688889](691677 'new' anymanaged IllegalArgumentError[359994](?) msg[283192](_chpl_manager = _owned[39039](?))))
      unknown call_tmp[688894] "expr temp" "maybe param" "maybe type" "temp"
      (688897 'move' call_tmp[688894](442745 call chpl_fix_thrown_error call_tmp[688889]))
      (283202 'throw' call_tmp[688894])
    }
    (487936 return _void[47])
  }
  function list[287241](?)._makeBlockArray[283217](arg _mt[287329]:_MT[227], arg this[287327]:list[287241](?), arg size[283214]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc"
  {
    unknown ret[487940] "RVV" "temp"
    unknown call_tmp[688901] "expr temp" "maybe param" "maybe type" "temp"
    (688904 'move' call_tmp[688901](378574 call eltType _mt[232] this[287327]))
    unknown call_tmp[688906] "expr temp" "maybe param" "maybe type" "temp"
    (688909 'move' call_tmp[688906](283223 call _ddata[11791](?) call_tmp[688901]))
    unknown call_tmp[688911] "expr temp" "maybe param" "maybe type" "temp"
    (688914 'move' call_tmp[688911](283226 call _ddata_allocate call_tmp[688906] size[283214]))
    (487945 'move' ret[487940](487944 'deref' call_tmp[688911]))
    (487942 return ret[487940])
  }
  function list[287241](?)._freeBlockArray[283244](arg _mt[287333]:_MT[227], arg this[287331]:list[287241](?), arg data[283241] :
  unknown call_tmp[688918] "expr temp" "maybe param" "maybe type" "temp", arg size[283247]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    (283254 call _ddata_free data[283241] size[283247])
    (487947 return _void[47])
  }
  function list[287241](?)._makeArray[283265](arg _mt[287337]:_MT[227], arg this[287335]:list[287241](?), arg size[283262]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc"
  {
    unknown ret[487951] "RVV" "temp"
    unknown call_tmp[688930] "expr temp" "maybe param" "maybe type" "temp"
    (688933 'move' call_tmp[688930](378589 call eltType _mt[232] this[287335]))
    unknown call_tmp[688935] "expr temp" "maybe param" "maybe type" "temp"
    (688938 'move' call_tmp[688935](283273 call _ddata_allocate call_tmp[688930] size[283262](initElts = 0)))
    (487956 'move' ret[487951](487955 'deref' call_tmp[688935]))
    (487953 return ret[487951])
  }
  function list[287241](?)._freeArray[283288](arg _mt[287341]:_MT[227], arg this[287339]:list[287241](?), arg data[283285] :
  unknown call_tmp[688942] "expr temp" "maybe param" "maybe type" "temp", arg size[283291]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    (283298 call _ddata_free data[283285] size[283291])
    (487958 return _void[47])
  }
  function list[287241](?)._maybeAcquireMem[283309](arg _mt[287345]:_MT[227], arg this[287343]:list[287241](?), arg amount[283306]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[688949] "expr temp" "maybe param" "maybe type" "temp"
    (688952 'move' call_tmp[688949](378603 call _totalCapacity _mt[232] this[287343]))
    unknown call_tmp[688956] "expr temp" "maybe param" "maybe type" "temp"
    (688959 'move' call_tmp[688956](378608 call _size _mt[232] this[287343]))
    unknown call_tmp[688961] "maybe param" "maybe type" "temp"
    (688964 'move' call_tmp[688961](283313 call - call_tmp[688949] call_tmp[688956]))
    const remaining[283315] "const" "insert auto destroy"
    (496951 'init var' remaining[283315] call_tmp[688961])
    unknown call_tmp[688966] "expr temp" "maybe param" "maybe type" "temp"
    (688969 'move' call_tmp[688966](283322 call >= remaining[283315] 0))
    (283325 call _sanity call_tmp[688966])
    unknown call_tmp[688971] "expr temp" "maybe param" "maybe type" "temp"
    (688974 'move' call_tmp[688971](283329 call >= remaining[283315] amount[283306]))
    unknown call_tmp[688976] "expr temp" "maybe param" "maybe type" "temp"
    (688979 'move' call_tmp[688976](283333 call _cond_test call_tmp[688971]))
    if call_tmp[688976]
    {
      gotoReturn _end__maybeAcquireMem[487960] _end__maybeAcquireMem[487960]
    }
    unknown lastArrayIdx[283349] "insert auto destroy"
    unknown tmp[528785] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528786] "maybe param" "temp"
    unknown call_tmp[688983] "expr temp" "maybe param" "maybe type" "temp"
    (688986 'move' call_tmp[688983](378616 call _size _mt[232] this[287343]))
    unknown call_tmp[688988] "expr temp" "maybe param" "maybe type" "temp"
    (688991 'move' call_tmp[688988](283340 call == call_tmp[688983] 0))
    (528791 'move' tmp[528786](528789 call _cond_test call_tmp[688988]))
    if tmp[528786]
    {
      (528796 'move' tmp[528785](528793 '_paramFoldLogical' tmp[528786] 0))
    }
    {
      unknown tmp[528798] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (528800 'move' tmp[528798](283345 call(378622 call (partial) _getLastArrayIdx _mt[232] this[287343])))
      (528805 'move' tmp[528785](528802 '_paramFoldLogical' tmp[528786] tmp[528798]))
    }
    (496953 'init var' lastArrayIdx[283349] tmp[528785])
    unknown call_tmp[688995] "maybe param" "maybe type" "temp"
    (688998 'move' call_tmp[688995](283354 call - amount[283306] remaining[283315]))
    unknown req[283356] "insert auto destroy"
    (496955 'init var' req[283356] call_tmp[688995])
    {
      unknown tmp[283547] "temp"
      unknown call_tmp[689000] "expr temp" "maybe param" "maybe type" "temp"
      (689003 'move' call_tmp[689000](283568 call > req[283356] 0))
      (283571 'move' tmp[283547](283566 call _cond_test call_tmp[689000]))
      WhileDo
      {
        {
          unknown call_tmp[689007] "expr temp" "maybe param" "maybe type" "temp"
          (689010 'move' call_tmp[689007](378630 call _arrayCapacity _mt[232] this[287343]))
          unknown call_tmp[689012] "expr temp" "maybe param" "maybe type" "temp"
          (689015 'move' call_tmp[689012](283366 call - call_tmp[689007] 1))
          unknown call_tmp[689017] "expr temp" "maybe param" "maybe type" "temp"
          (689020 'move' call_tmp[689017](283368 call >= lastArrayIdx[283349] call_tmp[689012]))
          unknown call_tmp[689022] "expr temp" "maybe param" "maybe type" "temp"
          (689025 'move' call_tmp[689022](283464 call _cond_test call_tmp[689017]))
          if call_tmp[689022]
          {
            {
              const tmp[283459] "const" "temp"
              unknown call_tmp[689027] "expr temp" "maybe param" "maybe type" "temp"
              (689030 'move' call_tmp[689027](283456 '_wide_get_locale' this[287343]))
              (283460 'move' tmp[283459](283457 'deref' call_tmp[689027]))
              {
                unknown call_tmp[689036] "expr temp" "maybe param" "maybe type" "temp"
                (689039 'move' call_tmp[689036](378640 call _arrayCapacity _mt[232] this[287343]))
                unknown call_tmp[689041] "expr temp" "maybe param" "maybe type" "temp"
                (689044 'move' call_tmp[689041](283374 call * call_tmp[689036] 2))
                unknown call_tmp[689046] "maybe param" "maybe type" "temp"
                (689049 'move' call_tmp[689046](283377 call(378635 call (partial) _makeBlockArray _mt[232] this[287343]) call_tmp[689041]))
                unknown _narrays[283378] "insert auto destroy"
                (496957 'init var' _narrays[283378] call_tmp[689046])
                {
                  unknown _indexOfInterest[283400] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[283401] "expr temp" "temp"
                  unknown call_tmp[689053] "expr temp" "maybe param" "maybe type" "temp"
                  (689056 'move' call_tmp[689053](378653 call _arrayCapacity _mt[232] this[287343]))
                  unknown call_tmp[689058] "expr temp" "maybe param" "maybe type" "temp"
                  (689061 'move' call_tmp[689058](283417 call chpl_direct_counted_range_iter 0 call_tmp[689053]))
                  (283410 'move' _iterator[283401](283408 call _getIterator call_tmp[689058]))
                  Defer
                  {
                    {
                      (283433 call _freeIterator _iterator[283401])
                    }
                  }
                  { scopeless type
                    (283422 'move' _indexOfInterest[283400](283419 call iteratorIndex _iterator[283401]))
                  }
                  ForLoop
                  {
                    unknown i[283426] "index var" "insert auto destroy"
                    (283428 'move' i[283426] _indexOfInterest[283400])
                    unknown call_tmp[689063] "expr temp" "maybe param" "maybe type" "temp"
                    (689066 'move' call_tmp[689063](283392 call _narrays[283378] i[283426]))
                    unknown call_tmp[689070] "expr temp" "maybe param" "maybe type" "temp"
                    (689073 'move' call_tmp[689070](283396 call(378647 call (partial) _arrays _mt[232] this[287343]) i[283426]))
                    (283397 call = call_tmp[689063] call_tmp[689070])
                    label _continueLabel[283405]
                    _indexOfInterest[283400]
                    _iterator[283401]
                  }
                  label _breakLabel[283406]
                }
                unknown call_tmp[689079] "expr temp" "maybe param" "maybe type" "temp"
                (689082 'move' call_tmp[689079](378664 call _arrays _mt[232] this[287343]))
                unknown call_tmp[689086] "expr temp" "maybe param" "maybe type" "temp"
                (689089 'move' call_tmp[689086](378669 call _arrayCapacity _mt[232] this[287343]))
                (283444 call(378659 call (partial) _freeBlockArray _mt[232] this[287343]) call_tmp[689079] call_tmp[689086])
                unknown call_tmp[689093] "expr temp" "maybe param" "maybe type" "temp"
                (689096 'move' call_tmp[689093](378674 call _arrays _mt[232] this[287343]))
                (283448 call = call_tmp[689093] _narrays[283378])
                unknown call_tmp[689100] "expr temp" "maybe param" "maybe type" "temp"
                (689103 'move' call_tmp[689100](378680 call _arrayCapacity _mt[232] this[287343]))
                (283453 call *= call_tmp[689100] 2)
              }
            }
          }
          {
            const tmp[283542] "const" "temp"
            unknown call_tmp[689105] "expr temp" "maybe param" "maybe type" "temp"
            (689108 'move' call_tmp[689105](283539 '_wide_get_locale' this[287343]))
            (283543 'move' tmp[283542](283540 'deref' call_tmp[689105]))
            {
              unknown call_tmp[689112] "maybe param" "maybe type" "temp"
              (689115 'move' call_tmp[689112](283474 call(378686 call (partial) _arrays _mt[232] this[287343]) lastArrayIdx[283349]))
              const oldLast[283475] "const" "insert auto destroy"
              (496959 'init var' oldLast[283475] call_tmp[689112])
              unknown call_tmp[689119] "maybe param" "maybe type" "temp"
              (689122 'move' call_tmp[689119](283482 call(378693 call (partial) _getArrayCapacity _mt[232] this[287343]) lastArrayIdx[283349]))
              const oldLastCapacity[283483] "const" "insert auto destroy"
              (496961 'init var' oldLastCapacity[283483] call_tmp[689119])
              (283488 call += lastArrayIdx[283349] 1)
              unknown newLast[283495] "ref var"
              unknown call_tmp[689126] "expr temp" "maybe param" "maybe type" "temp"
              (689129 'move' call_tmp[689126](283494 call(378700 call (partial) _arrays _mt[232] this[287343]) lastArrayIdx[283349]))
              (496964 'move' newLast[283495](496963 'addr of' call_tmp[689126]))
              unknown call_tmp[689131] "maybe param" "maybe type" "temp"
              (689134 'move' call_tmp[689131](283500 call * oldLastCapacity[283483] 2))
              const newLastCapacity[283502] "const" "insert auto destroy"
              (496966 'init var' newLastCapacity[283502] call_tmp[689131])
              unknown call_tmp[689136] "expr temp" "maybe param" "maybe type" "temp"
              (689139 'move' call_tmp[689136](283508 call != oldLast[283475] nil[38]))
              (283511 call _sanity call_tmp[689136])
              unknown call_tmp[689141] "expr temp" "maybe param" "maybe type" "temp"
              (689144 'move' call_tmp[689141](283516 call == newLast[283495] nil[38]))
              (283519 call _sanity call_tmp[689141])
              unknown call_tmp[689148] "expr temp" "maybe param" "maybe type" "temp"
              (689151 'move' call_tmp[689148](283525 call(378709 call (partial) _makeArray _mt[232] this[287343]) newLastCapacity[283502]))
              (283526 call = newLast[283495] call_tmp[689148])
              unknown call_tmp[689155] "expr temp" "maybe param" "maybe type" "temp"
              (689158 'move' call_tmp[689155](378715 call _totalCapacity _mt[232] this[287343]))
              (283531 call += call_tmp[689155] newLastCapacity[283502])
              (283536 call -= req[283356] newLastCapacity[283502])
            }
          }
        }
        label _continueLabel[283550]
        unknown call_tmp[689160] "expr temp" "maybe param" "maybe type" "temp"
        (689163 'move' call_tmp[689160](283558 call > req[283356] 0))
        (283561 'move' tmp[283547](283556 call _cond_test call_tmp[689160]))
        tmp[283547]
      }
      label _breakLabel[283551]
    }
    label _end__maybeAcquireMem[487960]
    (487962 return _void[47])
  }
  function list[287241](?)._maybeReleaseMem[283584](arg _mt[287349]:_MT[227], arg this[287347]:list[287241](?), arg amount[283581]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[689167] "expr temp" "maybe param" "maybe type" "temp"
    (689170 'move' call_tmp[689167](378725 call _totalCapacity _mt[232] this[287347]))
    unknown call_tmp[689172] "expr temp" "maybe param" "maybe type" "temp"
    (689175 'move' call_tmp[689172](283588 call <= call_tmp[689167] _initialCapacity[282025]))
    unknown call_tmp[689177] "expr temp" "maybe param" "maybe type" "temp"
    (689180 'move' call_tmp[689177](283592 call _cond_test call_tmp[689172]))
    if call_tmp[689177]
    {
      gotoReturn _end__maybeReleaseMem[487966] _end__maybeReleaseMem[487966]
    }
    unknown call_tmp[689184] "maybe param" "maybe type" "temp"
    (689187 'move' call_tmp[689184](283600 call(378730 call (partial) _getLastArrayIdx _mt[232] this[287347])))
    const lastArrayIdx[283601] "const" "insert auto destroy"
    (496968 'init var' lastArrayIdx[283601] call_tmp[689184])
    unknown call_tmp[689189] "expr temp" "maybe param" "maybe type" "temp"
    (689192 'move' call_tmp[689189](283607 call != lastArrayIdx[283601] 0))
    (283610 call _sanity call_tmp[689189])
    unknown call_tmp[689196] "maybe param" "maybe type" "temp"
    (689199 'move' call_tmp[689196](283615 call(378735 call (partial) _getArrayCapacity _mt[232] this[287347]) lastArrayIdx[283601]))
    const lastArrayCapacity[283616] "const" "insert auto destroy"
    (496970 'init var' lastArrayCapacity[283616] call_tmp[689196])
    unknown call_tmp[689203] "expr temp" "maybe param" "maybe type" "temp"
    (689206 'move' call_tmp[689203](378741 call _totalCapacity _mt[232] this[287347]))
    unknown call_tmp[689208] "maybe param" "maybe type" "temp"
    (689211 'move' call_tmp[689208](283621 call - call_tmp[689203] lastArrayCapacity[283616]))
    const threshold[283623] "const" "insert auto destroy"
    (496972 'init var' threshold[283623] call_tmp[689208])
    unknown call_tmp[689215] "expr temp" "maybe param" "maybe type" "temp"
    (689218 'move' call_tmp[689215](378747 call _size _mt[232] this[287347]))
    unknown call_tmp[689220] "maybe param" "maybe type" "temp"
    (689223 'move' call_tmp[689220](283628 call - call_tmp[689215] amount[283581]))
    const nsize[283630] "const" "insert auto destroy"
    (496974 'init var' nsize[283630] call_tmp[689220])
    unknown call_tmp[689225] "expr temp" "maybe param" "maybe type" "temp"
    (689228 'move' call_tmp[689225](283635 call > nsize[283630] threshold[283623]))
    unknown call_tmp[689230] "expr temp" "maybe param" "maybe type" "temp"
    (689233 'move' call_tmp[689230](283639 call _cond_test call_tmp[689225]))
    if call_tmp[689230]
    {
      gotoReturn _end__maybeReleaseMem[487966] _end__maybeReleaseMem[487966]
    }
    unknown array[283648] "ref var"
    unknown call_tmp[689237] "expr temp" "maybe param" "maybe type" "temp"
    (689240 'move' call_tmp[689237](283647 call(378755 call (partial) _arrays _mt[232] this[287347]) lastArrayIdx[283601]))
    (496977 'move' array[283648](496976 'addr of' call_tmp[689237]))
    unknown call_tmp[689242] "expr temp" "maybe param" "maybe type" "temp"
    (689245 'move' call_tmp[689242](283654 call != array[283648] nil[38]))
    (283657 call _sanity call_tmp[689242])
    (283663 call(378763 call (partial) _freeArray _mt[232] this[287347]) array[283648] lastArrayCapacity[283616])
    unknown call_tmp[689251] "expr temp" "maybe param" "maybe type" "temp"
    (689254 'move' call_tmp[689251](378770 call _totalCapacity _mt[232] this[287347]))
    (283667 call -= call_tmp[689251] lastArrayCapacity[283616])
    (283672 call = array[283648] nil[38])
    label _end__maybeReleaseMem[487966]
    (487968 return _void[47])
  }
  function list[287241](?)._expand[283683](arg _mt[287353]:_MT[227], arg this[287351]:list[287241](?), arg idx[283680]:int(64)[13], arg shift[283687]:int(64)[13] =
  1) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[689258] "expr temp" "maybe param" "maybe type" "temp"
    (689261 'move' call_tmp[689258](283695 call(378776 call (partial) _withinBounds _mt[232] this[287351]) idx[283680]))
    (283697 call _sanity call_tmp[689258])
    unknown call_tmp[689263] "expr temp" "maybe param" "maybe type" "temp"
    (689266 'move' call_tmp[689263](283702 call <= shift[283687] 0))
    unknown call_tmp[689268] "expr temp" "maybe param" "maybe type" "temp"
    (689271 'move' call_tmp[689268](283706 call _cond_test call_tmp[689263]))
    if call_tmp[689268]
    {
      gotoReturn _end__expand[487974] _end__expand[487974]
    }
    {
      const tmp[283799] "const" "temp"
      unknown call_tmp[689273] "expr temp" "maybe param" "maybe type" "temp"
      (689276 'move' call_tmp[689273](283796 '_wide_get_locale' this[287351]))
      (283800 'move' tmp[283799](283797 'deref' call_tmp[689273]))
      {
        (283715 call(378785 call (partial) _maybeAcquireMem _mt[232] this[287351]) shift[283687])
        {
          unknown _indexOfInterest[283752] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[283753] "expr temp" "temp"
          unknown call_tmp[689282] "expr temp" "maybe param" "maybe type" "temp"
          (689285 'move' call_tmp[689282](378813 call _size _mt[232] this[287351]))
          unknown call_tmp[689287] "expr temp" "maybe param" "maybe type" "temp"
          (689290 'move' call_tmp[689287](283769 call - 1))
          unknown call_tmp[689292] "expr temp" "maybe param" "maybe type" "temp"
          (689295 'move' call_tmp[689292](283773 call chpl_direct_range_iter idx[283680] call_tmp[689282] call_tmp[689287]))
          (283762 'move' _iterator[283753](283760 call _getIterator call_tmp[689292]))
          Defer
          {
            {
              (283789 call _freeIterator _iterator[283753])
            }
          }
          { scopeless type
            (283778 'move' _indexOfInterest[283752](283775 call iteratorIndex _iterator[283753]))
          }
          ForLoop
          {
            unknown i[283782] "index var" "insert auto destroy"
            (283784 'move' i[283782] _indexOfInterest[283752])
            {
              unknown src[283732] "ref var"
              unknown call_tmp[689299] "expr temp" "maybe param" "maybe type" "temp"
              (689302 'move' call_tmp[689299](283731 call(378792 call (partial) _getRef _mt[232] this[287351]) i[283782]))
              (496980 'move' src[283732](496979 'addr of' call_tmp[689299]))
              unknown dst[283743] "ref var"
              unknown call_tmp[689306] "expr temp" "maybe param" "maybe type" "temp"
              (689309 'move' call_tmp[689306](283739 call + i[283782] shift[283687]))
              unknown call_tmp[689311] "expr temp" "maybe param" "maybe type" "temp"
              (689314 'move' call_tmp[689311](283742 call(378797 call (partial) _getRef _mt[232] this[287351]) call_tmp[689306]))
              (496983 'move' dst[283743](496982 'addr of' call_tmp[689311]))
              (283750 call(378805 call (partial) _move _mt[232] this[287351]) src[283732] dst[283743])
            }
            label _continueLabel[283757]
            _indexOfInterest[283752]
            _iterator[283753]
          }
          label _breakLabel[283758]
        }
      }
    }
    label _end__expand[487974]
    (487976 return _void[47])
  }
  function list[287241](?)._collapse[283814](arg _mt[287357]:_MT[227], arg this[287355]:list[287241](?), arg idx[283811]:int(64)[13], arg shift[283818]:int(64)[13] =
  1) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[689320] "expr temp" "maybe param" "maybe type" "temp"
    (689323 'move' call_tmp[689320](283826 call(378817 call (partial) _withinBounds _mt[232] this[287355]) idx[283811]))
    (283828 call _sanity call_tmp[689320])
    unknown call_tmp[689327] "expr temp" "maybe param" "maybe type" "temp"
    (689330 'move' call_tmp[689327](378824 call _size _mt[232] this[287355]))
    unknown call_tmp[689332] "expr temp" "maybe param" "maybe type" "temp"
    (689335 'move' call_tmp[689332](283833 call == idx[283811] call_tmp[689327]))
    unknown call_tmp[689337] "expr temp" "maybe param" "maybe type" "temp"
    (689340 'move' call_tmp[689337](283837 call _cond_test call_tmp[689332]))
    if call_tmp[689337]
    {
      gotoReturn _end__collapse[487980] _end__collapse[487980]
    }
    {
      const tmp[283925] "const" "temp"
      unknown call_tmp[689342] "expr temp" "maybe param" "maybe type" "temp"
      (689345 'move' call_tmp[689342](283922 '_wide_get_locale' this[287355]))
      (283926 'move' tmp[283925](283923 'deref' call_tmp[689342]))
      {
        {
          unknown _indexOfInterest[283875] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[283876] "expr temp" "temp"
          unknown call_tmp[689349] "expr temp" "maybe param" "maybe type" "temp"
          (689352 'move' call_tmp[689349](378847 call _size _mt[232] this[287355]))
          unknown call_tmp[689354] "expr temp" "maybe param" "maybe type" "temp"
          (689357 'move' call_tmp[689354](283890 call - call_tmp[689349] 1))
          unknown call_tmp[689359] "expr temp" "maybe param" "maybe type" "temp"
          (689362 'move' call_tmp[689359](283893 call chpl_direct_range_iter idx[283811] call_tmp[689354] 1))
          (283885 'move' _iterator[283876](283883 call _getIterator call_tmp[689359]))
          Defer
          {
            {
              (283909 call _freeIterator _iterator[283876])
            }
          }
          { scopeless type
            (283898 'move' _indexOfInterest[283875](283895 call iteratorIndex _iterator[283876]))
          }
          ForLoop
          {
            unknown i[283902] "index var" "insert auto destroy"
            (283904 'move' i[283902] _indexOfInterest[283875])
            {
              unknown src[283858] "ref var"
              unknown call_tmp[689366] "expr temp" "maybe param" "maybe type" "temp"
              (689369 'move' call_tmp[689366](283854 call + i[283902] 1))
              unknown call_tmp[689371] "expr temp" "maybe param" "maybe type" "temp"
              (689374 'move' call_tmp[689371](283857 call(378829 call (partial) _getRef _mt[232] this[287355]) call_tmp[689366]))
              (496986 'move' src[283858](496985 'addr of' call_tmp[689371]))
              unknown dst[283866] "ref var"
              unknown call_tmp[689378] "expr temp" "maybe param" "maybe type" "temp"
              (689381 'move' call_tmp[689378](283865 call(378834 call (partial) _getRef _mt[232] this[287355]) i[283902]))
              (496989 'move' dst[283866](496988 'addr of' call_tmp[689378]))
              (283873 call(378839 call (partial) _move _mt[232] this[287355]) src[283858] dst[283866])
            }
            label _continueLabel[283880]
            _indexOfInterest[283875]
            _iterator[283876]
          }
          label _breakLabel[283881]
        }
        (283920 call(378853 call (partial) _maybeReleaseMem _mt[232] this[287355]) 1)
      }
    }
    label _end__collapse[487980]
    (487982 return _void[47])
  }
  function list[287241](?)._appendByRef[283940](arg _mt[287361]:_MT[227], arg this[287359]:list[287241](?), ref arg x[283937] :
  (378858 call eltType _mt[232] this[287359])) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    (283945 call(378862 call (partial) _maybeAcquireMem _mt[232] this[287359]) 1)
    unknown src[283949] "ref var"
    (496992 'move' src[283949](496991 'addr of' x[283937]))
    unknown dst[283959] "ref var"
    unknown call_tmp[689395] "expr temp" "maybe param" "maybe type" "temp"
    (689398 'move' call_tmp[689395](378872 call _size _mt[232] this[287359]))
    unknown call_tmp[689400] "expr temp" "maybe param" "maybe type" "temp"
    (689403 'move' call_tmp[689400](283955 call + call_tmp[689395] 1))
    unknown call_tmp[689405] "expr temp" "maybe param" "maybe type" "temp"
    (689408 'move' call_tmp[689405](283958 call(378867 call (partial) _getRef _mt[232] this[287359]) call_tmp[689400]))
    (496995 'move' dst[283959](496994 'addr of' call_tmp[689405]))
    (283966 call(378876 call (partial) _move _mt[232] this[287359]) src[283949] dst[283959])
    unknown call_tmp[689414] "expr temp" "maybe param" "maybe type" "temp"
    (689417 'move' call_tmp[689414](378883 call _size _mt[232] this[287359]))
    (283970 call += call_tmp[689414] 1)
    (487986 return _void[47])
  }
  function list[287241](?).append[283981](arg _mt[287365]:_MT[227], arg this[287363]:list[287241](?), in arg x[283978] :
  (378888 call eltType _mt[232] this[287363])) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (283991 call(378896 call (partial) _enter _mt[232] this[287363]))
    (283997 call(378902 call (partial) _appendByRef _mt[232] this[287363]) x[283978])
    (284001 call(378907 call (partial) _leave _mt[232] this[287363]))
    (487988 return _void[47])
  }
  {
    (283987 call <(283984 'lifetime_of' this[287363])(283986 'lifetime_of' x[283978]))
  }
  function list[287241](?).contains[284012](arg _mt[287369]:_MT[227], arg this[287367]:list[287241](?), arg x[284009] :
  (378912 call eltType _mt[232] this[287367])) : _unknown[43] "method" "primary method"
  {
    unknown ret[487992] "RVV" "temp"
    unknown result[284016] "insert auto destroy"
    (496997 'init var' result[284016] 0)
    {
      const tmp[284085] "const" "temp"
      unknown call_tmp[689429] "expr temp" "maybe param" "maybe type" "temp"
      (689432 'move' call_tmp[689429](284082 '_wide_get_locale' this[287367]))
      (284086 'move' tmp[284085](284083 'deref' call_tmp[689429]))
      {
        (284023 call(378917 call (partial) _enter _mt[232] this[287367]))
        {
          unknown _indexOfInterest[284045] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[284046] "expr temp" "temp"
          (284055 'move' _iterator[284046](284053 call _getIterator this[287367]))
          Defer
          {
            {
              (284071 call _freeIterator _iterator[284046])
            }
          }
          { scopeless type
            (284060 'move' _indexOfInterest[284045](284057 call iteratorIndex _iterator[284046]))
          }
          ForLoop
          {
            unknown item[284064] "index var" "insert auto destroy"
            (284066 'move' item[284064] _indexOfInterest[284045])
            unknown call_tmp[689436] "expr temp" "maybe param" "maybe type" "temp"
            (689439 'move' call_tmp[689436](284030 call == item[284064] x[284009]))
            unknown call_tmp[689441] "expr temp" "maybe param" "maybe type" "temp"
            (689444 'move' call_tmp[689441](284041 call _cond_test call_tmp[689436]))
            if call_tmp[689441]
            {
              (284034 call = result[284016] 1)
              break _breakLabel[284051] _breakLabel[284051]
            }
            label _continueLabel[284050]
            _indexOfInterest[284045]
            _iterator[284046]
          }
          label _breakLabel[284051]
        }
        (284080 call(378925 call (partial) _leave _mt[232] this[287367]))
      }
    }
    (487998 'move' ret[487992](487997 'coerce' result[284016] bool[10]))
    (487994 return ret[487992])
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?).first[284098](arg _mt[287373]:_MT[227], arg this[287371]:list[287241](?)) ref : _unknown[43] throws "method" "primary method"
  {
    unknown ret[488002] "RVV" "temp"
    unknown result[284104] "ref var"
    unknown call_tmp[689450] "expr temp" "maybe param" "maybe type" "temp"
    (689453 'move' call_tmp[689450](284103 call(378930 call (partial) _getRef _mt[232] this[287371]) 1))
    (497000 'move' result[284104](496999 'addr of' call_tmp[689450]))
    {
      const tmp[284165] "const" "temp"
      unknown call_tmp[689455] "expr temp" "maybe param" "maybe type" "temp"
      (689458 'move' call_tmp[689455](284162 '_wide_get_locale' this[287371]))
      (284166 'move' tmp[284165](284163 'deref' call_tmp[689455]))
      {
        (284111 call(378935 call (partial) _enter _mt[232] this[287371]))
        unknown tmp[409749] "maybe param" "temp"
        (409760 'move' tmp[409749] 1)
        unknown call_tmp[689462] "expr temp" "maybe param" "maybe type" "temp"
        (689465 'move' call_tmp[689462](409762 call _cond_invalid tmp[409749]))
        if call_tmp[689462]
        {
          (409765 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[528812] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[528813] "maybe param" "temp"
        unknown call_tmp[689467] "expr temp" "maybe param" "maybe type" "temp"
        (689470 'move' call_tmp[689467](409750 call isTrue tmp[409749]))
        (528818 'move' tmp[528813](528816 call _cond_test call_tmp[689467]))
        if tmp[528813]
        {
          unknown tmp[528820] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[689474] "expr temp" "maybe param" "maybe type" "temp"
          (689477 'move' call_tmp[689474](378941 call _size _mt[232] this[287371]))
          unknown call_tmp[689479] "expr temp" "maybe param" "maybe type" "temp"
          (689482 'move' call_tmp[689479](284117 call == call_tmp[689474] 0))
          (528822 'move' tmp[528820](409753 call isTrue call_tmp[689479]))
          (528827 'move' tmp[528812](528824 '_paramFoldLogical' tmp[528813] tmp[528820]))
        }
        {
          (528832 'move' tmp[528812](528829 '_paramFoldLogical' tmp[528813] 0))
        }
        unknown call_tmp[689484] "expr temp" "maybe param" "maybe type" "temp"
        (689487 'move' call_tmp[689484](284146 call _cond_test tmp[528812]))
        if call_tmp[689484]
        {
          (284123 call(378945 call (partial) _leave _mt[232] this[287371]))
          (284144 call halt "Called \"list.first\" on an empty list.")
        }
        unknown call_tmp[689493] "expr temp" "maybe param" "maybe type" "temp"
        (689496 'move' call_tmp[689493](284154 call(378950 call (partial) _getRef _mt[232] this[287371]) 1))
        (284155 call = result[284104] call_tmp[689493])
        (284160 call(378954 call (partial) _leave _mt[232] this[287371]))
      }
    }
    (488007 'move' ret[488002](488006 'addr of' result[284104]))
    (488004 return ret[488002])
  }
  function list[287241](?).last[284177](arg _mt[287377]:_MT[227], arg this[287375]:list[287241](?)) ref : _unknown[43] "method" "primary method"
  {
    unknown ret[488011] "RVV" "temp"
    unknown result[284183] "ref var"
    unknown call_tmp[689502] "expr temp" "maybe param" "maybe type" "temp"
    (689505 'move' call_tmp[689502](284182 call(378959 call (partial) _getRef _mt[232] this[287375]) 1))
    (497003 'move' result[284183](497002 'addr of' call_tmp[689502]))
    {
      const tmp[284244] "const" "temp"
      unknown call_tmp[689507] "expr temp" "maybe param" "maybe type" "temp"
      (689510 'move' call_tmp[689507](284241 '_wide_get_locale' this[287375]))
      (284245 'move' tmp[284244](284242 'deref' call_tmp[689507]))
      {
        (284190 call(378964 call (partial) _enter _mt[232] this[287375]))
        unknown tmp[409770] "maybe param" "temp"
        (409781 'move' tmp[409770] 1)
        unknown call_tmp[689514] "expr temp" "maybe param" "maybe type" "temp"
        (689517 'move' call_tmp[689514](409783 call _cond_invalid tmp[409770]))
        if call_tmp[689514]
        {
          (409786 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[528839] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[528840] "maybe param" "temp"
        unknown call_tmp[689519] "expr temp" "maybe param" "maybe type" "temp"
        (689522 'move' call_tmp[689519](409771 call isTrue tmp[409770]))
        (528845 'move' tmp[528840](528843 call _cond_test call_tmp[689519]))
        if tmp[528840]
        {
          unknown tmp[528847] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[689526] "expr temp" "maybe param" "maybe type" "temp"
          (689529 'move' call_tmp[689526](378970 call _size _mt[232] this[287375]))
          unknown call_tmp[689531] "expr temp" "maybe param" "maybe type" "temp"
          (689534 'move' call_tmp[689531](284196 call == call_tmp[689526] 0))
          (528849 'move' tmp[528847](409774 call isTrue call_tmp[689531]))
          (528854 'move' tmp[528839](528851 '_paramFoldLogical' tmp[528840] tmp[528847]))
        }
        {
          (528859 'move' tmp[528839](528856 '_paramFoldLogical' tmp[528840] 0))
        }
        unknown call_tmp[689536] "expr temp" "maybe param" "maybe type" "temp"
        (689539 'move' call_tmp[689536](284225 call _cond_test tmp[528839]))
        if call_tmp[689536]
        {
          (284202 call(378974 call (partial) _leave _mt[232] this[287375]))
          (284223 call halt "Called \"list.last\" on an empty list.")
        }
        unknown call_tmp[689547] "expr temp" "maybe param" "maybe type" "temp"
        (689550 'move' call_tmp[689547](378984 call _size _mt[232] this[287375]))
        unknown call_tmp[689552] "expr temp" "maybe param" "maybe type" "temp"
        (689555 'move' call_tmp[689552](284233 call(378979 call (partial) _getRef _mt[232] this[287375]) call_tmp[689547]))
        (284234 call = result[284183] call_tmp[689552])
        (284239 call(378988 call (partial) _leave _mt[232] this[287375]))
      }
    }
    (488016 'move' ret[488011](488015 'addr of' result[284183]))
    (488013 return ret[488011])
  }
  function list[287241](?)._extendGeneric[284258](arg _mt[287381]:_MT[227], arg this[287379]:list[287241](?), arg collection[284256]:_any[170](?)) : _unknown[43] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    {
      const tmp[284310] "const" "temp"
      unknown call_tmp[689559] "expr temp" "maybe param" "maybe type" "temp"
      (689562 'move' call_tmp[689559](284307 '_wide_get_locale' this[287379]))
      (284311 'move' tmp[284310](284308 'deref' call_tmp[689559]))
      {
        {
          unknown _indexOfInterest[284273] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[284274] "expr temp" "temp"
          (284283 'move' _iterator[284274](284281 call _getIterator collection[284256]))
          Defer
          {
            {
              (284299 call _freeIterator _iterator[284274])
            }
          }
          { scopeless type
            (284288 'move' _indexOfInterest[284273](284285 call iteratorIndex _iterator[284274]))
          }
          ForLoop
          {
            unknown item[284292] "index var" "insert auto destroy"
            (284294 'move' item[284292] _indexOfInterest[284273])
            {
              unknown cpy[284264] "no auto destroy"
              (497005 'init var' cpy[284264] item[284292])
              (284271 call(378996 call (partial) _appendByRef _mt[232] this[287379]) cpy[284264])
            }
            label _continueLabel[284278]
            _indexOfInterest[284273]
            _iterator[284274]
          }
          label _breakLabel[284279]
        }
      }
    }
    (488018 return _void[47])
  }
  function list[287241](?).extend[284329](arg _mt[287385]:_MT[227], arg this[287383]:list[287241](?), arg other[284326]:list[287241](?)) : _unknown[43] "compiler added where" "method" "primary method" "no return value for void"
  {
    {
      const tmp[284355] "const" "temp"
      unknown call_tmp[689566] "expr temp" "maybe param" "maybe type" "temp"
      (689569 'move' call_tmp[689566](284352 '_wide_get_locale' this[287383]))
      (284356 'move' tmp[284355](284353 'deref' call_tmp[689566]))
      {
        (284340 call(379010 call (partial) _enter _mt[232] this[287383]))
        (284346 call(379016 call (partial) _extendGeneric _mt[232] this[287383]) other[284326])
        (284350 call(379021 call (partial) _leave _mt[232] this[287383]))
      }
    }
    (488020 return _void[47])
  }
  where {
    unknown call_tmp[689579] "expr temp" "maybe param" "maybe type" "temp"
    (689582 'move' call_tmp[689579](442442 call eltType _mt[232] this[287383]))
    unknown call_tmp[689584] "expr temp" "maybe param" "maybe type" "temp"
    (689587 'move' call_tmp[689584](442438 'query' other[284326] 1))
    unknown call_tmp[689589] "expr temp" "maybe param" "maybe type" "temp"
    (689592 'move' call_tmp[689589](442445 call == call_tmp[689579] call_tmp[689584]))
    (442449 call & 1 call_tmp[689589])
  }
  {
    (284335 call <(284332 'lifetime_of' this[287383])(284334 'lifetime_of' other[284326]))
  }
  function list[287241](?).extend[284375](arg _mt[287389]:_MT[227], arg this[287387]:list[287241](?), arg other[284372]:_array[133150](?)) : _unknown[43] "compiler added where" "method" "primary method" "no return value for void"
  {
    {
      const tmp[284401] "const" "temp"
      unknown call_tmp[689594] "expr temp" "maybe param" "maybe type" "temp"
      (689597 'move' call_tmp[689594](284398 '_wide_get_locale' this[287387]))
      (284402 'move' tmp[284401](284399 'deref' call_tmp[689594]))
      {
        (284386 call(379033 call (partial) _enter _mt[232] this[287387]))
        (284392 call(379037 call (partial) _extendGeneric _mt[232] this[287387]) other[284372])
        (284396 call(379042 call (partial) _leave _mt[232] this[287387]))
      }
    }
    (488022 return _void[47])
  }
  where {
    unknown call_tmp[689607] "expr temp" "maybe param" "maybe type" "temp"
    (689610 'move' call_tmp[689607](379026 call eltType _mt[232] this[287387]))
    unknown call_tmp[689614] "expr temp" "maybe param" "maybe type" "temp"
    (689617 'move' call_tmp[689614](442461 call eltType _mt[232] other[284372]))
    unknown call_tmp[689619] "expr temp" "maybe param" "maybe type" "temp"
    (689622 'move' call_tmp[689619](442465 call == call_tmp[689607] call_tmp[689614]))
    (442459 call & 1 call_tmp[689619])
  }
  {
    (284381 call <(284378 'lifetime_of' this[287387])(284380 'lifetime_of' other[284372]))
  }
  function list[287241](?).extend[284423](arg _mt[287393]:_MT[227], arg this[287391]:list[287241](?), arg other[284420]:range[66183](?)) : _unknown[43] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[689624] "expr temp" "maybe param" "maybe type" "temp"
    (689627 'move' call_tmp[689624](284434 call isBoundedRange other[284420]))
    unknown call_tmp[689629] "expr temp" "maybe param" "maybe type" "temp"
    (689632 'move' call_tmp[689629](284435 call ! call_tmp[689624]))
    unknown call_tmp[689634] "expr temp" "maybe param" "maybe type" "temp"
    (689637 'move' call_tmp[689634](284502 call _cond_test call_tmp[689629]))
    if call_tmp[689634]
    {
      unknown call_tmp[689639] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (689642 'move' call_tmp[689639](284438 'typeof' this[287391]))
      unknown call_tmp[689644] "maybe param" "maybe type" "temp"
      (689647 'move' call_tmp[689644](284440 call _cast string[24] call_tmp[689639]))
      unknown e[284442] "param"
      (497007 'init var' e[284442] call_tmp[689644])
      unknown call_tmp[689649] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (689652 'move' call_tmp[689649](284447 'typeof' other[284420]))
      unknown call_tmp[689654] "maybe param" "maybe type" "temp"
      (689657 'move' call_tmp[689654](284449 call _cast string[24] call_tmp[689649]))
      unknown f[284451] "param"
      (497009 'init var' f[284451] call_tmp[689654])
      unknown call_tmp[689659] "expr temp" "maybe param" "maybe type" "temp"
      (689662 'move' call_tmp[689659](284471 call + "Cannot extend " e[284442]))
      unknown call_tmp[689664] "expr temp" "maybe param" "maybe type" "temp"
      (689667 'move' call_tmp[689664](284489 call + call_tmp[689659] " with unbounded "))
      unknown call_tmp[689669] "maybe param" "maybe type" "temp"
      (689672 'move' call_tmp[689669](284492 call + call_tmp[689664] f[284451]))
      unknown msg[284494] "param"
      (497011 'init var' msg[284494] call_tmp[689669])
      (284500 call compilerError msg[284494])
    }
    {
      const tmp[284525] "const" "temp"
      unknown call_tmp[689674] "expr temp" "maybe param" "maybe type" "temp"
      (689677 'move' call_tmp[689674](284522 '_wide_get_locale' this[287391]))
      (284526 'move' tmp[284525](284523 'deref' call_tmp[689674]))
      {
        (284510 call(379061 call (partial) _enter _mt[232] this[287391]))
        (284516 call(379065 call (partial) _extendGeneric _mt[232] this[287391]) other[284420])
        (284520 call(379070 call (partial) _leave _mt[232] this[287391]))
      }
    }
    (488024 return _void[47])
  }
  where {
    unknown call_tmp[689687] "expr temp" "maybe param" "maybe type" "temp"
    (689690 'move' call_tmp[689687](442473 call eltType _mt[232] this[287391]))
    unknown call_tmp[689692] "expr temp" "maybe param" "maybe type" "temp"
    (689695 'move' call_tmp[689692](442469 'query' other[284420] 1))
    unknown call_tmp[689697] "expr temp" "maybe param" "maybe type" "temp"
    (689700 'move' call_tmp[689697](442476 call == call_tmp[689687] call_tmp[689692]))
    (442480 call & 1 call_tmp[689697])
  }
  {
    (284429 call <(284426 'lifetime_of' this[287391])(284428 'lifetime_of' other[284420]))
  }
  function list[287241](?).insert[284539](arg _mt[287397]:_MT[227], arg this[287395]:list[287241](?), arg idx[284536]:int(64)[13], in arg x[284542] :
  (379075 call eltType _mt[232] this[287395])) : _unknown[43] "method" "primary method"
  {
    unknown ret[488028] "RVV" "temp"
    unknown result[284553] "insert auto destroy"
    (497013 'init var' result[284553] 0)
    {
      const tmp[284634] "const" "temp"
      unknown call_tmp[689704] "expr temp" "maybe param" "maybe type" "temp"
      (689707 'move' call_tmp[689704](284631 '_wide_get_locale' this[287395]))
      (284635 'move' tmp[284634](284632 'deref' call_tmp[689704]))
      {
        (284560 call(379082 call (partial) _enter _mt[232] this[287395]))
        unknown call_tmp[689713] "expr temp" "maybe param" "maybe type" "temp"
        (689716 'move' call_tmp[689713](379088 call _size _mt[232] this[287395]))
        unknown call_tmp[689718] "expr temp" "maybe param" "maybe type" "temp"
        (689721 'move' call_tmp[689718](284566 call + call_tmp[689713] 1))
        unknown call_tmp[689723] "expr temp" "maybe param" "maybe type" "temp"
        (689726 'move' call_tmp[689723](284568 call == idx[284536] call_tmp[689718]))
        unknown call_tmp[689728] "expr temp" "maybe param" "maybe type" "temp"
        (689731 'move' call_tmp[689728](284622 call _cond_test call_tmp[689723]))
        if call_tmp[689728]
        {
          (284573 call(379092 call (partial) _appendByRef _mt[232] this[287395]) x[284542])
          (284578 call = result[284553] 1)
        }
        {
          unknown call_tmp[689737] "expr temp" "maybe param" "maybe type" "temp"
          (689740 'move' call_tmp[689737](284584 call(379098 call (partial) _withinBounds _mt[232] this[287395]) idx[284536]))
          unknown call_tmp[689742] "expr temp" "maybe param" "maybe type" "temp"
          (689745 'move' call_tmp[689742](284618 call _cond_test call_tmp[689737]))
          if call_tmp[689742]
          {
            (284588 call(379105 call (partial) _expand _mt[232] this[287395]) idx[284536])
            unknown src[284592] "ref var"
            (497016 'move' src[284592](497015 'addr of' x[284542]))
            unknown dst[284599] "ref var"
            unknown call_tmp[689751] "expr temp" "maybe param" "maybe type" "temp"
            (689754 'move' call_tmp[689751](284598 call(379111 call (partial) _getRef _mt[232] this[287395]) idx[284536]))
            (497019 'move' dst[284599](497018 'addr of' call_tmp[689751]))
            (284606 call(379116 call (partial) _move _mt[232] this[287395]) src[284592] dst[284599])
            unknown call_tmp[689760] "expr temp" "maybe param" "maybe type" "temp"
            (689763 'move' call_tmp[689760](379123 call _size _mt[232] this[287395]))
            (284610 call += call_tmp[689760] 1)
            (284615 call = result[284553] 1)
          }
        }
        (284629 call(379128 call (partial) _leave _mt[232] this[287395]))
      }
    }
    unknown call_tmp[689767] "expr temp" "maybe param" "maybe type" "temp"
    (689770 'move' call_tmp[689767](284640 call ! result[284553]))
    unknown call_tmp[689772] "expr temp" "maybe param" "maybe type" "temp"
    (689775 'move' call_tmp[689772](284647 call _cond_test call_tmp[689767]))
    if call_tmp[689772]
    {
      (284645 call(379135 call (partial) _destroy _mt[232] this[287395]) x[284542])
    }
    (488034 'move' ret[488028](488033 'coerce' result[284553] bool[10]))
    (488030 return ret[488028])
  }
  {
    (284550 call <(284547 'lifetime_of' this[287395])(284549 'lifetime_of' x[284542]))
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?)._insertGenericKnownSize[284665](arg _mt[287401]:_MT[227], arg this[287399]:list[287241](?), arg idx[284662]:int(64)[13], arg items[284667]:_any[170](?), arg size[284670]:int(64)[13]) : _unknown[43] "method" "primary method" "no doc"
  {
    unknown ret[488038] "RVV" "temp"
    unknown result[284675] "insert auto destroy"
    (497021 'init var' result[284675] 0)
    unknown call_tmp[689779] "expr temp" "maybe param" "maybe type" "temp"
    (689782 'move' call_tmp[689779](284682 call >= size[284670] 0))
    (284685 call _sanity call_tmp[689779])
    unknown call_tmp[689784] "expr temp" "maybe param" "maybe type" "temp"
    (689787 'move' call_tmp[689784](284689 call == size[284670] 0))
    unknown call_tmp[689789] "expr temp" "maybe param" "maybe type" "temp"
    (689792 'move' call_tmp[689789](284694 call _cond_test call_tmp[689784]))
    if call_tmp[689789]
    {
      (488044 'move' ret[488038](488043 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[488036] _end__insertGenericKnownSize[488036]
    }
    {
      const tmp[284818] "const" "temp"
      unknown call_tmp[689794] "expr temp" "maybe param" "maybe type" "temp"
      (689797 'move' call_tmp[689794](284815 '_wide_get_locale' this[287399]))
      (284819 'move' tmp[284818](284816 'deref' call_tmp[689794]))
      {
        unknown call_tmp[689801] "expr temp" "maybe param" "maybe type" "temp"
        (689804 'move' call_tmp[689801](379146 call _size _mt[232] this[287399]))
        unknown call_tmp[689806] "expr temp" "maybe param" "maybe type" "temp"
        (689809 'move' call_tmp[689806](284703 call + call_tmp[689801] 1))
        unknown call_tmp[689811] "expr temp" "maybe param" "maybe type" "temp"
        (689814 'move' call_tmp[689811](284705 call == idx[284662] call_tmp[689806]))
        unknown call_tmp[689816] "expr temp" "maybe param" "maybe type" "temp"
        (689819 'move' call_tmp[689816](284809 call _cond_test call_tmp[689811]))
        if call_tmp[689816]
        {
          (284710 call(379150 call (partial) _extendGeneric _mt[232] this[287399]) items[284667])
          (284715 call = result[284675] 1)
        }
        {
          unknown call_tmp[689825] "expr temp" "maybe param" "maybe type" "temp"
          (689828 'move' call_tmp[689825](284721 call(379156 call (partial) _withinBounds _mt[232] this[287399]) idx[284662]))
          unknown call_tmp[689830] "expr temp" "maybe param" "maybe type" "temp"
          (689833 'move' call_tmp[689830](284805 call _cond_test call_tmp[689825]))
          if call_tmp[689830]
          {
            (284726 call(379161 call (partial) _expand _mt[232] this[287399]) idx[284662] size[284670])
            unknown i[284730] "insert auto destroy"
            (497023 'init var' i[284730] idx[284662])
            {
              unknown _indexOfInterest[284767] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[284768] "expr temp" "temp"
              (284777 'move' _iterator[284768](284775 call _getIterator items[284667]))
              Defer
              {
                {
                  (284793 call _freeIterator _iterator[284768])
                }
              }
              { scopeless type
                (284782 'move' _indexOfInterest[284767](284779 call iteratorIndex _iterator[284768]))
              }
              ForLoop
              {
                unknown x[284786] "index var" "insert auto destroy"
                (284788 'move' x[284786] _indexOfInterest[284767])
                {
                  unknown cpy[284736] "no auto destroy"
                  (497025 'init var' cpy[284736] x[284786])
                  unknown src[284741] "ref var"
                  (497028 'move' src[284741](497027 'addr of' cpy[284736]))
                  unknown dst[284748] "ref var"
                  unknown call_tmp[689839] "expr temp" "maybe param" "maybe type" "temp"
                  (689842 'move' call_tmp[689839](284747 call(379171 call (partial) _getRef _mt[232] this[287399]) i[284730]))
                  (497031 'move' dst[284748](497030 'addr of' call_tmp[689839]))
                  (284755 call(379176 call (partial) _move _mt[232] this[287399]) src[284741] dst[284748])
                  unknown call_tmp[689848] "expr temp" "maybe param" "maybe type" "temp"
                  (689851 'move' call_tmp[689848](379183 call _size _mt[232] this[287399]))
                  (284759 call += call_tmp[689848] 1)
                  (284764 call += i[284730] 1)
                }
                label _continueLabel[284772]
                _indexOfInterest[284767]
                _iterator[284768]
              }
              label _breakLabel[284773]
            }
            (284802 call = result[284675] 1)
          }
        }
      }
    }
    (488050 'move' ret[488038](488049 'coerce' result[284675] bool[10]))
    label _end__insertGenericKnownSize[488036]
    (488040 return ret[488038])
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?).insert[284835](arg _mt[287405]:_MT[227], arg this[287403]:list[287241](?), arg idx[284832]:int(64)[13], arg arr[284843]:_array[133150](?)) : _unknown[43] "compiler added where" "method" "primary method"
  {
    unknown ret[488054] "RVV" "temp"
    unknown result[284854] "insert auto destroy"
    (497033 'init var' result[284854] 0)
    {
      const tmp[284884] "const" "temp"
      unknown call_tmp[689853] "expr temp" "maybe param" "maybe type" "temp"
      (689856 'move' call_tmp[689853](284881 '_wide_get_locale' this[287403]))
      (284885 'move' tmp[284884](284882 'deref' call_tmp[689853]))
      {
        (284861 call(379198 call (partial) _enter _mt[232] this[287403]))
        unknown call_tmp[689864] "expr temp" "maybe param" "maybe type" "temp"
        (689867 'move' call_tmp[689864](284870 call size _mt[232] arr[284843]))
        unknown call_tmp[689869] "expr temp" "maybe param" "maybe type" "temp"
        (689872 'move' call_tmp[689869](284873 call(379205 call (partial) _insertGenericKnownSize _mt[232] this[287403]) idx[284832] arr[284843] call_tmp[689864]))
        (284874 call = result[284854] call_tmp[689869])
        (284879 call(379212 call (partial) _leave _mt[232] this[287403]))
      }
    }
    (488060 'move' ret[488054](488059 'coerce' result[284854] bool[10]))
    (488056 return ret[488054])
  }
  where {
    unknown call_tmp[689878] "expr temp" "maybe param" "maybe type" "temp"
    (689881 'move' call_tmp[689878](379191 call eltType _mt[232] this[287403]))
    unknown call_tmp[689885] "expr temp" "maybe param" "maybe type" "temp"
    (689888 'move' call_tmp[689885](442495 call eltType _mt[232] arr[284843]))
    unknown call_tmp[689890] "expr temp" "maybe param" "maybe type" "temp"
    (689893 'move' call_tmp[689890](442499 call == call_tmp[689878] call_tmp[689885]))
    (442493 call & 1 call_tmp[689890])
  }
  {
    (284851 call <(284848 'lifetime_of' this[287403])(284850 'lifetime_of' arr[284843]))
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?).insert[284902](arg _mt[287409]:_MT[227], arg this[287407]:list[287241](?), arg idx[284899]:int(64)[13], arg lst[284908]:list[287241](?)) : _unknown[43] "compiler added where" "method" "primary method"
  {
    unknown ret[488064] "RVV" "temp"
    unknown result[284919] "insert auto destroy"
    (497035 'init var' result[284919] 0)
    unknown call_tmp[689897] "maybe param" "maybe type" "temp"
    (689900 'move' call_tmp[689897](284924 call size _mt[232] lst[284908]))
    const size[284927] "const" "insert auto destroy"
    (497037 'init var' size[284927] call_tmp[689897])
    {
      const tmp[284953] "const" "temp"
      unknown call_tmp[689902] "expr temp" "maybe param" "maybe type" "temp"
      (689905 'move' call_tmp[689902](284950 '_wide_get_locale' this[287407]))
      (284954 'move' tmp[284953](284951 'deref' call_tmp[689902]))
      {
        (284933 call(379227 call (partial) _enter _mt[232] this[287407]))
        unknown call_tmp[689911] "expr temp" "maybe param" "maybe type" "temp"
        (689914 'move' call_tmp[689911](284942 call(379232 call (partial) _insertGenericKnownSize _mt[232] this[287407]) idx[284899] lst[284908] size[284927]))
        (284943 call = result[284919] call_tmp[689911])
        (284948 call(379239 call (partial) _leave _mt[232] this[287407]))
      }
    }
    (488070 'move' ret[488064](488069 'coerce' result[284919] bool[10]))
    (488066 return ret[488064])
  }
  where {
    unknown call_tmp[689920] "expr temp" "maybe param" "maybe type" "temp"
    (689923 'move' call_tmp[689920](442507 call eltType _mt[232] this[287407]))
    unknown call_tmp[689925] "expr temp" "maybe param" "maybe type" "temp"
    (689928 'move' call_tmp[689925](442503 'query' lst[284908] 1))
    unknown call_tmp[689930] "expr temp" "maybe param" "maybe type" "temp"
    (689933 'move' call_tmp[689930](442510 call == call_tmp[689920] call_tmp[689925]))
    (442514 call & 1 call_tmp[689930])
  }
  {
    (284916 call <(284913 'lifetime_of' this[287407])(284915 'lifetime_of' lst[284908]))
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?).remove[284971](arg _mt[287413]:_MT[227], arg this[287411]:list[287241](?), arg x[284968] :
  (379245 call eltType _mt[232] this[287411]), arg count[284975]:int(64)[13] =
  1) : _unknown[43] "method" "primary method"
  {
    unknown ret[488074] "RVV" "temp"
    unknown result[284981] "insert auto destroy"
    (497039 'init var' result[284981] 0)
    {
      const tmp[285119] "const" "temp"
      unknown call_tmp[689937] "expr temp" "maybe param" "maybe type" "temp"
      (689940 'move' call_tmp[689937](285116 '_wide_get_locale' this[287411]))
      (285120 'move' tmp[285119](285117 'deref' call_tmp[689937]))
      {
        (284988 call(379250 call (partial) _enter _mt[232] this[287411]))
        unknown removed[284992] "insert auto destroy"
        (497041 'init var' removed[284992] 0)
        {
          unknown _indexOfInterest[285053] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[285054] "expr temp" "temp"
          unknown call_tmp[689946] "expr temp" "maybe param" "maybe type" "temp"
          (689949 'move' call_tmp[689946](379278 call _size _mt[232] this[287411]))
          unknown call_tmp[689951] "expr temp" "maybe param" "maybe type" "temp"
          (689954 'move' call_tmp[689951](285068 call - call_tmp[689946] removed[284992]))
          unknown call_tmp[689956] "expr temp" "maybe param" "maybe type" "temp"
          (689959 'move' call_tmp[689956](285071 call chpl_direct_range_iter 1 call_tmp[689951] 1))
          (285063 'move' _iterator[285054](285061 call _getIterator call_tmp[689956]))
          Defer
          {
            {
              (285087 call _freeIterator _iterator[285054])
            }
          }
          { scopeless type
            (285076 'move' _indexOfInterest[285053](285073 call iteratorIndex _iterator[285054]))
          }
          ForLoop
          {
            unknown i[285080] "index var" "insert auto destroy"
            (285082 'move' i[285080] _indexOfInterest[285053])
            {
              unknown item[285007] "ref var"
              unknown call_tmp[689963] "expr temp" "maybe param" "maybe type" "temp"
              (689966 'move' call_tmp[689963](285006 call(379254 call (partial) _getRef _mt[232] this[287411]) i[285080]))
              (497044 'move' item[285007](497043 'addr of' call_tmp[689963]))
              unknown call_tmp[689968] "expr temp" "maybe param" "maybe type" "temp"
              (689971 'move' call_tmp[689968](285013 call == x[284968] item[285007]))
              unknown call_tmp[689973] "expr temp" "maybe param" "maybe type" "temp"
              (689976 'move' call_tmp[689973](285031 call _cond_test call_tmp[689968]))
              if call_tmp[689973]
              {
                (285018 call(379261 call (partial) _destroy _mt[232] this[287411]) item[285007])
                (285024 call(379268 call (partial) _collapse _mt[232] this[287411]) i[285080])
                (285028 call += removed[284992] 1)
              }
              unknown tmp[409791] "maybe param" "temp"
              (409802 'move' tmp[409791](285037 call > count[284975] 0))
              unknown call_tmp[689982] "expr temp" "maybe param" "maybe type" "temp"
              (689985 'move' call_tmp[689982](409804 call _cond_invalid tmp[409791]))
              if call_tmp[689982]
              {
                (409807 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[528866] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[528867] "maybe param" "temp"
              unknown call_tmp[689987] "expr temp" "maybe param" "maybe type" "temp"
              (689990 'move' call_tmp[689987](409792 call isTrue tmp[409791]))
              (528872 'move' tmp[528867](528870 call _cond_test call_tmp[689987]))
              if tmp[528867]
              {
                unknown tmp[528874] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[689992] "expr temp" "maybe param" "maybe type" "temp"
                (689995 'move' call_tmp[689992](285041 call >= removed[284992] count[284975]))
                (528876 'move' tmp[528874](409795 call isTrue call_tmp[689992]))
                (528881 'move' tmp[528866](528878 '_paramFoldLogical' tmp[528867] tmp[528874]))
              }
              {
                (528886 'move' tmp[528866](528883 '_paramFoldLogical' tmp[528867] 0))
              }
              unknown call_tmp[689997] "expr temp" "maybe param" "maybe type" "temp"
              (690000 'move' call_tmp[689997](285048 call _cond_test tmp[528866]))
              if call_tmp[689997]
              {
                break _breakLabel[285059] _breakLabel[285059]
              }
            }
            label _continueLabel[285058]
            _indexOfInterest[285053]
            _iterator[285054]
          }
          label _breakLabel[285059]
        }
        (285097 call(379283 call (partial) _maybeReleaseMem _mt[232] this[287411]) removed[284992])
        unknown call_tmp[690006] "expr temp" "maybe param" "maybe type" "temp"
        (690009 'move' call_tmp[690006](379289 call _size _mt[232] this[287411]))
        unknown call_tmp[690013] "expr temp" "maybe param" "maybe type" "temp"
        (690016 'move' call_tmp[690013](379294 call _size _mt[232] this[287411]))
        unknown call_tmp[690018] "expr temp" "maybe param" "maybe type" "temp"
        (690021 'move' call_tmp[690018](285102 call - call_tmp[690013] removed[284992]))
        (285104 call = call_tmp[690006] call_tmp[690018])
        (285109 call = result[284981] removed[284992])
        (285114 call(379301 call (partial) _leave _mt[232] this[287411]))
      }
    }
    (488080 'move' ret[488074](488079 'coerce' result[284981] int(64)[13]))
    (488076 return ret[488074])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?)._popAtIndex[285136](arg _mt[287417]:_MT[227], arg this[287415]:list[287241](?), arg idx[285133]:int(64)[13], arg unlockBeforeHalt[285139] :
  1 =
  1) : _unknown[43] "method" "primary method" "no doc"
  {
    unknown ret[488084] "RVV" "temp"
    unknown tmp[409812] "maybe param" "temp"
    (409823 'move' tmp[409812] 1)
    unknown call_tmp[690025] "expr temp" "maybe param" "maybe type" "temp"
    (690028 'move' call_tmp[690025](409825 call _cond_invalid tmp[409812]))
    if call_tmp[690025]
    {
      (409828 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[528893] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528894] "maybe param" "temp"
    unknown call_tmp[690030] "expr temp" "maybe param" "maybe type" "temp"
    (690033 'move' call_tmp[690030](409813 call isTrue tmp[409812]))
    (528899 'move' tmp[528894](528897 call _cond_test call_tmp[690030]))
    if tmp[528894]
    {
      unknown tmp[528901] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690037] "expr temp" "maybe param" "maybe type" "temp"
      (690040 'move' call_tmp[690037](379313 call _size _mt[232] this[287415]))
      unknown call_tmp[690042] "expr temp" "maybe param" "maybe type" "temp"
      (690045 'move' call_tmp[690042](285146 call <= call_tmp[690037] 0))
      (528903 'move' tmp[528901](409816 call isTrue call_tmp[690042]))
      (528908 'move' tmp[528893](528905 '_paramFoldLogical' tmp[528894] tmp[528901]))
    }
    {
      (528913 'move' tmp[528893](528910 '_paramFoldLogical' tmp[528894] 0))
    }
    unknown call_tmp[690047] "expr temp" "maybe param" "maybe type" "temp"
    (690050 'move' call_tmp[690047](285181 call _cond_test tmp[528893]))
    if call_tmp[690047]
    {
      unknown call_tmp[690052] "expr temp" "maybe param" "maybe type" "temp"
      (690055 'move' call_tmp[690052](285155 call _cond_test unlockBeforeHalt[285139]))
      if call_tmp[690052]
      {
        (285153 call(379318 call (partial) _leave _mt[232] this[287415]))
      }
      (285179 call halt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[409833] "maybe param" "temp"
    (409844 'move' tmp[409833] 1)
    unknown call_tmp[690059] "expr temp" "maybe param" "maybe type" "temp"
    (690062 'move' call_tmp[690059](409846 call _cond_invalid tmp[409833]))
    if call_tmp[690059]
    {
      (409849 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[528920] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528921] "maybe param" "temp"
    unknown call_tmp[690064] "expr temp" "maybe param" "maybe type" "temp"
    (690067 'move' call_tmp[690064](409834 call isTrue tmp[409833]))
    (528926 'move' tmp[528921](528924 call _cond_test call_tmp[690064]))
    if tmp[528921]
    {
      unknown tmp[528928] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690071] "expr temp" "maybe param" "maybe type" "temp"
      (690074 'move' call_tmp[690071](285190 call(379323 call (partial) _withinBounds _mt[232] this[287415]) idx[285133]))
      unknown call_tmp[690076] "expr temp" "maybe param" "maybe type" "temp"
      (690079 'move' call_tmp[690076](285191 call ! call_tmp[690071]))
      (528930 'move' tmp[528928](409837 call isTrue call_tmp[690076]))
      (528935 'move' tmp[528920](528932 '_paramFoldLogical' tmp[528921] tmp[528928]))
    }
    {
      (528940 'move' tmp[528920](528937 '_paramFoldLogical' tmp[528921] 0))
    }
    unknown call_tmp[690081] "expr temp" "maybe param" "maybe type" "temp"
    (690084 'move' call_tmp[690081](285232 call _cond_test tmp[528920]))
    if call_tmp[690081]
    {
      unknown call_tmp[690086] "expr temp" "maybe param" "maybe type" "temp"
      (690089 'move' call_tmp[690086](285200 call _cond_test unlockBeforeHalt[285139]))
      if call_tmp[690086]
      {
        (285198 call(379329 call (partial) _leave _mt[232] this[287415]))
      }
      unknown call_tmp[690093] "expr temp" "maybe param" "maybe type" "temp"
      (690096 'move' call_tmp[690093](285225 call _cast string[24] idx[285133]))
      unknown call_tmp[690098] "expr temp" "maybe param" "maybe type" "temp"
      (690101 'move' call_tmp[690098](285227 call + "Index for \"list.pop\" out of bounds: " call_tmp[690093]))
      (285230 call halt call_tmp[690098])
    }
    unknown item[285240] "ref var"
    unknown call_tmp[690105] "expr temp" "maybe param" "maybe type" "temp"
    (690108 'move' call_tmp[690105](285239 call(379334 call (partial) _getRef _mt[232] this[287415]) idx[285133]))
    (497047 'move' item[285240](497046 'addr of' call_tmp[690105]))
    unknown result[285244] "insert auto destroy"
    (497049 'init var' result[285244] item[285240])
    (285250 call(379340 call (partial) _destroy _mt[232] this[287415]) item[285240])
    (285255 call(379345 call (partial) _collapse _mt[232] this[287415]) idx[285133])
    unknown call_tmp[690116] "expr temp" "maybe param" "maybe type" "temp"
    (690119 'move' call_tmp[690116](379351 call _size _mt[232] this[287415]))
    (285259 call -= call_tmp[690116] 1)
    unknown call_tmp[690123] "expr temp" "maybe param" "maybe type" "temp"
    (690126 'move' call_tmp[690123](488089 call eltType _mt[232] this[287415]))
    (488093 'move' ret[488084](488092 'coerce' result[285244] call_tmp[690123]))
    (488086 return ret[488084])
  }
  { scopeless type
    (379307 call eltType _mt[232] this[287415])
  }
  function list[287241](?).pop[285270](arg _mt[287421]:_MT[227], arg this[287419]:list[287241](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[488097] "RVV" "temp"
    (285275 call(379361 call (partial) _enter _mt[232] this[287419]))
    unknown call_tmp[690136] "expr temp" "maybe param" "maybe type" "temp"
    (690139 'move' call_tmp[690136](379372 call _size _mt[232] this[287419]))
    unknown call_tmp[690141] "maybe param" "maybe type" "temp"
    (690144 'move' call_tmp[690141](285281 call(379367 call (partial) _popAtIndex _mt[232] this[287419]) call_tmp[690136]))
    unknown result[285282] "insert auto destroy"
    (497051 'init var' result[285282] call_tmp[690141])
    (285287 call(379376 call (partial) _leave _mt[232] this[287419]))
    unknown call_tmp[690150] "expr temp" "maybe param" "maybe type" "temp"
    (690153 'move' call_tmp[690150](488102 call eltType _mt[232] this[287419]))
    (488106 'move' ret[488097](488105 'coerce' result[285282] call_tmp[690150]))
    (488099 return ret[488097])
  }
  { scopeless type
    (379357 call eltType _mt[232] this[287419])
  }
  function list[287241](?).pop[285301](arg _mt[287425]:_MT[227], arg this[287423]:list[287241](?), arg idx[285298]:int(64)[13]) : _unknown[43] "method" "primary method"
  {
    unknown ret[488110] "RVV" "temp"
    (285306 call(379386 call (partial) _enter _mt[232] this[287423]))
    unknown call_tmp[690161] "maybe param" "maybe type" "temp"
    (690164 'move' call_tmp[690161](285312 call(379390 call (partial) _popAtIndex _mt[232] this[287423]) idx[285298]))
    unknown result[285313] "insert auto destroy"
    (497053 'init var' result[285313] call_tmp[690161])
    (285318 call(379395 call (partial) _leave _mt[232] this[287423]))
    unknown call_tmp[690170] "expr temp" "maybe param" "maybe type" "temp"
    (690173 'move' call_tmp[690170](488115 call eltType _mt[232] this[287423]))
    (488119 'move' ret[488110](488118 'coerce' result[285313] call_tmp[690170]))
    (488112 return ret[488110])
  }
  { scopeless type
    (379382 call eltType _mt[232] this[287423])
  }
  function list[287241](?)._fireAllDestructors[285328](arg _mt[287429]:_MT[227], arg this[287427]:list[287241](?)) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    {
      const tmp[285396] "const" "temp"
      unknown call_tmp[690177] "expr temp" "maybe param" "maybe type" "temp"
      (690180 'move' call_tmp[690177](285393 '_wide_get_locale' this[287427]))
      (285397 'move' tmp[285396](285394 'deref' call_tmp[690177]))
      {
        {
          unknown _indexOfInterest[285349] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[285350] "expr temp" "temp"
          unknown call_tmp[690184] "expr temp" "maybe param" "maybe type" "temp"
          (690187 'move' call_tmp[690184](379412 call _size _mt[232] this[287427]))
          unknown call_tmp[690189] "expr temp" "maybe param" "maybe type" "temp"
          (690192 'move' call_tmp[690189](285364 call chpl_direct_range_iter 1 call_tmp[690184] 1))
          (285359 'move' _iterator[285350](285357 call _getIterator call_tmp[690189]))
          Defer
          {
            {
              (285380 call _freeIterator _iterator[285350])
            }
          }
          { scopeless type
            (285369 'move' _indexOfInterest[285349](285366 call iteratorIndex _iterator[285350]))
          }
          ForLoop
          {
            unknown i[285373] "index var" "insert auto destroy"
            (285375 'move' i[285373] _indexOfInterest[285349])
            {
              unknown item[285340] "ref var"
              unknown call_tmp[690196] "expr temp" "maybe param" "maybe type" "temp"
              (690199 'move' call_tmp[690196](285339 call(379401 call (partial) _getRef _mt[232] this[287427]) i[285373]))
              (497056 'move' item[285340](497055 'addr of' call_tmp[690196]))
              (285347 call(379406 call (partial) _destroy _mt[232] this[287427]) item[285340])
            }
            label _continueLabel[285354]
            _indexOfInterest[285349]
            _iterator[285350]
          }
          label _breakLabel[285355]
        }
        unknown call_tmp[690205] "expr temp" "maybe param" "maybe type" "temp"
        (690208 'move' call_tmp[690205](379417 call _size _mt[232] this[287427]))
        (285390 call = call_tmp[690205] 0)
      }
    }
    (488123 return _void[47])
  }
  function list[287241](?)._freeAllArrays[285408](arg _mt[287433]:_MT[227], arg this[287431]:list[287241](?)) : _unknown[43] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[690212] "expr temp" "maybe param" "maybe type" "temp"
    (690215 'move' call_tmp[690212](379422 call _arrays _mt[232] this[287431]))
    unknown call_tmp[690217] "expr temp" "maybe param" "maybe type" "temp"
    (690220 'move' call_tmp[690217](285412 call == call_tmp[690212] nil[38]))
    unknown call_tmp[690222] "expr temp" "maybe param" "maybe type" "temp"
    (690225 'move' call_tmp[690222](285416 call _cond_test call_tmp[690217]))
    if call_tmp[690222]
    {
      gotoReturn _end__freeAllArrays[488125] _end__freeAllArrays[488125]
    }
    unknown call_tmp[690229] "expr temp" "maybe param" "maybe type" "temp"
    (690232 'move' call_tmp[690229](379427 call _totalCapacity _mt[232] this[287431]))
    unknown call_tmp[690234] "expr temp" "maybe param" "maybe type" "temp"
    (690237 'move' call_tmp[690234](285425 call != call_tmp[690229] 0))
    (285428 call _sanity call_tmp[690234])
    unknown call_tmp[690241] "expr temp" "maybe param" "maybe type" "temp"
    (690244 'move' call_tmp[690241](379432 call _arrayCapacity _mt[232] this[287431]))
    unknown call_tmp[690246] "expr temp" "maybe param" "maybe type" "temp"
    (690249 'move' call_tmp[690246](285433 call != call_tmp[690241] 0))
    (285436 call _sanity call_tmp[690246])
    {
      const tmp[285557] "const" "temp"
      unknown call_tmp[690251] "expr temp" "maybe param" "maybe type" "temp"
      (690254 'move' call_tmp[690251](285554 '_wide_get_locale' this[287431]))
      (285558 'move' tmp[285557](285555 'deref' call_tmp[690251]))
      {
        {
          unknown _indexOfInterest[285489] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[285490] "expr temp" "temp"
          unknown call_tmp[690258] "expr temp" "maybe param" "maybe type" "temp"
          (690261 'move' call_tmp[690258](379463 call _arrayCapacity _mt[232] this[287431]))
          unknown call_tmp[690263] "expr temp" "maybe param" "maybe type" "temp"
          (690266 'move' call_tmp[690263](285506 call chpl_direct_counted_range_iter 0 call_tmp[690258]))
          (285499 'move' _iterator[285490](285497 call _getIterator call_tmp[690263]))
          Defer
          {
            {
              (285522 call _freeIterator _iterator[285490])
            }
          }
          { scopeless type
            (285511 'move' _indexOfInterest[285489](285508 call iteratorIndex _iterator[285490]))
          }
          ForLoop
          {
            unknown i[285515] "index var" "insert auto destroy"
            (285517 'move' i[285515] _indexOfInterest[285489])
            {
              unknown array[285450] "ref var"
              unknown call_tmp[690270] "expr temp" "maybe param" "maybe type" "temp"
              (690273 'move' call_tmp[690270](285449 call(379438 call (partial) _arrays _mt[232] this[287431]) i[285515]))
              (497059 'move' array[285450](497058 'addr of' call_tmp[690270]))
              unknown call_tmp[690275] "expr temp" "maybe param" "maybe type" "temp"
              (690278 'move' call_tmp[690275](285456 call == array[285450] nil[38]))
              unknown call_tmp[690280] "expr temp" "maybe param" "maybe type" "temp"
              (690283 'move' call_tmp[690280](285461 call _cond_test call_tmp[690275]))
              if call_tmp[690280]
              {
                continue _continueLabel[285494] _continueLabel[285494]
              }
              unknown call_tmp[690287] "maybe param" "maybe type" "temp"
              (690290 'move' call_tmp[690287](285469 call(379444 call (partial) _getArrayCapacity _mt[232] this[287431]) i[285515]))
              const capacity[285470] "const" "insert auto destroy"
              (497061 'init var' capacity[285470] call_tmp[690287])
              unknown call_tmp[690294] "expr temp" "maybe param" "maybe type" "temp"
              (690297 'move' call_tmp[690294](379450 call _totalCapacity _mt[232] this[287431]))
              (285475 call -= call_tmp[690294] capacity[285470])
              (285482 call(379455 call (partial) _freeArray _mt[232] this[287431]) array[285450] capacity[285470])
              (285486 call = array[285450] nil[38])
            }
            label _continueLabel[285494]
            _indexOfInterest[285489]
            _iterator[285490]
          }
          label _breakLabel[285495]
        }
        unknown call_tmp[690303] "expr temp" "maybe param" "maybe type" "temp"
        (690306 'move' call_tmp[690303](379468 call _totalCapacity _mt[232] this[287431]))
        unknown call_tmp[690308] "expr temp" "maybe param" "maybe type" "temp"
        (690311 'move' call_tmp[690308](285533 call == call_tmp[690303] 0))
        (285536 call _sanity call_tmp[690308])
        unknown call_tmp[690317] "expr temp" "maybe param" "maybe type" "temp"
        (690320 'move' call_tmp[690317](379477 call _arrays _mt[232] this[287431]))
        unknown call_tmp[690324] "expr temp" "maybe param" "maybe type" "temp"
        (690327 'move' call_tmp[690324](379482 call _arrayCapacity _mt[232] this[287431]))
        (285542 call(379472 call (partial) _freeBlockArray _mt[232] this[287431]) call_tmp[690317] call_tmp[690324])
        unknown call_tmp[690331] "expr temp" "maybe param" "maybe type" "temp"
        (690334 'move' call_tmp[690331](379487 call _arrays _mt[232] this[287431]))
        (285546 call = call_tmp[690331] nil[38])
        unknown call_tmp[690338] "expr temp" "maybe param" "maybe type" "temp"
        (690341 'move' call_tmp[690338](379492 call _size _mt[232] this[287431]))
        (285551 call = call_tmp[690338] 0)
      }
    }
    label _end__freeAllArrays[488125]
    (488127 return _void[47])
  }
  function list[287241](?).clear[285568](arg _mt[287437]:_MT[227], arg this[287435]:list[287241](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    {
      const tmp[285619] "const" "temp"
      unknown call_tmp[690343] "expr temp" "maybe param" "maybe type" "temp"
      (690346 'move' call_tmp[690343](285616 '_wide_get_locale' this[287435]))
      (285620 'move' tmp[285619](285617 'deref' call_tmp[690343]))
      {
        (285573 call(379497 call (partial) _enter _mt[232] this[287435]))
        (285578 call(379501 call (partial) _fireAllDestructors _mt[232] this[287435]))
        (285582 call(379505 call (partial) _freeAllArrays _mt[232] this[287435]))
        unknown call_tmp[690356] "expr temp" "maybe param" "maybe type" "temp"
        (690359 'move' call_tmp[690356](379510 call _totalCapacity _mt[232] this[287435]))
        unknown call_tmp[690361] "expr temp" "maybe param" "maybe type" "temp"
        (690364 'move' call_tmp[690361](285587 call == call_tmp[690356] 0))
        (285590 call _sanity call_tmp[690361])
        unknown call_tmp[690368] "expr temp" "maybe param" "maybe type" "temp"
        (690371 'move' call_tmp[690368](379515 call _size _mt[232] this[287435]))
        unknown call_tmp[690373] "expr temp" "maybe param" "maybe type" "temp"
        (690376 'move' call_tmp[690373](285595 call == call_tmp[690368] 0))
        (285598 call _sanity call_tmp[690373])
        unknown call_tmp[690380] "expr temp" "maybe param" "maybe type" "temp"
        (690383 'move' call_tmp[690380](379520 call _arrays _mt[232] this[287435]))
        unknown call_tmp[690385] "expr temp" "maybe param" "maybe type" "temp"
        (690388 'move' call_tmp[690385](285603 call == call_tmp[690380] nil[38]))
        (285606 call _sanity call_tmp[690385])
        (285610 call(379524 call (partial) _firstTimeInitializeArrays _mt[232] this[287435]))
        (285614 call(379528 call (partial) _leave _mt[232] this[287435]))
      }
    }
    (488131 return _void[47])
  }
  function list[287241](?).indexOf[285633](arg _mt[287441]:_MT[227], arg this[287439]:list[287241](?), arg x[285630] :
  (379533 call eltType _mt[232] this[287439]), arg start[285637]:int(64)[13] =
  1, arg end[285643]:int(64)[13] =
  0) : _unknown[43] "method" "primary method"
  {
    unknown ret[488135] "RVV" "temp"
    unknown call_tmp[690396] "expr temp" "maybe param" "maybe type" "temp"
    (690399 'move' call_tmp[690396](285755 call _cond_test 1))
    if call_tmp[690396]
    {
      const msg[285665] "const" "insert auto destroy"
      (497063 'init var' msg[285665] " index for \"list.indexOf\" out of bounds: ")
      unknown tmp[409854] "maybe param" "temp"
      (409865 'move' tmp[409854](285671 call > end[285643] 0))
      unknown call_tmp[690401] "expr temp" "maybe param" "maybe type" "temp"
      (690404 'move' call_tmp[690401](409867 call _cond_invalid tmp[409854]))
      if call_tmp[690401]
      {
        (409870 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[528947] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[528948] "maybe param" "temp"
      unknown call_tmp[690406] "expr temp" "maybe param" "maybe type" "temp"
      (690409 'move' call_tmp[690406](409855 call isTrue tmp[409854]))
      (528953 'move' tmp[528948](528951 call _cond_test call_tmp[690406]))
      if tmp[528948]
      {
        unknown tmp[528955] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[690413] "expr temp" "maybe param" "maybe type" "temp"
        (690416 'move' call_tmp[690413](285676 call(379539 call (partial) _withinBounds _mt[232] this[287439]) end[285643]))
        unknown call_tmp[690418] "expr temp" "maybe param" "maybe type" "temp"
        (690421 'move' call_tmp[690418](285677 call ! call_tmp[690413]))
        (528957 'move' tmp[528955](409858 call isTrue call_tmp[690418]))
        (528962 'move' tmp[528947](528959 '_paramFoldLogical' tmp[528948] tmp[528955]))
      }
      {
        (528967 'move' tmp[528947](528964 '_paramFoldLogical' tmp[528948] 0))
      }
      unknown call_tmp[690423] "expr temp" "maybe param" "maybe type" "temp"
      (690426 'move' call_tmp[690423](285710 call _cond_test tmp[528947]))
      if call_tmp[690423]
      {
        unknown call_tmp[690428] "expr temp" "maybe param" "maybe type" "temp"
        (690431 'move' call_tmp[690428](285699 call + "End" msg[285665]))
        unknown call_tmp[690433] "expr temp" "maybe param" "maybe type" "temp"
        (690436 'move' call_tmp[690433](285703 call _cast string[24] end[285643]))
        unknown call_tmp[690438] "expr temp" "maybe param" "maybe type" "temp"
        (690441 'move' call_tmp[690438](285705 call + call_tmp[690428] call_tmp[690433]))
        (285708 call halt call_tmp[690438])
      }
      unknown call_tmp[690445] "expr temp" "maybe param" "maybe type" "temp"
      (690448 'move' call_tmp[690445](285718 call(379546 call (partial) _withinBounds _mt[232] this[287439]) start[285637]))
      unknown call_tmp[690450] "expr temp" "maybe param" "maybe type" "temp"
      (690453 'move' call_tmp[690450](285719 call ! call_tmp[690445]))
      unknown call_tmp[690455] "expr temp" "maybe param" "maybe type" "temp"
      (690458 'move' call_tmp[690455](285750 call _cond_test call_tmp[690450]))
      if call_tmp[690455]
      {
        unknown call_tmp[690460] "expr temp" "maybe param" "maybe type" "temp"
        (690463 'move' call_tmp[690460](285739 call + "Start" msg[285665]))
        unknown call_tmp[690465] "expr temp" "maybe param" "maybe type" "temp"
        (690468 'move' call_tmp[690465](285743 call _cast string[24] start[285637]))
        unknown call_tmp[690470] "expr temp" "maybe param" "maybe type" "temp"
        (690473 'move' call_tmp[690470](285745 call + call_tmp[690460] call_tmp[690465]))
        (285748 call halt call_tmp[690470])
      }
    }
    unknown call_tmp[690475] "maybe param" "maybe type" "temp"
    (690478 'move' call_tmp[690475](285761 call - 1))
    unknown error[285763] "param"
    (497065 'init var' error[285763] call_tmp[690475])
    unknown tmp[409875] "maybe param" "temp"
    (409886 'move' tmp[409875](285768 call > end[285643] 0))
    unknown call_tmp[690480] "expr temp" "maybe param" "maybe type" "temp"
    (690483 'move' call_tmp[690480](409888 call _cond_invalid tmp[409875]))
    if call_tmp[690480]
    {
      (409891 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[528974] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[528975] "maybe param" "temp"
    unknown call_tmp[690485] "expr temp" "maybe param" "maybe type" "temp"
    (690488 'move' call_tmp[690485](409876 call isTrue tmp[409875]))
    (528980 'move' tmp[528975](528978 call _cond_test call_tmp[690485]))
    if tmp[528975]
    {
      unknown tmp[528982] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690490] "expr temp" "maybe param" "maybe type" "temp"
      (690493 'move' call_tmp[690490](285772 call < end[285643] start[285637]))
      (528984 'move' tmp[528982](409879 call isTrue call_tmp[690490]))
      (528989 'move' tmp[528974](528986 '_paramFoldLogical' tmp[528975] tmp[528982]))
    }
    {
      (528994 'move' tmp[528974](528991 '_paramFoldLogical' tmp[528975] 0))
    }
    unknown call_tmp[690495] "expr temp" "maybe param" "maybe type" "temp"
    (690498 'move' call_tmp[690495](285779 call _cond_test tmp[528974]))
    if call_tmp[690495]
    {
      (488141 'move' ret[488135](488140 'coerce' error[285763] int(64)[13]))
      gotoReturn _end_indexOf[488133] _end_indexOf[488133]
    }
    unknown result[285785] "insert auto destroy"
    (497067 'init var' result[285785] error[285763])
    {
      const tmp[285876] "const" "temp"
      unknown call_tmp[690500] "expr temp" "maybe param" "maybe type" "temp"
      (690503 'move' call_tmp[690500](285873 '_wide_get_locale' this[287439]))
      (285877 'move' tmp[285876](285874 'deref' call_tmp[690500]))
      {
        (285791 call(379559 call (partial) _enter _mt[232] this[287439]))
        const stop[285803] "const" "insert auto destroy"
        unknown tmp[529001] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[529002] "maybe param" "temp"
        unknown call_tmp[690507] "expr temp" "maybe param" "maybe type" "temp"
        (690510 'move' call_tmp[690507](285796 call <= end[285643] 0))
        (529007 'move' tmp[529002](529005 call _cond_test call_tmp[690507]))
        if tmp[529002]
        {
          unknown tmp[529009] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (529011 'move' tmp[529009](379565 call _size _mt[232] this[287439]))
          (529016 'move' tmp[529001](529013 '_paramFoldLogical' tmp[529002] tmp[529009]))
        }
        {
          (529021 'move' tmp[529001](529018 '_paramFoldLogical' tmp[529002] end[285643]))
        }
        (497069 'init var' stop[285803] tmp[529001])
        {
          unknown _indexOfInterest[285831] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[285832] "expr temp" "temp"
          unknown call_tmp[690514] "expr temp" "maybe param" "maybe type" "temp"
          (690517 'move' call_tmp[690514](285846 call chpl_direct_range_iter start[285637] stop[285803] 1))
          (285841 'move' _iterator[285832](285839 call _getIterator call_tmp[690514]))
          Defer
          {
            {
              (285862 call _freeIterator _iterator[285832])
            }
          }
          { scopeless type
            (285851 'move' _indexOfInterest[285831](285848 call iteratorIndex _iterator[285832]))
          }
          ForLoop
          {
            unknown i[285855] "index var" "insert auto destroy"
            (285857 'move' i[285855] _indexOfInterest[285831])
            unknown call_tmp[690521] "expr temp" "maybe param" "maybe type" "temp"
            (690524 'move' call_tmp[690521](285815 call(379571 call (partial) _getRef _mt[232] this[287439]) i[285855]))
            unknown call_tmp[690526] "expr temp" "maybe param" "maybe type" "temp"
            (690529 'move' call_tmp[690526](285816 call == x[285630] call_tmp[690521]))
            unknown call_tmp[690531] "expr temp" "maybe param" "maybe type" "temp"
            (690534 'move' call_tmp[690531](285827 call _cond_test call_tmp[690526]))
            if call_tmp[690531]
            {
              (285820 call = result[285785] i[285855])
              break _breakLabel[285837] _breakLabel[285837]
            }
            label _continueLabel[285836]
            _indexOfInterest[285831]
            _iterator[285832]
          }
          label _breakLabel[285837]
        }
        (285871 call(379580 call (partial) _leave _mt[232] this[287439]))
      }
    }
    (488147 'move' ret[488135](488146 'coerce' result[285785] int(64)[13]))
    label _end_indexOf[488133]
    (488137 return ret[488135])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?).count[285893](arg _mt[287445]:_MT[227], arg this[287443]:list[287241](?), arg x[285890] :
  (379586 call eltType _mt[232] this[287443])) : _unknown[43] "method" "primary method"
  {
    unknown ret[488151] "RVV" "temp"
    unknown result[285897] "insert auto destroy"
    (497071 'init var' result[285897] 0)
    {
      const tmp[285972] "const" "temp"
      unknown call_tmp[690540] "expr temp" "maybe param" "maybe type" "temp"
      (690543 'move' call_tmp[690540](285969 '_wide_get_locale' this[287443]))
      (285973 'move' tmp[285972](285970 'deref' call_tmp[690540]))
      {
        (285904 call(379591 call (partial) _enter _mt[232] this[287443]))
        unknown count[285908] "insert auto destroy"
        (497073 'init var' count[285908] 0)
        {
          unknown _indexOfInterest[285927] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[285928] "expr temp" "temp"
          (285937 'move' _iterator[285928](285935 call _getIterator this[287443]))
          Defer
          {
            {
              (285953 call _freeIterator _iterator[285928])
            }
          }
          { scopeless type
            (285942 'move' _indexOfInterest[285927](285939 call iteratorIndex _iterator[285928]))
          }
          ForLoop
          {
            unknown item[285946] "index var" "insert auto destroy"
            (285948 'move' item[285946] _indexOfInterest[285927])
            unknown call_tmp[690547] "expr temp" "maybe param" "maybe type" "temp"
            (690550 'move' call_tmp[690547](285915 call == x[285890] item[285946]))
            unknown call_tmp[690552] "expr temp" "maybe param" "maybe type" "temp"
            (690555 'move' call_tmp[690552](285922 call _cond_test call_tmp[690547]))
            if call_tmp[690552]
            {
              (285919 call += count[285908] 1)
            }
            label _continueLabel[285932]
            _indexOfInterest[285927]
            _iterator[285928]
          }
          label _breakLabel[285933]
        }
        (285962 call = result[285897] count[285908])
        (285967 call(379601 call (partial) _leave _mt[232] this[287443]))
      }
    }
    (488157 'move' ret[488151](488156 'coerce' result[285897] int(64)[13]))
    (488153 return ret[488151])
  }
  { scopeless type
    int(64)[13]
  }
  function list[287241](?).sort[285992](arg _mt[287449]:_MT[227], arg this[287447]:list[287241](?), arg comparator[285989] :
  defaultComparator[251428] =
  defaultComparator[251428]) : _unknown[43] "method" "primary method" "no return value for void"
  {
    {
      const tmp[286111] "const" "temp"
      unknown call_tmp[690559] "expr temp" "maybe param" "maybe type" "temp"
      (690562 'move' call_tmp[690559](286108 '_wide_get_locale' this[287447]))
      (286112 'move' tmp[286111](286109 'deref' call_tmp[690559]))
      {
        (285997 call(379608 call (partial) _enter _mt[232] this[287447]))
        unknown call_tmp[690568] "expr temp" "maybe param" "maybe type" "temp"
        (690571 'move' call_tmp[690568](379613 call _size _mt[232] this[287447]))
        unknown call_tmp[690573] "expr temp" "maybe param" "maybe type" "temp"
        (690576 'move' call_tmp[690573](286002 call > call_tmp[690568] 1))
        unknown call_tmp[690578] "expr temp" "maybe param" "maybe type" "temp"
        (690581 'move' call_tmp[690578](286100 call _cond_test call_tmp[690573]))
        if call_tmp[690578]
        {
          unknown arr[286014] "insert auto destroy"
          unknown call_tmp[690585] "expr temp" "maybe param" "maybe type" "temp"
          (690588 'move' call_tmp[690585](379618 call _size _mt[232] this[287447]))
          unknown call_tmp[690590] "expr temp" "maybe param" "maybe type" "temp"
          (690593 'move' call_tmp[690590](286006 call chpl_build_bounded_range 1 call_tmp[690585]))
          unknown call_tmp[690595] "expr temp" "maybe param" "maybe type" "temp"
          (690598 'move' call_tmp[690595](286010 call chpl__ensureDomainExpr call_tmp[690590]))
          unknown call_tmp[690602] "expr temp" "maybe param" "maybe type" "temp"
          (690605 'move' call_tmp[690602](379623 call eltType _mt[232] this[287447]))
          unknown call_tmp[690607] "expr temp" "maybe param" "maybe type" "temp"
          (690610 'move' call_tmp[690607](286012 call chpl__buildArrayRuntimeType call_tmp[690595] call_tmp[690602]))
          (497075 'default init var' arr[286014] call_tmp[690607])
          {
            unknown _indexOfInterest[286034] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[286035] "expr temp" "temp"
            unknown call_tmp[690614] "expr temp" "maybe param" "maybe type" "temp"
            (690617 'move' call_tmp[690614](379632 call _size _mt[232] this[287447]))
            unknown call_tmp[690619] "expr temp" "maybe param" "maybe type" "temp"
            (690622 'move' call_tmp[690619](286049 call chpl_direct_range_iter 1 call_tmp[690614] 1))
            (286044 'move' _iterator[286035](286042 call _getIterator call_tmp[690619]))
            Defer
            {
              {
                (286065 call _freeIterator _iterator[286035])
              }
            }
            { scopeless type
              (286054 'move' _indexOfInterest[286034](286051 call iteratorIndex _iterator[286035]))
            }
            ForLoop
            {
              unknown i[286058] "index var" "insert auto destroy"
              (286060 'move' i[286058] _indexOfInterest[286034])
              unknown call_tmp[690624] "expr temp" "maybe param" "maybe type" "temp"
              (690627 'move' call_tmp[690624](286026 call arr[286014] i[286058]))
              unknown call_tmp[690629] "expr temp" "maybe param" "maybe type" "temp"
              (690632 'move' call_tmp[690629](286030 call this[287447] i[286058]))
              (286031 call = call_tmp[690624] call_tmp[690629])
              label _continueLabel[286039]
              _indexOfInterest[286034]
              _iterator[286035]
            }
            label _breakLabel[286040]
          }
          (286081 call sort module=[244] Sort[251417] arr[286014] comparator[285989])
          (286085 call(379639 call (partial) _fireAllDestructors _mt[232] this[287447]))
          (286089 call(379643 call (partial) _freeAllArrays _mt[232] this[287447]))
          (286093 call(379647 call (partial) _firstTimeInitializeArrays _mt[232] this[287447]))
          (286098 call(379651 call (partial) _extendGeneric _mt[232] this[287447]) arr[286014])
        }
        (286106 call(379656 call (partial) _leave _mt[232] this[287447]))
      }
    }
    (488161 return _void[47])
  }
  function list[287241](?).this[286127](arg _mt[287453]:_MT[227], arg this[287451]:list[287241](?), arg i[286124]:int(64)[13]) ref : _unknown[43] "method" "primary method"
  {
    unknown ret[488165] "RVV" "temp"
    unknown tmp[409896] "maybe param" "temp"
    (409907 'move' tmp[409896] 1)
    unknown call_tmp[690644] "expr temp" "maybe param" "maybe type" "temp"
    (690647 'move' call_tmp[690644](409909 call _cond_invalid tmp[409896]))
    if call_tmp[690644]
    {
      (409912 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[529028] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[529029] "maybe param" "temp"
    unknown call_tmp[690649] "expr temp" "maybe param" "maybe type" "temp"
    (690652 'move' call_tmp[690649](409897 call isTrue tmp[409896]))
    (529034 'move' tmp[529029](529032 call _cond_test call_tmp[690649]))
    if tmp[529029]
    {
      unknown tmp[529036] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690656] "expr temp" "maybe param" "maybe type" "temp"
      (690659 'move' call_tmp[690656](286133 call(379661 call (partial) _withinBounds _mt[232] this[287451]) i[286124]))
      unknown call_tmp[690661] "expr temp" "maybe param" "maybe type" "temp"
      (690664 'move' call_tmp[690661](286134 call ! call_tmp[690656]))
      (529038 'move' tmp[529036](409900 call isTrue call_tmp[690661]))
      (529043 'move' tmp[529028](529040 '_paramFoldLogical' tmp[529029] tmp[529036]))
    }
    {
      (529048 'move' tmp[529028](529045 '_paramFoldLogical' tmp[529029] 0))
    }
    unknown call_tmp[690666] "expr temp" "maybe param" "maybe type" "temp"
    (690669 'move' call_tmp[690666](286169 call _cond_test tmp[529028]))
    if call_tmp[690666]
    {
      unknown call_tmp[690671] "expr temp" "maybe param" "maybe type" "temp"
      (690674 'move' call_tmp[690671](286156 call _cast string[24] i[286124]))
      unknown call_tmp[690676] "maybe param" "maybe type" "temp"
      (690679 'move' call_tmp[690676](286158 call + "Invalid list index: " call_tmp[690671]))
      const msg[286160] "const" "insert auto destroy"
      (497077 'init var' msg[286160] call_tmp[690676])
      (286167 call halt msg[286160])
    }
    unknown result[286178] "ref var"
    unknown call_tmp[690683] "expr temp" "maybe param" "maybe type" "temp"
    (690686 'move' call_tmp[690683](286177 call(379668 call (partial) _getRef _mt[232] this[287451]) i[286124]))
    (497080 'move' result[286178](497079 'addr of' call_tmp[690683]))
    (488170 'move' ret[488165](488169 'addr of' result[286178]))
    (488167 return ret[488165])
  }
  function list[287241](?).these[286188](arg _mt[287457]:_MT[227], arg this[287455]:list[287241](?)) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[488174] "RVV" "temp"
    {
      unknown _indexOfInterest[286206] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[286207] "expr temp" "temp"
      unknown call_tmp[690690] "expr temp" "maybe param" "maybe type" "temp"
      (690693 'move' call_tmp[690690](379681 call _size _mt[232] this[287455]))
      unknown call_tmp[690695] "expr temp" "maybe param" "maybe type" "temp"
      (690698 'move' call_tmp[690695](286221 call chpl_direct_range_iter 1 call_tmp[690690] 1))
      (286216 'move' _iterator[286207](286214 call _getIterator call_tmp[690695]))
      Defer
      {
        {
          (286237 call _freeIterator _iterator[286207])
        }
      }
      { scopeless type
        (286226 'move' _indexOfInterest[286206](286223 call iteratorIndex _iterator[286207]))
      }
      ForLoop
      {
        unknown i[286230] "index var" "insert auto destroy"
        (286232 'move' i[286230] _indexOfInterest[286206])
        {
          unknown result[286199] "ref var"
          unknown call_tmp[690702] "expr temp" "maybe param" "maybe type" "temp"
          (690705 'move' call_tmp[690702](286198 call(379674 call (partial) _getRef _mt[232] this[287455]) i[286230]))
          (497083 'move' result[286199](497082 'addr of' call_tmp[690702]))
          unknown yret[488178] "YVV" "temp"
          (488181 'move' yret[488178](488180 'addr of' result[286199]))
          (488183 yield yret[488178])
        }
        label _continueLabel[286211]
        _indexOfInterest[286206]
        _iterator[286207]
      }
      label _breakLabel[286212]
    }
    (488176 return ret[488174])
  }
  function list[287241](?).these[286253](arg _mt[287461]:_MT[227], arg this[287459]:list[287241](?), param arg tag[286250]:iterKind[697]) ref : _unknown[43] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[488187] "RVV" "temp"
    unknown call_tmp[690709] "maybe param" "maybe type" "temp"
    (690712 'move' call_tmp[690709](379689 call _size _mt[232] this[287459]))
    const osz[286263] "const" "insert auto destroy"
    (497085 'init var' osz[286263] call_tmp[690709])
    const minChunkSize[286268] "const" "insert auto destroy"
    (497087 'init var' minChunkSize[286268] 64)
    unknown call_tmp[690714] "maybe param" "maybe type" "temp"
    (690717 'move' call_tmp[690714](286273 call <= osz[286263] minChunkSize[286268]))
    const hasOneChunk[286275] "const" "insert auto destroy"
    (497089 'init var' hasOneChunk[286275] call_tmp[690714])
    const numTasks[286287] "const" "insert auto destroy"
    unknown tmp[529055] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[529056] "maybe param" "temp"
    (529061 'move' tmp[529056](529059 call _cond_test hasOneChunk[286275]))
    if tmp[529056]
    {
      (529066 'move' tmp[529055](529063 '_paramFoldLogical' tmp[529056] 1))
    }
    {
      unknown tmp[529068] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690719] "expr temp" "maybe param" "maybe type" "temp"
      (690722 'move' call_tmp[690719](379695 call here[92085]))
      (529070 'move' tmp[529068](286281 call maxTaskPar _mt[232] call_tmp[690719]))
      (529075 'move' tmp[529055](529072 '_paramFoldLogical' tmp[529056] tmp[529068]))
    }
    (497091 'init var' numTasks[286287] tmp[529055])
    unknown call_tmp[690726] "expr temp" "maybe param" "maybe type" "temp"
    (690729 'move' call_tmp[690726](286293 call / osz[286263] numTasks[286287]))
    unknown call_tmp[690731] "expr temp" "maybe param" "maybe type" "temp"
    (690734 'move' call_tmp[690731](286296 call floor call_tmp[690726]))
    unknown call_tmp[690736] "maybe param" "maybe type" "temp"
    (690739 'move' call_tmp[690736](286298 call _cast int(64)[13] call_tmp[690731]))
    const chunkSize[286300] "const" "insert auto destroy"
    (497093 'init var' chunkSize[286300] call_tmp[690736])
    unknown call_tmp[690741] "expr temp" "maybe param" "maybe type" "temp"
    (690744 'move' call_tmp[690741](286306 call * chunkSize[286300] numTasks[286287]))
    unknown call_tmp[690746] "maybe param" "maybe type" "temp"
    (690749 'move' call_tmp[690746](286308 call - osz[286263] call_tmp[690741]))
    const trailing[286310] "const" "insert auto destroy"
    (497095 'init var' trailing[286310] call_tmp[690746])
    {
      unknown tmpIter[286378] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[690751] "expr temp" "maybe param" "maybe type" "temp"
      (690754 'move' call_tmp[690751](286315 call chpl_build_low_bounded_range 0))
      (286381 'move' tmpIter[286378](286318 call # call_tmp[690751] numTasks[286287]))
      unknown isRngDomArr[286568] "maybe param" "temp"
      unknown tmp[409917] "maybe param" "temp"
      (409928 'move' tmp[409917](286570 call isBoundedRange tmpIter[286378]))
      unknown call_tmp[690756] "expr temp" "maybe param" "maybe type" "temp"
      (690759 'move' call_tmp[690756](409930 call _cond_invalid tmp[409917]))
      if call_tmp[690756]
      {
        (409933 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[529109] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[529110] "maybe param" "temp"
      unknown call_tmp[690761] "expr temp" "maybe param" "maybe type" "temp"
      (690764 'move' call_tmp[690761](409918 call isTrue tmp[409917]))
      (529115 'move' tmp[529110](529113 call _cond_test call_tmp[690761]))
      if tmp[529110]
      {
        (529120 'move' tmp[529109](529117 '_paramFoldLogical' tmp[529110] 1))
      }
      {
        unknown tmp[409938] "maybe param" "temp"
        (409949 'move' tmp[409938](286573 call isDomain tmpIter[286378]))
        unknown call_tmp[690766] "expr temp" "maybe param" "maybe type" "temp"
        (690769 'move' call_tmp[690766](409951 call _cond_invalid tmp[409938]))
        if call_tmp[690766]
        {
          (409954 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[529082] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[529083] "maybe param" "temp"
        unknown call_tmp[690771] "expr temp" "maybe param" "maybe type" "temp"
        (690774 'move' call_tmp[690771](409939 call isTrue tmp[409938]))
        (529088 'move' tmp[529083](529086 call _cond_test call_tmp[690771]))
        if tmp[529083]
        {
          (529093 'move' tmp[529082](529090 '_paramFoldLogical' tmp[529083] 1))
        }
        {
          unknown tmp[529095] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[690776] "expr temp" "maybe param" "maybe type" "temp"
          (690779 'move' call_tmp[690776](286576 call isArray tmpIter[286378]))
          (529097 'move' tmp[529095](409943 call isTrue call_tmp[690776]))
          (529102 'move' tmp[529082](529099 '_paramFoldLogical' tmp[529083] tmp[529095]))
        }
        unknown tmp[529122] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (529124 'move' tmp[529122](409922 call isTrue tmp[529082]))
        (529129 'move' tmp[529109](529126 '_paramFoldLogical' tmp[529110] tmp[529122]))
      }
      (286583 'move' isRngDomArr[286568] tmp[529109])
      if isRngDomArr[286568]
      {
        const _coforallCount[286435] "const" "end count" "temp"
        (286504 'move' _coforallCount[286435](286501 call _endCountAlloc 1))
        unknown numTasks[286436] "temp"
        (286488 'move' numTasks[286436](286484 call size _mt[232] tmpIter[286378]))
        (286479 call _upEndCount _coforallCount[286435] 1 numTasks[286436])
        (286476 call chpl_resetTaskSpawn numTasks[286436])
        unknown _indexOfInterest[286443] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[286444] "expr temp" "temp"
        (286453 'move' _iterator[286444](286451 call _getIterator tmpIter[286378]))
        Defer
        {
          {
            (286469 call _freeIterator _iterator[286444])
          }
        }
        { scopeless type
          (286458 'move' _indexOfInterest[286443](286455 call iteratorIndex _iterator[286444]))
        }
        ForLoop
        {
          unknown tid[286462] "coforall index var" "index var" "insert auto destroy"
          (286464 'move' tid[286462] _indexOfInterest[286443])
          {
            {
              unknown call_tmp[690785] "maybe param" "maybe type" "temp"
              (690788 'move' call_tmp[690785](286386 call(379716 call (partial) _computeChunk _mt[232] this[287459]) tid[286462] chunkSize[286300] trailing[286310]))
              unknown chunk[286384] "insert auto destroy"
              (497097 'init var' chunk[286384] call_tmp[690785])
              {
                unknown _indexOfInterest[286392] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[286394] "expr temp" "temp"
                unknown call_tmp[690790] "expr temp" "maybe param" "maybe type" "temp"
                (690793 'move' call_tmp[690790](286401 call chunk[286384] 1))
                (286396 'move' _iterator[286394](286399 call _getIterator call_tmp[690790]))
                Defer
                {
                  {
                    (286405 call _freeIterator _iterator[286394])
                  }
                }
                { scopeless type
                  (286409 'move' _indexOfInterest[286392](286412 call iteratorIndex _iterator[286394]))
                }
                ForLoop
                {
                  unknown i[286417] "index var" "insert auto destroy"
                  (286419 'move' i[286417] _indexOfInterest[286392])
                  unknown yret[488191] "YVV" "temp"
                  unknown call_tmp[690795] "expr temp" "maybe param" "maybe type" "temp"
                  (690798 'move' call_tmp[690795](286427 call + i[286417] 1))
                  unknown call_tmp[690800] "expr temp" "maybe param" "maybe type" "temp"
                  (690803 'move' call_tmp[690800](286425 call this[287459] call_tmp[690795]))
                  (488194 'move' yret[488191](488193 'addr of' call_tmp[690800]))
                  (488196 yield yret[488191])
                  label _continueLabel[286430]
                  _indexOfInterest[286392]
                  _iterator[286394]
                }
                label _breakLabel[286432]
              }
            }
            (286438 call _downEndCount _coforallCount[286435] nil[38])
            (286437 'coforall loop')
          }
          label _continueLabel[286448]
          _indexOfInterest[286443]
          _iterator[286444]
        }
        label _breakLabel[286449]
        Defer
        {
          {
            (286491 call _endCountFree _coforallCount[286435])
          }
        }
        (286496 call _waitEndCount _coforallCount[286435] 1 numTasks[286436])
      }
      {
        const _coforallCount[286508] "const" "end count" "temp"
        (286565 'move' _coforallCount[286508](286562 call _endCountAlloc 1))
        unknown _indexOfInterest[286516] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[286517] "expr temp" "temp"
        (286526 'move' _iterator[286517](286524 call _getIterator tmpIter[286378]))
        Defer
        {
          {
            (286542 call _freeIterator _iterator[286517])
          }
        }
        { scopeless type
          (286531 'move' _indexOfInterest[286516](286528 call iteratorIndex _iterator[286517]))
        }
        ForLoop
        {
          unknown tid[286535] "coforall index var" "index var" "insert auto destroy"
          (286537 'move' tid[286535] _indexOfInterest[286516])
          (286549 call _upEndCount _coforallCount[286508] 1)
          {
            {
              unknown call_tmp[690807] "maybe param" "maybe type" "temp"
              (690810 'move' call_tmp[690807](286325 call(379706 call (partial) _computeChunk _mt[232] this[287459]) tid[286535] chunkSize[286300] trailing[286310]))
              unknown chunk[286326] "insert auto destroy"
              (497099 'init var' chunk[286326] call_tmp[690807])
              {
                unknown _indexOfInterest[286344] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[286345] "expr temp" "temp"
                unknown call_tmp[690812] "expr temp" "maybe param" "maybe type" "temp"
                (690815 'move' call_tmp[690812](286334 call chunk[286326] 1))
                (286354 'move' _iterator[286345](286352 call _getIterator call_tmp[690812]))
                Defer
                {
                  {
                    (286371 call _freeIterator _iterator[286345])
                  }
                }
                { scopeless type
                  (286360 'move' _indexOfInterest[286344](286357 call iteratorIndex _iterator[286345]))
                }
                ForLoop
                {
                  unknown i[286364] "index var" "insert auto destroy"
                  (286366 'move' i[286364] _indexOfInterest[286344])
                  unknown yret[488198] "YVV" "temp"
                  unknown call_tmp[690817] "expr temp" "maybe param" "maybe type" "temp"
                  (690820 'move' call_tmp[690817](286338 call + i[286364] 1))
                  unknown call_tmp[690822] "expr temp" "maybe param" "maybe type" "temp"
                  (690825 'move' call_tmp[690822](286341 call this[287459] call_tmp[690817]))
                  (488201 'move' yret[488198](488200 'addr of' call_tmp[690822]))
                  (488203 yield yret[488198])
                  label _continueLabel[286349]
                  _indexOfInterest[286344]
                  _iterator[286345]
                }
                label _breakLabel[286350]
              }
            }
            (286511 call _downEndCount _coforallCount[286508] nil[38])
            (286510 'coforall loop')
          }
          label _continueLabel[286521]
          _indexOfInterest[286516]
          _iterator[286517]
        }
        label _breakLabel[286522]
        Defer
        {
          {
            (286553 call _endCountFree _coforallCount[286508])
          }
        }
        (286558 call _waitEndCount _coforallCount[286508] 1)
      }
    }
    (488189 return ret[488187])
  }
  where {
    (286260 call == tag[286250] standalone[695])
  }
  function list[287241](?)._computeChunk[286594](arg _mt[287465]:_MT[227], arg this[287463]:list[287241](?), arg tid[286592]:_any[170](?), arg chunkSize[286596]:_any[170](?), arg trailing[286598]:_any[170](?)) : _unknown[43] "method" "primary method" "no doc"
  {
    unknown ret[488207] "RVV" "temp"
    unknown lo[286600] "insert auto destroy"
    (497101 'init var' lo[286600] 0)
    unknown hi[286604] "insert auto destroy"
    (497103 'init var' hi[286604] lo[286600])
    unknown call_tmp[690827] "expr temp" "maybe param" "maybe type" "temp"
    (690830 'move' call_tmp[690827](286611 call <= tid[286592] 0))
    unknown call_tmp[690832] "expr temp" "maybe param" "maybe type" "temp"
    (690835 'move' call_tmp[690832](286653 call _cond_test call_tmp[690827]))
    if call_tmp[690832]
    {
      (286615 call = lo[286600] 0)
      unknown call_tmp[690837] "expr temp" "maybe param" "maybe type" "temp"
      (690840 'move' call_tmp[690837](286622 call + chunkSize[286596] trailing[286598]))
      unknown call_tmp[690842] "expr temp" "maybe param" "maybe type" "temp"
      (690845 'move' call_tmp[690842](286625 call - call_tmp[690837] 1))
      (286627 call = hi[286604] call_tmp[690842])
    }
    {
      unknown call_tmp[690847] "expr temp" "maybe param" "maybe type" "temp"
      (690850 'move' call_tmp[690847](286633 call * chunkSize[286596] tid[286592]))
      unknown call_tmp[690852] "expr temp" "maybe param" "maybe type" "temp"
      (690855 'move' call_tmp[690852](286636 call + call_tmp[690847] trailing[286598]))
      (286638 call = lo[286600] call_tmp[690852])
      unknown call_tmp[690857] "expr temp" "maybe param" "maybe type" "temp"
      (690860 'move' call_tmp[690857](286645 call + lo[286600] chunkSize[286596]))
      unknown call_tmp[690862] "expr temp" "maybe param" "maybe type" "temp"
      (690865 'move' call_tmp[690862](286648 call - call_tmp[690857] 1))
      (286650 call = hi[286604] call_tmp[690862])
    }
    unknown call_tmp[690867] "expr temp" "maybe param" "maybe type" "temp"
    (690870 'move' call_tmp[690867](286659 call chpl_build_bounded_range lo[286600] hi[286604]))
    unknown call_tmp[690872] "expr temp" "maybe param" "maybe type" "temp"
    (690875 'move' call_tmp[690872](286661 call _build_tuple call_tmp[690867]))
    (488212 'move' ret[488207](488211 'deref' call_tmp[690872]))
    (488209 return ret[488207])
  }
  function list[287241](?).these[286671](arg _mt[287469]:_MT[227], arg this[287467]:list[287241](?), param arg tag[286669]:_any[170](?)) ref : _unknown[43] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[488216] "RVV" "temp"
    unknown call_tmp[690879] "maybe param" "maybe type" "temp"
    (690882 'move' call_tmp[690879](379744 call _size _mt[232] this[287467]))
    const osz[286681] "const" "insert auto destroy"
    (497105 'init var' osz[286681] call_tmp[690879])
    const minChunkSize[286686] "const" "insert auto destroy"
    (497107 'init var' minChunkSize[286686] 32)
    unknown call_tmp[690884] "maybe param" "maybe type" "temp"
    (690887 'move' call_tmp[690884](286691 call <= osz[286681] minChunkSize[286686]))
    const hasOneChunk[286693] "const" "insert auto destroy"
    (497109 'init var' hasOneChunk[286693] call_tmp[690884])
    const numTasks[286702] "const" "insert auto destroy"
    unknown tmp[529136] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[529137] "maybe param" "temp"
    (529142 'move' tmp[529137](529140 call _cond_test hasOneChunk[286693]))
    if tmp[529137]
    {
      (529147 'move' tmp[529136](529144 '_paramFoldLogical' tmp[529137] 1))
    }
    {
      (529152 'move' tmp[529136](529149 '_paramFoldLogical' tmp[529137] dataParTasksPerLocale[92471]))
    }
    (497111 'init var' numTasks[286702] tmp[529136])
    unknown call_tmp[690889] "expr temp" "maybe param" "maybe type" "temp"
    (690892 'move' call_tmp[690889](286708 call / osz[286681] numTasks[286702]))
    unknown call_tmp[690894] "expr temp" "maybe param" "maybe type" "temp"
    (690897 'move' call_tmp[690894](286711 call floor call_tmp[690889]))
    unknown call_tmp[690899] "maybe param" "maybe type" "temp"
    (690902 'move' call_tmp[690899](286713 call _cast int(64)[13] call_tmp[690894]))
    const chunkSize[286715] "const" "insert auto destroy"
    (497113 'init var' chunkSize[286715] call_tmp[690899])
    unknown call_tmp[690904] "expr temp" "maybe param" "maybe type" "temp"
    (690907 'move' call_tmp[690904](286721 call * chunkSize[286715] numTasks[286702]))
    unknown call_tmp[690909] "maybe param" "maybe type" "temp"
    (690912 'move' call_tmp[690909](286723 call - osz[286681] call_tmp[690904]))
    const trailing[286725] "const" "insert auto destroy"
    (497115 'init var' trailing[286725] call_tmp[690909])
    {
      unknown tmpIter[286748] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[690914] "expr temp" "maybe param" "maybe type" "temp"
      (690917 'move' call_tmp[690914](286730 call chpl_build_low_bounded_range 0))
      (286751 'move' tmpIter[286748](286733 call # call_tmp[690914] numTasks[286702]))
      unknown isRngDomArr[286897] "maybe param" "temp"
      unknown tmp[409959] "maybe param" "temp"
      (409970 'move' tmp[409959](286899 call isBoundedRange tmpIter[286748]))
      unknown call_tmp[690919] "expr temp" "maybe param" "maybe type" "temp"
      (690922 'move' call_tmp[690919](409972 call _cond_invalid tmp[409959]))
      if call_tmp[690919]
      {
        (409975 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[529186] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[529187] "maybe param" "temp"
      unknown call_tmp[690924] "expr temp" "maybe param" "maybe type" "temp"
      (690927 'move' call_tmp[690924](409960 call isTrue tmp[409959]))
      (529192 'move' tmp[529187](529190 call _cond_test call_tmp[690924]))
      if tmp[529187]
      {
        (529197 'move' tmp[529186](529194 '_paramFoldLogical' tmp[529187] 1))
      }
      {
        unknown tmp[409980] "maybe param" "temp"
        (409991 'move' tmp[409980](286902 call isDomain tmpIter[286748]))
        unknown call_tmp[690929] "expr temp" "maybe param" "maybe type" "temp"
        (690932 'move' call_tmp[690929](409993 call _cond_invalid tmp[409980]))
        if call_tmp[690929]
        {
          (409996 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[529159] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[529160] "maybe param" "temp"
        unknown call_tmp[690934] "expr temp" "maybe param" "maybe type" "temp"
        (690937 'move' call_tmp[690934](409981 call isTrue tmp[409980]))
        (529165 'move' tmp[529160](529163 call _cond_test call_tmp[690934]))
        if tmp[529160]
        {
          (529170 'move' tmp[529159](529167 '_paramFoldLogical' tmp[529160] 1))
        }
        {
          unknown tmp[529172] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[690939] "expr temp" "maybe param" "maybe type" "temp"
          (690942 'move' call_tmp[690939](286905 call isArray tmpIter[286748]))
          (529174 'move' tmp[529172](409985 call isTrue call_tmp[690939]))
          (529179 'move' tmp[529159](529176 '_paramFoldLogical' tmp[529160] tmp[529172]))
        }
        unknown tmp[529199] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (529201 'move' tmp[529199](409964 call isTrue tmp[529159]))
        (529206 'move' tmp[529186](529203 '_paramFoldLogical' tmp[529187] tmp[529199]))
      }
      (286912 'move' isRngDomArr[286897] tmp[529186])
      if isRngDomArr[286897]
      {
        const _coforallCount[286764] "const" "end count" "temp"
        (286833 'move' _coforallCount[286764](286830 call _endCountAlloc 1))
        unknown numTasks[286765] "temp"
        (286817 'move' numTasks[286765](286813 call size _mt[232] tmpIter[286748]))
        (286808 call _upEndCount _coforallCount[286764] 1 numTasks[286765])
        (286805 call chpl_resetTaskSpawn numTasks[286765])
        unknown _indexOfInterest[286772] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[286773] "expr temp" "temp"
        (286782 'move' _iterator[286773](286780 call _getIterator tmpIter[286748]))
        Defer
        {
          {
            (286798 call _freeIterator _iterator[286773])
          }
        }
        { scopeless type
          (286787 'move' _indexOfInterest[286772](286784 call iteratorIndex _iterator[286773]))
        }
        ForLoop
        {
          unknown tid[286791] "coforall index var" "index var" "insert auto destroy"
          (286793 'move' tid[286791] _indexOfInterest[286772])
          {
            {
              unknown call_tmp[690948] "maybe param" "maybe type" "temp"
              (690951 'move' call_tmp[690948](286756 call(379766 call (partial) _computeChunk _mt[232] this[287467]) tid[286791] chunkSize[286715] trailing[286725]))
              unknown chunk[286754] "insert auto destroy"
              (497117 'init var' chunk[286754] call_tmp[690948])
              unknown yret[488220] "YVV" "temp"
              (488223 'move' yret[488220](488222 'addr of' chunk[286754]))
              (488225 yield yret[488220])
            }
            (286767 call _downEndCount _coforallCount[286764] nil[38])
            (286766 'coforall loop')
          }
          label _continueLabel[286777]
          _indexOfInterest[286772]
          _iterator[286773]
        }
        label _breakLabel[286778]
        Defer
        {
          {
            (286820 call _endCountFree _coforallCount[286764])
          }
        }
        (286825 call _waitEndCount _coforallCount[286764] 1 numTasks[286765])
      }
      {
        const _coforallCount[286837] "const" "end count" "temp"
        (286894 'move' _coforallCount[286837](286891 call _endCountAlloc 1))
        unknown _indexOfInterest[286845] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[286846] "expr temp" "temp"
        (286855 'move' _iterator[286846](286853 call _getIterator tmpIter[286748]))
        Defer
        {
          {
            (286871 call _freeIterator _iterator[286846])
          }
        }
        { scopeless type
          (286860 'move' _indexOfInterest[286845](286857 call iteratorIndex _iterator[286846]))
        }
        ForLoop
        {
          unknown tid[286864] "coforall index var" "index var" "insert auto destroy"
          (286866 'move' tid[286864] _indexOfInterest[286845])
          (286878 call _upEndCount _coforallCount[286837] 1)
          {
            {
              unknown call_tmp[690955] "maybe param" "maybe type" "temp"
              (690958 'move' call_tmp[690955](286740 call(379758 call (partial) _computeChunk _mt[232] this[287467]) tid[286864] chunkSize[286715] trailing[286725]))
              unknown chunk[286741] "insert auto destroy"
              (497119 'init var' chunk[286741] call_tmp[690955])
              unknown yret[488227] "YVV" "temp"
              (488230 'move' yret[488227](488229 'addr of' chunk[286741]))
              (488232 yield yret[488227])
            }
            (286840 call _downEndCount _coforallCount[286837] nil[38])
            (286839 'coforall loop')
          }
          label _continueLabel[286850]
          _indexOfInterest[286845]
          _iterator[286846]
        }
        label _breakLabel[286851]
        Defer
        {
          {
            (286882 call _endCountFree _coforallCount[286837])
          }
        }
        (286887 call _waitEndCount _coforallCount[286837] 1)
      }
    }
    (488218 return ret[488216])
  }
  where {
    (286678 call == tag[286669] leader[691])
  }
  function list[287241](?).these[286923](arg _mt[287473]:_MT[227], arg this[287471]:list[287241](?), param arg tag[286921]:_any[170](?), arg followThis[286925]:_any[170](?)) ref : _unknown[43] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[488236] "RVV" "temp"
    {
      unknown _indexOfInterest[286948] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[286949] "expr temp" "temp"
      unknown call_tmp[690960] "expr temp" "maybe param" "maybe type" "temp"
      (690963 'move' call_tmp[690960](286938 call followThis[286925] 1))
      (286958 'move' _iterator[286949](286956 call _getIterator call_tmp[690960]))
      Defer
      {
        {
          (286975 call _freeIterator _iterator[286949])
        }
      }
      { scopeless type
        (286964 'move' _indexOfInterest[286948](286961 call iteratorIndex _iterator[286949]))
      }
      ForLoop
      {
        unknown i[286968] "index var" "insert auto destroy"
        (286970 'move' i[286968] _indexOfInterest[286948])
        unknown yret[488240] "YVV" "temp"
        unknown call_tmp[690965] "expr temp" "maybe param" "maybe type" "temp"
        (690968 'move' call_tmp[690965](286942 call + i[286968] 1))
        unknown call_tmp[690970] "expr temp" "maybe param" "maybe type" "temp"
        (690973 'move' call_tmp[690970](286945 call this[287471] call_tmp[690965]))
        (488243 'move' yret[488240](488242 'addr of' call_tmp[690970]))
        (488245 yield yret[488240])
        label _continueLabel[286953]
        _indexOfInterest[286948]
        _iterator[286949]
      }
      label _breakLabel[286954]
    }
    (488238 return ret[488236])
  }
  where {
    (286932 call == tag[286921] follower[693])
  }
  function list[287241](?).readWriteThis[286992](arg _mt[287477]:_MT[227], arg this[287475]:list[287241](?), arg ch[286989]:channel[225339](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (286996 call(379780 call (partial) _enter _mt[232] this[287475]))
    (287001 call <~> ch[286989] "[")
    {
      unknown _indexOfInterest[287023] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[287024] "expr temp" "temp"
      unknown call_tmp[690979] "expr temp" "maybe param" "maybe type" "temp"
      (690982 'move' call_tmp[690979](379792 call _size _mt[232] this[287475]))
      unknown call_tmp[690984] "expr temp" "maybe param" "maybe type" "temp"
      (690987 'move' call_tmp[690984](287038 call - call_tmp[690979] 1))
      unknown call_tmp[690989] "expr temp" "maybe param" "maybe type" "temp"
      (690992 'move' call_tmp[690989](287041 call chpl_direct_range_iter 1 call_tmp[690984] 1))
      (287033 'move' _iterator[287024](287031 call _getIterator call_tmp[690989]))
      Defer
      {
        {
          (287057 call _freeIterator _iterator[287024])
        }
      }
      { scopeless type
        (287046 'move' _indexOfInterest[287023](287043 call iteratorIndex _iterator[287024]))
      }
      ForLoop
      {
        unknown i[287050] "index var" "insert auto destroy"
        (287052 'move' i[287050] _indexOfInterest[287023])
        unknown call_tmp[690996] "expr temp" "maybe param" "maybe type" "temp"
        (690999 'move' call_tmp[690996](287016 call(379786 call (partial) _getRef _mt[232] this[287475]) i[287050]))
        unknown call_tmp[691001] "expr temp" "maybe param" "maybe type" "temp"
        (691004 'move' call_tmp[691001](287017 call <~> ch[286989] call_tmp[690996]))
        (287020 call <~> call_tmp[691001] ", ")
        label _continueLabel[287028]
        _indexOfInterest[287023]
        _iterator[287024]
      }
      label _breakLabel[287029]
    }
    unknown call_tmp[691008] "expr temp" "maybe param" "maybe type" "temp"
    (691011 'move' call_tmp[691008](379797 call _size _mt[232] this[287475]))
    unknown call_tmp[691013] "expr temp" "maybe param" "maybe type" "temp"
    (691016 'move' call_tmp[691013](287066 call > call_tmp[691008] 0))
    unknown call_tmp[691018] "expr temp" "maybe param" "maybe type" "temp"
    (691021 'move' call_tmp[691018](287076 call _cond_test call_tmp[691013]))
    if call_tmp[691018]
    {
      unknown call_tmp[691027] "expr temp" "maybe param" "maybe type" "temp"
      (691030 'move' call_tmp[691027](379807 call _size _mt[232] this[287475]))
      unknown call_tmp[691032] "expr temp" "maybe param" "maybe type" "temp"
      (691035 'move' call_tmp[691032](287072 call(379802 call (partial) _getRef _mt[232] this[287475]) call_tmp[691027]))
      (287073 call <~> ch[286989] call_tmp[691032])
    }
    (287083 call <~> ch[286989] "]")
    (287088 call(379812 call (partial) _leave _mt[232] this[287475]))
    (488247 return _void[47])
  }
  function list[287241](?).isEmpty[287094](arg _mt[287481]:_MT[227], const arg this[287479]:list[287241](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[488251] "RVV" "temp"
    (287099 call(379816 call (partial) _enter _mt[232] this[287479]))
    unknown call_tmp[691043] "expr temp" "maybe param" "maybe type" "temp"
    (691046 'move' call_tmp[691043](379821 call _size _mt[232] this[287479]))
    unknown call_tmp[691048] "maybe param" "maybe type" "temp"
    (691051 'move' call_tmp[691048](287104 call == call_tmp[691043] 0))
    unknown result[287106] "insert auto destroy"
    (497121 'init var' result[287106] call_tmp[691048])
    (287111 call(379825 call (partial) _leave _mt[232] this[287479]))
    (488257 'move' ret[488251](488256 'coerce' result[287106] bool[10]))
    (488253 return ret[488251])
  }
  { scopeless type
    bool[10]
  }
  function list[287241](?).size[287121](arg _mt[287485]:_MT[227], const arg this[287483]:list[287241](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    unknown ret[488261] "RVV" "temp"
    unknown result[287124] "insert auto destroy"
    (497123 'init var' result[287124] 0)
    {
      const tmp[287146] "const" "temp"
      unknown call_tmp[691055] "expr temp" "maybe param" "maybe type" "temp"
      (691058 'move' call_tmp[691055](287143 '_wide_get_locale' this[287483]))
      (287147 'move' tmp[287146](287144 'deref' call_tmp[691055]))
      {
        (287131 call(379831 call (partial) _enter _mt[232] this[287483]))
        unknown call_tmp[691064] "expr temp" "maybe param" "maybe type" "temp"
        (691067 'move' call_tmp[691064](379837 call _size _mt[232] this[287483]))
        (287136 call = result[287124] call_tmp[691064])
        (287141 call(379841 call (partial) _leave _mt[232] this[287483]))
      }
    }
    (488266 'move' ret[488261](488265 'deref' result[287124]))
    (488263 return ret[488261])
  }
  function list[287241](?).toArray[287158](arg _mt[287489]:_MT[227], const arg this[287487]:list[287241](?)) : _unknown[43] "method" "primary method"
  {
    unknown ret[488270] "RVV" "temp"
    unknown result[287174] "insert auto destroy"
    unknown call_tmp[691073] "expr temp" "maybe param" "maybe type" "temp"
    (691076 'move' call_tmp[691073](379852 call _size _mt[232] this[287487]))
    unknown call_tmp[691078] "expr temp" "maybe param" "maybe type" "temp"
    (691081 'move' call_tmp[691078](287166 call chpl_build_bounded_range 1 call_tmp[691073]))
    unknown call_tmp[691083] "expr temp" "maybe param" "maybe type" "temp"
    (691086 'move' call_tmp[691083](287170 call chpl__ensureDomainExpr call_tmp[691078]))
    unknown call_tmp[691090] "expr temp" "maybe param" "maybe type" "temp"
    (691093 'move' call_tmp[691090](379857 call eltType _mt[232] this[287487]))
    unknown call_tmp[691095] "expr temp" "maybe param" "maybe type" "temp"
    (691098 'move' call_tmp[691095](287172 call chpl__buildArrayRuntimeType call_tmp[691083] call_tmp[691090]))
    (497125 'default init var' result[287174] call_tmp[691095])
    {
      const tmp[287229] "const" "temp"
      unknown call_tmp[691100] "expr temp" "maybe param" "maybe type" "temp"
      (691103 'move' call_tmp[691100](287226 '_wide_get_locale' this[287487]))
      (287230 'move' tmp[287229](287227 'deref' call_tmp[691100]))
      {
        (287181 call(379862 call (partial) _enter _mt[232] this[287487]))
        unknown tmp[287194] "insert auto destroy"
        unknown call_tmp[691109] "expr temp" "maybe param" "maybe type" "temp"
        (691112 'move' call_tmp[691109](379867 call _size _mt[232] this[287487]))
        unknown call_tmp[691114] "expr temp" "maybe param" "maybe type" "temp"
        (691117 'move' call_tmp[691114](287186 call chpl_build_bounded_range 1 call_tmp[691109]))
        unknown call_tmp[691119] "expr temp" "maybe param" "maybe type" "temp"
        (691122 'move' call_tmp[691119](287190 call chpl__ensureDomainExpr call_tmp[691114]))
        unknown call_tmp[691126] "expr temp" "maybe param" "maybe type" "temp"
        (691129 'move' call_tmp[691126](379872 call eltType _mt[232] this[287487]))
        unknown call_tmp[691131] "expr temp" "maybe param" "maybe type" "temp"
        (691134 'move' call_tmp[691131](287192 call chpl__buildArrayRuntimeType call_tmp[691119] call_tmp[691126]))
        (497127 'default init var' tmp[287194] call_tmp[691131])
        unknown call_tmp[691138] "expr temp" "maybe param" "maybe type" "temp"
        (691141 'move' call_tmp[691138](379877 call _size _mt[232] this[287487]))
        unknown call_tmp[691143] "expr temp" "maybe param" "maybe type" "temp"
        (691146 'move' call_tmp[691143](287200 call chpl_build_bounded_range 1 call_tmp[691138]))
        Forall {
          induction variables:
            
            unknown i[287214] "index var" "insert auto destroy"
          iterated expressions:
            call_tmp[691143]
          shadow variables:
          forall body
          {
            unknown call_tmp[691148] "expr temp" "maybe param" "maybe type" "temp"
            (691151 'move' call_tmp[691148](287205 call tmp[287194] i[287214]))
            unknown call_tmp[691155] "expr temp" "maybe param" "maybe type" "temp"
            (691158 'move' call_tmp[691155](287209 call(379883 call (partial) _getRef _mt[232] this[287487]) i[287214]))
            (287210 call = call_tmp[691148] call_tmp[691155])
          }
        }
        (287219 call = result[287174] tmp[287194])
        (287224 call(379890 call (partial) _leave _mt[232] this[287487]))
      }
    }
    unknown call_tmp[691164] "expr temp" "maybe param" "maybe type" "temp"
    (691167 'move' call_tmp[691164](488276 call eltType _mt[232] this[287487]))
    (488279 call chpl__checkEltTypeMatch result[287174] call_tmp[691164])
    (488281 'move' ret[488270] result[287174])
    (488272 return ret[488270])
  }
  type list[287241](?) unknown eltType[282116] "type variable" unknown parSafe[282120] "param" 0 val _size[282124]:int(64)[13] "no doc" 0 unknown _lock$[282136] "no doc"(282133 IfExpr  parSafe[282120] then
  { scopeless
    (691678 'new' anymanaged _LockWrapper[378271](?))
  } else
  { scopeless
    none[49]
  } ) unknown _arrays[282147] "no doc" nil[38](282145 call _ddata[11791](?)(282143 call _ddata[11791](?) eltType[282116])) val _arrayCapacity[282151]:int(64)[13] "no doc" 0 val _totalCapacity[282155]:int(64)[13] "no doc" 0
  function =[287503](ref arg lhs[287500]:list[287241](?), arg rhs[287510]:list[287241](?)) : _unknown[43] "assignop" "compiler added where" "no return value for void"
  {
    (287518 call(287514 call (partial) clear _mt[232] lhs[287500]))
    (287529 call(287524 call (partial) extend _mt[232] lhs[287500]) rhs[287510])
    (488283 return _void[47])
  }
  where {
    unknown call_tmp[691173] "expr temp" "maybe param" "maybe type" "temp"
    (691176 'move' call_tmp[691173](442537 'query' lhs[287500] 1))
    unknown call_tmp[691178] "expr temp" "maybe param" "maybe type" "temp"
    (691181 'move' call_tmp[691178](442534 'query' rhs[287510] 1))
    unknown call_tmp[691183] "expr temp" "maybe param" "maybe type" "temp"
    (691186 'move' call_tmp[691183](442540 call == call_tmp[691173] call_tmp[691178]))
    (442544 call & 1 call_tmp[691183])
  }
  function ==[287544](arg a[287541]:list[287241](?), arg b[287551]:list[287241](?)) : _unknown[43] "compiler added where"
  {
    unknown ret[488287] "RVV" "temp"
    unknown call_tmp[691190] "expr temp" "maybe param" "maybe type" "temp"
    (691193 'move' call_tmp[691190](287556 call size _mt[232] a[287541]))
    unknown call_tmp[691197] "expr temp" "maybe param" "maybe type" "temp"
    (691200 'move' call_tmp[691197](287560 call size _mt[232] b[287551]))
    unknown call_tmp[691202] "expr temp" "maybe param" "maybe type" "temp"
    (691205 'move' call_tmp[691202](287563 call != call_tmp[691190] call_tmp[691197]))
    unknown call_tmp[691207] "expr temp" "maybe param" "maybe type" "temp"
    (691210 'move' call_tmp[691207](287568 call _cond_test call_tmp[691202]))
    if call_tmp[691207]
    {
      (488293 'move' ret[488287](488292 'coerce' 0 bool[10]))
      gotoReturn _end_==[488285] _end_==[488285]
    }
    {
      unknown _indexOfInterest[287600] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[287601] "expr temp" "temp"
      unknown call_tmp[691214] "expr temp" "maybe param" "maybe type" "temp"
      (691217 'move' call_tmp[691214](287615 call size _mt[232] a[287541]))
      unknown call_tmp[691219] "expr temp" "maybe param" "maybe type" "temp"
      (691222 'move' call_tmp[691219](287618 call chpl_direct_range_iter 1 call_tmp[691214] 1))
      (287610 'move' _iterator[287601](287608 call _getIterator call_tmp[691219]))
      Defer
      {
        {
          (287634 call _freeIterator _iterator[287601])
        }
      }
      { scopeless type
        (287623 'move' _indexOfInterest[287600](287620 call iteratorIndex _iterator[287601]))
      }
      ForLoop
      {
        unknown i[287627] "index var" "insert auto destroy"
        (287629 'move' i[287627] _indexOfInterest[287600])
        unknown call_tmp[691224] "expr temp" "maybe param" "maybe type" "temp"
        (691227 'move' call_tmp[691224](287585 call a[287541] i[287627]))
        unknown call_tmp[691229] "expr temp" "maybe param" "maybe type" "temp"
        (691232 'move' call_tmp[691229](287589 call b[287551] i[287627]))
        unknown call_tmp[691234] "expr temp" "maybe param" "maybe type" "temp"
        (691237 'move' call_tmp[691234](287590 call != call_tmp[691224] call_tmp[691229]))
        unknown call_tmp[691239] "expr temp" "maybe param" "maybe type" "temp"
        (691242 'move' call_tmp[691239](287595 call _cond_test call_tmp[691234]))
        if call_tmp[691239]
        {
          (488299 'move' ret[488287](488298 'coerce' 0 bool[10]))
          gotoReturn _end_==[488285] _end_==[488285]
        }
        label _continueLabel[287605]
        _indexOfInterest[287600]
        _iterator[287601]
      }
      label _breakLabel[287606]
    }
    (488305 'move' ret[488287](488304 'coerce' 1 bool[10]))
    label _end_==[488285]
    (488289 return ret[488287])
  }
  where {
    unknown call_tmp[691244] "expr temp" "maybe param" "maybe type" "temp"
    (691247 'move' call_tmp[691244](442573 'query' a[287541] 1))
    unknown call_tmp[691249] "expr temp" "maybe param" "maybe type" "temp"
    (691252 'move' call_tmp[691249](442570 'query' b[287551] 1))
    unknown call_tmp[691254] "expr temp" "maybe param" "maybe type" "temp"
    (691257 'move' call_tmp[691254](442576 call == call_tmp[691244] call_tmp[691249]))
    (442580 call & 1 call_tmp[691254])
  }
  { scopeless type
    bool[10]
  }
  function !=[287658](arg a[287655]:list[287241](?), arg b[287665]:list[287241](?)) : _unknown[43] "compiler added where"
  {
    unknown ret[488309] "RVV" "temp"
    unknown call_tmp[691259] "expr temp" "maybe param" "maybe type" "temp"
    (691262 'move' call_tmp[691259](287671 call == a[287655] b[287665]))
    unknown call_tmp[691264] "expr temp" "maybe param" "maybe type" "temp"
    (691267 'move' call_tmp[691264](287673 call ! call_tmp[691259]))
    (488315 'move' ret[488309](488314 'coerce' call_tmp[691264] bool[10]))
    (488311 return ret[488309])
  }
  where {
    unknown call_tmp[691269] "expr temp" "maybe param" "maybe type" "temp"
    (691272 'move' call_tmp[691269](442609 'query' a[287655] 1))
    unknown call_tmp[691274] "expr temp" "maybe param" "maybe type" "temp"
    (691277 'move' call_tmp[691274](442606 'query' b[287665] 1))
    unknown call_tmp[691279] "expr temp" "maybe param" "maybe type" "temp"
    (691282 'move' call_tmp[691279](442612 call == call_tmp[691269] call_tmp[691274]))
    (442616 call & 1 call_tmp[691279])
  }
  { scopeless type
    bool[10]
  }
  (329828 'used modules list'(328374 'use' ChapelStandard[19734])(282017 'use' Sort[251417])(282022 'use' ChapelLocks[180347] 'only' ))
}