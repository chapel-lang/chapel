AST dump for LocaleModelHelpFlat after pass flattenClasses.
Module use list: LocaleModelHelpSetup LocaleModelHelpRuntime 

{
  unknown localeModelHasSublocales[180486] "param" 0
  function chpl_doDirectExecuteOn[180504](arg loc[180501] :
  chpl_localeID_t[197056]) : _unknown[43] "export" "local args"
  {
    const node[180511] "const"(180510 call chpl_nodeFromLocaleID loc[180501])
    (180519 return(180517 call == node[180511] chpl_nodeID[195933]))
  }
  { scopeless type
    bool[10]
  }
  function chpl_executeOn[180530](arg loc[180527] :
  chpl_localeID_t[197056], arg fn[180533] :
  int(64)[13], arg args[180537] :
  chpl_comm_on_bundle_p[197079], arg args_size[180541] :
  size_t[209674]) : _unknown[43] "export" "insert line file info" "local args" "no return value for void"
  {
    const node[180548] "const"(180547 call chpl_nodeFromLocaleID loc[180527])
    if(180591 call _cond_test(180554 call == node[180548] chpl_nodeID[195933]))
    {
      (180560 call chpl_ftable_call fn[180533] args[180537])
    }
    {
      unknown tls[180566](180565 call chpl_task_getChapelData)
      (180577 call chpl_task_data_setup(180574 call chpl_comm_on_bundle_task_bundle args[180537]) tls[180566])
      (180589 call chpl_comm_execute_on node[180548](180585 call chpl_sublocFromLocaleID loc[180527]) fn[180533] args[180537] args_size[180541])
    }
  }
  function chpl_executeOnFast[180603](arg loc[180600] :
  chpl_localeID_t[197056], arg fn[180606] :
  int(64)[13], arg args[180610] :
  chpl_comm_on_bundle_p[197079], arg args_size[180614] :
  size_t[209674]) : _unknown[43] "export" "insert line file info" "local args" "no return value for void"
  {
    const node[180621] "const"(180620 call chpl_nodeFromLocaleID loc[180600])
    if(180664 call _cond_test(180627 call == node[180621] chpl_nodeID[195933]))
    {
      (180633 call chpl_ftable_call fn[180606] args[180610])
    }
    {
      unknown tls[180639](180638 call chpl_task_getChapelData)
      (180650 call chpl_task_data_setup(180647 call chpl_comm_on_bundle_task_bundle args[180610]) tls[180639])
      (180662 call chpl_comm_execute_on_fast node[180621](180658 call chpl_sublocFromLocaleID loc[180600]) fn[180606] args[180610] args_size[180614])
    }
  }
  function chpl_executeOnNB[180676](arg loc[180673] :
  chpl_localeID_t[197056], arg fn[180679] :
  int(64)[13], arg args[180683] :
  chpl_comm_on_bundle_p[197079], arg args_size[180687] :
  size_t[209674]) : _unknown[43] "export" "insert line file info" "local args" "no return value for void"
  {
    const node[180694] "const"(180693 call chpl_nodeFromLocaleID loc[180673])
    unknown tls[180701](180700 call chpl_task_getChapelData)
    unknown isSerial[180708](180707 call chpl_task_data_getSerial tls[180701])
    if(180781 call _cond_test(180713 call == node[180694] chpl_nodeID[195933]))
    {
      if(180741 call _cond_test isSerial[180708])
      {
        (180720 call chpl_ftable_call fn[180679] args[180683])
      }
      {
        (180730 call chpl_task_data_setup(180727 call chpl_comm_on_bundle_task_bundle args[180683]) tls[180701])
        (180739 call chpl_comm_taskCallFTable fn[180679] args[180683] args_size[180687] c_sublocid_any[90220])
      }
    }
    {
      (180753 call chpl_task_data_setup(180750 call chpl_comm_on_bundle_task_bundle args[180683]) tls[180701])
      if(180777 call _cond_test isSerial[180708])
      {
        (180764 call chpl_comm_execute_on node[180694] c_sublocid_any[90220] fn[180679] args[180683] args_size[180687])
      }
      {
        (180774 call chpl_comm_execute_on_nb node[180694] c_sublocid_any[90220] fn[180679] args[180683] args_size[180687])
      }
    }
  }
  (329467 'used modules list'(180492 'use' LocaleModelHelpSetup[195901])(180496 'use' LocaleModelHelpRuntime[197048]))
}