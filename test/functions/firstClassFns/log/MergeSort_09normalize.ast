AST dump for MergeSort after pass normalize.
Module use list: ChapelStandard InsertionSort 

{
  function chpl__init_MergeSort[390366]() : void[4] "insert line file info" "module init"
  {
    (486850 return _void[47])
  }
  function mergeSort[254697](arg Data[254694]:_array[133150](?), arg minlen[254700] :
  16 =
  16, arg comparator[254706]:_any[170](?) :
  defaultComparator[251428] =
  defaultComparator[251428]) : _unknown[43] "no return value for void"
  {
    unknown call_tmp[680264] "expr temp" "maybe param" "maybe type" "temp"
    (680267 'move' call_tmp[680264](441261 call eltType _mt[232] Data[254694]))
    (254714 call chpl_check_comparator comparator[254706] call_tmp[680264])
    unknown call_tmp[680271] "expr temp" "maybe param" "maybe type" "temp"
    (680274 'move' call_tmp[680271](441249 call _dom _mt[232] Data[254694]))
    unknown call_tmp[680278] "expr temp" "maybe param" "maybe type" "temp"
    (680281 'move' call_tmp[680278](254718 call rank _mt[232] call_tmp[680271]))
    unknown call_tmp[680283] "expr temp" "maybe param" "maybe type" "temp"
    (680286 'move' call_tmp[680283](254722 call != call_tmp[680278] 1))
    unknown call_tmp[680288] "expr temp" "maybe param" "maybe type" "temp"
    (680291 'move' call_tmp[680288](254745 call _cond_test call_tmp[680283]))
    if call_tmp[680288]
    {
      (254742 call compilerError "mergeSort() requires 1-D array")
    }
    unknown call_tmp[680295] "expr temp" "maybe param" "maybe type" "temp"
    (680298 'move' call_tmp[680295](441253 call _dom _mt[232] Data[254694]))
    unknown call_tmp[680302] "expr temp" "maybe param" "maybe type" "temp"
    (680305 'move' call_tmp[680302](254753 call alignedLow _mt[232] call_tmp[680295]))
    unknown call_tmp[680309] "expr temp" "maybe param" "maybe type" "temp"
    (680312 'move' call_tmp[680309](441257 call _dom _mt[232] Data[254694]))
    unknown call_tmp[680316] "expr temp" "maybe param" "maybe type" "temp"
    (680319 'move' call_tmp[680316](254757 call alignedHigh _mt[232] call_tmp[680309]))
    (254762 call _MergeSort Data[254694] call_tmp[680302] call_tmp[680316] minlen[254700] comparator[254706])
    (486840 return _void[47])
  }
  function _MergeSort[254777](arg Data[254774]:_array[133150](?), arg lo[254780]:int(64)[13], arg hi[254784]:int(64)[13], arg minlen[254788] :
  16 =
  16, arg comparator[254794]:_any[170](?) :
  defaultComparator[251428] =
  defaultComparator[251428]) : _unknown[43] "private" "no return value for void"
  {
    unknown call_tmp[680321] "expr temp" "maybe param" "maybe type" "temp"
    (680324 'move' call_tmp[680321](254807 call - hi[254784] lo[254780]))
    unknown call_tmp[680326] "expr temp" "maybe param" "maybe type" "temp"
    (680329 'move' call_tmp[680326](254810 call < call_tmp[680321] minlen[254788]))
    unknown call_tmp[680331] "expr temp" "maybe param" "maybe type" "temp"
    (680334 'move' call_tmp[680331](254827 call _cond_test call_tmp[680326]))
    if call_tmp[680331]
    {
      (254822 call insertionSort module=[244] InsertionSort[253899] Data[254774](comparator = comparator[254794]) lo[254780] hi[254784])
      gotoReturn _end__MergeSort[486842] _end__MergeSort[486842]
    }
    const stride[254847] "const" "insert auto destroy"
    unknown tmp[526941] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[526942] "maybe param" "temp"
    unknown call_tmp[680338] "expr temp" "maybe param" "maybe type" "temp"
    (680341 'move' call_tmp[680338](441267 call _dom _mt[232] Data[254774]))
    unknown call_tmp[680345] "expr temp" "maybe param" "maybe type" "temp"
    (680348 'move' call_tmp[680345](254833 call stridable _mt[232] call_tmp[680338]))
    (526947 'move' tmp[526942](526945 call _cond_test call_tmp[680345]))
    if tmp[526942]
    {
      unknown tmp[526949] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680352] "expr temp" "maybe param" "maybe type" "temp"
      (680355 'move' call_tmp[680352](441271 call _dom _mt[232] Data[254774]))
      unknown call_tmp[680359] "expr temp" "maybe param" "maybe type" "temp"
      (680362 'move' call_tmp[680359](254838 call stride _mt[232] call_tmp[680352]))
      (526951 'move' tmp[526949](254842 call abs call_tmp[680359]))
      (526956 'move' tmp[526941](526953 '_paramFoldLogical' tmp[526942] tmp[526949]))
    }
    {
      (526961 'move' tmp[526941](526958 '_paramFoldLogical' tmp[526942] 1))
    }
    (496122 'init var' stride[254847] tmp[526941])
    unknown call_tmp[680364] "expr temp" "maybe param" "maybe type" "temp"
    (680367 'move' call_tmp[680364](254852 call - hi[254784] lo[254780]))
    unknown call_tmp[680369] "maybe param" "maybe type" "temp"
    (680372 'move' call_tmp[680369](254855 call / call_tmp[680364] stride[254847]))
    const size[254857] "const" "insert auto destroy"
    (496124 'init var' size[254857] call_tmp[680369])
    unknown call_tmp[680374] "expr temp" "maybe param" "maybe type" "temp"
    (680377 'move' call_tmp[680374](254863 call / size[254857] 2))
    unknown call_tmp[680379] "expr temp" "maybe param" "maybe type" "temp"
    (680382 'move' call_tmp[680379](254866 call * call_tmp[680374] stride[254847]))
    unknown call_tmp[680384] "maybe param" "maybe type" "temp"
    (680387 'move' call_tmp[680384](254868 call + lo[254780] call_tmp[680379]))
    const mid[254870] "const" "insert auto destroy"
    (496126 'init var' mid[254870] call_tmp[680384])
    unknown call_tmp[680389] "expr temp" "maybe param" "maybe type" "temp"
    (680392 'move' call_tmp[680389](373790 call here[92085]))
    unknown call_tmp[680396] "expr temp" "maybe param" "maybe type" "temp"
    (680399 'move' call_tmp[680396](254878 call(254874 call (partial) runningTasks _mt[232] call_tmp[680389])))
    unknown call_tmp[680401] "expr temp" "maybe param" "maybe type" "temp"
    (680404 'move' call_tmp[680401](373792 call here[92085]))
    unknown call_tmp[680408] "expr temp" "maybe param" "maybe type" "temp"
    (680411 'move' call_tmp[680408](254888 call(254882 call (partial) numPUs _mt[232] call_tmp[680401])(logical = 1)))
    unknown call_tmp[680413] "expr temp" "maybe param" "maybe type" "temp"
    (680416 'move' call_tmp[680413](254889 call < call_tmp[680396] call_tmp[680408]))
    unknown call_tmp[680418] "expr temp" "maybe param" "maybe type" "temp"
    (680421 'move' call_tmp[680418](254972 call _cond_test call_tmp[680413]))
    if call_tmp[680418]
    {
      {
        const _cobeginCount[254915] "const" "end count" "temp"
        (254936 'move' _cobeginCount[254915](254933 call _endCountAlloc 1))
        (254928 call _upEndCount _cobeginCount[254915] 1 2)
        {
          {
            (254898 call _MergeSort Data[254774] lo[254780] mid[254870] minlen[254788] comparator[254794])
          }
          (254918 call _downEndCount _cobeginCount[254915] nil[38])
          (254917 'cobegin block')
        }
        {
          {
            unknown call_tmp[680423] "expr temp" "maybe param" "maybe type" "temp"
            (680426 'move' call_tmp[680423](254907 call + mid[254870] stride[254847]))
            (254912 call _MergeSort Data[254774] call_tmp[680423] hi[254784] minlen[254788] comparator[254794])
          }
          (254924 call _downEndCount _cobeginCount[254915] nil[38])
          (254923 'cobegin block')
        }
        Defer
        {
          {
            (254939 call _endCountFree _cobeginCount[254915])
          }
        }
        (254944 call _waitEndCount _cobeginCount[254915] 1 2)
      }
    }
    {
      (254957 call _MergeSort Data[254774] lo[254780] mid[254870] minlen[254788] comparator[254794])
      unknown call_tmp[680428] "expr temp" "maybe param" "maybe type" "temp"
      (680431 'move' call_tmp[680428](254965 call + mid[254870] stride[254847]))
      (254970 call _MergeSort Data[254774] call_tmp[680428] hi[254784] minlen[254788] comparator[254794])
    }
    (254983 call _Merge Data[254774] lo[254780] mid[254870] hi[254784] comparator[254794])
    label _end__MergeSort[486842]
    (486844 return _void[47])
  }
  where {
    unknown call_tmp[680435] "expr temp" "maybe param" "maybe type" "temp"
    (680438 'move' call_tmp[680435](441275 call _dom _mt[232] Data[254774]))
    unknown call_tmp[680442] "expr temp" "maybe param" "maybe type" "temp"
    (680445 'move' call_tmp[680442](254799 call rank _mt[232] call_tmp[680435]))
    (254803 call == call_tmp[680442] 1)
  }
  function _Merge[255000](arg Data[254997]:_array[133150](?), arg lo[255003]:int(64)[13], arg mid[255007]:int(64)[13], arg hi[255011]:int(64)[13], arg comparator[255017]:_any[170](?) :
  defaultComparator[251428] =
  defaultComparator[251428]) : _unknown[43] "private" "no return value for void"
  {
    const stride[255036] "const" "insert auto destroy"
    unknown tmp[526968] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[526969] "maybe param" "temp"
    unknown call_tmp[680449] "expr temp" "maybe param" "maybe type" "temp"
    (680452 'move' call_tmp[680449](441281 call _dom _mt[232] Data[254997]))
    unknown call_tmp[680456] "expr temp" "maybe param" "maybe type" "temp"
    (680459 'move' call_tmp[680456](255022 call stridable _mt[232] call_tmp[680449]))
    (526974 'move' tmp[526969](526972 call _cond_test call_tmp[680456]))
    if tmp[526969]
    {
      unknown tmp[526976] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680463] "expr temp" "maybe param" "maybe type" "temp"
      (680466 'move' call_tmp[680463](441285 call _dom _mt[232] Data[254997]))
      unknown call_tmp[680470] "expr temp" "maybe param" "maybe type" "temp"
      (680473 'move' call_tmp[680470](255027 call stride _mt[232] call_tmp[680463]))
      (526978 'move' tmp[526976](255031 call abs call_tmp[680470]))
      (526983 'move' tmp[526968](526980 '_paramFoldLogical' tmp[526969] tmp[526976]))
    }
    {
      (526988 'move' tmp[526968](526985 '_paramFoldLogical' tmp[526969] 1))
    }
    (496128 'init var' stride[255036] tmp[526968])
    unknown call_tmp[680475] "expr temp" "maybe param" "maybe type" "temp"
    (680478 'move' call_tmp[680475](255042 call chpl_build_bounded_range lo[255003] mid[255007]))
    unknown call_tmp[680480] "expr temp" "maybe param" "maybe type" "temp"
    (680483 'move' call_tmp[680480](255045 call chpl_by call_tmp[680475] stride[255036]))
    unknown call_tmp[680487] "maybe param" "maybe type" "temp"
    (680490 'move' call_tmp[680487](255047 call size _mt[232] call_tmp[680480]))
    const a1size[255050] "const" "insert auto destroy"
    (496130 'init var' a1size[255050] call_tmp[680487])
    unknown A1[255090] "insert auto destroy"
    unknown tmp[526995] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[526996] "maybe param" "temp"
    unknown call_tmp[680494] "expr temp" "maybe param" "maybe type" "temp"
    (680497 'move' call_tmp[680494](441289 call _dom _mt[232] Data[254997]))
    unknown call_tmp[680501] "expr temp" "maybe param" "maybe type" "temp"
    (680504 'move' call_tmp[680501](255067 call stridable _mt[232] call_tmp[680494]))
    (527001 'move' tmp[526996](526999 call _cond_test call_tmp[680501]))
    if tmp[526996]
    {
      unknown tmp[527003] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680506] "expr temp" "maybe param" "maybe type" "temp"
      (680509 'move' call_tmp[680506](255073 call chpl_build_bounded_range lo[255003] mid[255007]))
      unknown call_tmp[680511] "expr temp" "maybe param" "maybe type" "temp"
      (680514 'move' call_tmp[680511](255076 call chpl_by call_tmp[680506] stride[255036]))
      (527005 'move' tmp[527003](255079 call Data[254997] call_tmp[680511]))
      (527010 'move' tmp[526995](527007 '_paramFoldLogical' tmp[526996] tmp[527003]))
    }
    {
      unknown tmp[527012] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680516] "expr temp" "maybe param" "maybe type" "temp"
      (680519 'move' call_tmp[680516](255083 call chpl_build_bounded_range lo[255003] mid[255007]))
      (527014 'move' tmp[527012](255086 call Data[254997] call_tmp[680516]))
      (527019 'move' tmp[526995](527016 '_paramFoldLogical' tmp[526996] tmp[527012]))
    }
    unknown call_tmp[680521] "expr temp" "maybe param" "maybe type" "temp"
    (680524 'move' call_tmp[680521](255055 call chpl_build_bounded_range 1 a1size[255050]))
    unknown call_tmp[680526] "expr temp" "maybe param" "maybe type" "temp"
    (680529 'move' call_tmp[680526](255062 call chpl__ensureDomainExpr call_tmp[680521]))
    unknown call_tmp[680533] "expr temp" "maybe param" "maybe type" "temp"
    (680536 'move' call_tmp[680533](255059 call eltType _mt[232] Data[254997]))
    unknown call_tmp[680538] "maybe param" "maybe type" "temp"
    (680541 'move' call_tmp[680538](255064 call chpl__buildArrayRuntimeType call_tmp[680526] call_tmp[680533]))
    (496132 'init var' A1[255090] tmp[526995] call_tmp[680538])
    unknown call_tmp[680543] "expr temp" "maybe param" "maybe type" "temp"
    (680546 'move' call_tmp[680543](255095 call + mid[255007] stride[255036]))
    unknown call_tmp[680548] "expr temp" "maybe param" "maybe type" "temp"
    (680551 'move' call_tmp[680548](255098 call chpl_build_bounded_range call_tmp[680543] hi[255011]))
    unknown call_tmp[680553] "expr temp" "maybe param" "maybe type" "temp"
    (680556 'move' call_tmp[680553](255101 call chpl_by call_tmp[680548] stride[255036]))
    unknown call_tmp[680560] "maybe param" "maybe type" "temp"
    (680563 'move' call_tmp[680560](255103 call size _mt[232] call_tmp[680553]))
    const a2size[255106] "const" "insert auto destroy"
    (496134 'init var' a2size[255106] call_tmp[680560])
    unknown A2[255152] "insert auto destroy"
    unknown tmp[527026] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[527027] "maybe param" "temp"
    unknown call_tmp[680567] "expr temp" "maybe param" "maybe type" "temp"
    (680570 'move' call_tmp[680567](441293 call _dom _mt[232] Data[254997]))
    unknown call_tmp[680574] "expr temp" "maybe param" "maybe type" "temp"
    (680577 'move' call_tmp[680574](255123 call stridable _mt[232] call_tmp[680567]))
    (527032 'move' tmp[527027](527030 call _cond_test call_tmp[680574]))
    if tmp[527027]
    {
      unknown tmp[527034] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680579] "expr temp" "maybe param" "maybe type" "temp"
      (680582 'move' call_tmp[680579](255129 call + mid[255007] stride[255036]))
      unknown call_tmp[680584] "expr temp" "maybe param" "maybe type" "temp"
      (680587 'move' call_tmp[680584](255132 call chpl_build_bounded_range call_tmp[680579] hi[255011]))
      unknown call_tmp[680589] "expr temp" "maybe param" "maybe type" "temp"
      (680592 'move' call_tmp[680589](255135 call chpl_by call_tmp[680584] stride[255036]))
      (527036 'move' tmp[527034](255138 call Data[254997] call_tmp[680589]))
      (527041 'move' tmp[527026](527038 '_paramFoldLogical' tmp[527027] tmp[527034]))
    }
    {
      unknown tmp[527043] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680594] "expr temp" "maybe param" "maybe type" "temp"
      (680597 'move' call_tmp[680594](255142 call + mid[255007] 1))
      unknown call_tmp[680599] "expr temp" "maybe param" "maybe type" "temp"
      (680602 'move' call_tmp[680599](255145 call chpl_build_bounded_range call_tmp[680594] hi[255011]))
      (527045 'move' tmp[527043](255148 call Data[254997] call_tmp[680599]))
      (527050 'move' tmp[527026](527047 '_paramFoldLogical' tmp[527027] tmp[527043]))
    }
    unknown call_tmp[680604] "expr temp" "maybe param" "maybe type" "temp"
    (680607 'move' call_tmp[680604](255111 call chpl_build_bounded_range 1 a2size[255106]))
    unknown call_tmp[680609] "expr temp" "maybe param" "maybe type" "temp"
    (680612 'move' call_tmp[680609](255118 call chpl__ensureDomainExpr call_tmp[680604]))
    unknown call_tmp[680616] "expr temp" "maybe param" "maybe type" "temp"
    (680619 'move' call_tmp[680616](255115 call eltType _mt[232] Data[254997]))
    unknown call_tmp[680621] "maybe param" "maybe type" "temp"
    (680624 'move' call_tmp[680621](255120 call chpl__buildArrayRuntimeType call_tmp[680609] call_tmp[680616]))
    (496136 'init var' A2[255152] tmp[527026] call_tmp[680621])
    unknown a1[255156] "insert auto destroy"
    (496138 'init var' a1[255156] 1)
    unknown a2[255160] "insert auto destroy"
    (496140 'init var' a2[255160] 1)
    unknown i[255164] "insert auto destroy"
    (496142 'init var' i[255164] lo[255003])
    {
      unknown tmp[255241] "temp"
      unknown tmp[408615] "maybe param" "temp"
      (408626 'move' tmp[408615](255270 call <= a1[255156] a1size[255050]))
      unknown call_tmp[680626] "expr temp" "maybe param" "maybe type" "temp"
      (680629 'move' call_tmp[680626](408628 call _cond_invalid tmp[408615]))
      if call_tmp[680626]
      {
        (408631 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[527057] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[527058] "maybe param" "temp"
      unknown call_tmp[680631] "expr temp" "maybe param" "maybe type" "temp"
      (680634 'move' call_tmp[680631](408616 call isTrue tmp[408615]))
      (527063 'move' tmp[527058](527061 call _cond_test call_tmp[680631]))
      if tmp[527058]
      {
        unknown tmp[527065] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[680636] "expr temp" "maybe param" "maybe type" "temp"
        (680639 'move' call_tmp[680636](255274 call <= a2[255160] a2size[255106]))
        (527067 'move' tmp[527065](408619 call isTrue call_tmp[680636]))
        (527072 'move' tmp[527057](527069 '_paramFoldLogical' tmp[527058] tmp[527065]))
      }
      {
        (527077 'move' tmp[527057](527074 '_paramFoldLogical' tmp[527058] 0))
      }
      (255277 'move' tmp[255241](255266 call _cond_test tmp[527057]))
      WhileDo
      {
        {
          unknown call_tmp[680641] "expr temp" "maybe param" "maybe type" "temp"
          (680644 'move' call_tmp[680641](255181 call A1[255090] a1[255156]))
          unknown call_tmp[680646] "expr temp" "maybe param" "maybe type" "temp"
          (680649 'move' call_tmp[680646](255186 call A2[255152] a2[255160]))
          unknown call_tmp[680651] "expr temp" "maybe param" "maybe type" "temp"
          (680654 'move' call_tmp[680651](255188 call chpl_compare call_tmp[680641] call_tmp[680646] comparator[255017]))
          unknown call_tmp[680656] "expr temp" "maybe param" "maybe type" "temp"
          (680659 'move' call_tmp[680656](255190 call <= call_tmp[680651] 0))
          unknown call_tmp[680661] "expr temp" "maybe param" "maybe type" "temp"
          (680664 'move' call_tmp[680661](255236 call _cond_test call_tmp[680656]))
          if call_tmp[680661]
          {
            unknown call_tmp[680666] "expr temp" "maybe param" "maybe type" "temp"
            (680669 'move' call_tmp[680666](255195 call Data[254997] i[255164]))
            unknown call_tmp[680671] "expr temp" "maybe param" "maybe type" "temp"
            (680674 'move' call_tmp[680671](255199 call A1[255090] a1[255156]))
            (255200 call = call_tmp[680666] call_tmp[680671])
            (255206 call += a1[255156] 1)
            (255211 call += i[255164] stride[255036])
          }
          {
            unknown call_tmp[680676] "expr temp" "maybe param" "maybe type" "temp"
            (680679 'move' call_tmp[680676](255217 call Data[254997] i[255164]))
            unknown call_tmp[680681] "expr temp" "maybe param" "maybe type" "temp"
            (680684 'move' call_tmp[680681](255221 call A2[255152] a2[255160]))
            (255222 call = call_tmp[680676] call_tmp[680681])
            (255228 call += a2[255160] 1)
            (255233 call += i[255164] stride[255036])
          }
        }
        label _continueLabel[255244]
        unknown tmp[408594] "maybe param" "temp"
        (408605 'move' tmp[408594](255254 call <= a1[255156] a1size[255050]))
        unknown call_tmp[680686] "expr temp" "maybe param" "maybe type" "temp"
        (680689 'move' call_tmp[680686](408607 call _cond_invalid tmp[408594]))
        if call_tmp[680686]
        {
          (408610 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[527084] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[527085] "maybe param" "temp"
        unknown call_tmp[680691] "expr temp" "maybe param" "maybe type" "temp"
        (680694 'move' call_tmp[680691](408595 call isTrue tmp[408594]))
        (527090 'move' tmp[527085](527088 call _cond_test call_tmp[680691]))
        if tmp[527085]
        {
          unknown tmp[527092] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[680696] "expr temp" "maybe param" "maybe type" "temp"
          (680699 'move' call_tmp[680696](255258 call <= a2[255160] a2size[255106]))
          (527094 'move' tmp[527092](408598 call isTrue call_tmp[680696]))
          (527099 'move' tmp[527084](527096 '_paramFoldLogical' tmp[527085] tmp[527092]))
        }
        {
          (527104 'move' tmp[527084](527101 '_paramFoldLogical' tmp[527085] 0))
        }
        (255261 'move' tmp[255241](255250 call _cond_test tmp[527084]))
        tmp[255241]
      }
      label _breakLabel[255245]
    }
    {
      unknown tmp[255306] "temp"
      unknown call_tmp[680701] "expr temp" "maybe param" "maybe type" "temp"
      (680704 'move' call_tmp[680701](255327 call <= a1[255156] a1size[255050]))
      (255330 'move' tmp[255306](255325 call _cond_test call_tmp[680701]))
      WhileDo
      {
        {
          unknown call_tmp[680706] "expr temp" "maybe param" "maybe type" "temp"
          (680709 'move' call_tmp[680706](255287 call Data[254997] i[255164]))
          unknown call_tmp[680711] "expr temp" "maybe param" "maybe type" "temp"
          (680714 'move' call_tmp[680711](255291 call A1[255090] a1[255156]))
          (255292 call = call_tmp[680706] call_tmp[680711])
          (255298 call += a1[255156] 1)
          (255303 call += i[255164] stride[255036])
        }
        label _continueLabel[255309]
        unknown call_tmp[680716] "expr temp" "maybe param" "maybe type" "temp"
        (680719 'move' call_tmp[680716](255317 call <= a1[255156] a1size[255050]))
        (255320 'move' tmp[255306](255315 call _cond_test call_tmp[680716]))
        tmp[255306]
      }
      label _breakLabel[255310]
    }
    {
      unknown tmp[255359] "temp"
      unknown call_tmp[680721] "expr temp" "maybe param" "maybe type" "temp"
      (680724 'move' call_tmp[680721](255380 call <= a2[255160] a2size[255106]))
      (255383 'move' tmp[255359](255378 call _cond_test call_tmp[680721]))
      WhileDo
      {
        {
          unknown call_tmp[680726] "expr temp" "maybe param" "maybe type" "temp"
          (680729 'move' call_tmp[680726](255340 call Data[254997] i[255164]))
          unknown call_tmp[680731] "expr temp" "maybe param" "maybe type" "temp"
          (680734 'move' call_tmp[680731](255344 call A2[255152] a2[255160]))
          (255345 call = call_tmp[680726] call_tmp[680731])
          (255351 call += a2[255160] 1)
          (255356 call += i[255164] stride[255036])
        }
        label _continueLabel[255362]
        unknown call_tmp[680736] "expr temp" "maybe param" "maybe type" "temp"
        (680739 'move' call_tmp[680736](255370 call <= a2[255160] a2size[255106]))
        (255373 'move' tmp[255359](255368 call _cond_test call_tmp[680736]))
        tmp[255359]
      }
      label _breakLabel[255363]
    }
    (486848 return _void[47])
  }
  (329603 'used modules list'(328340 'use' ChapelStandard[19734]))
}