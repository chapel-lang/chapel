AST dump for AtomicsCommon after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[390168]() : void[4] "insert line file info" "module init"
  {
    (458236 return _void[47])
  }
  function atomic_refcnt[54760].inc[54621](arg _mt[54764]:_MT[227], arg this[54762]:atomic_refcnt[54760], arg cnt[54618] :
  1 =
  1) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[558994] "expr temp" "maybe param" "maybe type" "temp"
    (558997 'move' call_tmp[558994](54645 call _cond_test CHPL_CACHE_REMOTE[342]))
    if call_tmp[558994]
    {
      unknown call_tmp[559001] "expr temp" "maybe param" "maybe type" "temp"
      (559004 'move' call_tmp[559001](339673 call _cnt _mt[232] this[54762]))
      (54635 call(54625 call (partial) add _mt[232] call_tmp[559001]) cnt[54618](order = relaxed[180097]))
    }
    {
      unknown call_tmp[559010] "expr temp" "maybe param" "maybe type" "temp"
      (559013 'move' call_tmp[559010](339680 call _cnt _mt[232] this[54762]))
      (54643 call(54638 call (partial) add _mt[232] call_tmp[559010]) cnt[54618])
    }
    (458192 return _void[47])
  }
  function atomic_refcnt[54760].dec[54656](arg _mt[54768]:_MT[227], arg this[54766]:atomic_refcnt[54760]) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[458196] "RVV" "temp"
    unknown got[54666] "insert auto destroy"
    unknown call_tmp[559017] "expr temp" "maybe param" "maybe type" "temp"
    (559020 'move' call_tmp[559017](54665 call int(64)[13] 64))
    (489366 'default init var' got[54666] call_tmp[559017])
    unknown call_tmp[559022] "expr temp" "maybe param" "maybe type" "temp"
    (559025 'move' call_tmp[559022](54732 call _cond_test CHPL_CACHE_REMOTE[342]))
    if call_tmp[559022]
    {
      unknown call_tmp[559029] "expr temp" "maybe param" "maybe type" "temp"
      (559032 'move' call_tmp[559029](339688 call _cnt _mt[232] this[54766]))
      unknown call_tmp[559036] "expr temp" "maybe param" "maybe type" "temp"
      (559039 'move' call_tmp[559036](54683 call(54673 call (partial) fetchSub _mt[232] call_tmp[559029]) 1(order = release[180093])))
      (54684 call = got[54666] call_tmp[559036])
      unknown call_tmp[559041] "expr temp" "maybe param" "maybe type" "temp"
      (559044 'move' call_tmp[559041](54690 call == got[54666] 1))
      unknown call_tmp[559046] "expr temp" "maybe param" "maybe type" "temp"
      (559049 'move' call_tmp[559046](54704 call _cond_test call_tmp[559041]))
      if call_tmp[559046]
      {
        (54698 call atomicFence acquire[180095])
        unknown call_tmp[559051] "expr temp" "maybe param" "maybe type" "temp"
        (559054 'move' call_tmp[559051](458201 call int(64)[13] 64))
        (458204 'move' ret[458196](458203 'coerce' 0 call_tmp[559051]))
        gotoReturn _end_dec[458194] _end_dec[458194]
      }
      unknown call_tmp[559056] "expr temp" "maybe param" "maybe type" "temp"
      (559059 'move' call_tmp[559056](54710 call - got[54666] 1))
      unknown call_tmp[559061] "expr temp" "maybe param" "maybe type" "temp"
      (559064 'move' call_tmp[559061](458209 call int(64)[13] 64))
      (458212 'move' ret[458196](458211 'coerce' call_tmp[559056] call_tmp[559061]))
      gotoReturn _end_dec[458194] _end_dec[458194]
    }
    {
      unknown call_tmp[559068] "expr temp" "maybe param" "maybe type" "temp"
      (559071 'move' call_tmp[559068](339698 call _cnt _mt[232] this[54766]))
      unknown call_tmp[559075] "expr temp" "maybe param" "maybe type" "temp"
      (559078 'move' call_tmp[559075](54721 call(54716 call (partial) fetchSub _mt[232] call_tmp[559068]) 1))
      (54722 call = got[54666] call_tmp[559075])
      unknown call_tmp[559080] "expr temp" "maybe param" "maybe type" "temp"
      (559083 'move' call_tmp[559080](54728 call - got[54666] 1))
      unknown call_tmp[559085] "expr temp" "maybe param" "maybe type" "temp"
      (559088 'move' call_tmp[559085](458217 call int(64)[13] 64))
      (458220 'move' ret[458196](458219 'coerce' call_tmp[559080] call_tmp[559085]))
      gotoReturn _end_dec[458194] _end_dec[458194]
    }
    label _end_dec[458194]
    (458198 return ret[458196])
  }
  { scopeless type
    (54661 call int(64)[13] 64)
  }
  function atomic_refcnt[54760].read[54741](arg _mt[54772]:_MT[227], arg this[54770]:atomic_refcnt[54760]) : _unknown[43] "inline" "method" "primary method"
  {
    unknown ret[458226] "RVV" "temp"
    unknown call_tmp[559092] "expr temp" "maybe param" "maybe type" "temp"
    (559095 'move' call_tmp[559092](339704 call _cnt _mt[232] this[54770]))
    unknown call_tmp[559099] "expr temp" "maybe param" "maybe type" "temp"
    (559102 'move' call_tmp[559099](54752 call(54748 call (partial) read _mt[232] call_tmp[559092])))
    unknown call_tmp[559104] "expr temp" "maybe param" "maybe type" "temp"
    (559107 'move' call_tmp[559104](458231 call int(64)[13] 64))
    (458234 'move' ret[458226](458233 'coerce' call_tmp[559099] call_tmp[559104]))
    (458228 return ret[458226])
  }
  { scopeless type
    (54746 call int(64)[13] 64)
  }
  type atomic_refcnt[54760] unknown _cnt[54612](54611 call chpl__processorAtomicType int(64)[13])
  (329328 'used modules list'(54604 'use' ChapelStandard[19734]))
}