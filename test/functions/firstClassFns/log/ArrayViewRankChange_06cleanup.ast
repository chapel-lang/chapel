AST dump for ArrayViewRankChange after pass cleanup.
Module use list: 

{
  (184199 'use' ChapelStandard)
  function ArrayViewRankChangeDist[184422](?).downDist[184220](arg _mt[184426]:_MT[227], arg this[184424]:ArrayViewRankChangeDist[184422](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    if(184237 call _cond_test(184225 call _isPrivatized downDistInst))
    {
      (184232 return(184231 call chpl_getPrivatizedCopy(184228 'typeof' downDistInst) downDistPid))
    }
    {
      (184235 return downDistInst)
    }
  }
  function ArrayViewRankChangeDist[184422](?).dsiNewRectangularDom[184250](arg _mt[184430]:_MT[227], arg this[184428]:ArrayViewRankChangeDist[184422](?), param arg rank[184248]:_any[170](?), arg idxType[184252]:_any[170](?), param arg stridable[184254]:_any[170](?), arg inds[184256]:_any[170](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    unknown newdom[184283](184282 'new'(184281 'to unmanaged class from unknown'(184280 call ArrayViewRankChangeDom(rank = rank)(idxType = idxType)(stridable = stridable)(collapsedDim = collapsedDim)(idx = idx)(distPid =(184271 call . this c"pid"))(distInst =(184278 call _to_unmanaged this)))))
    (184293 call(184288 call . newdom c"dsiSetIndices") inds)
    (184296 return newdom)
  }
  function ArrayViewRankChangeDist[184422](?).dsiClone[184302](arg _mt[184434]:_MT[227], arg this[184432]:ArrayViewRankChangeDist[184422](?)) : _unknown[43] "method" "primary method"
  {
    (184327 return(184326 'new'(184325 'to unmanaged class from unknown'(184324 call ArrayViewRankChangeDist(downDistPid =(184308 call . this c"downDistPid"))(downDistInst =(184316 call . this c"downDistInst"))(collapsedDim = collapsedDim)(idx = idx)))))
  }
  function ArrayViewRankChangeDist[184422](?).dsiSupportsPrivatization[184334](arg _mt[184438]:_MT[227], arg this[184436]:ArrayViewRankChangeDist[184422](?)) param : _unknown[43] "method" "primary method"
  {
    (184342 return(184341 call(184337 call . downDistInst c"dsiSupportsPrivatization")))
  }
  function ArrayViewRankChangeDist[184422](?).dsiGetPrivatizeData[184349](arg _mt[184442]:_MT[227], arg this[184440]:ArrayViewRankChangeDist[184422](?)) : _unknown[43] "method" "primary method"
  {
    (184358 return(184356 call _build_tuple downDistPid downDistInst collapsedDim idx))
  }
  function ArrayViewRankChangeDist[184422](?).dsiPrivatize[184367](arg _mt[184446]:_MT[227], arg this[184444]:ArrayViewRankChangeDist[184422](?), arg privatizeData[184365]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    (184394 return(184393 'new'(184392 'to unmanaged class from unknown'(184391 call ArrayViewRankChangeDist(downDistPid =(184373 call privatizeData 1))(downDistInst =(184379 call privatizeData 2))(collapsedDim =(184384 call privatizeData 3))(idx =(184389 call privatizeData 4))))))
  }
  function ArrayViewRankChangeDist[184422](?).dsiDestroyDist[184401](arg _mt[184450]:_MT[227], arg this[184448]:ArrayViewRankChangeDist[184422](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
  }
  function ArrayViewRankChangeDist[184422](?).dsiIsLayout[184408](arg _mt[184454]:_MT[227], arg this[184452]:ArrayViewRankChangeDist[184422](?)) param : _unknown[43] "method" "primary method"
  {
    (184416 return(184415 call(184411 call . downDistInst c"dsiIsLayout")))
  }
  type ArrayViewRankChangeDist[184422](?) unknown downDistPid[184206] int[13] unknown downDistInst[184209] const collapsedDim[184212] "const" const idx[184215] "const" BaseDist
  function downDomType[184463](param arg rank[184460] :
  int[13], arg idxType[184465]:_any[170](?), param arg stridable[184468] :
  bool[10], arg dist[184471]:_any[170](?)) type : _unknown[43] "private"
  {
    unknown ranges[184485](184483 call * rank(184482 call range idxType(184478 call . BoundedRangeType c"bounded") stridable))
    unknown a[184506](184505 call(184495 call .(184492 call . dist c"downDist") c"dsiNewRectangularDom")(rank = rank) idxType(stridable = stridable) ranges)
    (184511 return(184510 'typeof' a))
  }
  function ArrayViewRankChangeDom[186101](?).chpl_forwarding_expr7_upDom[184531](arg _mt[186105]:_MT[227], arg this[186103]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (184533 return upDom)
  }
  function ArrayViewRankChangeDom[186101](?).dist[184551](arg _mt[186109]:_MT[227], arg this[186107]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    if(184568 call _cond_test(184556 call _isPrivatized distInst))
    {
      (184563 return(184562 call chpl_getPrivatizedCopy(184559 'typeof' distInst) distPid))
    }
    {
      (184566 return distInst)
    }
  }
  function ArrayViewRankChangeDom[186101](?).downrank[184597](arg _mt[186113]:_MT[227], arg this[186111]:ArrayViewRankChangeDom[186101](?)) param : _unknown[43] "method" "primary method" "no parens"
  {
    (184603 return(184600 call . collapsedDim c"size"))
  }
  function ArrayViewRankChangeDom[186101](?).upDom[184610](arg _mt[186117]:_MT[227], arg this[186115]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    (184615 return(184613 call postfix! upDomInst))
  }
  function ArrayViewRankChangeDom[186101](?).downDom[184622](arg _mt[186121]:_MT[227], arg this[186119]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    if(184645 call _cond_test(184629 call _isPrivatized(184626 call postfix! downDomInst)))
    {
      (184638 return(184637 call chpl_getPrivatizedCopy(184634 'typeof'(184632 call postfix! downDomInst)) downDomPid))
    }
    {
      (184643 return(184641 call postfix! downDomInst))
    }
  }
  function ArrayViewRankChangeDom[186101](?).dsiBuildArray[184658](arg _mt[186125]:_MT[227], arg this[186123]:ArrayViewRankChangeDom[186101](?), arg eltType[184656]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    const downarr[184670] "const" "no auto destroy"(184669 call _newArray(184667 call(184662 call . downDom c"dsiBuildArray") eltType))
    (184707 return(184706 'new'(184705 'to unmanaged class from unknown'(184704 call ArrayViewRankChangeArr(eltType = eltType)(_DomPid =(184679 call . this c"pid"))(dom =(184686 call _to_unmanaged this))(_ArrPid =(184689 call . downarr c"_pid"))(_ArrInstance =(184694 call . downarr c"_instance"))(collapsedDim = collapsedDim)(idx = idx)(ownsArrInstance = 1)))))
  }
  function ArrayViewRankChangeDom[186101](?).dsiSetIndices[184715](arg _mt[186129]:_MT[227], arg this[186127]:ArrayViewRankChangeDom[186101](?), arg inds[184713]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (184722 call(184718 call . this c"dsiDestroyDom"))
    unknown upDomRec[184730] "no auto destroy"(184728 call chpl__buildDomainExpr(184726 'expand_tuple' inds))
    (184738 call = upDomInst(184735 call . upDomRec c"_value"))
    unknown ranges[184753](184751 call * downrank(184750 call range idxType(184746 call . BoundedRangeType c"bounded") stridable))
    unknown downDomClass[184771](184770 call(184760 call .(184757 call . dist c"downDist") c"dsiNewRectangularDom")(rank = downrank) idxType(stridable = stridable) ranges)
    unknown downDomLoc[184779] "no auto destroy"(184778 'new'(184777 call _domain downDomClass))
    (184793 call = downDomLoc(184792 call chpl_rankChangeConvertDom inds(184787 call . inds c"size") collapsedDim idx))
    (184804 call =(184800 call .(184797 call . downDomLoc c"_value") c"_free_when_no_arrs") 1)
    (184812 call = downDomPid(184809 call . downDomLoc c"_pid"))
    (184820 call = downDomInst(184817 call . downDomLoc c"_instance"))
  }
  function ArrayViewRankChangeDom[186101](?).dsiAssignDomain[184831](arg _mt[186133]:_MT[227], arg this[186131]:ArrayViewRankChangeDom[186101](?), arg rhs[184828] :
  _domain, arg lhsPrivate[184834] :
  bool[10]) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (184841 call chpl_assignDomainWithGetSetIndices this rhs)
  }
  function ArrayViewRankChangeDom[186101](?).these[184848](arg _mt[186137]:_MT[227], arg this[186135]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(184935 call _cond_test(184853 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[184859] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[184860] "expr temp" "temp"
        (184869 'move' _iterator[184860](184867 call _getIterator upDom))
        Defer
        {
          {
            (184885 call _freeIterator _iterator[184860])
          }
        }
        { scopeless type
          (184874 'move' _indexOfInterest[184859](184871 call iteratorIndex _iterator[184860]))
        }
        ForLoop
        {
          unknown i[184878] "index var" "insert auto destroy"
          (184880 'move' i[184878] _indexOfInterest[184859])
          (184857 yield i)
          label _continueLabel[184864]
          _indexOfInterest[184859]
          _iterator[184860]
        }
        label _breakLabel[184865]
      }
    }
    {
      {
        unknown _indexOfInterest[184901] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[184902] "expr temp" "temp"
        (184911 'move' _iterator[184902](184909 call _getIterator downDom))
        Defer
        {
          {
            (184927 call _freeIterator _iterator[184902])
          }
        }
        { scopeless type
          (184916 'move' _indexOfInterest[184901](184913 call iteratorIndex _iterator[184902]))
        }
        ForLoop
        {
          unknown i[184920] "index var" "insert auto destroy"
          (184922 'move' i[184920] _indexOfInterest[184901])
          (184899 yield(184898 call downIdxToUpIdx i))
          label _continueLabel[184906]
          _indexOfInterest[184901]
          _iterator[184902]
        }
        label _breakLabel[184907]
      }
    }
  }
  function ArrayViewRankChangeDom[186101](?).these[184948](arg _mt[186141]:_MT[227], arg this[186139]:ArrayViewRankChangeDom[186101](?), param arg tag[184945] :
  iterKind) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[184982] "index var" "insert auto destroy"
      iterated expressions:
        upDom
      shadow variables:
      forall body
      {
        (184979 yield i)
      }
    }
  }
  where {
    (184974 call &&(184966 call &&(184960 call &&(184955 call == tag(184952 call . iterKind c"standalone"))(184958 call ! localeModelHasSublocales))(184965 call chpl__isDROrDRView downDom))(184973 'method call resolves' upDom "these" tag))
  }
  function ArrayViewRankChangeDom[186101](?).these[184995](arg _mt[186145]:_MT[227], arg this[186143]:ArrayViewRankChangeDom[186101](?), param arg tag[184992] :
  iterKind) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[185034] "index var" "insert auto destroy"
      iterated expressions:
        downDom
      shadow variables:
      forall body
      {
        (185031 yield(185030 call downIdxToUpIdx i))
      }
    }
  }
  where {
    (185023 call &&(185015 call &&(185007 call &&(185002 call == tag(184999 call . iterKind c"standalone"))(185005 call ! localeModelHasSublocales))(185013 call !(185012 call chpl__isDROrDRView downDom)))(185022 'method call resolves' downDom "these" tag))
  }
  function ArrayViewRankChangeDom[186101](?).these[185047](arg _mt[186149]:_MT[227], arg this[186147]:ArrayViewRankChangeDom[186101](?), param arg tag[185044] :
  iterKind) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(185160 call _cond_test(185059 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[185071] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[185072] "expr temp" "temp"
        (185081 'move' _iterator[185072](185079 call _getIterator(185067 call(185062 call . upDom c"these") tag)))
        Defer
        {
          {
            (185098 call _freeIterator _iterator[185072])
          }
        }
        { scopeless type
          (185087 'move' _indexOfInterest[185071](185084 call iteratorIndex _iterator[185072]))
        }
        ForLoop
        {
          unknown followThis[185091] "index var" "insert auto destroy"
          (185093 'move' followThis[185091] _indexOfInterest[185071])
          (185069 yield followThis)
          label _continueLabel[185076]
          _indexOfInterest[185071]
          _iterator[185072]
        }
        label _breakLabel[185077]
      }
    }
    {
      {
        unknown _indexOfInterest[185125] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[185126] "expr temp" "temp"
        (185135 'move' _iterator[185126](185133 call _getIterator(185113 call(185108 call . downDom c"these") tag)))
        Defer
        {
          {
            (185152 call _freeIterator _iterator[185126])
          }
        }
        { scopeless type
          (185141 'move' _indexOfInterest[185125](185138 call iteratorIndex _iterator[185126]))
        }
        ForLoop
        {
          unknown followThis[185145] "index var" "insert auto destroy"
          (185147 'move' followThis[185145] _indexOfInterest[185125])
          {
            const followThisLoD[185118] "const"(185117 call chpl_rankChangeConvertHiDTupleToLoD followThis)
            (185123 yield followThisLoD)
          }
          label _continueLabel[185130]
          _indexOfInterest[185125]
          _iterator[185126]
        }
        label _breakLabel[185131]
      }
    }
  }
  where {
    (185054 call == tag(185051 call . iterKind c"leader"))
  }
  function ArrayViewRankChangeDom[186101](?).these[185174](arg _mt[186153]:_MT[227], arg this[186151]:ArrayViewRankChangeDom[186101](?), param arg tag[185171] :
  iterKind, arg followThis[185176]:_any[170](?)) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(185297 call _cond_test(185188 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[185201] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[185202] "expr temp" "temp"
        (185211 'move' _iterator[185202](185209 call _getIterator(185197 call(185191 call . upDom c"these") tag followThis)))
        Defer
        {
          {
            (185228 call _freeIterator _iterator[185202])
          }
        }
        { scopeless type
          (185217 'move' _indexOfInterest[185201](185214 call iteratorIndex _iterator[185202]))
        }
        ForLoop
        {
          unknown i[185221] "index var" "insert auto destroy"
          (185223 'move' i[185221] _indexOfInterest[185201])
          (185199 yield i)
          label _continueLabel[185206]
          _indexOfInterest[185201]
          _iterator[185202]
        }
        label _breakLabel[185207]
      }
    }
    {
      const followThisHiD[185240] "const"(185239 call chpl_rankChangeConvertLoDTupleToHiD followThis)
      {
        unknown _indexOfInterest[185263] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[185264] "expr temp" "temp"
        (185273 'move' _iterator[185264](185271 call _getIterator(185252 call(185246 call . downDom c"these") tag followThisHiD)))
        Defer
        {
          {
            (185290 call _freeIterator _iterator[185264])
          }
        }
        { scopeless type
          (185279 'move' _indexOfInterest[185263](185276 call iteratorIndex _iterator[185264]))
        }
        ForLoop
        {
          unknown i[185283] "index var" "insert auto destroy"
          (185285 'move' i[185283] _indexOfInterest[185263])
          {
            (185260 yield(185259 call chpl_rankChangeConvertIdxHiDToLoD i collapsedDim idx rank))
          }
          label _continueLabel[185268]
          _indexOfInterest[185263]
          _iterator[185264]
        }
        label _breakLabel[185269]
      }
    }
  }
  where {
    (185183 call == tag(185180 call . iterKind c"follower"))
  }
  function ArrayViewRankChangeDom[186101](?).chpl_rankChangeConvertLoDTupleToHiD[185309](arg _mt[186157]:_MT[227], arg this[186155]:ArrayViewRankChangeDom[186101](?), arg tup[185307]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    unknown tupHiD[185319](185317 call * downrank(185316 'typeof'(185315 call tup 1)))
    unknown i[185324] 1
    {
      unknown d[185368] 0
      unknown tmp[185369] "maybe param" "temp"
      (185381 'move' tmp[185369](185379 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[185370] "maybe param" "temp"
      (185388 'move' tmp[185370](185386 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[185371] "maybe param" "temp"
      (185391 'move' tmp[185371] 1)
      ParamForLoop
      { d[185368] tmp[185369] tmp[185370] tmp[185371]
        if(185363 call _cond_test(185334 call collapsedDim d))
        {
          (185343 call =(185338 call tupHiD d)(185341 call chpl_build_bounded_range 0 0))
        }
        {
          (185354 call =(185349 call tupHiD d)(185353 call tup i))
          (185360 call += i 1)
        }
      }
      label _unused_continueLabel[185373]
      label _breakLabel[185372]
    }
    (185403 return tupHiD)
  }
  function ArrayViewRankChangeDom[186101](?).chpl_rankChangeConvertHiDTupleToLoD[185411](arg _mt[186161]:_MT[227], arg this[186159]:ArrayViewRankChangeDom[186101](?), arg tup[185409]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    unknown tupLoD[185421](185419 call * rank(185418 'typeof'(185417 call tup 1)))
    unknown i[185426] 1
    {
      unknown d[185460] 0
      unknown tmp[185461] "maybe param" "temp"
      (185473 'move' tmp[185461](185471 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[185462] "maybe param" "temp"
      (185480 'move' tmp[185462](185478 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[185463] "maybe param" "temp"
      (185483 'move' tmp[185463] 1)
      ParamForLoop
      { d[185460] tmp[185461] tmp[185462] tmp[185463]
        if(185456 call _cond_test(185437 call !(185436 call collapsedDim d)))
        {
          (185447 call =(185442 call tupLoD i)(185446 call tup d))
          (185453 call += i 1)
        }
      }
      label _unused_continueLabel[185465]
      label _breakLabel[185464]
    }
    (185495 return tupLoD)
  }
  function ArrayViewRankChangeDom[186101](?).downIdxToUpIdx[185503](arg _mt[186165]:_MT[227], arg this[186163]:ArrayViewRankChangeDom[186101](?), arg downIdx[185501]:_any[170](?)) : _unknown[43] "inline" "method" "primary method"
  {
    unknown upIdx[185509](185507 call * rank idxType)
    unknown upDim[185514] 1
    {
      unknown downDim[185549] 0
      unknown tmp[185550] "maybe param" "temp"
      (185562 'move' tmp[185550](185560 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[185551] "maybe param" "temp"
      (185569 'move' tmp[185551](185567 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[185552] "maybe param" "temp"
      (185572 'move' tmp[185552] 1)
      ParamForLoop
      { downDim[185549] tmp[185550] tmp[185551] tmp[185552]
        {
          if(185544 call _cond_test(185525 call !(185524 call collapsedDim downDim)))
          {
            (185535 call =(185530 call upIdx upDim)(185534 call downIdx downDim))
            (185541 call += upDim 1)
          }
        }
      }
      label _unused_continueLabel[185554]
      label _breakLabel[185553]
    }
    if(185596 call _cond_test(185585 call == rank 1))
    {
      (185591 return(185590 call upIdx 1))
    }
    {
      (185594 return upIdx)
    }
  }
  function ArrayViewRankChangeDom[186101](?).dsiSerialWrite[185608](arg _mt[186169]:_MT[227], arg this[186167]:ArrayViewRankChangeDom[186101](?), arg f[185606]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    unknown first[185611] 1
    {
      unknown _indexOfInterest[185664] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[185665] "expr temp" "temp"
      (185674 'move' _iterator[185665](185672 call _getIterator(185679 call chpl_direct_range_iter 1 downrank 1)))
      Defer
      {
        {
          (185695 call _freeIterator _iterator[185665])
        }
      }
      { scopeless type
        (185684 'move' _indexOfInterest[185664](185681 call iteratorIndex _iterator[185665]))
      }
      ForLoop
      {
        unknown d[185688] "index var" "insert auto destroy"
        (185690 'move' d[185688] _indexOfInterest[185664])
        if(185660 call _cond_test(185624 call !(185623 call collapsedDim d)))
        {
          if(185643 call _cond_test first)
          {
            (185629 call <~> f "{")
            (185635 call = first 0)
          }
          {
            (185640 call <~> f ", ")
          }
          (185657 call <~> f(185656 call(185651 call . downDom c"dsiDim") d))
        }
        label _continueLabel[185669]
        _indexOfInterest[185664]
        _iterator[185665]
      }
      label _breakLabel[185670]
    }
    (185704 call <~> f "}")
  }
  function ArrayViewRankChangeDom[186101](?).dsiMyDist[185711](arg _mt[186173]:_MT[227], arg this[186171]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    (185714 return dist)
  }
  function ArrayViewRankChangeDom[186101](?).dsiTargetLocales[185721](arg _mt[186177]:_MT[227], arg this[186175]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "method" "primary method"
  {
    (185729 return(185728 call(185724 call . downDom c"dsiTargetLocales")))
  }
  function ArrayViewRankChangeDom[186101](?).dsiHasSingleLocalSubdomain[185736](arg _mt[186181]:_MT[227], arg this[186179]:ArrayViewRankChangeDom[186101](?)) param : _unknown[43] "method" "primary method"
  {
    (185744 return(185743 call(185739 call . downDom c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewRankChangeDom[186101](?).dsiLocalSubdomain[185755](arg _mt[186185]:_MT[227], arg this[186183]:ArrayViewRankChangeDom[186101](?), arg loc[185752] :
  locale[26]) : _unknown[43] "method" "primary method"
  {
    const dims[185769] "const"(185768 call(185764 call .(185763 call(185758 call . downDom c"dsiLocalSubdomain") loc) c"dims"))
    const empty[185783] "const"(185781 call chpl__buildDomainRuntimeType defaultDist rank idxType(185779 call chpl__anyStridable dims))
    {
      unknown d[185817] 0
      unknown tmp[185818] "maybe param" "temp"
      (185830 'move' tmp[185818](185828 call chpl_compute_low_param_loop_bound 1(185788 call . dims c"size")))
      unknown tmp[185819] "maybe param" "temp"
      (185840 'move' tmp[185819](185838 call chpl_compute_high_param_loop_bound 1(185835 call . dims c"size")))
      unknown tmp[185820] "maybe param" "temp"
      (185843 'move' tmp[185820] 1)
      ParamForLoop
      { d[185817] tmp[185818] tmp[185819] tmp[185820]
        {
          if(185811 call _cond_test(185806 call &&(185796 call collapsedDim d)(185805 call(185801 call .(185800 call dims d) c"isEmpty"))))
          {
            (185809 return empty)
          }
        }
      }
      label _unused_continueLabel[185822]
      label _breakLabel[185821]
    }
    (185860 return(185859 call chpl_rankChangeConvertDownToUp dims rank collapsedDim))
  }
  function ArrayViewRankChangeDom[186101](?).isRankChangeDomainView[185866](arg _mt[186189]:_MT[227], arg this[186187]:ArrayViewRankChangeDom[186101](?)) param : _unknown[43] "method" "primary method"
  {
    (185869 return 1)
  }
  function ArrayViewRankChangeDom[186101](?)._getActualDomain[185876](arg _mt[186193]:_MT[227], arg this[186191]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "method" "primary method"
  {
    if(185895 call _cond_test(185881 call chpl__isDomainView downDom))
    {
      (185888 return(185887 call(185883 call . downDom c"_getActualDomain")))
    }
    {
      (185892 return downDom)
    }
  }
  function ArrayViewRankChangeDom[186101](?).dsiDestroyDom[185904](arg _mt[186197]:_MT[227], arg this[186195]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    if(185918 call _cond_test(185908 call != upDomInst nil[38]))
    {
      (185916 call _delete_dom(185912 call postfix! upDomInst) 0)
    }
    if(185941 call _cond_test(185926 call != downDomInst nil[38]))
    {
      (185939 call _delete_dom(185930 call postfix! downDomInst)(185938 call _isPrivatized(185935 call postfix! downDomInst)))
    }
  }
  function ArrayViewRankChangeDom[186101](?).dsiSupportsPrivatization[185950](arg _mt[186201]:_MT[227], arg this[186199]:ArrayViewRankChangeDom[186101](?)) param : _unknown[43] "method" "primary method"
  {
    (185960 return(185959 call(185955 call .(185953 call postfix! downDomInst) c"dsiSupportsPrivatization")))
  }
  function ArrayViewRankChangeDom[186101](?).dsiGetPrivatizeData[185967](arg _mt[186205]:_MT[227], arg this[186203]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "method" "primary method"
  {
    (185979 return(185977 call _build_tuple upDomInst collapsedDim idx distPid distInst downDomPid downDomInst))
  }
  function ArrayViewRankChangeDom[186101](?).dsiPrivatize[185988](arg _mt[186209]:_MT[227], arg this[186207]:ArrayViewRankChangeDom[186101](?), arg privatizeData[185986]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    (186045 return(186044 'new'(186043 'to unmanaged class from unknown'(186042 call ArrayViewRankChangeDom(rank =(185992 call . this c"rank"))(idxType =(185998 call . this c"idxType"))(stridable =(186003 call . this c"stridable"))(upDomInst =(186010 call privatizeData 1))(collapsedDim =(186015 call privatizeData 2))(idx =(186020 call privatizeData 3))(distPid =(186025 call privatizeData 4))(distInst =(186030 call privatizeData 5))(downDomPid =(186035 call privatizeData 6))(downDomInst =(186040 call privatizeData 7))))))
  }
  function ArrayViewRankChangeDom[186101](?).dsiGetReprivatizeData[186052](arg _mt[186213]:_MT[227], arg this[186211]:ArrayViewRankChangeDom[186101](?)) : _unknown[43] "method" "primary method"
  {
    (186060 return(186058 call _build_tuple upDomInst downDomPid downDomInst))
  }
  function ArrayViewRankChangeDom[186101](?).dsiReprivatize[186069](arg _mt[186217]:_MT[227], arg this[186215]:ArrayViewRankChangeDom[186101](?), arg other[186067]:_any[170](?), arg reprivatizeData[186071]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (186078 call = upDomInst(186077 call reprivatizeData 1))
    (186087 call = downDomPid(186086 call reprivatizeData 2))
    (186095 call = downDomInst(186094 call reprivatizeData 3))
  }
  type ArrayViewRankChangeDom[186101](?) unknown upDomInst[184526](184525 'to unmanaged class from unknown'(184524 'to nilable class from type'(184523 call DefaultRectangularDom rank idxType stridable))) const collapsedDim[184537] "const" const idx[184540] "const" const distPid[184543] "const" const distInst[184546] "const" unknown downDomPid[184578] int[13] unknown downDomInst[184592](184591 'to nilable class from type'(184590 call downDomType(184583 call . collapsedDim c"size") idxType stridable distInst)) BaseRectangularDom forwarding ( )
  function buildIndexCacheHelper[186224](arg arr[186222]:_any[170](?), arg dom[186226]:_any[170](?), arg collapsedDim[186228]:_any[170](?), arg idx[186230]:_any[170](?)) : _unknown[43] "private"
  {
    if(186335 call _cond_test(186235 call chpl__isDROrDRView arr))
    {
      if(186326 call _cond_test(186239 call chpl__isArrayView arr))
      {
        if(186304 call _cond_test(186254 call &&(186245 call(186241 call . arr c"isSliceArrayView"))(186252 call !(186251 call(186247 call . arr c"_containsRCRE")))))
        {
          (186286 return(186285 call(186278 call .(186275 call(186267 call .(186266 call(186262 call .(186261 call(186257 call . arr c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(186271 call . arr c"dom")) c"toRankChange") dom collapsedDim idx))
        }
        {
          (186301 return(186300 call(186293 call .(186290 call . arr c"indexCache") c"toRankChange") dom collapsedDim idx))
        }
      }
      {
        (186323 return(186322 call(186315 call .(186314 call(186310 call . arr c"dsiGetRAD")) c"toRankChange") dom collapsedDim idx))
      }
    }
    {
      (186332 return 0)
    }
  }
  function ArrayViewRankChangeArr[187887](?).init[186373](arg _mt[187891]:_MT[227], arg this[187889]:ArrayViewRankChangeArr[187887](?), arg eltType[186371]:_any[170](?), const arg _DomPid[186375]:_any[170](?), const arg dom[186377]:_any[170](?), const arg _ArrPid[186379]:_any[170](?), const arg _ArrInstance[186381]:_any[170](?), const arg collapsedDim[186383]:_any[170](?), const arg idx[186385]:_any[170](?), const arg ownsArrInstance[186389] :
  bool[10] =
  0) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (186400 call(186394 call . super c"init")(eltType = eltType))
    (186408 call =(186404 call . this c"_DomPid") _DomPid)
    (186416 call =(186412 call . this c"dom") dom)
    (186424 call =(186420 call . this c"_ArrPid") _ArrPid)
    (186432 call =(186428 call . this c"_ArrInstance") _ArrInstance)
    (186440 call =(186436 call . this c"collapsedDim") collapsedDim)
    (186448 call =(186444 call . this c"idx") idx)
    (186462 call =(186452 call . this c"indexCache")(186461 call buildIndexCacheHelper _ArrInstance dom collapsedDim idx))
    (186472 call =(186468 call . this c"ownsArrInstance") ownsArrInstance)
  }
  function ArrayViewRankChangeArr[187887](?).chpl_forwarding_expr8_arr[186486](arg _mt[187895]:_MT[227], arg this[187893]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (186488 return arr)
  }
  function ArrayViewRankChangeArr[187887](?).idxType[186494](arg _mt[187899]:_MT[227], arg this[187897]:ArrayViewRankChangeArr[187887](?)) type : _unknown[43] "method" "primary method" "no parens"
  {
    (186500 return(186497 call . dom c"idxType"))
  }
  function ArrayViewRankChangeArr[187887](?).rank[186507](arg _mt[187903]:_MT[227], arg this[187901]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method" "no parens"
  {
    (186513 return(186510 call . dom c"rank"))
  }
  function ArrayViewRankChangeArr[187887](?).isRankChangeArrayView[186520](arg _mt[187907]:_MT[227], arg this[187905]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method"
  {
    (186523 return 1)
  }
  function ArrayViewRankChangeArr[187887](?).these[186530](arg _mt[187911]:_MT[227], arg this[187909]:ArrayViewRankChangeArr[187887](?)) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[186541] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[186542] "expr temp" "temp"
      (186551 'move' _iterator[186542](186549 call _getIterator(186537 call chpl__serialViewIter this privDom)))
      Defer
      {
        {
          (186568 call _freeIterator _iterator[186542])
        }
      }
      { scopeless type
        (186557 'move' _indexOfInterest[186541](186554 call iteratorIndex _iterator[186542]))
      }
      ForLoop
      {
        unknown elem[186561] "index var" "insert auto destroy"
        (186563 'move' elem[186561] _indexOfInterest[186541])
        (186539 yield elem)
        label _continueLabel[186546]
        _indexOfInterest[186541]
        _iterator[186542]
      }
      label _breakLabel[186547]
    }
  }
  function ArrayViewRankChangeArr[187887](?).these[186584](arg _mt[187915]:_MT[227], arg this[187913]:ArrayViewRankChangeArr[187887](?), param arg tag[186581] :
  iterKind) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[186643] "index var" "insert auto destroy"
      iterated expressions:
        privDom
      shadow variables:
      forall body
      {
        (186639 yield(186636 IfExpr (186610 call shouldUseIndexCache) then
        { scopeless
          (186623 call(186612 call . indexCache c"getDataElem")(186621 call(186616 call . indexCache c"getDataIndex") i))
        } else
        { scopeless
          (186635 call(186625 call . arr c"dsiAccess")(186633 call chpl_rankChangeConvertIdx i collapsedDim idx))
        } ))
      }
    }
  }
  where {
    (186604 call &&(186596 call &&(186591 call == tag(186588 call . iterKind c"standalone"))(186594 call ! localeModelHasSublocales))(186603 'method call resolves' privDom "these" tag))
  }
  function ArrayViewRankChangeArr[187887](?).these[186656](arg _mt[187919]:_MT[227], arg this[187917]:ArrayViewRankChangeArr[187887](?), param arg tag[186653] :
  iterKind) : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[186677] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[186678] "expr temp" "temp"
      (186687 'move' _iterator[186678](186685 call _getIterator(186672 call(186667 call . privDom c"these") tag)))
      Defer
      {
        {
          (186704 call _freeIterator _iterator[186678])
        }
      }
      { scopeless type
        (186693 'move' _indexOfInterest[186677](186690 call iteratorIndex _iterator[186678]))
      }
      ForLoop
      {
        unknown followThis[186697] "index var" "insert auto destroy"
        (186699 'move' followThis[186697] _indexOfInterest[186677])
        {
          (186674 yield followThis)
        }
        label _continueLabel[186682]
        _indexOfInterest[186677]
        _iterator[186678]
      }
      label _breakLabel[186683]
    }
  }
  where {
    (186663 call == tag(186660 call . iterKind c"leader"))
  }
  function ArrayViewRankChangeArr[187887](?).these[186721](arg _mt[187923]:_MT[227], arg this[187921]:ArrayViewRankChangeArr[187887](?), param arg tag[186718] :
  iterKind, arg followThis[186723]:_any[170](?)) ref : _unknown[43] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[186784] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[186785] "expr temp" "temp"
      (186794 'move' _iterator[186785](186792 call _getIterator(186740 call(186734 call . privDom c"these") tag followThis)))
      Defer
      {
        {
          (186811 call _freeIterator _iterator[186785])
        }
      }
      { scopeless type
        (186800 'move' _indexOfInterest[186784](186797 call iteratorIndex _iterator[186785]))
      }
      ForLoop
      {
        unknown i[186804] "index var" "insert auto destroy"
        (186806 'move' i[186804] _indexOfInterest[186784])
        {
          if(186779 call _cond_test(186743 call shouldUseIndexCache))
          {
            const dataIdx[186751] "const"(186750 call(186745 call . indexCache c"getDataIndex") i)
            (186762 yield(186761 call(186756 call . indexCache c"getDataElem") dataIdx))
          }
          {
            (186776 yield(186775 call(186765 call . arr c"dsiAccess")(186773 call chpl_rankChangeConvertIdx i collapsedDim idx)))
          }
        }
        label _continueLabel[186789]
        _indexOfInterest[186784]
        _iterator[186785]
      }
      label _breakLabel[186790]
    }
  }
  where {
    (186730 call == tag(186727 call . iterKind c"follower"))
  }
  function ArrayViewRankChangeArr[187887](?).dsiSerialWrite[186826](arg _mt[187927]:_MT[227], arg this[187925]:ArrayViewRankChangeArr[187887](?), arg f[186824]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (186833 call chpl_serialReadWriteRectangular f this privDom)
  }
  function ArrayViewRankChangeArr[187887](?).dsiSerialRead[186842](arg _mt[187931]:_MT[227], arg this[187929]:ArrayViewRankChangeArr[187887](?), arg f[186840]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (186849 call chpl_serialReadWriteRectangular f this privDom)
  }
  function ArrayViewRankChangeArr[187887](?).dsiDisplayRepresentation[186856](arg _mt[187935]:_MT[227], arg this[187933]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    (186876 call writeln "Rank Change view")
    (186882 call writeln "----------")
    (186887 call writeln "of domain:")
    (186894 call(186890 call . privDom c"dsiDisplayRepresentation"))
    (186899 call writeln "on array:")
    (186906 call(186902 call . arr c"dsiDisplayRepresentation"))
    (186926 call writeln "where the dims are collapsed as follows:")
    (186931 call writeln collapsedDim)
    (186951 call writeln "and the missing indices are:")
    (186956 call writeln idx)
    (186961 call writeln "----------")
  }
  function ArrayViewRankChangeArr[187887](?).dsiAccess[186973](arg _mt[187939]:_MT[227], arg this[187937]:ArrayViewRankChangeArr[187887](?), arg i[186969] ... :
  idxType) ref : _unknown[43] "inline" "method" "primary method"
  {
    (186979 return(186978 call dsiAccess i))
  }
  function ArrayViewRankChangeArr[187887](?).dsiAccess[186992](arg _mt[187943]:_MT[227], arg this[187941]:ArrayViewRankChangeArr[187887](?), arg i[186988] ... :
  idxType) : _unknown[43] "inline" "method" "primary method"
  {
    (187002 return(187001 call dsiAccess i))
  }
  where {
    (186997 call shouldReturnRvalueByValue eltType)
  }
  function ArrayViewRankChangeArr[187887](?).dsiAccess[187016](arg _mt[187947]:_MT[227], arg this[187945]:ArrayViewRankChangeArr[187887](?), arg i[187012] ... :
  idxType) const ref : _unknown[43] "inline" "method" "primary method"
  {
    (187026 return(187025 call dsiAccess i))
  }
  where {
    (187021 call shouldReturnRvalueByConstRef eltType)
  }
  function ArrayViewRankChangeArr[187887](?).dsiAccess[187036](arg _mt[187951]:_MT[227], arg this[187949]:ArrayViewRankChangeArr[187887](?), arg i[187034]:_any[170](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    (187041 call checkBounds i)
    if(187082 call _cond_test(187046 call shouldUseIndexCache))
    {
      const dataIdx[187054] "const"(187053 call(187048 call . indexCache c"getDataIndex") i)
      (187065 return(187064 call(187059 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (187079 return(187078 call(187068 call . arr c"dsiAccess")(187076 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  function ArrayViewRankChangeArr[187887](?).dsiAccess[187092](arg _mt[187955]:_MT[227], arg this[187953]:ArrayViewRankChangeArr[187887](?), arg i[187090]:_any[170](?)) : _unknown[43] "inline" "method" "primary method"
  {
    (187101 call checkBounds i)
    if(187142 call _cond_test(187106 call shouldUseIndexCache))
    {
      const dataIdx[187114] "const"(187113 call(187108 call . indexCache c"getDataIndex") i)
      (187125 return(187124 call(187119 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (187139 return(187138 call(187128 call . arr c"dsiAccess")(187136 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (187097 call shouldReturnRvalueByValue eltType)
  }
  function ArrayViewRankChangeArr[187887](?).dsiAccess[187153](arg _mt[187959]:_MT[227], arg this[187957]:ArrayViewRankChangeArr[187887](?), arg i[187151]:_any[170](?)) const ref : _unknown[43] "inline" "method" "primary method"
  {
    (187162 call checkBounds i)
    if(187203 call _cond_test(187167 call shouldUseIndexCache))
    {
      const dataIdx[187175] "const"(187174 call(187169 call . indexCache c"getDataIndex") i)
      (187186 return(187185 call(187180 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (187200 return(187199 call(187189 call . arr c"dsiAccess")(187197 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (187158 call shouldReturnRvalueByConstRef eltType)
  }
  function ArrayViewRankChangeArr[187887](?).dsiLocalAccess[187214](arg _mt[187963]:_MT[227], arg this[187961]:ArrayViewRankChangeArr[187887](?), arg i[187212]:_any[170](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    (187228 return(187227 call(187217 call . arr c"dsiLocalAccess")(187225 call chpl_rankChangeConvertIdx i collapsedDim idx)))
  }
  function ArrayViewRankChangeArr[187887](?).dsiLocalAccess[187237](arg _mt[187967]:_MT[227], arg this[187965]:ArrayViewRankChangeArr[187887](?), arg i[187235]:_any[170](?)) : _unknown[43] "inline" "method" "primary method"
  {
    (187255 return(187254 call(187244 call . arr c"dsiLocalAccess")(187252 call chpl_rankChangeConvertIdx i collapsedDim idx)))
  }
  where {
    (187242 call shouldReturnRvalueByValue eltType)
  }
  function ArrayViewRankChangeArr[187887](?).dsiLocalAccess[187265](arg _mt[187971]:_MT[227], arg this[187969]:ArrayViewRankChangeArr[187887](?), arg i[187263]:_any[170](?)) const ref : _unknown[43] "inline" "method" "primary method"
  {
    (187283 return(187282 call(187272 call . arr c"dsiLocalAccess")(187280 call chpl_rankChangeConvertIdx i collapsedDim idx)))
  }
  where {
    (187270 call shouldReturnRvalueByConstRef eltType)
  }
  function ArrayViewRankChangeArr[187887](?).checkBounds[187293](arg _mt[187975]:_MT[227], arg this[187973]:ArrayViewRankChangeArr[187887](?), arg i[187291]:_any[170](?)) : _unknown[43] "inline" "method" "primary method" "no return value for void"
  {
    if(187316 call _cond_test boundsChecking)
    {
      if(187311 call _cond_test(187303 call !(187302 call(187297 call . privDom c"dsiMember") i)))
      {
        (187309 call halt "array index out of bounds: " i)
      }
    }
  }
  function ArrayViewRankChangeArr[187887](?).dsiHasSingleLocalSubdomain[187326](arg _mt[187979]:_MT[227], arg this[187977]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method"
  {
    (187334 return(187333 call(187329 call . privDom c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewRankChangeArr[187887](?).dsiLocalSubdomain[187345](arg _mt[187983]:_MT[227], arg this[187981]:ArrayViewRankChangeArr[187887](?), arg loc[187342] :
  locale[26]) : _unknown[43] "method" "primary method"
  {
    (187354 return(187353 call(187348 call . privDom c"dsiLocalSubdomain") loc))
  }
  function ArrayViewRankChangeArr[187887](?).dsiSupportsPrivatization[187361](arg _mt[187987]:_MT[227], arg this[187985]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method"
  {
    (187369 return(187368 call(187364 call . _ArrInstance c"dsiSupportsPrivatization")))
  }
  function ArrayViewRankChangeArr[187887](?).dsiGetPrivatizeData[187376](arg _mt[187991]:_MT[227], arg this[187989]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method"
  {
    (187387 return(187385 call _build_tuple _DomPid dom _ArrPid _ArrInstance collapsedDim idx))
  }
  function ArrayViewRankChangeArr[187887](?).dsiPrivatize[187396](arg _mt[187995]:_MT[227], arg this[187993]:ArrayViewRankChangeArr[187887](?), arg privatizeData[187394]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    (187438 return(187437 'new'(187436 'to unmanaged class from unknown'(187435 call ArrayViewRankChangeArr(eltType =(187400 call . this c"eltType"))(_DomPid =(187408 call privatizeData 1))(dom =(187413 call privatizeData 2))(_ArrPid =(187418 call privatizeData 3))(_ArrInstance =(187423 call privatizeData 4))(collapsedDim =(187428 call privatizeData 5))(idx =(187433 call privatizeData 6))))))
  }
  function ArrayViewRankChangeArr[187887](?).shouldUseIndexCache[187445](arg _mt[187999]:_MT[227], arg this[187997]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method"
  {
    (187451 return(187450 call chpl__isDROrDRView _ArrInstance))
  }
  function ArrayViewRankChangeArr[187887](?).buildIndexCache[187458](arg _mt[188003]:_MT[227], arg this[188001]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method"
  {
    if(187560 call _cond_test(187462 call shouldUseIndexCache))
    {
      if(187551 call _cond_test(187466 call chpl__isArrayView _ArrInstance))
      {
        if(187529 call _cond_test(187481 call &&(187472 call(187468 call . _ArrInstance c"isSliceArrayView"))(187479 call !(187478 call(187474 call . _ArrInstance c"_containsRCRE")))))
        {
          (187511 return(187510 call(187503 call .(187502 call(187494 call .(187493 call(187489 call .(187488 call(187484 call . _ArrInstance c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(187498 call . _ArrInstance c"dom")) c"toRankChange") dom collapsedDim idx))
        }
        {
          (187526 return(187525 call(187518 call .(187515 call . _ArrInstance c"indexCache") c"toRankChange") dom collapsedDim idx))
        }
      }
      {
        (187548 return(187547 call(187540 call .(187539 call(187535 call . _ArrInstance c"dsiGetRAD")) c"toRankChange") dom collapsedDim idx))
      }
    }
    {
      (187557 return 0)
    }
  }
  function ArrayViewRankChangeArr[187887](?).privDom[187569](arg _mt[188007]:_MT[227], arg this[188005]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    if(187588 call _cond_test(187574 call _isPrivatized dom))
    {
      (187581 return(187580 call chpl_getPrivatizedCopy(187577 'typeof' dom) _DomPid))
    }
    {
      (187585 return dom)
    }
  }
  function ArrayViewRankChangeArr[187887](?).arr[187597](arg _mt[188011]:_MT[227], arg this[188009]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "inline" "method" "primary method" "no parens"
  {
    if(187616 call _cond_test(187602 call _isPrivatized _ArrInstance))
    {
      (187609 return(187608 call chpl_getPrivatizedCopy(187605 'typeof' _ArrInstance) _ArrPid))
    }
    {
      (187613 return _ArrInstance)
    }
  }
  function ArrayViewRankChangeArr[187887](?).dsiGetBaseDom[187625](arg _mt[188015]:_MT[227], arg this[188013]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method" "method overrides"
  {
    (187628 return dom)
  }
  function ArrayViewRankChangeArr[187887](?)._getActualArray[187635](arg _mt[188019]:_MT[227], arg this[188017]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method"
  {
    if(187654 call _cond_test(187640 call chpl__isArrayView arr))
    {
      (187647 return(187646 call(187642 call . arr c"_getActualArray")))
    }
    {
      (187651 return arr)
    }
  }
  function ArrayViewRankChangeArr[187887](?)._containsRCRE[187663](arg _mt[188023]:_MT[227], arg this[188021]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method"
  {
    if(187698 call _cond_test(187668 call chpl__isArrayView arr))
    {
      (187691 return(187689 call ||(187681 call ||(187674 call(187670 call . arr c"isRankChangeArrayView"))(187680 call(187676 call . arr c"isReindexArrayView")))(187688 call(187684 call . arr c"_containsRCRE"))))
    }
    {
      (187695 return 0)
    }
  }
  function ArrayViewRankChangeArr[187887](?)._getRCREView[187707](arg _mt[188027]:_MT[227], arg this[188025]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method"
  {
    (187710 return this)
  }
  function ArrayViewRankChangeArr[187887](?).dsiDestroyArr[187717](arg _mt[188031]:_MT[227], arg this[188029]:ArrayViewRankChangeArr[187887](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    if(187730 call _cond_test ownsArrInstance)
    {
      (187727 call _delete_arr _ArrInstance(187726 call _isPrivatized _ArrInstance))
    }
  }
  function ArrayViewRankChangeArr[187887](?).doiCanBulkTransferRankChange[187739](arg _mt[188035]:_MT[227], arg this[188033]:ArrayViewRankChangeArr[187887](?)) param : _unknown[43] "method" "primary method"
  {
    (187747 return(187746 call(187742 call . arr c"doiCanBulkTransferRankChange")))
  }
  function ArrayViewRankChangeArr[187887](?).doiBulkTransferFromKnown[187756](arg _mt[188039]:_MT[227], arg this[188037]:ArrayViewRankChangeArr[187887](?), arg destDom[187754]:_any[170](?), arg srcClass[187758]:_any[170](?), arg srcDom[187760]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    const shifted[187799] "const"(187798 call chpl_rankChangeConvertDom(187778 call(187774 call . destDom c"dims"))(187781 call . destDom c"rank")(187788 call .(187785 call . this c"dom") c"collapsedDim")(187795 call .(187792 call . this c"dom") c"idx"))
    (187813 return(187812 call chpl__bulkTransferArray(187805 call . this c"arr") shifted srcClass srcDom))
  }
  where {
    (187771 call(187767 call .(187764 call . this c"arr") c"doiCanBulkTransferRankChange"))
  }
  { scopeless type
    bool[10]
  }
  function ArrayViewRankChangeArr[187887](?).doiBulkTransferToKnown[187823](arg _mt[188043]:_MT[227], arg this[188041]:ArrayViewRankChangeArr[187887](?), arg srcDom[187821]:_any[170](?), arg destClass[187825]:_any[170](?), arg destDom[187827]:_any[170](?)) : _unknown[43] "method" "primary method"
  {
    const shifted[187866] "const"(187865 call chpl_rankChangeConvertDom(187845 call(187841 call . srcDom c"dims"))(187848 call . srcDom c"rank")(187855 call .(187852 call . this c"dom") c"collapsedDim")(187862 call .(187859 call . this c"dom") c"idx"))
    (187880 return(187879 call chpl__bulkTransferArray destClass destDom(187875 call . this c"arr") shifted))
  }
  where {
    (187838 call(187834 call .(187831 call . this c"arr") c"doiCanBulkTransferRankChange"))
  }
  { scopeless type
    bool[10]
  }
  type ArrayViewRankChangeArr[187887](?) const _DomPid[186345] "const" const dom[186348] "const" const _ArrPid[186351] "const" const _ArrInstance[186354] "const" const collapsedDim[186357] "const" const idx[186360] "const" const indexCache[186363] "const" const ownsArrInstance[186366] "const" AbsBaseArr forwarding ( )
  function chpl_rankChangeConvertIdx[188052](arg i[188049] :
  integral, arg collapsedDim[188054]:_any[170](?), arg idx[188056]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown downrank[188062] "param"(188059 call . collapsedDim c"size")
    unknown ind[188067] idx
    unknown j[188071] 1
    {
      unknown d[188103] 0
      unknown tmp[188104] "maybe param" "temp"
      (188116 'move' tmp[188104](188114 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[188105] "maybe param" "temp"
      (188123 'move' tmp[188105](188121 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[188106] "maybe param" "temp"
      (188126 'move' tmp[188106] 1)
      ParamForLoop
      { d[188103] tmp[188104] tmp[188105] tmp[188106]
        {
          if(188098 call _cond_test(188082 call !(188081 call collapsedDim d)))
          {
            (188089 call =(188087 call ind d) i)
            (188095 call += j 1)
          }
        }
      }
      label _unused_continueLabel[188108]
      label _breakLabel[188107]
    }
    (188143 call assert(188140 call == j 2))
    (188146 return ind)
  }
  function chpl_rankChangeConvertIdx[188154](arg i[188152]:_any[170](?), arg collapsedDim[188156]:_any[170](?), arg idx[188158]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown downrank[188164] "param"(188161 call . collapsedDim c"size")
    unknown ind[188169] idx
    unknown j[188173] 1
    {
      unknown d[188208] 0
      unknown tmp[188209] "maybe param" "temp"
      (188221 'move' tmp[188209](188219 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[188210] "maybe param" "temp"
      (188228 'move' tmp[188210](188226 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[188211] "maybe param" "temp"
      (188231 'move' tmp[188211] 1)
      ParamForLoop
      { d[188208] tmp[188209] tmp[188210] tmp[188211]
        {
          if(188203 call _cond_test(188184 call !(188183 call collapsedDim d)))
          {
            (188194 call =(188189 call ind d)(188193 call i j))
            (188200 call += j 1)
          }
        }
      }
      label _unused_continueLabel[188213]
      label _breakLabel[188212]
    }
    (188243 return ind)
  }
  function chpl_rankChangeConvertIdxHiDToLoD[188251](arg i[188249]:_any[170](?), arg collapsedDim[188253]:_any[170](?), arg idx[188255]:_any[170](?), param arg rank[188257]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown downrank[188263] "param"(188260 call . collapsedDim c"size")
    unknown ind[188275](188273 call * rank(188272 'typeof'(188271 call i 1)))
    unknown j[188279] 1
    {
      unknown d[188314] 0
      unknown tmp[188315] "maybe param" "temp"
      (188327 'move' tmp[188315](188325 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[188316] "maybe param" "temp"
      (188334 'move' tmp[188316](188332 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[188317] "maybe param" "temp"
      (188337 'move' tmp[188317] 1)
      ParamForLoop
      { d[188314] tmp[188315] tmp[188316] tmp[188317]
        {
          if(188309 call _cond_test(188290 call !(188289 call collapsedDim d)))
          {
            (188300 call =(188295 call ind j)(188299 call i d))
            (188306 call += j 1)
          }
        }
      }
      label _unused_continueLabel[188319]
      label _breakLabel[188318]
    }
    if(188361 call _cond_test(188350 call == rank 1))
    {
      (188356 return(188355 call ind 1))
    }
    {
      (188359 return ind)
    }
  }
  function chpl_rankChangeConvertDownToUp[188373](arg dims[188371]:_any[170](?), param arg uprank[188375]:_any[170](?), arg collapsedDim[188377]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ranges[188387](188385 call * uprank(188384 'typeof'(188383 call dims 1)))
    unknown j[188392] 1
    {
      unknown d[188430] 0
      unknown tmp[188431] "maybe param" "temp"
      (188443 'move' tmp[188431](188441 call chpl_compute_low_param_loop_bound 1(188397 call . dims c"size")))
      unknown tmp[188432] "maybe param" "temp"
      (188453 'move' tmp[188432](188451 call chpl_compute_high_param_loop_bound 1(188448 call . dims c"size")))
      unknown tmp[188433] "maybe param" "temp"
      (188456 'move' tmp[188433] 1)
      ParamForLoop
      { d[188430] tmp[188431] tmp[188432] tmp[188433]
        {
          if(188425 call _cond_test(188406 call !(188405 call collapsedDim d)))
          {
            (188416 call =(188411 call ranges j)(188415 call dims d))
            (188422 call += j 1)
          }
        }
      }
      label _unused_continueLabel[188435]
      label _breakLabel[188434]
    }
    (188472 return(188470 call chpl__buildDomainExpr(188468 'expand_tuple' ranges)))
  }
  function chpl_rankChangeConvertDom[188480](arg dims[188478]:_any[170](?), param arg uprank[188482]:_any[170](?), arg collapsedDim[188484]:_any[170](?), arg idx[188486]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown downrank[188492] "param"(188489 call . collapsedDim c"size")
    if(188550 call _cond_test(188501 call != uprank(188498 call . dims c"size")))
    {
      (188548 call compilerError "Called chpl_rankChangeConvertDom with incorrect rank. Got "(188526 call _cast string[24](188522 call . dims c"size")) ", expecting "(188546 call _cast string[24] uprank))
    }
    unknown ranges[188563](188561 call * downrank(188560 'typeof'(188559 call dims 1)))
    unknown j[188567] 1
    {
      unknown d[188620] 0
      unknown tmp[188621] "maybe param" "temp"
      (188633 'move' tmp[188621](188631 call chpl_compute_low_param_loop_bound 1 downrank))
      unknown tmp[188622] "maybe param" "temp"
      (188640 'move' tmp[188622](188638 call chpl_compute_high_param_loop_bound 1 downrank))
      unknown tmp[188623] "maybe param" "temp"
      (188643 'move' tmp[188623] 1)
      ParamForLoop
      { d[188620] tmp[188621] tmp[188622] tmp[188623]
        {
          if(188615 call _cond_test(188578 call !(188577 call collapsedDim d)))
          {
            (188588 call =(188583 call ranges d)(188587 call dims j))
            (188594 call += j 1)
          }
          {
            (188611 call =(188600 call ranges d)(188609 call chpl_build_bounded_range(188604 call idx d)(188608 call idx d)))
          }
        }
      }
      label _unused_continueLabel[188625]
      label _breakLabel[188624]
    }
    (188659 return(188657 call chpl__buildDomainExpr(188655 'expand_tuple' ranges)))
  }
}