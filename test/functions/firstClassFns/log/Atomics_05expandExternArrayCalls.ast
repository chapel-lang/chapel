AST dump for Atomics after pass expandExternArrayCalls.
Module use list: 

{
  (42971 'use' MemConsistency)
  (42976 'use' ChapelEnv)
  function chpl_atomic_thread_fence[42984](arg order[42981] :
  memory_order) : void[4] "extern" "local args" "no fn body" "no doc"
  {
  }
  function chpl_atomic_signal_fence[42994](arg order[42991] :
  memory_order) : void[4] "extern" "local args" "no fn body" "no doc"
  {
  }
  function atomic_fence[43006](arg order[43002] :
  memory_order =
  memory_order_seq_cst) : _unknown[43] "no doc"
  {
    (43011 call chpl_atomic_thread_fence order)
    if(43020 call _cond_test CHPL_CACHE_REMOTE)
    {
      { scopeless
        (43018 call chpl_rmem_consist_fence order)
      }
    }
  }
  function atomicFence[43040](param arg order[43036] :
  memoryOrder =
  (43033 call . memoryOrder c"seqCst")) : _unknown[43] "inline"
  {
    (43048 call atomic_fence(43046 call c_memory_order order))
  }
  function isSupported[43057](arg T[43055]:_any[170](?)) param : _unknown[43] "private"
  {
    (43081 return(43079 call ||(43073 call ||(43067 call ||(43061 call == T bool[10])(43066 call isInt T))(43072 call isUint T))(43078 call isReal T)))
  }
  function externT[43090](arg T[43088]:_any[170](?)) type : _unknown[43] "private"
  {
    type atomic_bool[43096]
    type atomic_int_least8_t[43103]
    type atomic_int_least16_t[43109]
    type atomic_int_least32_t[43115]
    type atomic_int_least64_t[43121]
    type atomic_uint_least8_t[43127]
    type atomic_uint_least16_t[43133]
    type atomic_uint_least32_t[43139]
    type atomic_uint_least64_t[43145]
    type atomic__real64[43151]
    type atomic__real32[43157]
    {
      unknown tmp[43280] "expr temp" "maybe param" "maybe type" "temp"
      (43282 'move' tmp[43280] T)
      if(43287 call _cond_test(43284 call == tmp[43280] bool[10]))
      {
        { scopeless
          (43164 return atomic_bool)
        }
      }
      {
        if(43293 call _cond_test(43290 call == tmp[43280](43172 call int[13] 8)))
        {
          { scopeless
            (43175 return atomic_int_least8_t)
          }
        }
        {
          if(43300 call _cond_test(43297 call == tmp[43280](43183 call int[13] 16)))
          {
            { scopeless
              (43186 return atomic_int_least16_t)
            }
          }
          {
            if(43307 call _cond_test(43304 call == tmp[43280](43194 call int[13] 32)))
            {
              { scopeless
                (43197 return atomic_int_least32_t)
              }
            }
            {
              if(43314 call _cond_test(43311 call == tmp[43280](43205 call int[13] 64)))
              {
                { scopeless
                  (43208 return atomic_int_least64_t)
                }
              }
              {
                if(43321 call _cond_test(43318 call == tmp[43280](43216 call uint[107] 8)))
                {
                  { scopeless
                    (43219 return atomic_uint_least8_t)
                  }
                }
                {
                  if(43328 call _cond_test(43325 call == tmp[43280](43227 call uint[107] 16)))
                  {
                    { scopeless
                      (43230 return atomic_uint_least16_t)
                    }
                  }
                  {
                    if(43335 call _cond_test(43332 call == tmp[43280](43238 call uint[107] 32)))
                    {
                      { scopeless
                        (43241 return atomic_uint_least32_t)
                      }
                    }
                    {
                      if(43342 call _cond_test(43339 call == tmp[43280](43249 call uint[107] 64)))
                      {
                        { scopeless
                          (43252 return atomic_uint_least64_t)
                        }
                      }
                      {
                        if(43349 call _cond_test(43346 call == tmp[43280](43260 call real[16] 32)))
                        {
                          { scopeless
                            (43263 return atomic__real32)
                          }
                        }
                        {
                          if(43356 call _cond_test(43353 call == tmp[43280](43271 call real[16] 64)))
                          {
                            { scopeless
                              (43274 return atomic__real64)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function externTString[43367](arg T[43365]:_any[170](?)) param : _unknown[43] "private"
  {
    if(43391 call _cond_test(43371 call == T bool[10]))
    {
      { scopeless
        (43389 return "bool")
      }
    }
    if(43446 call _cond_test(43400 call isInt T))
    {
      { scopeless
        (43444 return(43442 call +(43424 call + "int_least"(43422 call _cast string[24](43420 call numBits T))) "_t"))
      }
    }
    if(43485 call _cond_test(43454 call isUint T))
    {
      { scopeless
        (43483 return(43481 call +(43478 call + "uint_least"(43476 call _cast string[24](43474 call numBits T))) "_t"))
      }
    }
    if(43521 call _cond_test(43493 call isReal T))
    {
      { scopeless
        (43519 return(43517 call + "_real"(43515 call _cast string[24](43513 call numBits T))))
      }
    }
  }
  function externFunc[43534](param arg s[43531] :
  string[24], arg T[43536]:_any[170](?), param arg explicit[43539] =
  1) param : _unknown[43] "private"
  {
    if(43618 call _cond_test explicit)
    {
      { scopeless
        (43586 return(43584 call +(43578 call +(43560 call + "atomic_" s) "_explicit_")(43583 call externTString T)))
      }
    }
    {
      { scopeless
        (43616 return(43614 call +(43608 call +(43590 call + "atomic_" s) "_")(43613 call externTString T)))
      }
    }
  }
  function chpl__processorAtomicType[43631](arg T[43629]:_any[170](?)) type : _unknown[43] "no doc"
  {
    if(43682 call _cond_test(43635 call == T bool[10]))
    {
      { scopeless
        (43638 return AtomicBool)
      }
    }
    {
      { scopeless
        if(43676 call _cond_test(43643 call isSupported T))
        {
          { scopeless
            (43648 return(43647 call AtomicT T))
          }
        }
        {
          { scopeless
            (43674 call compilerError(43671 call + "Unsupported atomic type: "(43669 call _cast string[24] T)))
          }
        }
      }
    }
  }
  function chpl__atomicType[43695](arg T[43693]:_any[170](?)) type : _unknown[43] "no doc"
  {
    if(43715 call _cond_test(43699 call == CHPL_NETWORK_ATOMICS "none"))
    {
      (43705 return(43704 call chpl__processorAtomicType T))
    }
    {
      (43712 return(43711 call chpl__networkAtomicType T))
    }
  }
  type AtomicBool[45373] unknown _v[43727] "no doc"(43726 call externT bool[10]) function AtomicBool[45373].init_helper[43736](arg _mt[45377]:_MT[227], arg this[45375]:AtomicBool[45373], arg value[43733] :
  bool[10]) : _unknown[43] "method" "primary method" "no doc"
  {
    function atomic_init[43767](ref arg obj[43764] :
    (43763 call externT bool[10]), arg value[43770] :
    bool[10], arg _chpl_cname[43778] :
    string[24] =
    (43757 call externFunc "init" bool[10](explicit = 0))) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    (43787 call atomic_init _v value)
  } function AtomicBool[45373].init[43793](arg _mt[45381]:_MT[227], arg this[45379]:AtomicBool[45373]) : _unknown[43] "method" "primary method" "no doc"
  {
    (43800 call(43796 call . this c"complete"))
    const default[43804] "const" bool[10]
    (43810 call init_helper default)
  } function AtomicBool[45373].init=[43820](arg _mt[45385]:_MT[227], arg this[45383]:AtomicBool[45373], arg other[43817] :
  AtomicBool) : _unknown[43] "method" "primary method" "no doc"
  {
    (43827 call(43823 call . this c"complete"))
    (43838 call init_helper(43836 call(43832 call . other c"read")))
  } function AtomicBool[45373].init=[43848](arg _mt[45389]:_MT[227], arg this[45387]:AtomicBool[45373], arg other[43845] :
  bool[10]) : _unknown[43] "method" "primary method" "no doc"
  {
    (43855 call(43851 call . this c"complete"))
    (43861 call init_helper other)
  } function AtomicBool[45373].deinit[43867](arg _mt[45393]:_MT[227], arg this[45391]:AtomicBool[45373]) : _unknown[43] "destructor" "method" "primary method" "no doc"
  {
    function atomic_destroy[43900](ref arg obj[43897] :
    (43896 call externT bool[10]), arg _chpl_cname[43907] :
    string[24] =
    (43890 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[43921] "const" "temp"
      (43922 'move' tmp[43921](43919 'deref'(43918 '_wide_get_locale' this)))
      { scopeless
        (43916 call atomic_destroy _v)
      }
    }
  } function AtomicBool[45373].read[43939](arg _mt[45397]:_MT[227], const arg this[45395]:AtomicBool[45373], param arg order[43935] :
  memoryOrder =
  (43932 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_load[43971](const  ref arg obj[43968] :
    (43967 call externT bool[10]), arg order[43974] :
    memory_order, arg _chpl_cname[43982] :
    string[24] =
    (43961 call externFunc "load" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[43988] bool[10]
    {
      const tmp[44007] "const" "temp"
      (44008 'move' tmp[44007](44005 'deref'(44004 '_wide_get_locale' this)))
      { scopeless
        (44001 call = ret(44000 call atomic_load _v(43999 call c_memory_order order)))
      }
    }
    (44013 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].write[44024](arg _mt[45401]:_MT[227], arg this[45399]:AtomicBool[45373], arg value[44021] :
  bool[10], param arg order[44031] :
  memoryOrder =
  (44028 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_store[44065](ref arg obj[44062] :
    (44061 call externT bool[10]), arg value[44068] :
    bool[10], arg order[44072] :
    memory_order, arg _chpl_cname[44080] :
    string[24] =
    (44055 call externFunc "store" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[44099] "const" "temp"
      (44100 'move' tmp[44099](44097 'deref'(44096 '_wide_get_locale' this)))
      { scopeless
        (44094 call atomic_store _v value(44093 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicBool[45373].exchange[44113](arg _mt[45405]:_MT[227], arg this[45403]:AtomicBool[45373], arg value[44110] :
  bool[10], param arg order[44120] :
  memoryOrder =
  (44117 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_exchange[44154](ref arg obj[44151] :
    (44150 call externT bool[10]), arg value[44157] :
    bool[10], arg order[44161] :
    memory_order, arg _chpl_cname[44169] :
    string[24] =
    (44144 call externFunc "exchange" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44175] bool[10]
    {
      const tmp[44195] "const" "temp"
      (44196 'move' tmp[44195](44193 'deref'(44192 '_wide_get_locale' this)))
      { scopeless
        (44189 call = ret(44188 call atomic_exchange _v value(44187 call c_memory_order order)))
      }
    }
    (44201 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].compareAndSwap[44212](arg _mt[45409]:_MT[227], arg this[45407]:AtomicBool[45373], arg expected[44209] :
  bool[10], arg desired[44215] :
  bool[10], param arg order[44223] :
  memoryOrder =
  (44220 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_compare_exchange_strong[44257](ref arg obj[44254] :
    (44253 call externT bool[10]), arg expected[44260] :
    bool[10], arg desired[44264] :
    bool[10], arg order[44268] :
    memory_order, arg _chpl_cname[44276] :
    string[24] =
    (44247 call externFunc "compare_exchange_strong" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44282] bool[10]
    {
      const tmp[44303] "const" "temp"
      (44304 'move' tmp[44303](44301 'deref'(44300 '_wide_get_locale' this)))
      { scopeless
        (44297 call = ret(44296 call atomic_compare_exchange_strong _v expected desired(44295 call c_memory_order order)))
      }
    }
    (44309 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].testAndSet[44325](arg _mt[45413]:_MT[227], arg this[45411]:AtomicBool[45373], param arg order[44321] :
  memoryOrder =
  (44318 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (44336 return(44335 call(44329 call . this c"exchange") 1 order))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].clear[44353](arg _mt[45417]:_MT[227], arg this[45415]:AtomicBool[45373], param arg order[44349] :
  memoryOrder =
  (44346 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (44363 call(44357 call . this c"write") 0 order)
  }
  { scopeless type
    void[4]
  } function AtomicBool[45373].waitFor[44375](arg _mt[45421]:_MT[227], const arg this[45419]:AtomicBool[45373], arg value[44372] :
  bool[10], param arg order[44382] :
  memoryOrder =
  (44379 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    {
      const tmp[44466] "const" "temp"
      (44467 'move' tmp[44466](44464 'deref'(44463 '_wide_get_locale' this)))
      {
        {
          unknown tmp[44409] "temp"
          (44451 'move' tmp[44409](44437 call _cond_test(44439 call !=(44444 call(44441 call . this c"read")(order =(44446 call . memoryOrder c"relaxed"))) value)))
          WhileDo
          {
            {
              (44406 call chpl_task_yield)
            }
            label _continueLabel[44412]
            (44432 'move' tmp[44409](44418 call _cond_test(44420 call !=(44425 call(44422 call . this c"read")(order =(44427 call . memoryOrder c"relaxed"))) value)))
            tmp[44409]
          }
          label _breakLabel[44413]
        }
        (44461 call chpl_atomic_thread_fence(44459 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicBool[45373].writeThis[44479](arg _mt[45425]:_MT[227], const arg this[45423]:AtomicBool[45373], arg x[44477]:_any[170](?)) : _unknown[43] "method" "primary method" "no doc"
  {
    (44485 call <~> x(44484 call read))
  } function AtomicBool[45373].compareExchange[44497](arg _mt[45429]:_MT[227], arg this[45427]:AtomicBool[45373], arg expected[44494] :
  bool[10], arg desired[44500] :
  bool[10], param arg order[44508] :
  memoryOrder =
  (44505 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (44531 call compilerWarning "compareExchange is deprecated (and will be repurposed in a future release), use compareAndSwap")
    (44545 return(44544 call(44537 call . this c"compareAndSwap") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].compareExchangeWeak[44556](arg _mt[45433]:_MT[227], arg this[45431]:AtomicBool[45373], arg expected[44553] :
  bool[10], arg desired[44559] :
  bool[10], param arg order[44567] :
  memoryOrder =
  (44564 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (44592 call compilerWarning "compareExchangeWeak is deprecated (and will be repurposed in a future release), use compareAndSwap")
    (44604 return(44603 call(44596 call . this c"compareAndSwap") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].compareExchangeStrong[44615](arg _mt[45437]:_MT[227], arg this[45435]:AtomicBool[45373], arg expected[44612] :
  bool[10], arg desired[44618] :
  bool[10], param arg order[44626] :
  memoryOrder =
  (44623 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (44651 call compilerWarning "compareExchangeStrong is deprecated (and will be repurposed in a future release), use compareAndSwap")
    (44663 return(44662 call(44655 call . this c"compareAndSwap") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].read[44674](arg _mt[45441]:_MT[227], const arg this[45439]:AtomicBool[45373], arg order[44671] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (44695 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_load[44712](const  ref arg obj[44709] :
    (44708 call externT bool[10]), arg order[44715] :
    memory_order, arg _chpl_cname[44723] :
    string[24] =
    (44702 call externFunc "load" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44728] bool[10]
    {
      const tmp[44744] "const" "temp"
      (44745 'move' tmp[44744](44742 'deref'(44741 '_wide_get_locale' this)))
      { scopeless
        (44738 call = ret(44737 call atomic_load _v order))
      }
    }
    (44750 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].write[44761](arg _mt[45445]:_MT[227], arg this[45443]:AtomicBool[45373], arg value[44758] :
  bool[10], arg order[44764] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (44771 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_store[44788](ref arg obj[44785] :
    (44784 call externT bool[10]), arg value[44791] :
    bool[10], arg order[44795] :
    memory_order, arg _chpl_cname[44803] :
    string[24] =
    (44778 call externFunc "store" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[44818] "const" "temp"
      (44819 'move' tmp[44818](44816 'deref'(44815 '_wide_get_locale' this)))
      { scopeless
        (44813 call atomic_store _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicBool[45373].exchange[44832](arg _mt[45449]:_MT[227], arg this[45447]:AtomicBool[45373], arg value[44829] :
  bool[10], arg order[44835] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (44842 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_exchange[44859](ref arg obj[44856] :
    (44855 call externT bool[10]), arg value[44862] :
    bool[10], arg order[44866] :
    memory_order, arg _chpl_cname[44874] :
    string[24] =
    (44849 call externFunc "exchange" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44879] bool[10]
    {
      const tmp[44896] "const" "temp"
      (44897 'move' tmp[44896](44894 'deref'(44893 '_wide_get_locale' this)))
      { scopeless
        (44890 call = ret(44889 call atomic_exchange _v value order))
      }
    }
    (44902 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].compareExchange[44913](arg _mt[45453]:_MT[227], arg this[45451]:AtomicBool[45373], arg expected[44910] :
  bool[10], arg desired[44916] :
  bool[10], arg order[44920] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (44935 return(44934 call(44927 call . this c"compareExchangeStrong") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].compareExchangeWeak[44947](arg _mt[45457]:_MT[227], arg this[45455]:AtomicBool[45373], arg expected[44944] :
  bool[10], arg desired[44950] :
  bool[10], arg order[44954] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (44961 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_weak[44993](ref arg obj[44990] :
    (44989 call externT bool[10]), arg expected[44996] :
    bool[10], arg desired[45000] :
    bool[10], arg order[45004] :
    memory_order, arg _chpl_cname[45012] :
    string[24] =
    (44983 call externFunc "compare_exchange_weak" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45017] bool[10]
    {
      const tmp[45035] "const" "temp"
      (45036 'move' tmp[45035](45033 'deref'(45032 '_wide_get_locale' this)))
      { scopeless
        (45029 call = ret(45028 call atomic_compare_exchange_weak _v expected desired order))
      }
    }
    (45041 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].compareExchangeStrong[45052](arg _mt[45461]:_MT[227], arg this[45459]:AtomicBool[45373], arg expected[45049] :
  bool[10], arg desired[45055] :
  bool[10], arg order[45059] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (45066 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_strong[45083](ref arg obj[45080] :
    (45079 call externT bool[10]), arg expected[45086] :
    bool[10], arg desired[45090] :
    bool[10], arg order[45094] :
    memory_order, arg _chpl_cname[45102] :
    string[24] =
    (45073 call externFunc "compare_exchange_strong" bool[10])) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45107] bool[10]
    {
      const tmp[45125] "const" "temp"
      (45126 'move' tmp[45125](45123 'deref'(45122 '_wide_get_locale' this)))
      { scopeless
        (45119 call = ret(45118 call atomic_compare_exchange_strong _v expected desired order))
      }
    }
    (45131 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].testAndSet[45142](arg _mt[45465]:_MT[227], arg this[45463]:AtomicBool[45373], arg order[45139] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (45153 return(45152 call(45146 call . this c"exchange") 1 order))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].clear[45165](arg _mt[45469]:_MT[227], arg this[45467]:AtomicBool[45373], arg order[45162] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (45175 call(45169 call . this c"write") 0 order)
  }
  { scopeless type
    void[4]
  } function AtomicBool[45373].waitFor[45187](arg _mt[45473]:_MT[227], const arg this[45471]:AtomicBool[45373], arg value[45184] :
  bool[10], arg order[45190] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (45197 call compilerWarning "memory_order is deprecated, use memoryOrder")
    {
      const tmp[45274] "const" "temp"
      (45275 'move' tmp[45274](45272 'deref'(45271 '_wide_get_locale' this)))
      {
        {
          unknown tmp[45220] "temp"
          (45262 'move' tmp[45220](45248 call _cond_test(45250 call !=(45255 call(45252 call . this c"read")(order =(45257 call . memoryOrder c"relaxed"))) value)))
          WhileDo
          {
            {
              (45217 call chpl_task_yield)
            }
            label _continueLabel[45223]
            (45243 'move' tmp[45220](45229 call _cond_test(45231 call !=(45236 call(45233 call . this c"read")(order =(45238 call . memoryOrder c"relaxed"))) value)))
            tmp[45220]
          }
          label _breakLabel[45224]
        }
        (45269 call chpl_atomic_thread_fence order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicBool[45373].peek[45284](arg _mt[45477]:_MT[227], const arg this[45475]:AtomicBool[45373]) : _unknown[43] "inline" "last resort" "method" "primary method"
  {
    (45307 call compilerWarning "Default usage of peek() is deprecated, use PeekPoke")
    (45321 return(45320 call(45311 call . this c"read")(order =(45315 call . memoryOrder c"relaxed"))))
  }
  { scopeless type
    bool[10]
  } function AtomicBool[45373].poke[45332](arg _mt[45481]:_MT[227], arg this[45479]:AtomicBool[45373], arg value[45329] :
  bool[10]) : _unknown[43] "inline" "last resort" "method" "primary method"
  {
    (45353 call compilerWarning "Default usage of poke() is deprecated, use PeekPoke")
    (45367 call(45357 call . this c"write") value(order =(45363 call . memoryOrder c"relaxed")))
  }
  { scopeless type
    void[4]
  }
  type AtomicT[48777](?) unknown T[45485] "no doc" "type variable" unknown _v[45492] "no doc"(45491 call externT T) function AtomicT[48777](?).init_helper[45501](arg _mt[48781]:_MT[227], arg this[48779]:AtomicT[48777](?), arg value[45498] :
  T) : _unknown[43] "method" "primary method" "no doc"
  {
    function atomic_init[45519](ref arg obj[45516] :
    (45515 call externT T), arg value[45522] :
    T, arg _chpl_cname[45530] :
    string[24] =
    (45509 call externFunc "init" T(explicit = 0))) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    (45539 call atomic_init _v value)
  } function AtomicT[48777](?).init[45547](arg _mt[48785]:_MT[227], arg this[48783]:AtomicT[48777](?), arg T[45545]:_any[170](?)) : _unknown[43] "method" "primary method" "no doc"
  {
    (45556 call =(45552 call . this c"T") T)
    (45565 call(45561 call . this c"complete"))
    const default[45568] "const" T
    (45574 call init_helper default)
  } function AtomicT[48777](?).init=[45585](arg _mt[48789]:_MT[227], arg this[48787]:AtomicT[48777](?), arg other[45582] :
  (45581 'typeof' this)) : _unknown[43] "method" "primary method" "no doc"
  {
    (45595 call =(45588 call . this c"T")(45592 call . other c"T"))
    (45604 call(45600 call . this c"complete"))
    (45614 call init_helper(45612 call(45608 call . other c"read")))
  } function AtomicT[48777](?).init=[45628](arg _mt[48793]:_MT[227], arg this[48791]:AtomicT[48777](?), arg other[45625] :
  (45622 call .(45621 'typeof' this) c"T")) : _unknown[43] "method" "primary method" "no doc"
  {
    (45636 call =(45631 call . this c"T")(45635 'typeof' other))
    (45645 call(45641 call . this c"complete"))
    (45650 call init_helper other)
  } function AtomicT[48777](?).deinit[45656](arg _mt[48797]:_MT[227], arg this[48795]:AtomicT[48777](?)) : _unknown[43] "destructor" "method" "primary method" "no doc"
  {
    function atomic_destroy[45674](ref arg obj[45671] :
    (45670 call externT T), arg _chpl_cname[45681] :
    string[24] =
    (45664 call externFunc "destroy" T(explicit = 0))) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[45695] "const" "temp"
      (45696 'move' tmp[45695](45693 'deref'(45692 '_wide_get_locale' this)))
      { scopeless
        (45690 call atomic_destroy _v)
      }
    }
  } function AtomicT[48777](?).read[45713](arg _mt[48801]:_MT[227], const arg this[48799]:AtomicT[48777](?), param arg order[45709] :
  memoryOrder =
  (45706 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_load[45730](const  ref arg obj[45727] :
    (45726 call externT T), arg order[45733] :
    memory_order, arg _chpl_cname[45741] :
    string[24] =
    (45720 call externFunc "load" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[45747] T
    {
      const tmp[45766] "const" "temp"
      (45767 'move' tmp[45766](45764 'deref'(45763 '_wide_get_locale' this)))
      { scopeless
        (45760 call = ret(45759 call atomic_load _v(45758 call c_memory_order order)))
      }
    }
    (45772 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).write[45783](arg _mt[48805]:_MT[227], arg this[48803]:AtomicT[48777](?), arg value[45780] :
  T, param arg order[45790] :
  memoryOrder =
  (45787 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_store[45809](ref arg obj[45806] :
    (45805 call externT T), arg value[45812] :
    T, arg order[45816] :
    memory_order, arg _chpl_cname[45824] :
    string[24] =
    (45799 call externFunc "store" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[45843] "const" "temp"
      (45844 'move' tmp[45843](45841 'deref'(45840 '_wide_get_locale' this)))
      { scopeless
        (45838 call atomic_store _v value(45837 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).exchange[45857](arg _mt[48809]:_MT[227], arg this[48807]:AtomicT[48777](?), arg value[45854] :
  T, param arg order[45864] :
  memoryOrder =
  (45861 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_exchange[45883](ref arg obj[45880] :
    (45879 call externT T), arg value[45886] :
    T, arg order[45890] :
    memory_order, arg _chpl_cname[45898] :
    string[24] =
    (45873 call externFunc "exchange" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[45904] T
    {
      const tmp[45924] "const" "temp"
      (45925 'move' tmp[45924](45922 'deref'(45921 '_wide_get_locale' this)))
      { scopeless
        (45918 call = ret(45917 call atomic_exchange _v value(45916 call c_memory_order order)))
      }
    }
    (45930 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).compareAndSwap[45941](arg _mt[48813]:_MT[227], arg this[48811]:AtomicT[48777](?), arg expected[45938] :
  T, arg desired[45944] :
  T, param arg order[45952] :
  memoryOrder =
  (45949 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_compare_exchange_strong[45971](ref arg obj[45968] :
    (45967 call externT T), arg expected[45974] :
    T, arg desired[45978] :
    T, arg order[45982] :
    memory_order, arg _chpl_cname[45990] :
    string[24] =
    (45961 call externFunc "compare_exchange_strong" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45996] bool[10]
    {
      const tmp[46017] "const" "temp"
      (46018 'move' tmp[46017](46015 'deref'(46014 '_wide_get_locale' this)))
      { scopeless
        (46011 call = ret(46010 call atomic_compare_exchange_strong _v expected desired(46009 call c_memory_order order)))
      }
    }
    (46023 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).fetchAdd[46034](arg _mt[48817]:_MT[227], arg this[48815]:AtomicT[48777](?), arg value[46031] :
  T, param arg order[46041] :
  memoryOrder =
  (46038 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_fetch_add[46075](ref arg obj[46072] :
    (46071 call externT T), arg operand[46078] :
    T, arg order[46082] :
    memory_order, arg _chpl_cname[46090] :
    string[24] =
    (46065 call externFunc "fetch_add" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[46096] T
    {
      const tmp[46116] "const" "temp"
      (46117 'move' tmp[46116](46114 'deref'(46113 '_wide_get_locale' this)))
      { scopeless
        (46110 call = ret(46109 call atomic_fetch_add _v value(46108 call c_memory_order order)))
      }
    }
    (46122 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).add[46133](arg _mt[48821]:_MT[227], arg this[48819]:AtomicT[48777](?), arg value[46130] :
  T, param arg order[46140] :
  memoryOrder =
  (46137 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_fetch_add[46159](ref arg obj[46156] :
    (46155 call externT T), arg operand[46162] :
    T, arg order[46166] :
    memory_order, arg _chpl_cname[46174] :
    string[24] =
    (46149 call externFunc "fetch_add" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[46193] "const" "temp"
      (46194 'move' tmp[46193](46191 'deref'(46190 '_wide_get_locale' this)))
      { scopeless
        (46188 call atomic_fetch_add _v value(46187 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchSub[46207](arg _mt[48825]:_MT[227], arg this[48823]:AtomicT[48777](?), arg value[46204] :
  T, param arg order[46214] :
  memoryOrder =
  (46211 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_fetch_sub[46248](ref arg obj[46245] :
    (46244 call externT T), arg operand[46251] :
    T, arg order[46255] :
    memory_order, arg _chpl_cname[46263] :
    string[24] =
    (46238 call externFunc "fetch_sub" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[46269] T
    {
      const tmp[46289] "const" "temp"
      (46290 'move' tmp[46289](46287 'deref'(46286 '_wide_get_locale' this)))
      { scopeless
        (46283 call = ret(46282 call atomic_fetch_sub _v value(46281 call c_memory_order order)))
      }
    }
    (46295 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).sub[46306](arg _mt[48829]:_MT[227], arg this[48827]:AtomicT[48777](?), arg value[46303] :
  T, param arg order[46313] :
  memoryOrder =
  (46310 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    function atomic_fetch_sub[46332](ref arg obj[46329] :
    (46328 call externT T), arg operand[46335] :
    T, arg order[46339] :
    memory_order, arg _chpl_cname[46347] :
    string[24] =
    (46322 call externFunc "fetch_sub" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[46366] "const" "temp"
      (46367 'move' tmp[46366](46364 'deref'(46363 '_wide_get_locale' this)))
      { scopeless
        (46361 call atomic_fetch_sub _v value(46360 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchOr[46380](arg _mt[48833]:_MT[227], arg this[48831]:AtomicT[48777](?), arg value[46377] :
  T, param arg order[46387] :
  memoryOrder =
  (46384 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    if(46418 call _cond_test(46396 call !(46395 call isIntegral T)))
    {
      { scopeless
        (46416 call compilerError "fetchOr is only defined for integer atomic types")
      }
    }
    function atomic_fetch_or[46453](ref arg obj[46450] :
    (46449 call externT T), arg operand[46456] :
    T, arg order[46460] :
    memory_order, arg _chpl_cname[46468] :
    string[24] =
    (46443 call externFunc "fetch_or" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[46473] T
    {
      const tmp[46493] "const" "temp"
      (46494 'move' tmp[46493](46491 'deref'(46490 '_wide_get_locale' this)))
      { scopeless
        (46487 call = ret(46486 call atomic_fetch_or _v value(46485 call c_memory_order order)))
      }
    }
    (46499 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).or[46510](arg _mt[48837]:_MT[227], arg this[48835]:AtomicT[48777](?), arg value[46507] :
  T, param arg order[46517] :
  memoryOrder =
  (46514 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    if(46548 call _cond_test(46526 call !(46525 call isIntegral T)))
    {
      { scopeless
        (46546 call compilerError "or is only defined for integer atomic types")
      }
    }
    function atomic_fetch_or[46568](ref arg obj[46565] :
    (46564 call externT T), arg operand[46571] :
    T, arg order[46575] :
    memory_order, arg _chpl_cname[46583] :
    string[24] =
    (46558 call externFunc "fetch_or" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[46601] "const" "temp"
      (46602 'move' tmp[46601](46599 'deref'(46598 '_wide_get_locale' this)))
      { scopeless
        (46596 call atomic_fetch_or _v value(46595 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchAnd[46615](arg _mt[48841]:_MT[227], arg this[48839]:AtomicT[48777](?), arg value[46612] :
  T, param arg order[46622] :
  memoryOrder =
  (46619 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    if(46653 call _cond_test(46631 call !(46630 call isIntegral T)))
    {
      { scopeless
        (46651 call compilerError "fetchAnd is only defined for integer atomic types")
      }
    }
    function atomic_fetch_and[46688](ref arg obj[46685] :
    (46684 call externT T), arg operand[46691] :
    T, arg order[46695] :
    memory_order, arg _chpl_cname[46703] :
    string[24] =
    (46678 call externFunc "fetch_and" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[46708] T
    {
      const tmp[46728] "const" "temp"
      (46729 'move' tmp[46728](46726 'deref'(46725 '_wide_get_locale' this)))
      { scopeless
        (46722 call = ret(46721 call atomic_fetch_and _v value(46720 call c_memory_order order)))
      }
    }
    (46734 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).and[46745](arg _mt[48845]:_MT[227], arg this[48843]:AtomicT[48777](?), arg value[46742] :
  T, param arg order[46752] :
  memoryOrder =
  (46749 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    if(46783 call _cond_test(46761 call !(46760 call isIntegral T)))
    {
      { scopeless
        (46781 call compilerError "and is only defined for integer atomic types")
      }
    }
    function atomic_fetch_and[46803](ref arg obj[46800] :
    (46799 call externT T), arg operand[46806] :
    T, arg order[46810] :
    memory_order, arg _chpl_cname[46818] :
    string[24] =
    (46793 call externFunc "fetch_and" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[46836] "const" "temp"
      (46837 'move' tmp[46836](46834 'deref'(46833 '_wide_get_locale' this)))
      { scopeless
        (46831 call atomic_fetch_and _v value(46830 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchXor[46850](arg _mt[48849]:_MT[227], arg this[48847]:AtomicT[48777](?), arg value[46847] :
  T, param arg order[46857] :
  memoryOrder =
  (46854 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    if(46888 call _cond_test(46866 call !(46865 call isIntegral T)))
    {
      { scopeless
        (46886 call compilerError "fetchXor is only defined for integer atomic types")
      }
    }
    function atomic_fetch_xor[46923](ref arg obj[46920] :
    (46919 call externT T), arg operand[46926] :
    T, arg order[46930] :
    memory_order, arg _chpl_cname[46938] :
    string[24] =
    (46913 call externFunc "fetch_xor" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[46943] T
    {
      const tmp[46963] "const" "temp"
      (46964 'move' tmp[46963](46961 'deref'(46960 '_wide_get_locale' this)))
      { scopeless
        (46957 call = ret(46956 call atomic_fetch_xor _v value(46955 call c_memory_order order)))
      }
    }
    (46969 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).xor[46980](arg _mt[48853]:_MT[227], arg this[48851]:AtomicT[48777](?), arg value[46977] :
  T, param arg order[46987] :
  memoryOrder =
  (46984 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    if(47018 call _cond_test(46996 call !(46995 call isIntegral T)))
    {
      { scopeless
        (47016 call compilerError "xor is only defined for integer atomic types")
      }
    }
    function atomic_fetch_xor[47038](ref arg obj[47035] :
    (47034 call externT T), arg operand[47041] :
    T, arg order[47045] :
    memory_order, arg _chpl_cname[47053] :
    string[24] =
    (47028 call externFunc "fetch_xor" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[47071] "const" "temp"
      (47072 'move' tmp[47071](47069 'deref'(47068 '_wide_get_locale' this)))
      { scopeless
        (47066 call atomic_fetch_xor _v value(47065 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).waitFor[47085](arg _mt[48857]:_MT[227], const arg this[48855]:AtomicT[48777](?), arg value[47082] :
  T, param arg order[47092] :
  memoryOrder =
  (47089 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    {
      const tmp[47174] "const" "temp"
      (47175 'move' tmp[47174](47172 'deref'(47171 '_wide_get_locale' this)))
      {
        {
          unknown tmp[47117] "temp"
          (47159 'move' tmp[47117](47145 call _cond_test(47147 call !=(47152 call(47149 call . this c"read")(order =(47154 call . memoryOrder c"relaxed"))) value)))
          WhileDo
          {
            {
              (47114 call chpl_task_yield)
            }
            label _continueLabel[47120]
            (47140 'move' tmp[47117](47126 call _cond_test(47128 call !=(47133 call(47130 call . this c"read")(order =(47135 call . memoryOrder c"relaxed"))) value)))
            tmp[47117]
          }
          label _breakLabel[47121]
        }
        (47169 call chpl_atomic_thread_fence(47167 call c_memory_order order))
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).writeThis[47187](arg _mt[48861]:_MT[227], const arg this[48859]:AtomicT[48777](?), arg x[47185]:_any[170](?)) : _unknown[43] "method" "primary method" "no doc"
  {
    (47193 call <~> x(47192 call read))
  } function AtomicT[48777](?).compareExchange[47205](arg _mt[48865]:_MT[227], arg this[48863]:AtomicT[48777](?), arg expected[47202] :
  T, arg desired[47208] :
  T, param arg order[47216] :
  memoryOrder =
  (47213 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (47224 call compilerWarning "compareExchange is deprecated (and will be repurposed in a future release), use compareAndSwap")
    (47236 return(47235 call(47228 call . this c"compareAndSwap") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).compareExchangeWeak[47247](arg _mt[48869]:_MT[227], arg this[48867]:AtomicT[48777](?), arg expected[47244] :
  T, arg desired[47250] :
  T, param arg order[47258] :
  memoryOrder =
  (47255 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (47266 call compilerWarning "compareExchangeWeak is deprecated (and will be repurposed in a future release), use compareAndSwap")
    (47278 return(47277 call(47270 call . this c"compareAndSwap") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).compareExchangeStrong[47289](arg _mt[48873]:_MT[227], arg this[48871]:AtomicT[48777](?), arg expected[47286] :
  T, arg desired[47292] :
  T, param arg order[47300] :
  memoryOrder =
  (47297 call . memoryOrder c"seqCst")) : _unknown[43] "inline" "method" "primary method"
  {
    (47308 call compilerWarning "compareExchangeStrong is deprecated (and will be repurposed in a future release), use compareAndSwap")
    (47320 return(47319 call(47312 call . this c"compareAndSwap") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).read[47331](arg _mt[48877]:_MT[227], const arg this[48875]:AtomicT[48777](?), arg order[47328] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47337 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_load[47354](const  ref arg obj[47351] :
    (47350 call externT T), arg order[47357] :
    memory_order, arg _chpl_cname[47365] :
    string[24] =
    (47344 call externFunc "load" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[47370] T
    {
      const tmp[47386] "const" "temp"
      (47387 'move' tmp[47386](47384 'deref'(47383 '_wide_get_locale' this)))
      { scopeless
        (47380 call = ret(47379 call atomic_load _v order))
      }
    }
    (47392 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).write[47403](arg _mt[48881]:_MT[227], arg this[48879]:AtomicT[48777](?), arg value[47400] :
  T, arg order[47406] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47413 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_store[47430](ref arg obj[47427] :
    (47426 call externT T), arg value[47433] :
    T, arg order[47437] :
    memory_order, arg _chpl_cname[47445] :
    string[24] =
    (47420 call externFunc "store" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[47460] "const" "temp"
      (47461 'move' tmp[47460](47458 'deref'(47457 '_wide_get_locale' this)))
      { scopeless
        (47455 call atomic_store _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).exchange[47474](arg _mt[48885]:_MT[227], arg this[48883]:AtomicT[48777](?), arg value[47471] :
  T, arg order[47477] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47484 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_exchange[47501](ref arg obj[47498] :
    (47497 call externT T), arg value[47504] :
    T, arg order[47508] :
    memory_order, arg _chpl_cname[47516] :
    string[24] =
    (47491 call externFunc "exchange" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[47521] T
    {
      const tmp[47538] "const" "temp"
      (47539 'move' tmp[47538](47536 'deref'(47535 '_wide_get_locale' this)))
      { scopeless
        (47532 call = ret(47531 call atomic_exchange _v value order))
      }
    }
    (47544 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).compareExchange[47555](arg _mt[48889]:_MT[227], arg this[48887]:AtomicT[48777](?), arg expected[47552] :
  T, arg desired[47558] :
  T, arg order[47562] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47575 return(47574 call(47567 call . this c"compareExchangeStrong") expected desired order))
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).compareExchangeWeak[47587](arg _mt[48893]:_MT[227], arg this[48891]:AtomicT[48777](?), arg expected[47584] :
  T, arg desired[47590] :
  T, arg order[47594] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47601 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_weak[47618](ref arg obj[47615] :
    (47614 call externT T), arg expected[47621] :
    T, arg desired[47625] :
    T, arg order[47629] :
    memory_order, arg _chpl_cname[47637] :
    string[24] =
    (47608 call externFunc "compare_exchange_weak" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[47642] bool[10]
    {
      const tmp[47660] "const" "temp"
      (47661 'move' tmp[47660](47658 'deref'(47657 '_wide_get_locale' this)))
      { scopeless
        (47654 call = ret(47653 call atomic_compare_exchange_weak _v expected desired order))
      }
    }
    (47666 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).compareExchangeStrong[47677](arg _mt[48897]:_MT[227], arg this[48895]:AtomicT[48777](?), arg expected[47674] :
  T, arg desired[47680] :
  T, arg order[47684] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47691 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_compare_exchange_strong[47708](ref arg obj[47705] :
    (47704 call externT T), arg expected[47711] :
    T, arg desired[47715] :
    T, arg order[47719] :
    memory_order, arg _chpl_cname[47727] :
    string[24] =
    (47698 call externFunc "compare_exchange_strong" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[47732] bool[10]
    {
      const tmp[47750] "const" "temp"
      (47751 'move' tmp[47750](47748 'deref'(47747 '_wide_get_locale' this)))
      { scopeless
        (47744 call = ret(47743 call atomic_compare_exchange_strong _v expected desired order))
      }
    }
    (47756 return ret)
  }
  { scopeless type
    bool[10]
  } function AtomicT[48777](?).fetchAdd[47767](arg _mt[48901]:_MT[227], arg this[48899]:AtomicT[48777](?), arg value[47764] :
  T, arg order[47770] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47777 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_add[47794](ref arg obj[47791] :
    (47790 call externT T), arg operand[47797] :
    T, arg order[47801] :
    memory_order, arg _chpl_cname[47809] :
    string[24] =
    (47784 call externFunc "fetch_add" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[47814] T
    {
      const tmp[47831] "const" "temp"
      (47832 'move' tmp[47831](47829 'deref'(47828 '_wide_get_locale' this)))
      { scopeless
        (47825 call = ret(47824 call atomic_fetch_add _v value order))
      }
    }
    (47837 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).add[47848](arg _mt[48905]:_MT[227], arg this[48903]:AtomicT[48777](?), arg value[47845] :
  T, arg order[47851] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47858 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_add[47875](ref arg obj[47872] :
    (47871 call externT T), arg operand[47878] :
    T, arg order[47882] :
    memory_order, arg _chpl_cname[47890] :
    string[24] =
    (47865 call externFunc "fetch_add" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[47905] "const" "temp"
      (47906 'move' tmp[47905](47903 'deref'(47902 '_wide_get_locale' this)))
      { scopeless
        (47900 call atomic_fetch_add _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchSub[47919](arg _mt[48909]:_MT[227], arg this[48907]:AtomicT[48777](?), arg value[47916] :
  T, arg order[47922] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (47929 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_sub[47946](ref arg obj[47943] :
    (47942 call externT T), arg operand[47949] :
    T, arg order[47953] :
    memory_order, arg _chpl_cname[47961] :
    string[24] =
    (47936 call externFunc "fetch_sub" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[47966] T
    {
      const tmp[47983] "const" "temp"
      (47984 'move' tmp[47983](47981 'deref'(47980 '_wide_get_locale' this)))
      { scopeless
        (47977 call = ret(47976 call atomic_fetch_sub _v value order))
      }
    }
    (47989 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).sub[48000](arg _mt[48913]:_MT[227], arg this[48911]:AtomicT[48777](?), arg value[47997] :
  T, arg order[48003] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48010 call compilerWarning "memory_order is deprecated, use memoryOrder")
    function atomic_fetch_sub[48027](ref arg obj[48024] :
    (48023 call externT T), arg operand[48030] :
    T, arg order[48034] :
    memory_order, arg _chpl_cname[48042] :
    string[24] =
    (48017 call externFunc "fetch_sub" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[48057] "const" "temp"
      (48058 'move' tmp[48057](48055 'deref'(48054 '_wide_get_locale' this)))
      { scopeless
        (48052 call atomic_fetch_sub _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchOr[48071](arg _mt[48917]:_MT[227], arg this[48915]:AtomicT[48777](?), arg value[48068] :
  T, arg order[48074] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48081 call compilerWarning "memory_order is deprecated, use memoryOrder")
    if(48095 call _cond_test(48088 call !(48087 call isIntegral T)))
    {
      { scopeless
        (48093 call compilerError "fetchOr is only defined for integer atomic types")
      }
    }
    function atomic_fetch_or[48114](ref arg obj[48111] :
    (48110 call externT T), arg operand[48117] :
    T, arg order[48121] :
    memory_order, arg _chpl_cname[48129] :
    string[24] =
    (48104 call externFunc "fetch_or" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[48134] T
    {
      const tmp[48151] "const" "temp"
      (48152 'move' tmp[48151](48149 'deref'(48148 '_wide_get_locale' this)))
      { scopeless
        (48145 call = ret(48144 call atomic_fetch_or _v value order))
      }
    }
    (48157 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).or[48168](arg _mt[48921]:_MT[227], arg this[48919]:AtomicT[48777](?), arg value[48165] :
  T, arg order[48171] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48178 call compilerWarning "memory_order is deprecated, use memoryOrder")
    if(48192 call _cond_test(48185 call !(48184 call isIntegral T)))
    {
      { scopeless
        (48190 call compilerError "or is only defined for integer atomic types")
      }
    }
    function atomic_fetch_or[48211](ref arg obj[48208] :
    (48207 call externT T), arg operand[48214] :
    T, arg order[48218] :
    memory_order, arg _chpl_cname[48226] :
    string[24] =
    (48201 call externFunc "fetch_or" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[48241] "const" "temp"
      (48242 'move' tmp[48241](48239 'deref'(48238 '_wide_get_locale' this)))
      { scopeless
        (48236 call atomic_fetch_or _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchAnd[48255](arg _mt[48925]:_MT[227], arg this[48923]:AtomicT[48777](?), arg value[48252] :
  T, arg order[48258] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48265 call compilerWarning "memory_order is deprecated, use memoryOrder")
    if(48279 call _cond_test(48272 call !(48271 call isIntegral T)))
    {
      { scopeless
        (48277 call compilerError "fetchAnd is only defined for integer atomic types")
      }
    }
    function atomic_fetch_and[48298](ref arg obj[48295] :
    (48294 call externT T), arg operand[48301] :
    T, arg order[48305] :
    memory_order, arg _chpl_cname[48313] :
    string[24] =
    (48288 call externFunc "fetch_and" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[48318] T
    {
      const tmp[48335] "const" "temp"
      (48336 'move' tmp[48335](48333 'deref'(48332 '_wide_get_locale' this)))
      { scopeless
        (48329 call = ret(48328 call atomic_fetch_and _v value order))
      }
    }
    (48341 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).and[48352](arg _mt[48929]:_MT[227], arg this[48927]:AtomicT[48777](?), arg value[48349] :
  T, arg order[48355] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48362 call compilerWarning "memory_order is deprecated, use memoryOrder")
    if(48376 call _cond_test(48369 call !(48368 call isIntegral T)))
    {
      { scopeless
        (48374 call compilerError "and is only defined for integer atomic types")
      }
    }
    function atomic_fetch_and[48395](ref arg obj[48392] :
    (48391 call externT T), arg operand[48398] :
    T, arg order[48402] :
    memory_order, arg _chpl_cname[48410] :
    string[24] =
    (48385 call externFunc "fetch_and" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[48425] "const" "temp"
      (48426 'move' tmp[48425](48423 'deref'(48422 '_wide_get_locale' this)))
      { scopeless
        (48420 call atomic_fetch_and _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).fetchXor[48439](arg _mt[48933]:_MT[227], arg this[48931]:AtomicT[48777](?), arg value[48436] :
  T, arg order[48442] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48449 call compilerWarning "memory_order is deprecated, use memoryOrder")
    if(48463 call _cond_test(48456 call !(48455 call isIntegral T)))
    {
      { scopeless
        (48461 call compilerError "fetchXor is only defined for integer atomic types")
      }
    }
    function atomic_fetch_xor[48482](ref arg obj[48479] :
    (48478 call externT T), arg operand[48485] :
    T, arg order[48489] :
    memory_order, arg _chpl_cname[48497] :
    string[24] =
    (48472 call externFunc "fetch_xor" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    unknown ret[48502] T
    {
      const tmp[48519] "const" "temp"
      (48520 'move' tmp[48519](48517 'deref'(48516 '_wide_get_locale' this)))
      { scopeless
        (48513 call = ret(48512 call atomic_fetch_xor _v value order))
      }
    }
    (48525 return ret)
  }
  { scopeless type
    T
  } function AtomicT[48777](?).xor[48536](arg _mt[48937]:_MT[227], arg this[48935]:AtomicT[48777](?), arg value[48533] :
  T, arg order[48539] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48546 call compilerWarning "memory_order is deprecated, use memoryOrder")
    if(48560 call _cond_test(48553 call !(48552 call isIntegral T)))
    {
      { scopeless
        (48558 call compilerError "xor is only defined for integer atomic types")
      }
    }
    function atomic_fetch_xor[48579](ref arg obj[48576] :
    (48575 call externT T), arg operand[48582] :
    T, arg order[48586] :
    memory_order, arg _chpl_cname[48594] :
    string[24] =
    (48569 call externFunc "fetch_xor" T)) : _unknown[43] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      T
    }
    {
      const tmp[48609] "const" "temp"
      (48610 'move' tmp[48609](48607 'deref'(48606 '_wide_get_locale' this)))
      { scopeless
        (48604 call atomic_fetch_xor _v value order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).waitFor[48623](arg _mt[48941]:_MT[227], const arg this[48939]:AtomicT[48777](?), arg value[48620] :
  T, arg order[48626] :
  memory_order) : _unknown[43] "inline" "method" "primary method" "no doc"
  {
    (48633 call compilerWarning "memory_order is deprecated, use memoryOrder")
    {
      const tmp[48710] "const" "temp"
      (48711 'move' tmp[48710](48708 'deref'(48707 '_wide_get_locale' this)))
      {
        {
          unknown tmp[48656] "temp"
          (48698 'move' tmp[48656](48684 call _cond_test(48686 call !=(48691 call(48688 call . this c"read")(order =(48693 call . memoryOrder c"relaxed"))) value)))
          WhileDo
          {
            {
              (48653 call chpl_task_yield)
            }
            label _continueLabel[48659]
            (48679 'move' tmp[48656](48665 call _cond_test(48667 call !=(48672 call(48669 call . this c"read")(order =(48674 call . memoryOrder c"relaxed"))) value)))
            tmp[48656]
          }
          label _breakLabel[48660]
        }
        (48705 call chpl_atomic_thread_fence order)
      }
    }
  }
  { scopeless type
    void[4]
  } function AtomicT[48777](?).peek[48720](arg _mt[48945]:_MT[227], const arg this[48943]:AtomicT[48777](?)) : _unknown[43] "inline" "last resort" "method" "primary method"
  {
    (48726 call compilerWarning "Default usage of peek() is deprecated, use PeekPoke")
    (48740 return(48739 call(48730 call . this c"read")(order =(48734 call . memoryOrder c"relaxed"))))
  }
  { scopeless type
    T
  } function AtomicT[48777](?).poke[48751](arg _mt[48949]:_MT[227], arg this[48947]:AtomicT[48777](?), arg value[48748] :
  T) : _unknown[43] "inline" "last resort" "method" "primary method"
  {
    (48757 call compilerWarning "Default usage of poke() is deprecated, use PeekPoke")
    (48771 call(48761 call . this c"write") value(order =(48767 call . memoryOrder c"relaxed")))
  }
  { scopeless type
    void[4]
  }
  function =[48958](ref arg a[48955] :
  AtomicBool, const  ref arg b[48961] :
  AtomicBool) : _unknown[43] "assignop" "inline"
  {
    (48975 call(48965 call . a c"write")(48973 call(48969 call . b c"read")))
  }
  function =[48986](ref arg a[48983] :
  AtomicBool, arg b[48988]:_any[170](?)) : _unknown[43] "assignop" "inline"
  {
    (49010 call compilerError "Cannot directly assign atomic variables")
  }
  function =[49021](ref arg a[49018] :
  AtomicT, const  ref arg b[49024] :
  AtomicT) : _unknown[43] "assignop" "inline"
  {
    (49038 call(49028 call . a c"write")(49036 call(49032 call . b c"read")))
  }
  function =[49049](ref arg a[49046] :
  AtomicT, arg b[49051]:_any[170](?)) : _unknown[43] "assignop" "inline"
  {
    (49056 call compilerError "Cannot directly assign atomic variables")
  }
  function +[49067](arg a[49064] :
  AtomicT, arg b[49069]:_any[170](?)) : _unknown[43] "inline"
  {
    (49089 call compilerError "Cannot directly add atomic variables")
    (49093 return a)
  }
  function -[49103](arg a[49100] :
  AtomicT, arg b[49105]:_any[170](?)) : _unknown[43] "inline"
  {
    (49127 call compilerError "Cannot directly subtract atomic variables")
    (49131 return a)
  }
  function *[49141](arg a[49138] :
  AtomicT, arg b[49143]:_any[170](?)) : _unknown[43] "inline"
  {
    (49163 call compilerError "Cannot directly multiply atomic variables")
    (49167 return a)
  }
  function /[49177](arg a[49174] :
  AtomicT, arg b[49179]:_any[170](?)) : _unknown[43] "inline"
  {
    (49199 call compilerError "Cannot directly divide atomic variables")
    (49203 return a)
  }
  function %[49213](arg a[49210] :
  AtomicT, arg b[49215]:_any[170](?)) : _unknown[43] "inline"
  {
    (49220 call compilerError "Cannot directly divide atomic variables")
    (49224 return a)
  }
}