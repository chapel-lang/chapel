AST dump for FormattedIO after pass scopeResolve.
Module use list: ChapelStandard Regexp 

{
  function _toIntegral[237752](arg x[237749] :
  unknown t[237747]) : _unknown[43] "inline" "private"
  {
    (237763 return(237761 call _build_tuple x[237749] 1))
  }
  where {
    (237757 call isIntegralType t[237747])
  }
  function _toIntegral[237777](arg x[237774] :
  unknown t[237772]) : _unknown[43] "inline" "private"
  {
    unknown ret[237796](237794 call _build_tuple int(64)[13] bool[10])
    Try
    {
      {
        if(237825 call _cond_test(237803 call isAbstractEnumType t[237772]))
        {
          (237810 call = ret[237796](237808 call _build_tuple 0 0))
        }
        {
          (237822 call = ret[237796](237820 call _build_tuple(237816 call _cast int(64)[13] x[237774]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[328938] "temp"(328940 'current error')
      unknown chpl_anon_error[328943](328947 'new'(328944 call _owned[39039](?) tmp[328938]))
      {
        (237839 call = ret[237796](237837 call _build_tuple 0 0))
      }
    }
    (237847 return ret[237796])
  }
  where {
    (237789 call &&(237782 call _isIoPrimitiveType t[237772])(237787 call !(237786 call isIntegralType t[237772])))
  }
  function _toIntegral[237859](arg x[237856] :
  unknown t[237854]) : _unknown[43] "inline" "private"
  {
    (237872 return(237870 call _build_tuple 0 0))
  }
  where {
    (237865 call !(237864 call _isIoPrimitiveType t[237854]))
  }
  function _toSigned[237885](arg x[237882] :
  unknown t[237880]) : _unknown[43] "inline" "private"
  {
    (237896 return(237894 call _build_tuple x[237882] 1))
  }
  where {
    (237890 call isIntType t[237880])
  }
  function _toSigned[237911](arg x[237908] :
  (237907 call uint(64)[107] 8)) : _unknown[43] "inline" "private"
  {
    (237924 return(237922 call _build_tuple(237918 call _cast(237917 call int(64)[13] 8) x[237908]) 1))
  }
  function _toSigned[237938](arg x[237935] :
  (237934 call uint(64)[107] 16)) : _unknown[43] "inline" "private"
  {
    (237951 return(237949 call _build_tuple(237945 call _cast(237944 call int(64)[13] 16) x[237935]) 1))
  }
  function _toSigned[237965](arg x[237962] :
  (237961 call uint(64)[107] 32)) : _unknown[43] "inline" "private"
  {
    (237978 return(237976 call _build_tuple(237972 call _cast(237971 call int(64)[13] 32) x[237962]) 1))
  }
  function _toSigned[237992](arg x[237989] :
  (237988 call uint(64)[107] 64)) : _unknown[43] "inline" "private"
  {
    (238005 return(238003 call _build_tuple(237999 call _cast(237998 call int(64)[13] 64) x[237989]) 1))
  }
  function _toSigned[238017](arg x[238014] :
  unknown t[238012]) : _unknown[43] "inline" "private"
  {
    unknown ret[238036](238034 call _build_tuple int(64)[13] bool[10])
    Try
    {
      {
        if(238065 call _cond_test(238043 call isAbstractEnumType t[238012]))
        {
          (238050 call = ret[238036](238048 call _build_tuple 0 0))
        }
        {
          (238062 call = ret[238036](238060 call _build_tuple(238056 call _cast int(64)[13] x[238014]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[328950] "temp"(328952 'current error')
      unknown chpl_anon_error[328955](328959 'new'(328956 call _owned[39039](?) tmp[328950]))
      {
        (238079 call = ret[238036](238077 call _build_tuple 0 0))
      }
    }
    (238087 return ret[238036])
  }
  where {
    (238029 call &&(238022 call _isIoPrimitiveType t[238012])(238027 call !(238026 call isIntegralType t[238012])))
  }
  function _toSigned[238099](arg x[238096] :
  unknown t[238094]) : _unknown[43] "inline" "private"
  {
    (238115 return(238113 call _build_tuple(238109 call _cast int(64)[13] 0) 0))
  }
  where {
    (238105 call !(238104 call _isIoPrimitiveType t[238094]))
  }
  function _toUnsigned[238128](arg x[238125] :
  unknown t[238123]) : _unknown[43] "inline" "private"
  {
    (238139 return(238137 call _build_tuple x[238125] 1))
  }
  where {
    (238133 call isUintType t[238123])
  }
  function _toUnsigned[238154](arg x[238151] :
  (238150 call int(64)[13] 8)) : _unknown[43] "inline" "private"
  {
    (238167 return(238165 call _build_tuple(238161 call _cast(238160 call uint(64)[107] 8) x[238151]) 1))
  }
  function _toUnsigned[238181](arg x[238178] :
  (238177 call int(64)[13] 16)) : _unknown[43] "inline" "private"
  {
    (238194 return(238192 call _build_tuple(238188 call _cast(238187 call uint(64)[107] 16) x[238178]) 1))
  }
  function _toUnsigned[238208](arg x[238205] :
  (238204 call int(64)[13] 32)) : _unknown[43] "inline" "private"
  {
    (238221 return(238219 call _build_tuple(238215 call _cast(238214 call uint(64)[107] 32) x[238205]) 1))
  }
  function _toUnsigned[238235](arg x[238232] :
  (238231 call int(64)[13] 64)) : _unknown[43] "inline" "private"
  {
    (238248 return(238246 call _build_tuple(238242 call _cast(238241 call uint(64)[107] 64) x[238232]) 1))
  }
  function _toUnsigned[238260](arg x[238257] :
  unknown t[238255]) : _unknown[43] "inline" "private"
  {
    unknown ret[238279](238277 call _build_tuple uint(64)[107] bool[10])
    Try
    {
      {
        if(238311 call _cond_test(238286 call isAbstractEnumType t[238255]))
        {
          (238296 call = ret[238279](238294 call _build_tuple(238290 call _cast uint(64)[107] 0) 0))
        }
        {
          (238308 call = ret[238279](238306 call _build_tuple(238302 call _cast uint(64)[107] x[238257]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[328962] "temp"(328964 'current error')
      unknown chpl_anon_error[328967](328971 'new'(328968 call _owned[39039](?) tmp[328962]))
      {
        (238328 call = ret[238279](238326 call _build_tuple(238322 call _cast uint(64)[107] 0) 0))
      }
    }
    (238336 return ret[238279])
  }
  where {
    (238272 call &&(238265 call _isIoPrimitiveType t[238255])(238270 call !(238269 call isIntegralType t[238255])))
  }
  function _toUnsigned[238348](arg x[238345] :
  unknown t[238343]) : _unknown[43] "inline" "private"
  {
    (238364 return(238362 call _build_tuple(238358 call _cast uint(64)[107] 0) 0))
  }
  where {
    (238354 call !(238353 call _isIoPrimitiveType t[238343]))
  }
  function _toReal[238377](arg x[238374] :
  unknown t[238372]) : _unknown[43] "inline" "private"
  {
    (238388 return(238386 call _build_tuple x[238374] 1))
  }
  where {
    (238382 call isRealType t[238372])
  }
  function _toReal[238401](arg x[238398] :
  unknown t[238396]) : _unknown[43] "inline" "private"
  {
    unknown ret[238420](238418 call _build_tuple real(64)[16] bool[10])
    Try
    {
      {
        if(238449 call _cond_test(238427 call isAbstractEnumType t[238396]))
        {
          (238434 call = ret[238420](238432 call _build_tuple 0.0 0))
        }
        {
          (238446 call = ret[238420](238444 call _build_tuple(238440 call _cast real(64)[16] x[238398]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[328974] "temp"(328976 'current error')
      unknown chpl_anon_error[328979](328983 'new'(328980 call _owned[39039](?) tmp[328974]))
      {
        (238463 call = ret[238420](238461 call _build_tuple 0.0 0))
      }
    }
    (238471 return ret[238420])
  }
  where {
    (238413 call &&(238406 call _isIoPrimitiveType t[238396])(238411 call !(238410 call isRealType t[238396])))
  }
  function _toReal[238483](arg x[238480] :
  unknown t[238478]) : _unknown[43] "inline" "private"
  {
    (238496 return(238494 call _build_tuple 0.0 0))
  }
  where {
    (238489 call !(238488 call _isIoPrimitiveType t[238478]))
  }
  function _toImag[238509](arg x[238506] :
  unknown t[238504]) : _unknown[43] "inline" "private"
  {
    (238520 return(238518 call _build_tuple x[238506] 1))
  }
  where {
    (238514 call isImagType t[238504])
  }
  function _toImag[238533](arg x[238530] :
  unknown t[238528]) : _unknown[43] "inline" "private"
  {
    unknown ret[238552](238550 call _build_tuple imag(64)[122] bool[10])
    Try
    {
      {
        if(238581 call _cond_test(238559 call isAbstractEnumType t[238528]))
        {
          (238566 call = ret[238552](238564 call _build_tuple 0.0i 0))
        }
        {
          (238578 call = ret[238552](238576 call _build_tuple(238572 call _cast imag(64)[122] x[238530]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[328986] "temp"(328988 'current error')
      unknown chpl_anon_error[328991](328995 'new'(328992 call _owned[39039](?) tmp[328986]))
      {
        (238595 call = ret[238552](238593 call _build_tuple 0.0i 0))
      }
    }
    (238603 return ret[238552])
  }
  where {
    (238545 call &&(238538 call _isIoPrimitiveType t[238528])(238543 call !(238542 call isImagType t[238528])))
  }
  function _toImag[238615](arg x[238612] :
  unknown t[238610]) : _unknown[43] "inline" "private"
  {
    (238628 return(238626 call _build_tuple 0.0i 0))
  }
  where {
    (238621 call !(238620 call _isIoPrimitiveType t[238610]))
  }
  function _toComplex[238641](arg x[238638] :
  unknown t[238636]) : _unknown[43] "inline" "private"
  {
    (238652 return(238650 call _build_tuple x[238638] 1))
  }
  where {
    (238646 call isComplexType t[238636])
  }
  function _toComplex[238665](arg x[238662] :
  unknown t[238660]) : _unknown[43] "inline" "private"
  {
    unknown ret[238684](238682 call _build_tuple complex(128)[132] bool[10])
    Try
    {
      {
        if(238716 call _cond_test(238691 call isAbstractEnumType t[238660]))
        {
          (238701 call = ret[238684](238699 call _build_tuple(238695 call + 0.0 0.0i) 0))
        }
        {
          (238713 call = ret[238684](238711 call _build_tuple(238707 call _cast complex(128)[132] x[238662]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[328998] "temp"(329000 'current error')
      unknown chpl_anon_error[329003](329007 'new'(329004 call _owned[39039](?) tmp[328998]))
      {
        (238733 call = ret[238684](238731 call _build_tuple(238727 call + 0.0 0.0i) 0))
      }
    }
    (238741 return ret[238684])
  }
  where {
    (238677 call &&(238670 call _isIoPrimitiveType t[238660])(238675 call !(238674 call isComplexType t[238660])))
  }
  function _toComplex[238753](arg x[238750] :
  unknown t[238748]) : _unknown[43] "inline" "private"
  {
    (238769 return(238767 call _build_tuple(238763 call + 0.0 0.0i) 0))
  }
  where {
    (238759 call !(238758 call _isIoPrimitiveType t[238748]))
  }
  function _toRealOrComplex[238782](arg x[238779] :
  unknown t[238777]) : _unknown[43] "inline" "private"
  {
    (238793 return(238791 call _build_tuple x[238779] 1))
  }
  where {
    (238787 call isComplexType t[238777])
  }
  function _toRealOrComplex[238806](arg x[238803] :
  unknown t[238801]) : _unknown[43] "inline" "private"
  {
    (238817 return(238815 call _build_tuple x[238803] 1))
  }
  where {
    (238811 call isFloatType t[238801])
  }
  function _toRealOrComplex[238830](arg x[238827] :
  unknown t[238825]) : _unknown[43] "inline" "private"
  {
    (238860 return(238858 call _build_tuple(238854 call _cast real(64)[16] x[238827]) 1))
  }
  where {
    (238850 call &&(238842 call &&(238835 call _isIoPrimitiveType t[238825])(238840 call !(238839 call isComplexType t[238825])))(238848 call !(238847 call isFloatType t[238825])))
  }
  function _toRealOrComplex[238873](arg x[238870] :
  unknown t[238868]) : _unknown[43] "inline" "private"
  {
    (238886 return(238884 call _build_tuple 0.0 0))
  }
  where {
    (238879 call !(238878 call _isIoPrimitiveType t[238868]))
  }
  function _toNumeric[238899](arg x[238896] :
  unknown t[238894]) : _unknown[43] "inline" "private"
  {
    (238910 return(238908 call _build_tuple x[238896] 1))
  }
  where {
    (238904 call isNumericType t[238894])
  }
  function _toNumeric[238923](arg x[238920] :
  unknown t[238918]) : _unknown[43] "inline" "private"
  {
    unknown ret[238942](238940 call _build_tuple int(64)[13] bool[10])
    Try
    {
      {
        if(238971 call _cond_test(238949 call isAbstractEnumType t[238918]))
        {
          (238956 call = ret[238942](238954 call _build_tuple 0 0))
        }
        {
          (238968 call = ret[238942](238966 call _build_tuple(238962 call _cast int(64)[13] x[238920]) 1))
        }
      }
    }
    Catch
    {
      unknown tmp[329010] "temp"(329012 'current error')
      unknown chpl_anon_error[329015](329019 'new'(329016 call _owned[39039](?) tmp[329010]))
      {
        (238985 call = ret[238942](238983 call _build_tuple 0 0))
      }
    }
    (238993 return ret[238942])
  }
  where {
    (238935 call &&(238928 call _isIoPrimitiveType t[238918])(238933 call !(238932 call isNumericType t[238918])))
  }
  function _toNumeric[239005](arg x[239002] :
  unknown t[239000]) : _unknown[43] "inline" "private"
  {
    (239018 return(239016 call _build_tuple 0 0))
  }
  where {
    (239011 call !(239010 call _isIoPrimitiveType t[239000]))
  }
  function _toBytes[239030](arg x[239027] :
  bytes[22]) : _unknown[43] "inline" "private"
  {
    (239037 return(239035 call _build_tuple x[239027] 1))
  }
  function _toBytes[239048](arg x[239045] :
  string[24]) : _unknown[43] "inline" "private"
  {
    (239058 return(239056 call _build_tuple(239052 call _cast bytes[22] x[239045]) 1))
  }
  function _toBytes[239070](arg x[239067] :
  unknown t[239065]) : _unknown[43] "inline" "private"
  {
    (239095 return(239093 call _build_tuple(239089 call _cast bytes[22] "") 0))
  }
  function _toString[239106](arg x[239103] :
  string[24]) : _unknown[43] "inline" "private"
  {
    (239113 return(239111 call _build_tuple x[239103] 1))
  }
  function _toString[239124](arg x[239121] :
  bytes[22]) : _unknown[43] "inline" "private"
  {
    (239146 return(239144 call _build_tuple "" 0))
  }
  function _toString[239158](arg x[239155] :
  unknown t[239153]) : _unknown[43] "inline" "private"
  {
    (239184 return(239182 call _build_tuple(239178 call _cast string[24] x[239155]) 1))
  }
  where {
    (239174 call &&(239168 call &&(239163 call _isIoPrimitiveType t[239153])(239166 call != t[239153] bytes[22]))(239172 call != t[239153] string[24]))
  }
  function _toString[239197](arg x[239194] :
  unknown t[239192]) : _unknown[43] "inline" "private"
  {
    (239225 return(239223 call _build_tuple "" 0))
  }
  where {
    (239203 call !(239202 call _isIoPrimitiveType t[239192]))
  }
  function _toStringFromBytesOrString[239237](arg x[239234] :
  bytes[22]) : _unknown[43] "inline" "private"
  {
    (239260 return(239258 call _build_tuple(239255 call createStringWithBorrowedBuffer(239241 call . x[239234] c"buff")(length =(239246 call . x[239234] c"length"))(size =(239251 call . x[239234] c"_size"))) 1))
  }
  function _toStringFromBytesOrString[239271](arg x[239268] :
  string[24]) : _unknown[43] "inline" "private"
  {
    (239278 return(239276 call _build_tuple x[239268] 1))
  }
  function _toStringFromBytesOrString[239287](arg x[239285]:_any[170](?)) : _unknown[43] "inline" "private"
  {
    (239309 return(239307 call _build_tuple "" 0))
  }
  function _toChar[239321](arg x[239318] :
  unknown t[239316]) : _unknown[43] "inline" "private"
  {
    (239338 return(239336 call _build_tuple(239332 call _cast(239331 call int(64)[13] 32) x[239318]) 1))
  }
  where {
    (239326 call isIntegralType t[239316])
  }
  function _toChar[239351](arg x[239348] :
  unknown t[239346]) : _unknown[43] "inline" "private"
  {
    unknown chr[239361](239360 call int(64)[13] 32)
    unknown nbytes[239366] c_int[209569]
    unknown local_x[239375](239374 call(239370 call . x[239348] c"localize"))
    (239395 call qio_decode_char_buf chr[239361] nbytes[239366](239387 call(239383 call . local_x[239375] c"c_str"))(239393 call _cast ssize_t[209667](239389 call . local_x[239375] c"numBytes")))
    (239402 return(239400 call _build_tuple chr[239361] 1))
  }
  where {
    (239355 call == t[239346] string[24])
  }
  function _toChar[239414](arg x[239411] :
  unknown t[239409]) : _unknown[43] "inline" "private"
  {
    (239439 return(239437 call _build_tuple(239433 call _cast(239432 call int(64)[13] 32) 0) 0))
  }
  where {
    (239426 call !(239424 call ||(239418 call == t[239409] string[24])(239423 call isIntegralType t[239409])))
  }
  function _setIfPrimitive[239452](ref arg lhs[239449] :
  unknown t[239447], arg rhs[239456] :
  unknown t2[239454], arg argi[239460] :
  int(64)[13]) : _unknown[43] "inline" "private"
  {
    unknown empty[239475] t2[239454]
    if(239495 call _cond_test(239481 call == rhs[239456] empty[239475]))
    {
      (239485 call = lhs[239449] 0)
    }
    {
      (239491 call = lhs[239449] 1)
    }
    (239500 return(370712 call ENOERR[210102]))
  }
  where {
    (239472 call &&(239466 call == t[239447] bool[10])(239471 call _isIoPrimitiveType t2[239454]))
  }
  { scopeless type
    syserr[210032]
  }
  function _setIfPrimitive[239513](ref arg lhs[239510] :
  unknown t[239508], arg rhs[239517] :
  unknown t2[239515], arg argi[239521] :
  int(64)[13]) : _unknown[43] "inline" "private"
  {
    Try
    {
      {
        if(239644 call _cond_test(239538 call isAbstractEnumType t[239508]))
        {
          if(239556 call _cond_test(239542 call isStringType t2[239515]))
          {
            (239548 call = lhs[239510](239546 call _cast t[239508] rhs[239517]))
          }
          {
            (239553 return ERANGE[211136])
          }
        }
        {
          if(239640 call _cond_test(239564 call isEnumType t[239508]))
          {
            if(239596 call _cond_test(239573 call ||(239568 call isIntType t2[239515])(239572 call isStringType t2[239515])))
            {
              (239580 call = lhs[239510](239578 call _cast t[239508] rhs[239517]))
            }
            {
              (239592 call = lhs[239510](239590 call _cast t[239508](239587 call _cast int(64)[13] rhs[239517])))
            }
          }
          {
            if(239635 call _cond_test(239609 call &&(239604 call isBytesType t2[239515])(239608 call isStringType t[239508])))
            {
              (239622 call = lhs[239510](239621 call(239613 call . rhs[239517] c"decode") strict[21140]))
            }
            {
              (239631 call = lhs[239510](239629 call _cast t[239508] rhs[239517]))
            }
          }
        }
      }
    }
    Catch
    {
      unknown tmp[329022] "temp"(329024 'current error')
      unknown chpl_anon_error[329027](329031 'new'(329028 call _owned[39039](?) tmp[329022]))
      {
        (239652 return ERANGE[211136])
      }
    }
    (239660 return(370741 call ENOERR[210102]))
  }
  where {
    (239533 call &&(239527 call != t[239508] bool[10])(239532 call _isIoPrimitiveType t[239508]))
  }
  { scopeless type
    syserr[210032]
  }
  function _setIfPrimitive[239673](ref arg lhs[239670] :
  unknown t[239668], arg rhs[239675]:_any[170](?), arg argi[239678] :
  int(64)[13]) : _unknown[43] "inline" "private"
  {
    (239692 return(239691 call qio_format_error_arg_mismatch argi[239678]))
  }
  where {
    (239686 call !(239685 call _isIoPrimitiveType t[239668]))
  }
  { scopeless type
    syserr[210032]
  }
  function _setIfChar[239706](ref arg lhs[239703] :
  unknown t[239701], arg rhs[239712] :
  (239711 call int(64)[13] 32)) : _unknown[43] "inline" "private" "no return value for void"
  {
    (239728 call = lhs[239703](239726 call _cast string[24](239724 'new'(239723 call ioChar[225904] rhs[239712]))))
  }
  where {
    (239717 call == t[239701] string[24])
  }
  function _setIfChar[239742](ref arg lhs[239739] :
  unknown t[239737], arg rhs[239748] :
  (239747 call int(64)[13] 32)) : _unknown[43] "inline" "private" "no return value for void"
  {
    (239760 call = lhs[239739](239758 call _cast t[239737] rhs[239748]))
  }
  where {
    (239754 call isIntegralType t[239737])
  }
  function _setIfChar[239774](ref arg lhs[239771] :
  unknown t[239769], arg rhs[239780] :
  (239779 call int(64)[13] 32)) : _unknown[43] "inline" "private" "no return value for void"
  {
  }
  where {
    (239793 call !(239791 call ||(239785 call == t[239769] string[24])(239790 call isIntegralType t[239769])))
  }
  function _toRegexp[239806](arg x[239803] :
  unknown t[239801]) : _unknown[43] "inline" "private"
  {
    (239817 return(239815 call _build_tuple x[239803] 1))
  }
  where {
    (239810 call == t[239801] regexp[281396])
  }
  function _toRegexp[239830](arg x[239827] :
  unknown t[239825]) : _unknown[43] "inline" "private"
  {
    unknown r[239837] regexp[281396]
    (239846 return(239844 call _build_tuple r[239837] 0))
  }
  where {
    (239834 call != t[239825] regexp[281396])
  }
  function _channel_regexp_info[240226].clear[239896](arg _mt[240230]:_MT[227], arg this[240228]:_channel_regexp_info[240226]) : _unknown[43] "method" "primary method" "no return value for void"
  {
    if(239905 call _cond_test(370768 call . this[240228] c"releaseRegexp"))
    {
      (239902 call qio_regexp_release(370773 call . this[240228] c"theRegexp"))
    }
    (239914 call =(370778 call . this[240228] c"theRegexp")(239913 call qio_regexp_null))
    (239919 call =(370783 call . this[240228] c"hasRegexp") 0)
    (239924 call =(370788 call . this[240228] c"matchedRegexp") 0)
    (239929 call =(370793 call . this[240228] c"releaseRegexp") 0)
    if(239942 call _cond_test(370798 call . this[240228] c"matches"))
    {
      (239940 call _ddata_free(370803 call . this[240228] c"matches")(239938 call +(370808 call . this[240228] c"ncaptures") 1))
    }
    {
      unknown _indexOfInterest[239977] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[239978] "expr temp" "temp"
      (239987 'move' _iterator[239978](239985 call _getIterator(239994 call chpl_direct_counted_range_iter 0(370819 call . this[240228] c"ncaptures"))))
      Defer
      {
        {
          (240010 call _freeIterator _iterator[239978])
        }
      }
      { scopeless type
        (239999 'move' _indexOfInterest[239977](239996 call iteratorIndex _iterator[239978]))
      }
      ForLoop
      {
        unknown i[240003] "index var" "insert auto destroy"
        (240005 'move' i[240003] _indexOfInterest[239977])
        (239974 call =(239957 call(370813 call . this[240228] c"capArr") i[240003]) "")
        label _continueLabel[239982]
        _indexOfInterest[239977]
        _iterator[239978]
      }
      label _breakLabel[239983]
    }
    if(240024 call _cond_test(370824 call . this[240228] c"capArr"))
    {
      (240022 call _ddata_free(370829 call . this[240228] c"capArr")(370834 call . this[240228] c"ncaptures"))
    }
  }
  function _channel_regexp_info[240226].allocate_captures[240033](arg _mt[240234]:_MT[227], arg this[240232]:_channel_regexp_info[240226]) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (240040 call =(370839 call . this[240232] c"ncaptures")(240039 call qio_regexp_get_ncaptures(370844 call . this[240232] c"theRegexp")))
    (240053 call =(370849 call . this[240232] c"matches")(240052 call _ddata_allocate qio_regexp_string_piece_t[278070](240050 call +(370855 call . this[240232] c"ncaptures") 1)))
    (240062 call =(370860 call . this[240232] c"capArr")(240061 call _ddata_allocate string[24](370865 call . this[240232] c"ncaptures")))
    (240067 call =(370870 call . this[240232] c"capturei") 0)
  }
  function _channel_regexp_info[240226].deinit[240074](arg _mt[240238]:_MT[227], arg this[240236]:_channel_regexp_info[240226]) : _unknown[43] "destructor" "method" "primary method" "no return value for void"
  {
    (240078 call(370874 call . this[240236] c"clear"))
  }
  function _channel_regexp_info[240226].writeThis[240087](arg _mt[240242]:_MT[227], arg this[240240]:_channel_regexp_info[240226], arg f[240085]:_any[170](?)) : _unknown[43] "method" "primary method" "method overrides" "no return value for void"
  {
    (240112 call <~> f[240085](240110 call + "{hasRegexp = "(240108 call _cast string[24](370880 call . this[240240] c"hasRegexp"))))
    (240139 call <~> f[240085](240137 call + ", matchedRegexp = "(240135 call _cast string[24](370886 call . this[240240] c"matchedRegexp"))))
    (240165 call <~> f[240085](240163 call + ", releaseRegexp = "(240161 call _cast string[24](370892 call . this[240240] c"releaseRegexp"))))
    (240191 call <~> f[240085](240189 call + ", ... capturei = "(240187 call _cast string[24](370898 call . this[240240] c"capturei"))))
    (240220 call <~> f[240085](240218 call +(240215 call + ", ncaptures = "(240213 call _cast string[24](370904 call . this[240240] c"ncaptures"))) "}"))
  }
  type _channel_regexp_info[240226] val super[331121]:object[253] "super class" unknown hasRegexp[239853] 0 unknown matchedRegexp[239857] 0 unknown releaseRegexp[239861] 0 unknown theRegexp[239867](239866 call qio_regexp_null) unknown matches[239875] nil[38](239873 call _ddata[11791](?) qio_regexp_string_piece_t[278070]) unknown capArr[239883] nil[38](239881 call _ddata[11791](?) string[24]) unknown capturei[239887] int(64)[13] unknown ncaptures[239891] int(64)[13]
  type unmanaged _channel_regexp_info?[390087]
  type anymanaged _channel_regexp_info?[390083](?)
  type unmanaged _channel_regexp_info[390079]
  type anymanaged _channel_regexp_info[370912](?)
  function channel[225339](?)._match_regexp_if_needed[240252](arg _mt[240274]:_MT[227], arg this[240271]:channel[225339](?) :
  channel[225339](?), arg cur[240249] :
  size_t[209674], arg len[240255] :
  size_t[209674], ref arg error[240259] :
  syserr[210032], ref arg style[240263] :
  iostyle[219508], arg r[240268] :
  unmanaged _channel_regexp_info[390079]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    if(240663 call _cond_test(240284 call qio_regexp_ok(240280 call . r[240268] c"theRegexp")))
    {
      if(240293 call _cond_test(240288 call . r[240268] c"matchedRegexp"))
      {
        (240291 return _void[47])
      }
      (240304 call =(240300 call . r[240268] c"matchedRegexp") 1)
      (240314 call(240310 call . r[240268] c"allocate_captures"))
      unknown ncaps[240322](240319 call . r[240268] c"ncaptures")
      unknown nm[240329](240327 call + ncaps[240322] 1)
      unknown maxlen[240342](240339 call . style[240263] c"max_width_characters")(240335 call int(64)[13] 64)
      unknown can_discard[240349](240347 call == cur[240249] len[240255])
      if(240373 call _cond_test(240360 call == maxlen[240342](240359 call max(240357 call uint(64)[107] 32))))
      {
        (240370 call = maxlen[240342](240369 call max(240367 call int(64)[13] 64)))
      }
      unknown before_match[240382](240381 call qio_channel_offset_unlocked(370928 call . this[240271] c"_channel_internal"))
      (240407 call = error[240259](240406 call qio_regexp_channel_match(240388 call . r[240268] c"theRegexp") 0(370935 call . this[240271] c"_channel_internal") maxlen[240342] QIO_REGEXP_ANCHOR_START[278047] can_discard[240349] 1 0(240402 call . r[240268] c"matches") nm[240329]))
      unknown after_match[240414](240413 call qio_channel_offset_unlocked(370945 call . this[240271] c"_channel_internal"))
      if(240649 call _cond_test(240418 call ! error[240259]))
      {
        {
          unknown _indexOfInterest[240468] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[240469] "expr temp" "temp"
          (240478 'move' _iterator[240469](240476 call _getIterator(240485 call chpl_direct_counted_range_iter 0 ncaps[240322])))
          Defer
          {
            {
              (240501 call _freeIterator _iterator[240469])
            }
          }
          { scopeless type
            (240490 'move' _indexOfInterest[240468](240487 call iteratorIndex _iterator[240469]))
          }
          ForLoop
          {
            unknown j[240494] "index var" "insert auto destroy"
            (240496 'move' j[240494] _indexOfInterest[240468])
            {
              unknown m[240440](240439 call _to_reMatch(240437 call(240429 call . r[240268] c"matches")(240434 call + 1 j[240494])))
              (240457 call(370954 call . this[240271] c"_extractMatch") m[240440](240455 call(240450 call . r[240268] c"capArr") j[240494]) error[240259])
              if(240463 call _cond_test error[240259])
              {
                break _breakLabel[240474] _breakLabel[240474]
              }
            }
            label _continueLabel[240473]
            _indexOfInterest[240468]
            _iterator[240469]
          }
          label _breakLabel[240474]
        }
        unknown cur[240513](240512 call qio_channel_offset_unlocked(370965 call . this[240271] c"_channel_internal"))
        unknown target[240541](240539 call _cast int(64)[13](240536 call +(240523 call .(240522 call(240517 call . r[240268] c"matches") 0) c"offset")(240533 call .(240532 call(240527 call . r[240268] c"matches") 0) c"len")))
        (240554 call = error[240259](240553 call qio_channel_advance 0(370973 call . this[240271] c"_channel_internal")(240551 call - target[240541] cur[240513])))
      }
      {
        {
          unknown _indexOfInterest[240591] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[240592] "expr temp" "temp"
          (240601 'move' _iterator[240592](240599 call _getIterator(240608 call chpl_direct_counted_range_iter 0 ncaps[240322])))
          Defer
          {
            {
              (240624 call _freeIterator _iterator[240592])
            }
          }
          { scopeless type
            (240613 'move' _indexOfInterest[240591](240610 call iteratorIndex _iterator[240592]))
          }
          ForLoop
          {
            unknown j[240617] "index var" "insert auto destroy"
            (240619 'move' j[240617] _indexOfInterest[240591])
            {
              (240587 call =(240570 call(240565 call . r[240268] c"capArr") j[240617]) "")
            }
            label _continueLabel[240596]
            _indexOfInterest[240591]
            _iterator[240592]
          }
          label _breakLabel[240597]
        }
        unknown cur[240636](240635 call qio_channel_offset_unlocked(370983 call . this[240271] c"_channel_internal"))
        (240647 call qio_channel_advance 0(370988 call . this[240271] c"_channel_internal")(240645 call - before_match[240382] cur[240636]))
      }
    }
    {
      (240657 call = error[240259](240656 call qio_format_error_bad_regexp))
      {
      }
    }
  }
  function channel[225339](?)._format_reader[240677](arg _mt[240716]:_MT[227], arg this[240713]:channel[225339](?) :
  channel[225339](?), arg fmt[240674] :
  c_string[19], ref arg cur[240680] :
  size_t[209674], arg len[240684] :
  size_t[209674], ref arg error[240688] :
  syserr[210032], ref arg conv[240692] :
  qio_conv_t[222693], ref arg gotConv[240696] :
  bool[10], ref arg style[240700] :
  iostyle[219508], ref arg r[240706] :
  unmanaged _channel_regexp_info?[390087], arg isReadf[240710] :
  bool[10]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    if(240734 call _cond_test(240720 call != r[240706] nil[38]))
    {
      (240731 call =(240727 call .(240723 call postfix! r[240706]) c"hasRegexp") 0)
    }
    if(241239 call _cond_test(240741 call ! error[240688]))
    {
      {
        unknown tmp[241211] "temp"
        (241235 'move' tmp[241211](241230 call _cond_test(241232 call < cur[240680] len[240684])))
        WhileDo
        {
          {
            (240749 call = gotConv[240696] 0)
            if(240757 call _cond_test error[240688])
            {
              break _breakLabel[241215] _breakLabel[241215]
            }
            unknown end[240766](240765 call uint(64)[107] 64)
            (240779 call = error[240688](240778 call qio_conv_parse fmt[240674] cur[240680] end[240766] isReadf[240710] conv[240692] style[240700]))
            if(240784 call _cond_test error[240688])
            {
            }
            (240793 call = cur[240680](240791 call _cast size_t[209674] end[240766]))
            if(240800 call _cond_test error[240688])
            {
              break _breakLabel[241215] _breakLabel[241215]
            }
            if(241206 call _cond_test(240812 call ==(240808 call . conv[240692] c"argType") QIO_CONV_ARG_TYPE_NONE_LITERAL[222769]))
            {
              if(240981 call _cond_test isReadf[240710])
              {
                if(240954 call _cond_test(240822 call ==(240818 call . conv[240692] c"literal_is_whitespace") 2))
                {
                  unknown offsetA[240828](240827 call qio_channel_offset_unlocked(371024 call . this[240713] c"_channel_internal"))
                  (240839 call = error[240688](240838 call qio_channel_skip_past_newline 0(371030 call . this[240713] c"_channel_internal") 1))
                  unknown offsetB[240846](240845 call qio_channel_offset_unlocked(371035 call . this[240713] c"_channel_internal"))
                  if(240864 call _cond_test(240856 call &&(240850 call ! error[240688])(240854 call == offsetA[240828] offsetB[240846])))
                  {
                    (240860 call = error[240688](371042 call EFORMAT[210730]))
                  }
                }
                {
                  if(240950 call _cond_test(240873 call ==(240869 call . conv[240692] c"literal_is_whitespace") 1))
                  {
                    unknown offsetA[240879](240878 call qio_channel_offset_unlocked(371047 call . this[240713] c"_channel_internal"))
                    (240897 call = error[240688](240896 call qio_channel_scan_literal_2 0(371053 call . this[240713] c"_channel_internal")(240891 call . conv[240692] c"literal") 0 1))
                    unknown offsetB[240904](240903 call qio_channel_offset_unlocked(371059 call . this[240713] c"_channel_internal"))
                    if(240922 call _cond_test(240914 call &&(240908 call ! error[240688])(240912 call == offsetA[240879] offsetB[240904])))
                    {
                      (240918 call = error[240688](371066 call EFORMAT[210730]))
                    }
                  }
                  {
                    (240946 call = error[240688](240945 call qio_channel_scan_literal_2 0(371071 call . this[240713] c"_channel_internal")(240932 call . conv[240692] c"literal")(240942 call _cast ssize_t[209667](240938 call . conv[240692] c"literal_length")) 0))
                  }
                }
              }
              {
                (240977 call = error[240688](240976 call qio_channel_print_literal_2 0(371080 call . this[240713] c"_channel_internal")(240966 call . conv[240692] c"literal")(240974 call _cast ssize_t[209667](240970 call . conv[240692] c"literal_length"))))
              }
            }
            {
              if(241202 call _cond_test(240991 call ==(240987 call . conv[240692] c"argType") QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[222765]))
              {
                if(241188 call _cond_test(240994 call ! isReadf[240710]))
                {
                  (241000 call = error[240688](240999 call qio_format_error_write_regexp))
                }
                {
                  if(241017 call _cond_test(241006 call == r[240706] nil[38]))
                  {
                    (241014 call = r[240706](241013 'new'(241012 'to unmanaged class from unknown'(241011 call anymanaged _channel_regexp_info[370912](?)))))
                  }
                  const rnn[241026] "const"(241024 call postfix! r[240706])
                  (241034 call(241030 call . rnn[241026] c"clear"))
                  unknown errstr[241037] string[24]
                  (241071 call qio_regexp_create_compile_flags_2(241044 call . conv[240692] c"regexp")(241051 call . conv[240692] c"regexp_length")(241057 call . conv[240692] c"regexp_flags")(241063 call . conv[240692] c"regexp_flags_length") 1(241068 call . rnn[241026] c"theRegexp"))
                  (241080 call =(241076 call . rnn[241026] c"releaseRegexp") 1)
                  if(241184 call _cond_test(241089 call qio_regexp_ok(241085 call . rnn[241026] c"theRegexp")))
                  {
                    (241095 call =(241091 call . rnn[241026] c"hasRegexp") 1)
                    (241110 call =(241100 call . rnn[241026] c"ncaptures")(241109 call qio_regexp_get_ncaptures(241105 call . rnn[241026] c"theRegexp")))
                    if(241172 call _cond_test(241151 call ||(241140 call ||(241129 call ||(241118 call >(241114 call . rnn[241026] c"ncaptures") 0)(241127 call !=(241123 call . conv[240692] c"preArg1") QIO_CONV_UNK[222697]))(241138 call !=(241134 call . conv[240692] c"preArg2") QIO_CONV_UNK[222697]))(241149 call !=(241145 call . conv[240692] c"preArg3") QIO_CONV_UNK[222697])))
                    {
                      (241155 call = gotConv[240696] 1)
                      break _breakLabel[241215] _breakLabel[241215]
                    }
                    {
                      (241169 call(371116 call . this[240713] c"_match_regexp_if_needed") cur[240680] len[240684] error[240688] style[240700] rnn[241026])
                    }
                  }
                  {
                    (241180 call = error[240688](241179 call qio_format_error_bad_regexp))
                  }
                }
              }
              {
                (241195 call = gotConv[240696] 1)
                break _breakLabel[241215] _breakLabel[241215]
              }
            }
          }
          label _continueLabel[241214]
          (241225 'move' tmp[241211](241220 call _cond_test(241222 call < cur[240680] len[240684])))
          tmp[241211]
        }
        label _breakLabel[241215]
      }
    }
  }
  function channel[225339](?)._conv_helper[241252](arg _mt[241271]:_MT[227], arg this[241268]:channel[225339](?) :
  channel[225339](?), ref arg error[241249] :
  syserr[210032], ref arg conv[241255] :
  qio_conv_t[222693], ref arg gotConv[241259] :
  bool[10], ref arg j[241263] :
  int(64)[13], ref arg argType[241266]:_any[170](?)) : _unknown[43] "method" "no doc" "no return value for void"
  {
    if(241276 call _cond_test error[241249])
    {
      (241274 return _void[47])
    }
    if(241408 call _cond_test gotConv[241259])
    {
      if(241307 call _cond_test(241288 call !=(241284 call . conv[241255] c"preArg1") QIO_CONV_UNK[222697]))
      {
        (241298 call =(241293 call argType[241266] j[241263])(241295 call . conv[241255] c"preArg1"))
        (241304 call += j[241263] 1)
      }
      if(241336 call _cond_test(241317 call !=(241313 call . conv[241255] c"preArg2") QIO_CONV_UNK[222697]))
      {
        (241327 call =(241322 call argType[241266] j[241263])(241324 call . conv[241255] c"preArg2"))
        (241333 call += j[241263] 1)
      }
      if(241364 call _cond_test(241345 call !=(241341 call . conv[241255] c"preArg3") QIO_CONV_UNK[222697]))
      {
        (241355 call =(241350 call argType[241266] j[241263])(241352 call . conv[241255] c"preArg3"))
        (241361 call += j[241263] 1)
      }
      if(241404 call _cond_test(241373 call !=(241369 call . conv[241255] c"argType") QIO_CONV_UNK[222697]))
      {
        if(241394 call _cond_test(241380 call ==(241378 call argType[241266] j[241263]) QIO_CONV_UNK[222697]))
        {
          (241390 call =(241385 call argType[241266] j[241263])(241387 call . conv[241255] c"argType"))
        }
        (241401 call += j[241263] 1)
      }
    }
  }
  function channel[225339](?)._conv_sethandler[241421](arg _mt[241444]:_MT[227], arg this[241441]:channel[225339](?) :
  channel[225339](?), ref arg error[241418] :
  syserr[210032], arg argtypei[241424] :
  c_int[209569], ref arg style[241428] :
  iostyle[219508], arg i[241432] :
  int(64)[13], arg argi[241435]:_any[170](?), arg isReadf[241438] :
  bool[10]) : _unknown[43] "method" "no doc"
  {
    if(241451 call _cond_test error[241418])
    {
      (241449 return 0)
    }
    {
      unknown tmp[242068] "expr temp" "maybe param" "maybe type" "temp"
      (242070 'move' tmp[242068] argtypei[241424])
      if(242075 call _cond_test(242072 call == tmp[242068] QIO_CONV_SET_MIN_WIDTH_COLS[222773]))
      {
        unknown tmp[241470] "no copy" "temp"(241469 call _toIntegral argi[241435])
        (241477 call _check_tuple_var_decl tmp[241470] 2)
        unknown t[241461](241471 call tmp[241470] 1)
        unknown ok[241463](241474 call tmp[241470] 2)
        if(241511 call _cond_test(241484 call ! ok[241463]))
        {
          (241491 call = error[241418](241490 call qio_format_error_arg_mismatch i[241432]))
        }
        {
          (241508 call =(241498 call . style[241428] c"min_width_columns")(241506 call _cast(241505 call uint(64)[107] 32) t[241461]))
        }
      }
      {
        if(242081 call _cond_test(242078 call == tmp[242068] QIO_CONV_SET_MAX_WIDTH_COLS[222777]))
        {
          unknown tmp[241529] "no copy" "temp"(241528 call _toIntegral argi[241435])
          (241536 call _check_tuple_var_decl tmp[241529] 2)
          unknown t[241520](241530 call tmp[241529] 1)
          unknown ok[241522](241533 call tmp[241529] 2)
          if(241570 call _cond_test(241543 call ! ok[241522]))
          {
            (241550 call = error[241418](241549 call qio_format_error_arg_mismatch i[241432]))
          }
          {
            (241567 call =(241557 call . style[241428] c"max_width_columns")(241565 call _cast(241564 call uint(64)[107] 32) t[241520]))
          }
        }
        {
          if(242088 call _cond_test(242085 call == tmp[242068] QIO_CONV_SET_MAX_WIDTH_CHARS[222781]))
          {
            unknown tmp[241588] "no copy" "temp"(241587 call _toIntegral argi[241435])
            (241595 call _check_tuple_var_decl tmp[241588] 2)
            unknown t[241579](241589 call tmp[241588] 1)
            unknown ok[241581](241592 call tmp[241588] 2)
            if(241627 call _cond_test(241602 call ! ok[241581]))
            {
              (241609 call = error[241418](241608 call qio_format_error_arg_mismatch i[241432]))
            }
            {
              (241624 call =(241614 call . style[241428] c"max_width_characters")(241622 call _cast(241621 call uint(64)[107] 32) t[241579]))
            }
          }
          {
            if(242095 call _cond_test(242092 call == tmp[242068] QIO_CONV_SET_MAX_WIDTH_BYTES[222785]))
            {
              unknown tmp[241645] "no copy" "temp"(241644 call _toIntegral argi[241435])
              (241652 call _check_tuple_var_decl tmp[241645] 2)
              unknown t[241636](241646 call tmp[241645] 1)
              unknown ok[241638](241649 call tmp[241645] 2)
              if(241686 call _cond_test(241659 call ! ok[241638]))
              {
                (241666 call = error[241418](241665 call qio_format_error_arg_mismatch i[241432]))
              }
              {
                (241683 call =(241673 call . style[241428] c"max_width_bytes")(241681 call _cast(241680 call uint(64)[107] 32) t[241636]))
              }
            }
            {
              if(242102 call _cond_test(242099 call == tmp[242068] QIO_CONV_SET_PRECISION[222789]))
              {
                unknown tmp[241704] "no copy" "temp"(241703 call _toIntegral argi[241435])
                (241711 call _check_tuple_var_decl tmp[241704] 2)
                unknown t[241695](241705 call tmp[241704] 1)
                unknown ok[241697](241708 call tmp[241704] 2)
                if(241745 call _cond_test(241718 call ! ok[241697]))
                {
                  (241725 call = error[241418](241724 call qio_format_error_arg_mismatch i[241432]))
                }
                {
                  (241742 call =(241732 call . style[241428] c"precision")(241740 call _cast(241739 call int(64)[13] 32) t[241695]))
                }
              }
              {
                if(242109 call _cond_test(242106 call == tmp[242068] QIO_CONV_SET_STRINGSTART[222801]))
                {
                  unknown tmp[241763] "no copy" "temp"(241762 call _toChar argi[241435])
                  (241770 call _check_tuple_var_decl tmp[241763] 2)
                  unknown t[241754](241764 call tmp[241763] 1)
                  unknown ok[241756](241767 call tmp[241763] 2)
                  if(241801 call _cond_test(241777 call ! ok[241756]))
                  {
                    (241784 call = error[241418](241783 call qio_format_error_arg_mismatch i[241432]))
                  }
                  {
                    (241798 call =(241791 call . style[241428] c"string_start")(241796 call _cast style_char_t[219188] t[241754]))
                  }
                }
                {
                  if(242116 call _cond_test(242113 call == tmp[242068] QIO_CONV_SET_STRINGEND[222809]))
                  {
                    unknown tmp[241819] "no copy" "temp"(241818 call _toChar argi[241435])
                    (241826 call _check_tuple_var_decl tmp[241819] 2)
                    unknown t[241810](241820 call tmp[241819] 1)
                    unknown ok[241812](241823 call tmp[241819] 2)
                    if(241855 call _cond_test(241833 call ! ok[241812]))
                    {
                      (241840 call = error[241418](241839 call qio_format_error_arg_mismatch i[241432]))
                    }
                    {
                      (241852 call =(241845 call . style[241428] c"string_end")(241850 call _cast style_char_t[219188] t[241810]))
                    }
                  }
                  {
                    if(242123 call _cond_test(242120 call == tmp[242068] QIO_CONV_SET_STRINGSTARTEND[222805]))
                    {
                      unknown tmp[241873] "no copy" "temp"(241872 call _toChar argi[241435])
                      (241880 call _check_tuple_var_decl tmp[241873] 2)
                      unknown t[241864](241874 call tmp[241873] 1)
                      unknown ok[241866](241877 call tmp[241873] 2)
                      if(241921 call _cond_test(241887 call ! ok[241866]))
                      {
                        (241894 call = error[241418](241893 call qio_format_error_arg_mismatch i[241432]))
                      }
                      {
                        (241906 call =(241899 call . style[241428] c"string_start")(241904 call _cast style_char_t[219188] t[241864]))
                        (241918 call =(241911 call . style[241428] c"string_end")(241916 call _cast style_char_t[219188] t[241864]))
                      }
                    }
                    {
                      if(242130 call _cond_test(242127 call == tmp[242068] QIO_CONV_SET_STRINGLEN[222793]))
                      {
                        unknown tmp[241938] "no copy" "temp"(241937 call _toIntegral argi[241435])
                        (241945 call _check_tuple_var_decl tmp[241938] 2)
                        unknown t[241929](241939 call tmp[241938] 1)
                        unknown ok[241931](241942 call tmp[241938] 2)
                        if(241978 call _cond_test(241952 call ! ok[241931]))
                        {
                          (241959 call = error[241418](241958 call qio_format_error_arg_mismatch i[241432]))
                        }
                        {
                          (241974 call =(241964 call . style[241428] c"str_style")(241972 call _cast(241971 call int(64)[13] 64) t[241929]))
                        }
                      }
                      {
                        if(242137 call _cond_test(242134 call == tmp[242068] QIO_CONV_SET_TERMINATOR[222797]))
                        {
                          unknown tmp[241995] "no copy" "temp"(241994 call _toChar argi[241435])
                          (242002 call _check_tuple_var_decl tmp[241995] 2)
                          unknown t[241986](241996 call tmp[241995] 1)
                          unknown ok[241988](241999 call tmp[241995] 2)
                          if(242038 call _cond_test(242009 call ! ok[241988]))
                          {
                            (242016 call = error[241418](242015 call qio_format_error_arg_mismatch i[241432]))
                          }
                          {
                            (242034 call =(242021 call . style[241428] c"str_style")(242033 call stringStyleTerminated(242030 call _cast(242029 call uint(64)[107] 8) t[241986])))
                          }
                        }
                        {
                          if(242144 call _cond_test(242141 call == tmp[242068] QIO_CONV_SET_DONE[222817]))
                          {
                          }
                          {
                            if(242151 call _cond_test(242148 call == tmp[242068] QIO_CONV_UNK[222697]))
                            {
                              (242055 call = error[241418](242054 call qio_format_error_too_many_args))
                            }
                            {
                              (242062 return 1)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (242157 return 0)
  }
  { scopeless type
    bool[10]
  }
  function channel[225339](?)._write_signed[242172](arg _mt[242185]:_MT[227], arg this[242182]:channel[225339](?) :
  channel[225339](?), arg width[242169] :
  (242168 call uint(64)[107] 32), arg t[242175] :
  int(64)[13], arg i[242179] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[242189] syserr[210032]
    unknown byteorder[242197](242196 call qio_channel_byteorder(371249 call . this[242182] c"_channel_internal"))
    {
      unknown tmp[242317] "expr temp" "maybe param" "maybe type" "temp"
      (242319 'move' tmp[242317] width[242169])
      if(242324 call _cond_test(242321 call == tmp[242317] 1))
      {
        unknown x[242211](242209 call _cast(242208 call int(64)[13] 8) t[242175])
        (242222 call = err[242189](242221 call qio_channel_write_int8 0(371257 call . this[242182] c"_channel_internal") x[242211]))
      }
      {
        if(242330 call _cond_test(242327 call == tmp[242317] 2))
        {
          unknown x[242236](242234 call _cast(242233 call int(64)[13] 16) t[242175])
          (242248 call = err[242189](242247 call qio_channel_write_int16 0 byteorder[242197](371266 call . this[242182] c"_channel_internal") x[242236]))
        }
        {
          if(242337 call _cond_test(242334 call == tmp[242317] 4))
          {
            unknown x[242262](242260 call _cast(242259 call int(64)[13] 32) t[242175])
            (242274 call = err[242189](242273 call qio_channel_write_int32 0 byteorder[242197](371275 call . this[242182] c"_channel_internal") x[242262]))
          }
          {
            if(242344 call _cond_test(242341 call == tmp[242317] 8))
            {
              unknown x[242288](242286 call _cast(242285 call int(64)[13] 64) t[242175])
              (242300 call = err[242189](242299 call qio_channel_write_int64 0 byteorder[242197](371284 call . this[242182] c"_channel_internal") x[242288]))
            }
            {
              (242310 call = err[242189](242309 call qio_format_error_arg_mismatch i[242179]))
            }
          }
        }
      }
    }
    (242350 return err[242189])
  }
  { scopeless type
    syserr[210032]
  }
  function channel[225339](?)._read_signed[242365](arg _mt[242378]:_MT[227], arg this[242375]:channel[225339](?) :
  channel[225339](?), arg width[242362] :
  (242361 call uint(64)[107] 32), out arg t[242368] :
  int(64)[13], arg i[242372] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[242382] syserr[210032]
    unknown byteorder[242390](242389 call qio_channel_byteorder(371295 call . this[242375] c"_channel_internal"))
    {
      unknown tmp[242518] "expr temp" "maybe param" "maybe type" "temp"
      (242520 'move' tmp[242518] width[242362])
      if(242525 call _cond_test(242522 call == tmp[242518] 1))
      {
        unknown x[242401](242400 call int(64)[13] 8)
        (242412 call = err[242382](242411 call qio_channel_read_int8 0(371302 call . this[242375] c"_channel_internal") x[242401]))
        (242417 call = t[242368] x[242401])
      }
      {
        if(242531 call _cond_test(242528 call == tmp[242518] 2))
        {
          unknown x[242428](242427 call int(64)[13] 16)
          (242440 call = err[242382](242439 call qio_channel_read_int16 0 byteorder[242390](371312 call . this[242375] c"_channel_internal") x[242428]))
          (242445 call = t[242368] x[242428])
        }
        {
          if(242538 call _cond_test(242535 call == tmp[242518] 4))
          {
            unknown x[242456](242455 call int(64)[13] 32)
            (242468 call = err[242382](242467 call qio_channel_read_int32 0 byteorder[242390](371322 call . this[242375] c"_channel_internal") x[242456]))
            (242473 call = t[242368] x[242456])
          }
          {
            if(242545 call _cond_test(242542 call == tmp[242518] 8))
            {
              unknown x[242484](242483 call int(64)[13] 64)
              (242496 call = err[242382](242495 call qio_channel_read_int64 0 byteorder[242390](371332 call . this[242375] c"_channel_internal") x[242484]))
              (242501 call = t[242368] x[242484])
            }
            {
              (242511 call = err[242382](242510 call qio_format_error_arg_mismatch i[242372]))
            }
          }
        }
      }
    }
    (242551 return err[242382])
  }
  { scopeless type
    syserr[210032]
  }
  function channel[225339](?)._write_unsigned[242566](arg _mt[242579]:_MT[227], arg this[242576]:channel[225339](?) :
  channel[225339](?), arg width[242563] :
  (242562 call uint(64)[107] 32), arg t[242569] :
  uint(64)[107], arg i[242573] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[242582] syserr[210032]
    unknown byteorder[242590](242589 call qio_channel_byteorder(371344 call . this[242576] c"_channel_internal"))
    {
      unknown tmp[242710] "expr temp" "maybe param" "maybe type" "temp"
      (242712 'move' tmp[242710] width[242563])
      if(242717 call _cond_test(242714 call == tmp[242710] 1))
      {
        unknown x[242604](242602 call _cast(242601 call uint(64)[107] 8) t[242569])
        (242615 call = err[242582](242614 call qio_channel_write_uint8 0(371352 call . this[242576] c"_channel_internal") x[242604]))
      }
      {
        if(242723 call _cond_test(242720 call == tmp[242710] 2))
        {
          unknown x[242629](242627 call _cast(242626 call uint(64)[107] 16) t[242569])
          (242641 call = err[242582](242640 call qio_channel_write_uint16 0 byteorder[242590](371361 call . this[242576] c"_channel_internal") x[242629]))
        }
        {
          if(242730 call _cond_test(242727 call == tmp[242710] 4))
          {
            unknown x[242655](242653 call _cast(242652 call uint(64)[107] 32) t[242569])
            (242667 call = err[242582](242666 call qio_channel_write_uint32 0 byteorder[242590](371370 call . this[242576] c"_channel_internal") x[242655]))
          }
          {
            if(242737 call _cond_test(242734 call == tmp[242710] 8))
            {
              unknown x[242681](242679 call _cast(242678 call uint(64)[107] 64) t[242569])
              (242693 call = err[242582](242692 call qio_channel_write_uint64 0 byteorder[242590](371379 call . this[242576] c"_channel_internal") x[242681]))
            }
            {
              (242703 call = err[242582](242702 call qio_format_error_arg_mismatch i[242573]))
            }
          }
        }
      }
    }
    (242743 return err[242582])
  }
  function channel[225339](?)._read_unsigned[242757](arg _mt[242770]:_MT[227], arg this[242767]:channel[225339](?) :
  channel[225339](?), arg width[242754] :
  (242753 call uint(64)[107] 32), out arg t[242760] :
  uint(64)[107], arg i[242764] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[242773] syserr[210032]
    unknown byteorder[242781](242780 call qio_channel_byteorder(371389 call . this[242767] c"_channel_internal"))
    {
      unknown tmp[242909] "expr temp" "maybe param" "maybe type" "temp"
      (242911 'move' tmp[242909] width[242754])
      if(242916 call _cond_test(242913 call == tmp[242909] 1))
      {
        unknown x[242792](242791 call uint(64)[107] 8)
        (242803 call = err[242773](242802 call qio_channel_read_uint8 0(371396 call . this[242767] c"_channel_internal") x[242792]))
        (242808 call = t[242760] x[242792])
      }
      {
        if(242922 call _cond_test(242919 call == tmp[242909] 2))
        {
          unknown x[242819](242818 call uint(64)[107] 16)
          (242831 call = err[242773](242830 call qio_channel_read_uint16 0 byteorder[242781](371406 call . this[242767] c"_channel_internal") x[242819]))
          (242836 call = t[242760] x[242819])
        }
        {
          if(242929 call _cond_test(242926 call == tmp[242909] 4))
          {
            unknown x[242847](242846 call uint(64)[107] 32)
            (242859 call = err[242773](242858 call qio_channel_read_uint32 0 byteorder[242781](371416 call . this[242767] c"_channel_internal") x[242847]))
            (242864 call = t[242760] x[242847])
          }
          {
            if(242936 call _cond_test(242933 call == tmp[242909] 8))
            {
              unknown x[242875](242874 call uint(64)[107] 64)
              (242887 call = err[242773](242886 call qio_channel_read_uint64 0 byteorder[242781](371426 call . this[242767] c"_channel_internal") x[242875]))
              (242892 call = t[242760] x[242875])
            }
            {
              (242902 call = err[242773](242901 call qio_format_error_arg_mismatch i[242764]))
            }
          }
        }
      }
    }
    (242942 return err[242773])
  }
  function channel[225339](?)._write_real[242956](arg _mt[242969]:_MT[227], arg this[242966]:channel[225339](?) :
  channel[225339](?), arg width[242953] :
  (242952 call uint(64)[107] 32), arg t[242959] :
  real(64)[16], arg i[242963] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[242972] syserr[210032]
    unknown byteorder[242980](242979 call qio_channel_byteorder(371438 call . this[242966] c"_channel_internal"))
    {
      unknown tmp[243049] "expr temp" "maybe param" "maybe type" "temp"
      (243051 'move' tmp[243049] width[242953])
      if(243056 call _cond_test(243053 call == tmp[243049] 4))
      {
        unknown x[242994](242992 call _cast(242991 call real(64)[16] 32) t[242959])
        (243006 call = err[242972](243005 call qio_channel_write_float32 0 byteorder[242980](371447 call . this[242966] c"_channel_internal") x[242994]))
      }
      {
        if(243062 call _cond_test(243059 call == tmp[243049] 8))
        {
          unknown x[243020](243018 call _cast(243017 call real(64)[16] 64) t[242959])
          (243032 call = err[242972](243031 call qio_channel_write_float64 0 byteorder[242980](371456 call . this[242966] c"_channel_internal") x[243020]))
        }
        {
          (243042 call = err[242972](243041 call qio_format_error_arg_mismatch i[242963]))
        }
      }
    }
    (243068 return err[242972])
  }
  function channel[225339](?)._read_real[243082](arg _mt[243095]:_MT[227], arg this[243092]:channel[225339](?) :
  channel[225339](?), arg width[243079] :
  (243078 call uint(64)[107] 32), out arg t[243085] :
  real(64)[16], arg i[243089] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[243098] syserr[210032]
    unknown byteorder[243106](243105 call qio_channel_byteorder(371466 call . this[243092] c"_channel_internal"))
    {
      unknown tmp[243179] "expr temp" "maybe param" "maybe type" "temp"
      (243181 'move' tmp[243179] width[243079])
      if(243186 call _cond_test(243183 call == tmp[243179] 4))
      {
        unknown x[243117](243116 call real(64)[16] 32)
        (243129 call = err[243098](243128 call qio_channel_read_float32 0 byteorder[243106](371474 call . this[243092] c"_channel_internal") x[243117]))
        (243134 call = t[243085] x[243117])
      }
      {
        if(243192 call _cond_test(243189 call == tmp[243179] 8))
        {
          unknown x[243145](243144 call real(64)[16] 64)
          (243157 call = err[243098](243156 call qio_channel_read_float64 0 byteorder[243106](371484 call . this[243092] c"_channel_internal") x[243145]))
          (243162 call = t[243085] x[243145])
        }
        {
          (243172 call = err[243098](243171 call qio_format_error_arg_mismatch i[243089]))
        }
      }
    }
    (243198 return err[243098])
  }
  function channel[225339](?)._write_complex[243212](arg _mt[243225]:_MT[227], arg this[243222]:channel[225339](?) :
  channel[225339](?), arg width[243209] :
  (243208 call uint(64)[107] 32), arg t[243215] :
  complex(128)[132], arg i[243219] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[243229](371494 call ENOERR[210102]) syserr[210032]
    unknown byteorder[243237](243236 call qio_channel_byteorder(371498 call . this[243222] c"_channel_internal"))
    {
      unknown tmp[243372] "expr temp" "maybe param" "maybe type" "temp"
      (243374 'move' tmp[243372] width[243209])
      if(243379 call _cond_test(243376 call == tmp[243372] 8))
      {
        unknown x[243251](243249 call _cast(243248 call complex(128)[132] 64) t[243215])
        unknown re[243259](243256 call . x[243251] c"re")
        unknown im[243266](243263 call . x[243251] c"im")
        (243277 call = err[243229](243276 call qio_channel_write_float32 0 byteorder[243237](371509 call . this[243222] c"_channel_internal") re[243259]))
        if(243295 call _cond_test(243281 call ! err[243229]))
        {
          (243291 call = err[243229](243290 call qio_channel_write_float32 0 byteorder[243237](371518 call . this[243222] c"_channel_internal") im[243266]))
        }
      }
      {
        if(243385 call _cond_test(243382 call == tmp[243372] 16))
        {
          unknown x[243310](243308 call _cast(243307 call complex(128)[132] 128) t[243215])
          unknown re[243318](243315 call . x[243310] c"re")
          unknown im[243325](243322 call . x[243310] c"im")
          (243336 call = err[243229](243335 call qio_channel_write_float64 0 byteorder[243237](371529 call . this[243222] c"_channel_internal") re[243318]))
          if(243354 call _cond_test(243340 call ! err[243229]))
          {
            (243350 call = err[243229](243349 call qio_channel_write_float64 0 byteorder[243237](371538 call . this[243222] c"_channel_internal") im[243325]))
          }
        }
        {
          (243365 call = err[243229](243364 call qio_format_error_arg_mismatch i[243219]))
        }
      }
    }
    (243391 return err[243229])
  }
  function channel[225339](?)._read_complex[243405](arg _mt[243418]:_MT[227], arg this[243415]:channel[225339](?) :
  channel[225339](?), arg width[243402] :
  (243401 call uint(64)[107] 32), out arg t[243408] :
  complex(128)[132], arg i[243412] :
  int(64)[13]) : _unknown[43] "method" "no doc"
  {
    unknown err[243422](371546 call ENOERR[210102]) syserr[210032]
    unknown byteorder[243430](243429 call qio_channel_byteorder(371550 call . this[243415] c"_channel_internal"))
    {
      unknown tmp[243603] "expr temp" "maybe param" "maybe type" "temp"
      (243605 'move' tmp[243603] width[243402])
      if(243610 call _cond_test(243607 call == tmp[243603] 8))
      {
        unknown x[243441](243440 call complex(128)[132] 64)
        unknown re[243450](243449 'typeof'(243446 call . x[243441] c"re"))
        unknown im[243458](243457 'typeof'(243454 call . x[243441] c"im"))
        (243469 call = err[243422](243468 call qio_channel_read_float32 0 byteorder[243430](371560 call . this[243415] c"_channel_internal") re[243450]))
        if(243487 call _cond_test(243473 call ! err[243422]))
        {
          (243483 call = err[243422](243482 call qio_channel_read_float32 0 byteorder[243430](371569 call . this[243415] c"_channel_internal") im[243458]))
        }
        (243503 call = x[243441](243501 call _cast(243500 call complex(128)[132] 64)(243495 call _build_tuple re[243450] im[243458])))
        (243508 call = t[243408] x[243441])
      }
      {
        if(243616 call _cond_test(243613 call == tmp[243603] 16))
        {
          unknown x[243519](243518 call complex(128)[132] 128)
          unknown re[243528](243527 'typeof'(243524 call . x[243519] c"re"))
          unknown im[243536](243535 'typeof'(243532 call . x[243519] c"im"))
          (243547 call = err[243422](243546 call qio_channel_read_float64 0 byteorder[243430](371584 call . this[243415] c"_channel_internal") re[243528]))
          if(243565 call _cond_test(243551 call ! err[243422]))
          {
            (243561 call = err[243422](243560 call qio_channel_read_float64 0 byteorder[243430](371593 call . this[243415] c"_channel_internal") im[243536]))
          }
          (243581 call = x[243519](243579 call _cast(243578 call complex(128)[132] 128)(243573 call _build_tuple re[243528] im[243536])))
          (243586 call = t[243408] x[243519])
        }
        {
          (243596 call = err[243422](243595 call qio_format_error_arg_mismatch i[243412]))
        }
      }
    }
    (243622 return err[243422])
  }
  function channel[225339](?).writef[243633](arg _mt[243643]:_MT[227], arg this[243640]:channel[225339](?) :
  channel[225339](?), arg fmtStr[243630] :
  string[24], const arg args[243637]:_any[170](?) ...) : _unknown[43] throws "method"
  {
    if(243669 call _cond_test(243647 call !(371607 call . this[243640] c"writing")))
    {
      (243667 call compilerError "writef on read-only channel")
    }
    const origLocale[243681] "const"(243680 call(243676 call . this[243640] c"getLocaleOfIoRequest"))
    unknown err[243686](371612 call ENOERR[210102]) syserr[210032]
    {
      const tmp[244917] "const" "temp"
      (244918 'move' tmp[244917](244915 'deref'(244914 '_wide_get_locale'(243690 call . this[243640] c"home"))))
      {
        Try
        {
          {
            (243698 call(243694 call . this[243640] c"lock"))
          }
        }
        Defer
        {
          {
            (243708 call(243704 call . this[243640] c"unlock"))
          }
        }
        unknown fmt[243724](243723 call(243719 call .(243718 call(243714 call . fmtStr[243630] c"localize")) c"c_str"))
        unknown save_style[243733](243732 call(243728 call . this[243640] c"_style"))
        unknown cur[243738] 0 size_t[209674]
        unknown len[243749](243747 call _cast size_t[209674](243743 call . fmt[243724] c"length")) size_t[209674]
        unknown conv[243753] qio_conv_t[222693]
        unknown gotConv[243757] bool[10]
        unknown style[243761] iostyle[219508]
        unknown end[243765] size_t[209674]
        unknown argType[243775](243773 call *(243770 call + k[243635] 5) c_int[209569])
        unknown r[243781] unmanaged _channel_regexp_info?[390087]
        Defer
        {
          {
            if(243790 call _cond_test r[243781])
            {
              (243787 call chpl__delete r[243781])
            }
          }
        }
        {
          unknown _indexOfInterest[243815] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[243816] "expr temp" "temp"
          (243825 'move' _iterator[243816](243823 call _getIterator(243833 call chpl_direct_range_iter 1(243830 call . argType[243775] c"size") 1)))
          Defer
          {
            {
              (243849 call _freeIterator _iterator[243816])
            }
          }
          { scopeless type
            (243838 'move' _indexOfInterest[243815](243835 call iteratorIndex _iterator[243816]))
          }
          ForLoop
          {
            unknown i[243842] "index var" "insert auto destroy"
            (243844 'move' i[243842] _indexOfInterest[243815])
            {
              (243811 call =(243809 call argType[243775] i[243842]) QIO_CONV_UNK[222697])
            }
            label _continueLabel[243820]
            _indexOfInterest[243815]
            _iterator[243816]
          }
          label _breakLabel[243821]
        }
        unknown j[243857] 1
        {
          unknown i[244822] 0
          unknown tmp[244823] "maybe param" "temp"
          (244835 'move' tmp[244823](244833 call chpl_compute_low_param_loop_bound 1 k[243635]))
          unknown tmp[244824] "maybe param" "temp"
          (244842 'move' tmp[244824](244840 call chpl_compute_high_param_loop_bound 1 k[243635]))
          unknown tmp[244825] "maybe param" "temp"
          (244845 'move' tmp[244825] 1)
          ParamForLoop
          { i[244822] tmp[244823] tmp[244824] tmp[244825]
            {
              (243866 call = gotConv[243757] 0)
              if(243888 call _cond_test(243872 call <= j[243857] i[244822]))
              {
                (243885 call(371642 call . this[243640] c"_format_reader") fmt[243724] cur[243738] len[243749] err[243686] conv[243753] gotConv[243757] style[243761] r[243781] 0)
              }
              (243899 call(371656 call . this[243640] c"_conv_helper") err[243686] conv[243753] gotConv[243757] j[243857] argType[243775])
              unknown domore[243916](243915 call(371667 call . this[243640] c"_conv_sethandler") err[243686](243907 call argType[243775] i[244822]) style[243761] i[244822](243913 call args[243637] i[244822]) 0)
              if(244818 call _cond_test domore[243916])
              {
                (243926 call(243921 call . this[243640] c"_set_style") style[243761])
                {
                  unknown tmp[244712] "expr temp" "maybe param" "maybe type" "temp"
                  (244714 'move' tmp[244712](243932 call argType[243775] i[244822]))
                  if(244724 call _cond_test(244722 call ||(244716 call == tmp[244712] QIO_CONV_ARG_TYPE_SIGNED[222705])(244719 call == tmp[244712] QIO_CONV_ARG_TYPE_BINARY_SIGNED[222709])))
                  {
                    unknown tmp[243949] "no copy" "temp"(243948 call _toSigned(243946 call args[243637] i[244822]))
                    (243956 call _check_tuple_var_decl tmp[243949] 2)
                    unknown t[243937](243950 call tmp[243949] 1)
                    unknown ok[243939](243953 call tmp[243949] 2)
                    if(244015 call _cond_test(243963 call ! ok[243939]))
                    {
                      (243970 call = err[243686](243969 call qio_format_error_arg_mismatch i[244822]))
                    }
                    {
                      if(244008 call _cond_test(243979 call ==(243977 call argType[243775] i[244822]) QIO_CONV_ARG_TYPE_BINARY_SIGNED[222709]))
                      {
                        (243991 call = err[243686](243990 call(371696 call . this[243640] c"_write_signed")(243984 call . style[243761] c"max_width_bytes") t[243937] i[244822]))
                      }
                      {
                        (244005 call = err[243686](244004 call _write_one_internal(371705 call . this[243640] c"_channel_internal") dynamic[218661] t[243937] origLocale[243681]))
                      }
                    }
                  }
                  {
                    if(244735 call _cond_test(244733 call ||(244727 call == tmp[244712] QIO_CONV_ARG_TYPE_UNSIGNED[222713])(244730 call == tmp[244712] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[222717])))
                    {
                      unknown tmp[244036] "no copy" "temp"(244035 call _toUnsigned(244033 call args[243637] i[244822]))
                      (244043 call _check_tuple_var_decl tmp[244036] 2)
                      unknown t[244024](244037 call tmp[244036] 1)
                      unknown ok[244026](244040 call tmp[244036] 2)
                      if(244102 call _cond_test(244050 call ! ok[244026]))
                      {
                        (244057 call = err[243686](244056 call qio_format_error_arg_mismatch i[244822]))
                      }
                      {
                        if(244095 call _cond_test(244066 call ==(244064 call argType[243775] i[244822]) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[222717]))
                        {
                          (244078 call = err[243686](244077 call(371725 call . this[243640] c"_write_unsigned")(244071 call . style[243761] c"max_width_bytes") t[244024] i[244822]))
                        }
                        {
                          (244092 call = err[243686](244091 call _write_one_internal(371734 call . this[243640] c"_channel_internal") dynamic[218661] t[244024] origLocale[243681]))
                        }
                      }
                    }
                    {
                      if(244747 call _cond_test(244745 call ||(244739 call == tmp[244712] QIO_CONV_ARG_TYPE_REAL[222721])(244742 call == tmp[244712] QIO_CONV_ARG_TYPE_BINARY_REAL[222725])))
                      {
                        unknown tmp[244123] "no copy" "temp"(244122 call _toReal(244120 call args[243637] i[244822]))
                        (244130 call _check_tuple_var_decl tmp[244123] 2)
                        unknown t[244111](244124 call tmp[244123] 1)
                        unknown ok[244113](244127 call tmp[244123] 2)
                        if(244189 call _cond_test(244137 call ! ok[244113]))
                        {
                          (244144 call = err[243686](244143 call qio_format_error_arg_mismatch i[244822]))
                        }
                        {
                          if(244182 call _cond_test(244153 call ==(244151 call argType[243775] i[244822]) QIO_CONV_ARG_TYPE_BINARY_REAL[222725]))
                          {
                            (244165 call = err[243686](244164 call(371754 call . this[243640] c"_write_real")(244158 call . style[243761] c"max_width_bytes") t[244111] i[244822]))
                          }
                          {
                            (244179 call = err[243686](244178 call _write_one_internal(371763 call . this[243640] c"_channel_internal") dynamic[218661] t[244111] origLocale[243681]))
                          }
                        }
                      }
                      {
                        if(244759 call _cond_test(244757 call ||(244751 call == tmp[244712] QIO_CONV_ARG_TYPE_IMAG[222729])(244754 call == tmp[244712] QIO_CONV_ARG_TYPE_BINARY_IMAG[222733])))
                        {
                          unknown tmp[244210] "no copy" "temp"(244209 call _toImag(244207 call args[243637] i[244822]))
                          (244217 call _check_tuple_var_decl tmp[244210] 2)
                          unknown t[244198](244211 call tmp[244210] 1)
                          unknown ok[244200](244214 call tmp[244210] 2)
                          if(244279 call _cond_test(244224 call ! ok[244200]))
                          {
                            (244231 call = err[243686](244230 call qio_format_error_arg_mismatch i[244822]))
                          }
                          {
                            if(244272 call _cond_test(244240 call ==(244238 call argType[243775] i[244822]) QIO_CONV_ARG_TYPE_BINARY_IMAG[222733]))
                            {
                              (244255 call = err[243686](244254 call(371781 call . this[243640] c"_write_real")(244245 call . style[243761] c"max_width_bytes")(244251 call _cast real(64)[16] t[244198]) i[244822]))
                            }
                            {
                              (244269 call = err[243686](244268 call _write_one_internal(371790 call . this[243640] c"_channel_internal") dynamic[218661] t[244198] origLocale[243681]))
                            }
                          }
                        }
                        {
                          if(244771 call _cond_test(244769 call ||(244763 call == tmp[244712] QIO_CONV_ARG_TYPE_COMPLEX[222737])(244766 call == tmp[244712] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[222741])))
                          {
                            unknown tmp[244300] "no copy" "temp"(244299 call _toComplex(244297 call args[243637] i[244822]))
                            (244307 call _check_tuple_var_decl tmp[244300] 2)
                            unknown t[244288](244301 call tmp[244300] 1)
                            unknown ok[244290](244304 call tmp[244300] 2)
                            if(244366 call _cond_test(244314 call ! ok[244290]))
                            {
                              (244321 call = err[243686](244320 call qio_format_error_arg_mismatch i[244822]))
                            }
                            {
                              if(244359 call _cond_test(244330 call ==(244328 call argType[243775] i[244822]) QIO_CONV_ARG_TYPE_BINARY_COMPLEX[222741]))
                              {
                                (244342 call = err[243686](244341 call(371810 call . this[243640] c"_write_complex")(244335 call . style[243761] c"max_width_bytes") t[244288] i[244822]))
                              }
                              {
                                (244356 call = err[243686](244355 call _write_one_internal(371819 call . this[243640] c"_channel_internal") dynamic[218661] t[244288] origLocale[243681]))
                              }
                            }
                          }
                          {
                            if(244778 call _cond_test(244775 call == tmp[244712] QIO_CONV_ARG_TYPE_NUMERIC[222701]))
                            {
                              unknown tmp[244386] "no copy" "temp"(244385 call _toNumeric(244383 call args[243637] i[244822]))
                              (244393 call _check_tuple_var_decl tmp[244386] 2)
                              unknown t[244374](244387 call tmp[244386] 1)
                              unknown ok[244376](244390 call tmp[244386] 2)
                              if(244425 call _cond_test(244400 call ! ok[244376]))
                              {
                                (244407 call = err[243686](244406 call qio_format_error_arg_mismatch i[244822]))
                              }
                              {
                                (244422 call = err[243686](244421 call _write_one_internal(371834 call . this[243640] c"_channel_internal") dynamic[218661] t[244374] origLocale[243681]))
                              }
                            }
                            {
                              if(244785 call _cond_test(244782 call == tmp[244712] QIO_CONV_ARG_TYPE_CHAR[222745]))
                              {
                                unknown tmp[244446] "no copy" "temp"(244445 call _toChar(244443 call args[243637] i[244822]))
                                (244453 call _check_tuple_var_decl tmp[244446] 2)
                                unknown t[244434](244447 call tmp[244446] 1)
                                unknown ok[244436](244450 call tmp[244446] 2)
                                if(244489 call _cond_test(244460 call ! ok[244436]))
                                {
                                  (244467 call = err[243686](244466 call qio_format_error_arg_mismatch i[244822]))
                                }
                                {
                                  (244486 call = err[243686](244485 call _write_one_internal(371849 call . this[243640] c"_channel_internal") dynamic[218661](244483 'new'(244482 call ioChar[225904] t[244434])) origLocale[243681]))
                                }
                              }
                              {
                                if(244792 call _cond_test(244789 call == tmp[244712] QIO_CONV_ARG_TYPE_BINARY_STRING[222753]))
                                {
                                  unknown tmp[244510] "no copy" "temp"(244509 call _toStringFromBytesOrString(244507 call args[243637] i[244822]))
                                  (244517 call _check_tuple_var_decl tmp[244510] 2)
                                  unknown t[244498](244511 call tmp[244510] 1)
                                  unknown ok[244500](244514 call tmp[244510] 2)
                                  if(244549 call _cond_test(244524 call ! ok[244500]))
                                  {
                                    (244531 call = err[243686](244530 call qio_format_error_arg_mismatch i[244822]))
                                  }
                                  {
                                    (244546 call = err[243686](244545 call _write_one_internal(371865 call . this[243640] c"_channel_internal") dynamic[218661] t[244498] origLocale[243681]))
                                  }
                                }
                                {
                                  if(244799 call _cond_test(244796 call == tmp[244712] QIO_CONV_ARG_TYPE_STRING[222749]))
                                  {
                                    unknown tmp[244570] "no copy" "temp"(244569 call _toString(244567 call args[243637] i[244822]))
                                    (244577 call _check_tuple_var_decl tmp[244570] 2)
                                    unknown t[244558](244571 call tmp[244570] 1)
                                    unknown ok[244560](244574 call tmp[244570] 2)
                                    if(244609 call _cond_test(244584 call ! ok[244560]))
                                    {
                                      (244591 call = err[243686](244590 call qio_format_error_arg_mismatch i[244822]))
                                    }
                                    {
                                      (244606 call = err[243686](244605 call _write_one_internal(371880 call . this[243640] c"_channel_internal") dynamic[218661] t[244558] origLocale[243681]))
                                    }
                                  }
                                  {
                                    if(244806 call _cond_test(244803 call == tmp[244712] QIO_CONV_ARG_TYPE_REGEXP[222761]))
                                    {
                                      (244622 call = err[243686](244621 call qio_format_error_write_regexp))
                                    }
                                    {
                                      if(244813 call _cond_test(244810 call == tmp[244712] QIO_CONV_ARG_TYPE_REPR[222757]))
                                      {
                                        (244644 call = err[243686](244643 call _write_one_internal(371892 call . this[243640] c"_channel_internal") dynamic[218661](244641 call args[243637] i[244822]) origLocale[243681]))
                                      }
                                      {
                                        (244706 'throw'(244705 'new'(244703 call _owned[39039](?)(244702 call anymanaged IllegalArgumentError[359994](?)(244674 call +(244671 call + "args("(244669 call _cast string[24] i[244822])) ")")(244700 call + "writef internal error "(244698 call _cast string[24](244696 call argType[243775] i[244822])))))))
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          label _unused_continueLabel[244827]
          label _breakLabel[244826]
        }
        if(244902 call _cond_test(244857 call ! err[243686]))
        {
          if(244881 call _cond_test(244861 call < cur[243738] len[243749]))
          {
            unknown dummy[244864] c_int[209569]
            (244879 call(371910 call . this[243640] c"_format_reader") fmt[243724] cur[243738] len[243749] err[243686] conv[243753] gotConv[243757] style[243761] r[243781] 0)
          }
          if(244898 call _cond_test(244888 call < cur[243738] len[243749]))
          {
            (244894 call = err[243686](244893 call qio_format_error_too_few_args))
          }
        }
        (244912 call(244907 call . this[243640] c"_set_style") save_style[243733])
      }
    }
    if(244949 call _cond_test err[243686])
    {
      Try
      {
        {
          (244945 call(244924 call . this[243640] c"_ch_ioerror") err[243686] "in channel.writef(fmt:string)")
        }
      }
    }
    (244955 return 1)
  }
  { scopeless type
    bool[10]
  }
  function channel[225339](?).writef[244967](arg _mt[244972]:_MT[227], arg this[244969]:channel[225339](?) :
  channel[225339](?), arg fmtStr[244964] :
  string[24]) : _unknown[43] throws "method"
  {
    if(244983 call _cond_test(244976 call !(371931 call . this[244969] c"writing")))
    {
      (244981 call compilerError "writef on read-only channel")
    }
    unknown err[244991](371935 call ENOERR[210102]) syserr[210032]
    {
      const tmp[245166] "const" "temp"
      (245167 'move' tmp[245166](245164 'deref'(245163 '_wide_get_locale'(244995 call . this[244969] c"home"))))
      {
        Try
        {
          {
            (245003 call(244999 call . this[244969] c"lock"))
          }
        }
        Defer
        {
          {
            (245013 call(245009 call . this[244969] c"unlock"))
          }
        }
        unknown fmt[245029](245028 call(245024 call .(245023 call(245019 call . fmtStr[244964] c"localize")) c"c_str"))
        unknown save_style[245038](245037 call(245033 call . this[244969] c"_style"))
        unknown cur[245043] 0 size_t[209674]
        unknown len[245054](245052 call _cast size_t[209674](245048 call . fmt[245029] c"length")) size_t[209674]
        unknown conv[245058] qio_conv_t[222693]
        unknown gotConv[245062] bool[10]
        unknown style[245066] iostyle[219508]
        unknown end[245070] size_t[209674]
        unknown dummy[245074] c_int[209569]
        unknown r[245080] unmanaged _channel_regexp_info?[390087]
        Defer
        {
          {
            if(245089 call _cond_test r[245080])
            {
              (245086 call chpl__delete r[245080])
            }
          }
        }
        (245108 call(371954 call . this[244969] c"_format_reader") fmt[245029] cur[245043] len[245054] err[244991] conv[245058] gotConv[245062] style[245066] r[245080] 0)
        if(245127 call _cond_test(245111 call ! err[244991]))
        {
          if(245122 call _cond_test gotConv[245062])
          {
            (245118 call = err[244991](245117 call qio_format_error_too_few_args))
          }
        }
        if(245151 call _cond_test(245132 call ! err[244991]))
        {
          if(245146 call _cond_test(245136 call < cur[245043] len[245054]))
          {
            (245142 call = err[244991](245141 call qio_format_error_too_few_args))
          }
        }
        (245161 call(245156 call . this[244969] c"_set_style") save_style[245038])
      }
    }
    if(245198 call _cond_test err[244991])
    {
      Try
      {
        {
          (245194 call(245173 call . this[244969] c"_ch_ioerror") err[244991] "in channel.writef(fmt:string, ...)")
        }
      }
    }
    (245204 return 1)
  }
  { scopeless type
    bool[10]
  }
  function channel[225339](?).readf[245216](arg _mt[245226]:_MT[227], arg this[245223]:channel[225339](?) :
  channel[225339](?), arg fmtStr[245213] :
  string[24], ref arg args[245220]:_any[170](?) ...) : _unknown[43] throws "method"
  {
    if(245250 call _cond_test(371979 call . this[245223] c"writing"))
    {
      (245248 call compilerError "readf on write-only channel")
    }
    const origLocale[245262] "const"(245261 call(245257 call . this[245223] c"getLocaleOfIoRequest"))
    unknown err[245267](371984 call ENOERR[210102]) syserr[210032]
    {
      const tmp[247213] "const" "temp"
      (247214 'move' tmp[247213](247211 'deref'(247210 '_wide_get_locale'(245271 call . this[245223] c"home"))))
      {
        Try
        {
          {
            (245279 call(245275 call . this[245223] c"lock"))
          }
        }
        Defer
        {
          {
            (245289 call(245285 call . this[245223] c"unlock"))
          }
        }
        unknown fmt[245305](245304 call(245300 call .(245299 call(245295 call . fmtStr[245213] c"localize")) c"c_str"))
        unknown save_style[245314](245313 call(245309 call . this[245223] c"_style"))
        unknown cur[245319] 0 size_t[209674]
        unknown len[245330](245328 call _cast size_t[209674](245324 call . fmt[245305] c"length")) size_t[209674]
        unknown conv[245334] qio_conv_t[222693]
        unknown gotConv[245338] bool[10]
        unknown style[245342] iostyle[219508]
        unknown end[245346] size_t[209674]
        unknown argType[245356](245354 call *(245351 call + k[245218] 5) c_int[209569])
        unknown r[245362] unmanaged _channel_regexp_info?[390087]
        Defer
        {
          {
            if(245371 call _cond_test r[245362])
            {
              (245368 call chpl__delete r[245362])
            }
          }
        }
        {
          unknown _indexOfInterest[245396] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[245397] "expr temp" "temp"
          (245406 'move' _iterator[245397](245404 call _getIterator(245414 call chpl_direct_range_iter 1(245411 call . argType[245356] c"size") 1)))
          Defer
          {
            {
              (245430 call _freeIterator _iterator[245397])
            }
          }
          { scopeless type
            (245419 'move' _indexOfInterest[245396](245416 call iteratorIndex _iterator[245397]))
          }
          ForLoop
          {
            unknown i[245423] "index var" "insert auto destroy"
            (245425 'move' i[245423] _indexOfInterest[245396])
            {
              (245392 call =(245390 call argType[245356] i[245423]) QIO_CONV_UNK[222697])
            }
            label _continueLabel[245401]
            _indexOfInterest[245396]
            _iterator[245397]
          }
          label _breakLabel[245402]
        }
        (245443 call = err[245267](245442 call qio_channel_mark 0(372010 call . this[245223] c"_channel_internal")))
        if(247198 call _cond_test(245447 call ! err[245267]))
        {
          unknown j[245450] 1
          {
            unknown i[247087] 0
            unknown tmp[247088] "maybe param" "temp"
            (247100 'move' tmp[247088](247098 call chpl_compute_low_param_loop_bound 1 k[245218]))
            unknown tmp[247089] "maybe param" "temp"
            (247107 'move' tmp[247089](247105 call chpl_compute_high_param_loop_bound 1 k[245218]))
            unknown tmp[247090] "maybe param" "temp"
            (247110 'move' tmp[247090] 1)
            ParamForLoop
            { i[247087] tmp[247088] tmp[247089] tmp[247090]
              {
                if(245605 call _cond_test(245460 call <= j[245450] i[247087]))
                {
                  (245473 call(372018 call . this[245223] c"_format_reader") fmt[245305] cur[245319] len[245330] err[245267] conv[245334] gotConv[245338] style[245342] r[245362] 1)
                  if(245601 call _cond_test(245478 call != r[245362] nil[38]))
                  {
                    const rnn[245483] "const"(245481 call postfix! r[245362])
                    if(245597 call _cond_test(245488 call . rnn[245483] c"hasRegexp"))
                    {
                      if(245512 call _cond_test(245502 call >(245499 call -(245496 call + i[247087](245493 call . rnn[245483] c"ncaptures")) 1) k[245218]))
                      {
                        (245508 call = err[245267](245507 call qio_format_error_too_few_args))
                      }
                      {
                        unknown _indexOfInterest[245554] "an _indexOfInterest or chpl__followIdx variable" "temp"
                        unknown _iterator[245555] "expr temp" "temp"
                        (245564 'move' _iterator[245555](245562 call _getIterator(245574 call chpl_direct_counted_range_iter 0(245570 call . rnn[245483] c"ncaptures"))))
                        Defer
                        {
                          {
                            (245590 call _freeIterator _iterator[245555])
                          }
                        }
                        { scopeless type
                          (245579 'move' _indexOfInterest[245554](245576 call iteratorIndex _iterator[245555]))
                        }
                        ForLoop
                        {
                          unknown z[245583] "index var" "insert auto destroy"
                          (245585 'move' z[245583] _indexOfInterest[245554])
                          {
                            if(245549 call _cond_test(245535 call <=(245529 call + i[247087] z[245583])(245532 call . argType[245356] c"size")))
                            {
                              (245545 call =(245543 call argType[245356](245540 call + i[247087] z[245583])) QIO_CONV_SET_CAPTURE[222813])
                            }
                          }
                          label _continueLabel[245559]
                          _indexOfInterest[245554]
                          _iterator[245555]
                        }
                        label _breakLabel[245560]
                      }
                    }
                  }
                }
                (245617 call(372045 call . this[245223] c"_conv_helper") err[245267] conv[245334] gotConv[245338] j[245450] argType[245356])
                unknown domore[245634](245633 call(372054 call . this[245223] c"_conv_sethandler") err[245267](245625 call argType[245356] i[247087]) style[245342] i[247087](245631 call args[245220] i[247087]) 0)
                if(247083 call _cond_test domore[245634])
                {
                  (245644 call(245639 call . this[245223] c"_set_style") style[245342])
                  {
                    unknown tmp[246970] "expr temp" "maybe param" "maybe type" "temp"
                    (246972 'move' tmp[246970](245650 call argType[245356] i[247087]))
                    if(246982 call _cond_test(246980 call ||(246974 call == tmp[246970] QIO_CONV_ARG_TYPE_SIGNED[222705])(246977 call == tmp[246970] QIO_CONV_ARG_TYPE_BINARY_SIGNED[222709])))
                    {
                      unknown tmp[245667] "no copy" "temp"(245666 call _toSigned(245664 call args[245220] i[247087]))
                      (245674 call _check_tuple_var_decl tmp[245667] 2)
                      unknown t[245655](245668 call tmp[245667] 1)
                      unknown ok[245657](245671 call tmp[245667] 2)
                      if(245758 call _cond_test(245681 call ! ok[245657]))
                      {
                        (245688 call = err[245267](245687 call qio_format_error_arg_mismatch i[247087]))
                      }
                      {
                        unknown ti[245693] int(64)[13]
                        if(245731 call _cond_test(245702 call ==(245700 call argType[245356] i[247087]) QIO_CONV_ARG_TYPE_BINARY_SIGNED[222709]))
                        {
                          (245714 call = err[245267](245713 call(372083 call . this[245223] c"_read_signed")(245707 call . style[245342] c"max_width_bytes") ti[245693] i[247087]))
                        }
                        {
                          (245728 call = err[245267](245727 call _read_one_internal(372092 call . this[245223] c"_channel_internal") dynamic[218661] ti[245693] origLocale[245262]))
                        }
                        if(245753 call _cond_test(245738 call ! err[245267]))
                        {
                          (245750 call = err[245267](245749 call _setIfPrimitive(245745 call args[245220] i[247087]) ti[245693] i[247087]))
                        }
                      }
                    }
                    {
                      if(246993 call _cond_test(246991 call ||(246985 call == tmp[246970] QIO_CONV_ARG_TYPE_UNSIGNED[222713])(246988 call == tmp[246970] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[222717])))
                      {
                        unknown tmp[245779] "no copy" "temp"(245778 call _toUnsigned(245776 call args[245220] i[247087]))
                        (245786 call _check_tuple_var_decl tmp[245779] 2)
                        unknown t[245767](245780 call tmp[245779] 1)
                        unknown ok[245769](245783 call tmp[245779] 2)
                        if(245870 call _cond_test(245793 call ! ok[245769]))
                        {
                          (245800 call = err[245267](245799 call qio_format_error_arg_mismatch i[247087]))
                        }
                        {
                          unknown ti[245805] uint(64)[107]
                          if(245843 call _cond_test(245814 call ==(245812 call argType[245356] i[247087]) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[222717]))
                          {
                            (245826 call = err[245267](245825 call(372118 call . this[245223] c"_read_unsigned")(245819 call . style[245342] c"max_width_bytes") ti[245805] i[247087]))
                          }
                          {
                            (245840 call = err[245267](245839 call _read_one_internal(372127 call . this[245223] c"_channel_internal") dynamic[218661] ti[245805] origLocale[245262]))
                          }
                          if(245865 call _cond_test(245850 call ! err[245267]))
                          {
                            (245862 call = err[245267](245861 call _setIfPrimitive(245857 call args[245220] i[247087]) ti[245805] i[247087]))
                          }
                        }
                      }
                      {
                        if(247005 call _cond_test(247003 call ||(246997 call == tmp[246970] QIO_CONV_ARG_TYPE_REAL[222721])(247000 call == tmp[246970] QIO_CONV_ARG_TYPE_BINARY_REAL[222725])))
                        {
                          unknown tmp[245891] "no copy" "temp"(245890 call _toReal(245888 call args[245220] i[247087]))
                          (245898 call _check_tuple_var_decl tmp[245891] 2)
                          unknown t[245879](245892 call tmp[245891] 1)
                          unknown ok[245881](245895 call tmp[245891] 2)
                          if(245982 call _cond_test(245905 call ! ok[245881]))
                          {
                            (245912 call = err[245267](245911 call qio_format_error_arg_mismatch i[247087]))
                          }
                          {
                            unknown ti[245917] real(64)[16]
                            if(245955 call _cond_test(245926 call ==(245924 call argType[245356] i[247087]) QIO_CONV_ARG_TYPE_BINARY_REAL[222725]))
                            {
                              (245938 call = err[245267](245937 call(372153 call . this[245223] c"_read_real")(245931 call . style[245342] c"max_width_bytes") ti[245917] i[247087]))
                            }
                            {
                              (245952 call = err[245267](245951 call _read_one_internal(372162 call . this[245223] c"_channel_internal") dynamic[218661] ti[245917] origLocale[245262]))
                            }
                            if(245977 call _cond_test(245962 call ! err[245267]))
                            {
                              (245974 call = err[245267](245973 call _setIfPrimitive(245969 call args[245220] i[247087]) ti[245917] i[247087]))
                            }
                          }
                        }
                        {
                          if(247017 call _cond_test(247015 call ||(247009 call == tmp[246970] QIO_CONV_ARG_TYPE_IMAG[222729])(247012 call == tmp[246970] QIO_CONV_ARG_TYPE_BINARY_IMAG[222733])))
                          {
                            unknown tmp[246003] "no copy" "temp"(246002 call _toImag(246000 call args[245220] i[247087]))
                            (246010 call _check_tuple_var_decl tmp[246003] 2)
                            unknown t[245991](246004 call tmp[246003] 1)
                            unknown ok[245993](246007 call tmp[246003] 2)
                            if(246106 call _cond_test(246017 call ! ok[245993]))
                            {
                              (246024 call = err[245267](246023 call qio_format_error_arg_mismatch i[247087]))
                            }
                            {
                              unknown ti[246029] imag(64)[122]
                              if(246080 call _cond_test(246038 call ==(246036 call argType[245356] i[247087]) QIO_CONV_ARG_TYPE_BINARY_IMAG[222733]))
                              {
                                unknown tr[246041] real(64)[16]
                                (246055 call = err[245267](246054 call(372186 call . this[245223] c"_read_real")(246048 call . style[245342] c"max_width_bytes") tr[246041] i[247087]))
                                (246063 call = ti[246029](246061 call _cast imag(64)[122] tr[246041]))
                              }
                              {
                                (246077 call = err[245267](246076 call _read_one_internal(372197 call . this[245223] c"_channel_internal") dynamic[218661] ti[246029] origLocale[245262]))
                              }
                              if(246101 call _cond_test(246086 call ! err[245267]))
                              {
                                (246098 call = err[245267](246097 call _setIfPrimitive(246093 call args[245220] i[247087]) ti[246029] i[247087]))
                              }
                            }
                          }
                          {
                            if(247029 call _cond_test(247027 call ||(247021 call == tmp[246970] QIO_CONV_ARG_TYPE_COMPLEX[222737])(247024 call == tmp[246970] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[222741])))
                            {
                              unknown tmp[246127] "no copy" "temp"(246126 call _toComplex(246124 call args[245220] i[247087]))
                              (246134 call _check_tuple_var_decl tmp[246127] 2)
                              unknown t[246115](246128 call tmp[246127] 1)
                              unknown ok[246117](246131 call tmp[246127] 2)
                              if(246218 call _cond_test(246141 call ! ok[246117]))
                              {
                                (246148 call = err[245267](246147 call qio_format_error_arg_mismatch i[247087]))
                              }
                              {
                                unknown ti[246153] complex(128)[132]
                                if(246191 call _cond_test(246162 call ==(246160 call argType[245356] i[247087]) QIO_CONV_ARG_TYPE_BINARY_COMPLEX[222741]))
                                {
                                  (246174 call = err[245267](246173 call(372223 call . this[245223] c"_read_complex")(246167 call . style[245342] c"max_width_bytes") ti[246153] i[247087]))
                                }
                                {
                                  (246188 call = err[245267](246187 call _read_one_internal(372232 call . this[245223] c"_channel_internal") dynamic[218661] ti[246153] origLocale[245262]))
                                }
                                if(246213 call _cond_test(246198 call ! err[245267]))
                                {
                                  (246210 call = err[245267](246209 call _setIfPrimitive(246205 call args[245220] i[247087]) ti[246153] i[247087]))
                                }
                              }
                            }
                            {
                              if(247036 call _cond_test(247033 call == tmp[246970] QIO_CONV_ARG_TYPE_NUMERIC[222701]))
                              {
                                unknown tmp[246238] "no copy" "temp"(246237 call _toNumeric(246235 call args[245220] i[247087]))
                                (246245 call _check_tuple_var_decl tmp[246238] 2)
                                unknown t[246226](246239 call tmp[246238] 1)
                                unknown ok[246228](246242 call tmp[246238] 2)
                                if(246303 call _cond_test(246252 call ! ok[246228]))
                                {
                                  (246259 call = err[245267](246258 call qio_format_error_arg_mismatch i[247087]))
                                }
                                {
                                  unknown ti[246264] t[246226]
                                  (246279 call = err[245267](246278 call _read_one_internal(372254 call . this[245223] c"_channel_internal") dynamic[218661] ti[246264] origLocale[245262]))
                                  if(246298 call _cond_test(246283 call ! err[245267]))
                                  {
                                    (246295 call = err[245267](246294 call _setIfPrimitive(246290 call args[245220] i[247087]) ti[246264] i[247087]))
                                  }
                                }
                              }
                              {
                                if(247043 call _cond_test(247040 call == tmp[246970] QIO_CONV_ARG_TYPE_CHAR[222745]))
                                {
                                  unknown tmp[246323] "no copy" "temp"(246322 call _toChar(246320 call args[245220] i[247087]))
                                  (246330 call _check_tuple_var_decl tmp[246323] 2)
                                  unknown t[246311](246324 call tmp[246323] 1)
                                  unknown ok[246313](246327 call tmp[246323] 2)
                                  unknown chr[246341](246340 'new'(246339 call ioChar[225904] t[246311]))
                                  if(246370 call _cond_test(246345 call ! ok[246313]))
                                  {
                                    (246352 call = err[245267](246351 call qio_format_error_arg_mismatch i[247087]))
                                  }
                                  {
                                    (246367 call = err[245267](246366 call _read_one_internal(372277 call . this[245223] c"_channel_internal") dynamic[218661] chr[246341] origLocale[245262]))
                                  }
                                  if(246390 call _cond_test(246376 call ! err[245267]))
                                  {
                                    (246388 call _setIfChar(246382 call args[245220] i[247087])(246385 call . chr[246341] c"ch"))
                                  }
                                }
                                {
                                  if(247050 call _cond_test(247047 call == tmp[246970] QIO_CONV_ARG_TYPE_BINARY_STRING[222753]))
                                  {
                                    unknown tmp[246411] "no copy" "temp"(246410 call _toStringFromBytesOrString(246408 call args[245220] i[247087]))
                                    (246418 call _check_tuple_var_decl tmp[246411] 2)
                                    unknown t[246399](246412 call tmp[246411] 1)
                                    unknown ok[246401](246415 call tmp[246411] 2)
                                    if(246450 call _cond_test(246425 call ! ok[246401]))
                                    {
                                      (246432 call = err[245267](246431 call qio_format_error_arg_mismatch i[247087]))
                                    }
                                    {
                                      (246447 call = err[245267](246446 call _read_one_internal(372296 call . this[245223] c"_channel_internal") dynamic[218661] t[246399] origLocale[245262]))
                                    }
                                    if(246471 call _cond_test(246456 call ! err[245267]))
                                    {
                                      (246468 call = err[245267](246467 call _setIfPrimitive(246463 call args[245220] i[247087]) t[246399] i[247087]))
                                    }
                                  }
                                  {
                                    if(247057 call _cond_test(247054 call == tmp[246970] QIO_CONV_ARG_TYPE_STRING[222749]))
                                    {
                                      unknown tmp[246492] "no copy" "temp"(246491 call _toString(246489 call args[245220] i[247087]))
                                      (246499 call _check_tuple_var_decl tmp[246492] 2)
                                      unknown t[246480](246493 call tmp[246492] 1)
                                      unknown ok[246482](246496 call tmp[246492] 2)
                                      if(246531 call _cond_test(246506 call ! ok[246482]))
                                      {
                                        (246513 call = err[245267](246512 call qio_format_error_arg_mismatch i[247087]))
                                      }
                                      {
                                        (246528 call = err[245267](246527 call _read_one_internal(372317 call . this[245223] c"_channel_internal") dynamic[218661] t[246480] origLocale[245262]))
                                      }
                                      if(246552 call _cond_test(246537 call ! err[245267]))
                                      {
                                        (246549 call = err[245267](246548 call _setIfPrimitive(246544 call args[245220] i[247087]) t[246480] i[247087]))
                                      }
                                    }
                                    {
                                      if(247064 call _cond_test(247061 call == tmp[246970] QIO_CONV_ARG_TYPE_REGEXP[222761]))
                                      {
                                        unknown tmp[246573] "no copy" "temp"(246572 call _toRegexp(246570 call args[245220] i[247087]))
                                        (246580 call _check_tuple_var_decl tmp[246573] 2)
                                        unknown t[246561](246574 call tmp[246573] 1)
                                        unknown ok[246563](246577 call tmp[246573] 2)
                                        if(246598 call _cond_test(246587 call ! ok[246563]))
                                        {
                                          (246594 call = err[245267](246593 call qio_format_error_arg_mismatch i[247087]))
                                        }
                                        if(246615 call _cond_test(246604 call == r[245362] nil[38]))
                                        {
                                          (246612 call = r[245362](246611 'new'(246610 'to unmanaged class from unknown'(246609 call anymanaged _channel_regexp_info[370912](?)))))
                                        }
                                        const rnn[246623] "const"(246621 call postfix! r[245362])
                                        (246631 call(246627 call . rnn[246623] c"clear"))
                                        (246643 call =(246634 call . rnn[246623] c"theRegexp")(246640 call . t[246561] c"_regexp"))
                                        (246651 call =(246647 call . rnn[246623] c"hasRegexp") 1)
                                        (246659 call =(246655 call . rnn[246623] c"releaseRegexp") 0)
                                        (246669 call(372345 call . this[245223] c"_match_regexp_if_needed") cur[245319] len[245330] err[245267] style[245342] rnn[246623])
                                        if(246692 call _cond_test(246682 call >(246679 call -(246676 call + i[247087](246673 call . rnn[246623] c"ncaptures")) 1) k[245218]))
                                        {
                                          (246688 call = err[245267](246687 call qio_format_error_too_few_args))
                                        }
                                        {
                                          unknown _indexOfInterest[246736] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                          unknown _iterator[246737] "expr temp" "temp"
                                          (246746 'move' _iterator[246737](246744 call _getIterator(246756 call chpl_direct_counted_range_iter 0(246752 call . rnn[246623] c"ncaptures"))))
                                          Defer
                                          {
                                            {
                                              (246772 call _freeIterator _iterator[246737])
                                            }
                                          }
                                          { scopeless type
                                            (246761 'move' _indexOfInterest[246736](246758 call iteratorIndex _iterator[246737]))
                                          }
                                          ForLoop
                                          {
                                            unknown z[246765] "index var" "insert auto destroy"
                                            (246767 'move' z[246765] _indexOfInterest[246736])
                                            {
                                              if(246731 call _cond_test(246714 call <=(246708 call + i[247087] z[246765])(246711 call . argType[245356] c"size")))
                                              {
                                                (246727 call =(246725 call argType[245356](246722 call +(246719 call + i[247087] z[246765]) 1)) QIO_CONV_SET_CAPTURE[222813])
                                              }
                                            }
                                            label _continueLabel[246741]
                                            _indexOfInterest[246736]
                                            _iterator[246737]
                                          }
                                          label _breakLabel[246742]
                                        }
                                      }
                                      {
                                        if(247071 call _cond_test(247068 call == tmp[246970] QIO_CONV_ARG_TYPE_REPR[222757]))
                                        {
                                          (246797 call = err[245267](246796 call _read_one_internal(372369 call . this[245223] c"_channel_internal") dynamic[218661](246794 call args[245220] i[247087]) origLocale[245262]))
                                        }
                                        {
                                          if(247078 call _cond_test(247075 call == tmp[246970] QIO_CONV_SET_CAPTURE[222813]))
                                          {
                                            if(246916 call _cond_test(246807 call == r[245362] nil[38]))
                                            {
                                              (246813 call = err[245267](246812 call qio_format_error_bad_regexp))
                                            }
                                            {
                                              const rnn[246820] "const"(246818 call postfix! r[245362])
                                              (246831 call(372381 call . this[245223] c"_match_regexp_if_needed") cur[245319] len[245330] err[245267] style[245342] rnn[246820])
                                              if(246912 call _cond_test(246843 call >=(246836 call . rnn[246820] c"capturei")(246840 call . rnn[246820] c"ncaptures")))
                                              {
                                                (246849 call = err[245267](246848 call qio_format_error_bad_regexp))
                                              }
                                              {
                                                if(246899 call _cond_test(246860 call _isIoPrimitiveType(246858 'typeof'(246857 call args[245220] i[247087]))))
                                                {
                                                  Try
                                                  {
                                                    {
                                                      (246882 call =(246864 call args[245220] i[247087])(246880 call _cast(246879 'typeof'(246878 call args[245220] i[247087]))(246874 call(246866 call . rnn[246820] c"capArr")(246870 call . rnn[246820] c"capturei"))))
                                                    }
                                                  }
                                                  Catch
                                                  {
                                                    unknown tmp[329036] "temp"(329038 'current error')
                                                    unknown chpl_anon_error[329041](329045 'new'(329042 call _owned[39039](?) tmp[329036]))
                                                    {
                                                      (246891 call = err[245267](246890 call qio_format_error_bad_regexp))
                                                    }
                                                  }
                                                }
                                                (246909 call +=(246905 call . rnn[246820] c"capturei") 1)
                                              }
                                            }
                                          }
                                          {
                                            (246964 'throw'(246963 'new'(246961 call _owned[39039](?)(246960 call anymanaged IllegalArgumentError[359994](?)(246932 call +(246929 call + "args("(246927 call _cast string[24] i[247087])) ")")(246958 call + "readf internal error "(246956 call _cast string[24](246954 call argType[245356] i[247087])))))))
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            label _unused_continueLabel[247092]
            label _breakLabel[247091]
          }
          if(247151 call _cond_test(247122 call ! err[245267]))
          {
            if(247146 call _cond_test(247126 call < cur[245319] len[245330]))
            {
              unknown dummy[247129] c_int[209569]
              (247144 call(372413 call . this[245223] c"_format_reader") fmt[245305] cur[245319] len[245330] err[245267] conv[245334] gotConv[245338] style[245342] r[245362] 1)
            }
          }
          if(247175 call _cond_test(247156 call ! err[245267]))
          {
            if(247170 call _cond_test(247160 call < cur[245319] len[245330]))
            {
              (247166 call = err[245267](247165 call qio_format_error_too_few_args))
            }
          }
          if(247194 call _cond_test(247180 call ! err[245267]))
          {
            (247185 call qio_channel_commit_unlocked(372431 call . this[245223] c"_channel_internal"))
          }
          {
            (247191 call qio_channel_revert_unlocked(372436 call . this[245223] c"_channel_internal"))
          }
        }
        (247208 call(247203 call . this[245223] c"_set_style") save_style[245314])
      }
    }
    if(247264 call _cond_test(247219 call ! err[245267]))
    {
      (247222 return 1)
    }
    {
      if(247260 call _cond_test(247227 call == err[245267](372443 call EEOF[210684])))
      {
        (247230 return 0)
      }
      {
        Try
        {
          {
            (247255 call(247234 call . this[245223] c"_ch_ioerror") err[245267] "in channel.readf(fmt:string, ...)")
          }
        }
      }
    }
    (247270 return 0)
  }
  { scopeless type
    bool[10]
  }
  function channel[225339](?).readf[247282](arg _mt[247287]:_MT[227], arg this[247284]:channel[225339](?) :
  channel[225339](?), arg fmtStr[247279] :
  string[24]) : _unknown[43] throws "method" "no doc"
  {
    if(247295 call _cond_test(372449 call . this[247284] c"writing"))
    {
      (247293 call compilerError "readf on write-only channel")
    }
    unknown err[247303](372453 call ENOERR[210102]) syserr[210032]
    {
      const tmp[247506] "const" "temp"
      (247507 'move' tmp[247506](247504 'deref'(247503 '_wide_get_locale'(247307 call . this[247284] c"home"))))
      {
        Try
        {
          {
            (247315 call(247311 call . this[247284] c"lock"))
          }
        }
        Defer
        {
          {
            (247325 call(247321 call . this[247284] c"unlock"))
          }
        }
        unknown fmt[247341](247340 call(247336 call .(247335 call(247331 call . fmtStr[247279] c"localize")) c"c_str"))
        unknown save_style[247350](247349 call(247345 call . this[247284] c"_style"))
        unknown cur[247355] 0 size_t[209674]
        unknown len[247366](247364 call _cast size_t[209674](247360 call . fmt[247341] c"length")) size_t[209674]
        unknown conv[247370] qio_conv_t[222693]
        unknown gotConv[247374] bool[10]
        unknown style[247378] iostyle[219508]
        unknown end[247382] size_t[209674]
        unknown dummy[247386] c_int[209569]
        unknown r[247392] unmanaged _channel_regexp_info?[390087]
        Defer
        {
          {
            if(247401 call _cond_test r[247392])
            {
              (247398 call chpl__delete r[247392])
            }
          }
        }
        (247415 call = err[247303](247414 call qio_channel_mark 0(372474 call . this[247284] c"_channel_internal")))
        if(247448 call _cond_test(247419 call ! err[247303]))
        {
          (247432 call(372479 call . this[247284] c"_format_reader") fmt[247341] cur[247355] len[247366] err[247303] conv[247370] gotConv[247374] style[247378] r[247392] 1)
          if(247444 call _cond_test gotConv[247374])
          {
            (247440 call = err[247303](247439 call qio_format_error_too_few_args))
          }
        }
        if(247472 call _cond_test(247453 call ! err[247303]))
        {
          if(247467 call _cond_test(247457 call < cur[247355] len[247366]))
          {
            (247463 call = err[247303](247462 call qio_format_error_too_few_args))
          }
        }
        if(247491 call _cond_test(247477 call ! err[247303]))
        {
          (247482 call qio_channel_commit_unlocked(372499 call . this[247284] c"_channel_internal"))
        }
        {
          (247488 call qio_channel_revert_unlocked(372504 call . this[247284] c"_channel_internal"))
        }
        (247501 call(247496 call . this[247284] c"_set_style") save_style[247350])
      }
    }
    if(247566 call _cond_test(247512 call ! err[247303]))
    {
      (247515 return 1)
    }
    {
      if(247562 call _cond_test(247526 call ||(247520 call == err[247303](372511 call EEOF[210684]))(247524 call == err[247303](372514 call EFORMAT[210730]))))
      {
        (247529 return 0)
      }
      {
        Try
        {
          {
            (247554 call(247533 call . this[247284] c"_ch_ioerror") err[247303] "in channel.readf(fmt:string)")
          }
        }
        (247560 return 0)
      }
    }
  }
  function writef[247579](arg fmt[247576] :
  string[24], const arg args[247583]:_any[170](?) ...) : _unknown[43]
  {
    Try!
    {
      {
        (247596 return(247595 call(247588 call . stdout[236634] c"writef") fmt[247576](247594 'expand_tuple' args[247583])))
      }
    }
  }
  { scopeless type
    bool[10]
  }
  function writef[247612](arg fmt[247609] :
  string[24]) : _unknown[43] "no doc"
  {
    Try!
    {
      {
        (247622 return(247621 call(247616 call . stdout[236634] c"writef") fmt[247609]))
      }
    }
  }
  { scopeless type
    bool[10]
  }
  function readf[247638](arg fmt[247635] :
  string[24], ref arg args[247642]:_any[170](?) ...) : _unknown[43] throws
  {
    (247658 return(247657 'try-expr'(247656 call(247649 call . stdin[236619] c"readf") fmt[247635](247655 'expand_tuple' args[247642]))))
  }
  { scopeless type
    bool[10]
  }
  function readf[247670](arg fmt[247667] :
  string[24]) : _unknown[43] throws "no doc"
  {
    (247681 return(247680 'try-expr'(247679 call(247674 call . stdin[236619] c"readf") fmt[247667])))
  }
  { scopeless type
    bool[10]
  }
  function channel[225339](?).skipField[247690](arg _mt[247695]:_MT[227], arg this[247692]:channel[225339](?) :
  channel[225339](?)) : _unknown[43] throws "method" "no return value for void"
  {
    unknown err[247699](372529 call ENOERR[210102]) syserr[210032]
    {
      const tmp[247764] "const" "temp"
      (247765 'move' tmp[247764](247762 'deref'(247761 '_wide_get_locale'(247704 call . this[247692] c"home"))))
      {
        Try
        {
          {
            (247712 call(247708 call . this[247692] c"lock"))
          }
        }
        Defer
        {
          {
            (247722 call(247718 call . this[247692] c"unlock"))
          }
        }
        unknown st[247734](247733 call(247728 call . this[247692] c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE[19370])
        if(247757 call _cond_test(247739 call == st[247734] QIO_AGGREGATE_FORMAT_JSON[19410]))
        {
          (247747 call = err[247699](247746 call qio_channel_skip_json_field 0(372541 call . this[247692] c"_channel_internal")))
        }
        {
          (247753 call = err[247699] ENOTSUP[211088])
        }
      }
    }
    if(247796 call _cond_test err[247699])
    {
      Try
      {
        {
          (247792 call(247771 call . this[247692] c"_ch_ioerror") err[247699] "in skipField")
        }
      }
    }
  }
  function string[24].format[247811](arg _mt[247816]:_MT[227], arg this[247813]:string[24] :
  string[24], arg args[247808]:_any[170](?) ...) : _unknown[43] throws "method"
  {
    Try
    {
      {
        (247825 return(247824 call chpl_do_format this[247813](247823 'expand_tuple' args[247808])))
      }
    }
    Catch e : anymanaged SystemError
    {
      unknown tmp[329048] "temp"(329051 'dynamic_cast' unmanaged SystemError[390112](329050 'current error'))
      if(329060 '!=' tmp[329048] nil[38])
      {
        unknown e[329066](329070 'new'(329067 call _owned[39039](?) tmp[329048]))
        {
          Try
          {
            {
              (247854 call ioerror(247834 call . e[329066] c"err") "in string.format")
            }
          }
        }
      }
      {
      }
    }
    Catch
    {
      unknown tmp[329073] "temp"(329075 'current error')
      unknown chpl_anon_error[329078](329082 'new'(329079 call _owned[39039](?) tmp[329073]))
      {
        Try
        {
          {
            (247867 call ioerror(247863 call _cast syserr[210032] EINVAL[210884]) "in string.format")
          }
        }
      }
    }
    (247892 return "")
  }
  { scopeless type
    string[24]
  }
  function chpl_do_format[247903](arg fmt[247900] :
  string[24], arg args[247907]:_any[170](?) ...) : _unknown[43] throws "inline" "private"
  {
    unknown f[247915](247914 'try-expr'(247913 call openmem))
    Defer
    {
      {
        Try
        {
          {
            (247924 call(247920 call . f[247915] c"close"))
          }
        }
        Catch
        {
          unknown tmp[329085] "temp"(329087 'current error')
          unknown chpl_anon_error[329090](329094 'new'(329091 call _owned[39039](?) tmp[329085]))
          {
          }
        }
      }
    }
    unknown offset[247937] 0 int(64)[13]
    {
      unknown w[247949](247948 'try-expr'(247947 call(247941 call . f[247915] c"writer")(locking = 0)))
      Defer
      {
        {
          Try
          {
            {
              (247958 call(247954 call . w[247949] c"close"))
            }
          }
          Catch
          {
            unknown tmp[329097] "temp"(329099 'current error')
            unknown chpl_anon_error[329102](329106 'new'(329103 call _owned[39039](?) tmp[329097]))
            {
            }
          }
        }
      }
      Try
      {
        {
          (247977 call(247970 call . w[247949] c"writef") fmt[247900](247976 'expand_tuple' args[247907]))
        }
      }
      (247988 call = offset[247937](247987 call(247983 call . w[247949] c"offset")))
      Try
      {
        {
          (247996 call(247992 call . w[247949] c"close"))
        }
      }
    }
    unknown buf[248011](248010 call c_malloc(248004 call uint(64)[107] 8)(248008 call + offset[247937] 1))
    unknown r[248023](248022 'try-expr'(248021 call(248015 call . f[247915] c"reader")(locking = 0)))
    Defer
    {
      {
        Try
        {
          {
            (248031 call(248027 call . r[248023] c"close"))
          }
        }
        Catch
        {
          unknown tmp[329109] "temp"(329111 'current error')
          unknown chpl_anon_error[329114](329118 'new'(329115 call _owned[39039](?) tmp[329109]))
          {
          }
        }
      }
    }
    Try
    {
      {
        (248052 call(248043 call . r[248023] c"readBytes") buf[248011](248050 call _cast ssize_t[209667] offset[247937]))
      }
    }
    Try
    {
      {
        (248061 call(248057 call . r[248023] c"close"))
      }
    }
    Try
    {
      {
        (248070 call(248066 call . f[247915] c"close"))
      }
    }
    (248079 call =(248077 call buf[248011] offset[247937]) 0)
    (248091 return(248090 call createStringWithOwnedBuffer buf[248011] offset[247937](248088 call + offset[247937] 1)))
  }
  { scopeless type
    string[24]
  }
  function qio_regexp_channel_match[248106](const  ref arg re[248103] :
  qio_regexp_t[277801], arg threadsafe[248109] :
  c_int[209569], arg ch[248113] :
  qio_channel_ptr_t[219168], arg maxlen[248120] :
  (248119 call int(64)[13] 64), arg anchor[248124] :
  c_int[209569], arg can_discard[248128] :
  bool[10], arg keep_unmatched[248132] :
  bool[10], arg keep_whole_pattern[248136] :
  bool[10], arg submatch[248143] :
  (248142 call _ddata[11791](?) qio_regexp_string_piece_t[278070]), arg nsubmatch[248150] :
  (248149 call int(64)[13] 64)) : _unknown[43] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    syserr[210032]
  }
  function channel[225339](?)._extractMatch[248164](arg _mt[248177]:_MT[227], arg this[248174]:channel[225339](?) :
  channel[225339](?), arg m[248161] :
  reMatch[278645], ref arg arg[248167] :
  reMatch[278645], ref arg error[248171] :
  syserr[210032]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    (248181 call = arg[248167] m[248161])
  }
  function channel[225339](?)._extractMatch[248194](arg _mt[248207]:_MT[227], arg this[248204]:channel[225339](?) :
  channel[225339](?), arg m[248191] :
  reMatch[278645], ref arg arg[248197] :
  string[24], ref arg error[248201] :
  syserr[210032]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    unknown cur[248213](248212 call int(64)[13] 64)
    unknown target[248224](248222 call _cast int(64)[13](248218 call . m[248191] c"offset"))
    unknown len[248231](248228 call . m[248191] c"length")
    if(248263 call _cond_test(248240 call !(248237 call . m[248191] c"matched")))
    {
      (248259 call = arg[248197] "")
    }
    if(248293 call _cond_test(248268 call ! error[248201]))
    {
      (248273 call qio_channel_revert_unlocked(372599 call . this[248204] c"_channel_internal"))
      (248282 call = error[248201](248281 call qio_channel_mark 0(372605 call . this[248204] c"_channel_internal")))
      (248290 call = cur[248213](248289 call qio_channel_offset_unlocked(372611 call . this[248204] c"_channel_internal")))
    }
    if(248314 call _cond_test(248298 call ! error[248201]))
    {
      (248310 call = error[248201](248309 call qio_channel_advance 0(372618 call . this[248204] c"_channel_internal")(248307 call - target[248224] cur[248213])))
    }
    unknown s[248319] string[24]
    if(248373 call _cond_test(248323 call ! error[248201]))
    {
      unknown gotlen[248329](248328 call int(64)[13] 64)
      unknown ts[248334] c_string[19]
      (248360 call = error[248201](248359 call qio_channel_read_string 0(248346 call _cast c_int[209569] native[218664])(248351 call stringStyleExactLen len[248231])(372631 call . this[248204] c"_channel_internal") ts[248334] gotlen[248329](248357 call _cast ssize_t[209667] len[248231])))
      (248370 call = s[248319](248369 call createStringWithOwnedBuffer ts[248334](length = gotlen[248329])))
    }
    if(248407 call _cond_test(248378 call ! error[248201]))
    {
      (248382 call = arg[248197] s[248319])
    }
    {
      (248403 call = arg[248197] "")
    }
  }
  function channel[225339](?)._extractMatch[248420](arg _mt[248434]:_MT[227], arg this[248431]:channel[225339](?) :
  channel[225339](?), arg m[248417] :
  reMatch[278645], ref arg arg[248424] :
  unknown t[248422], ref arg error[248428] :
  syserr[210032]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    if(248463 call _cond_test(248450 call !(248447 call . m[248417] c"matched")))
    {
      unknown empty[248454](248453 'typeof' arg[248424])
      (248460 call = arg[248424] empty[248454])
    }
    unknown s[248469] string[24]
    (248477 call(372655 call . this[248431] c"_extractMatch") m[248417] s[248469] error[248428])
    if(248503 call _cond_test(248480 call ! error[248428]))
    {
      (248488 call = arg[248424](248486 call _cast(248485 'typeof' arg[248424]) s[248469]))
    }
    {
      unknown empty[248494](248493 'typeof' arg[248424])
      (248500 call = arg[248424] empty[248494])
    }
  }
  where {
    (248444 call &&(248438 call != t[248422] reMatch[278645])(248442 call != t[248422] string[24]))
  }
  function channel[225339](?).extractMatch[248517](arg _mt[248524]:_MT[227], arg this[248521]:channel[225339](?) :
  channel[225339](?), arg m[248514] :
  reMatch[278645], ref arg arg[248519]:_any[170](?)) : _unknown[43] throws "method" "no return value for void"
  {
    unknown err[248528](372670 call ENOERR[210102]) syserr[210032]
    {
      const tmp[248566] "const" "temp"
      (248567 'move' tmp[248566](248564 'deref'(248563 '_wide_get_locale'(248533 call . this[248521] c"home"))))
      {
        Try
        {
          {
            (248541 call(248537 call . this[248521] c"lock"))
          }
        }
        Defer
        {
          {
            (248551 call(248547 call . this[248521] c"unlock"))
          }
        }
        (248561 call(372676 call . this[248521] c"_extractMatch") m[248514] arg[248519] err[248528])
      }
    }
    if(248609 call _cond_test err[248528])
    {
      Try
      {
        {
          (248604 call(248573 call . this[248521] c"_ch_ioerror") err[248528](248602 call +(248599 call + "in channel.extractMatch(m:reMatch, ref "(248597 call _cast string[24](248595 'typeof' arg[248519]))) ")"))
        }
      }
    }
  }
  function channel[225339](?).extractMatch[248622](arg _mt[248633]:_MT[227], arg this[248630]:channel[225339](?) :
  channel[225339](?), arg m[248619] :
  reMatch[278645], ref arg arg[248624]:_any[170](?), ref arg error[248627] :
  syserr[210032]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    {
      const tmp[248666] "const" "temp"
      (248667 'move' tmp[248666](248664 'deref'(248663 '_wide_get_locale'(248636 call . this[248630] c"home"))))
      {
        Try!
        {
          {
            (248644 call(248640 call . this[248630] c"lock"))
          }
        }
        (248654 call(372691 call . this[248630] c"_extractMatch") m[248619] arg[248624] error[248627])
        (248661 call(248657 call . this[248630] c"unlock"))
      }
    }
  }
  function channel[225339](?)._ch_handle_captures[248684](arg _mt[248699]:_MT[227], arg this[248696]:channel[225339](?) :
  channel[225339](?), arg matches[248681] :
  (248680 call _ddata[11791](?) qio_regexp_string_piece_t[278070]), arg nmatches[248687] :
  int(64)[13], ref arg captures[248690]:_any[170](?), ref arg error[248693] :
  syserr[210032]) : _unknown[43] "method" "no doc" "no return value for void"
  {
    (248710 call assert(248707 call >= nmatches[248687](248704 call . captures[248690] c"size")))
    {
      unknown i[248741] 0
      unknown tmp[248742] "maybe param" "temp"
      (248754 'move' tmp[248742](248752 call chpl_compute_low_param_loop_bound 1(248715 call . captures[248690] c"size")))
      unknown tmp[248743] "maybe param" "temp"
      (248764 'move' tmp[248743](248762 call chpl_compute_high_param_loop_bound 1(248759 call . captures[248690] c"size")))
      unknown tmp[248744] "maybe param" "temp"
      (248767 'move' tmp[248744] 1)
      ParamForLoop
      { i[248741] tmp[248742] tmp[248743] tmp[248744]
        {
          unknown m[248727](248726 call _to_reMatch(248724 call matches[248681] i[248741]))
          (248739 call(372707 call . this[248696] c"_extractMatch") m[248727](248737 call captures[248690] i[248741]) error[248693])
        }
      }
      label _unused_continueLabel[248746]
      label _breakLabel[248745]
    }
  }
  function channel[225339](?).search[248787](arg _mt[248796]:_MT[227], arg this[248793]:channel[225339](?) :
  channel[225339](?), arg re[248784] :
  regexp[281396], ref arg error[248790] :
  syserr[210032]) : _unknown[43] "method" "no doc"
  {
    unknown m[248800] reMatch[278645]
    {
      const tmp[248978] "const" "temp"
      (248979 'move' tmp[248978](248976 'deref'(248975 '_wide_get_locale'(248805 call . this[248793] c"home"))))
      {
        Try!
        {
          {
            (248813 call(248809 call . this[248793] c"lock"))
          }
        }
        unknown nm[248819] 1
        unknown matches[248827](248826 call _ddata_allocate qio_regexp_string_piece_t[278070] nm[248819])
        (248836 call = error[248790](248835 call qio_channel_mark 0(372726 call . this[248793] c"_channel_internal")))
        if(248869 call _cond_test(248840 call ! error[248790]))
        {
          (248865 call = error[248790](248864 call qio_regexp_channel_match(248845 call . re[248784] c"_regexp") 0(372734 call . this[248793] c"_channel_internal")(248857 call max(248855 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED[278043] 1 0 1 matches[248827] nm[248819]))
        }
        if(248888 call _cond_test(248881 call ||(248875 call == error[248790](372741 call EFORMAT[210730]))(248879 call == error[248790](372744 call EEOF[210684]))))
        {
          (248885 call = error[248790](372747 call ENOERR[210102]))
        }
        if(248958 call _cond_test(248894 call ! error[248790]))
        {
          (248904 call = m[248800](248903 call _to_reMatch(248901 call matches[248827] 0)))
          if(248954 call _cond_test(248909 call . m[248800] c"matched"))
          {
            (248915 call qio_channel_revert_unlocked(372755 call . this[248793] c"_channel_internal"))
            unknown cur[248922](248921 call qio_channel_offset_unlocked(372760 call . this[248793] c"_channel_internal"))
            unknown target[248932](248930 call _cast int(64)[13](248926 call . m[248800] c"offset"))
            (248945 call = error[248790](248944 call qio_channel_advance 0(372767 call . this[248793] c"_channel_internal")(248942 call - target[248932] cur[248922])))
          }
          {
            (248951 call qio_channel_commit_unlocked(372774 call . this[248793] c"_channel_internal"))
          }
        }
        (248966 call _ddata_free matches[248827] nm[248819])
        (248973 call(248969 call . this[248793] c"unlock"))
      }
    }
    (248984 return m[248800])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).search[248996](arg _mt[249001]:_MT[227], arg this[248998]:channel[225339](?) :
  channel[225339](?), arg re[248993] :
  regexp[281396]) : _unknown[43] throws "method" "no doc"
  {
    unknown e[249006](372784 call ENOERR[210102]) syserr[210032]
    unknown ret[249021](249020 call(249013 call . this[248998] c"search") re[248993](error = e[249006]))
    if(249051 call _cond_test e[249006])
    {
      Try
      {
        {
          (249047 call(249026 call . this[248998] c"_ch_ioerror") e[249006] "in channel.search")
        }
      }
    }
    (249057 return ret[249021])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).search[249069](arg _mt[249079]:_MT[227], arg this[249076]:channel[225339](?) :
  channel[225339](?), arg re[249066] :
  regexp[281396], ref arg captures[249073]:_any[170](?) ...) : _unknown[43] throws "method"
  {
    unknown m[249083] reMatch[278645]
    unknown err[249089](372797 call ENOERR[210102]) syserr[210032]
    {
      const tmp[249283] "const" "temp"
      (249284 'move' tmp[249283](249281 'deref'(249280 '_wide_get_locale'(249093 call . this[249076] c"home"))))
      {
        Try
        {
          {
            (249101 call(249097 call . this[249076] c"lock"))
          }
        }
        Defer
        {
          {
            (249111 call(249107 call . this[249076] c"unlock"))
          }
        }
        unknown nm[249123](249121 call +(249117 call . captures[249073] c"size") 1)
        unknown matches[249131](249130 call _ddata_allocate qio_regexp_string_piece_t[278070] nm[249123])
        (249140 call = err[249089](249139 call qio_channel_mark 0(372808 call . this[249076] c"_channel_internal")))
        if(249173 call _cond_test(249144 call ! err[249089]))
        {
          (249169 call = err[249089](249168 call qio_regexp_channel_match(249149 call . re[249066] c"_regexp") 0(372816 call . this[249076] c"_channel_internal")(249161 call max(249159 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED[278043] 1 0 1 matches[249131] nm[249123]))
        }
        if(249192 call _cond_test(249185 call ||(249179 call == err[249089](372823 call EFORMAT[210730]))(249183 call == err[249089](372826 call EEOF[210684]))))
        {
          (249189 call = err[249089](372829 call ENOERR[210102]))
        }
        if(249270 call _cond_test(249198 call ! err[249089]))
        {
          (249208 call = m[249083](249207 call _to_reMatch(249205 call matches[249131] 0)))
          if(249266 call _cond_test(249213 call . m[249083] c"matched"))
          {
            (249222 call(372838 call . this[249076] c"_ch_handle_captures") matches[249131] nm[249123] captures[249073] err[249089])
            (249228 call qio_channel_revert_unlocked(372847 call . this[249076] c"_channel_internal"))
            unknown cur[249234](249233 call qio_channel_offset_unlocked(372852 call . this[249076] c"_channel_internal"))
            unknown target[249244](249242 call _cast int(64)[13](249238 call . m[249083] c"offset"))
            (249257 call = err[249089](249256 call qio_channel_advance 0(372859 call . this[249076] c"_channel_internal")(249254 call - target[249244] cur[249234])))
          }
          {
            (249263 call qio_channel_commit_unlocked(372866 call . this[249076] c"_channel_internal"))
          }
        }
        (249278 call _ddata_free matches[249131] nm[249123])
      }
    }
    if(249300 call _cond_test err[249089])
    {
      Try
      {
        {
          (249296 call(249290 call . this[249076] c"_ch_ioerror") err[249089] "in channel.search")
        }
      }
    }
    (249306 return m[249083])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).match[249318](arg _mt[249327]:_MT[227], arg this[249324]:channel[225339](?) :
  channel[225339](?), arg re[249315] :
  regexp[281396], ref arg error[249321] :
  syserr[210032]) : _unknown[43] "method" "no doc"
  {
    unknown m[249331] reMatch[278645]
    {
      const tmp[249509] "const" "temp"
      (249510 'move' tmp[249509](249507 'deref'(249506 '_wide_get_locale'(249336 call . this[249324] c"home"))))
      {
        Try!
        {
          {
            (249344 call(249340 call . this[249324] c"lock"))
          }
        }
        unknown nm[249350] 1
        unknown matches[249358](249357 call _ddata_allocate qio_regexp_string_piece_t[278070] nm[249350])
        (249367 call = error[249321](249366 call qio_channel_mark 0(372886 call . this[249324] c"_channel_internal")))
        if(249400 call _cond_test(249371 call ! error[249321]))
        {
          (249396 call = error[249321](249395 call qio_regexp_channel_match(249376 call . re[249315] c"_regexp") 0(372894 call . this[249324] c"_channel_internal")(249388 call max(249386 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_START[278047] 1 1 1 matches[249358] nm[249350]))
        }
        if(249419 call _cond_test(249412 call ||(249406 call == error[249321](372901 call EFORMAT[210730]))(249410 call == error[249321](372904 call EEOF[210684]))))
        {
          (249416 call = error[249321](372907 call ENOERR[210102]))
        }
        if(249489 call _cond_test(249425 call ! error[249321]))
        {
          (249435 call = m[249331](249434 call _to_reMatch(249432 call matches[249358] 0)))
          if(249485 call _cond_test(249440 call . m[249331] c"matched"))
          {
            (249446 call qio_channel_revert_unlocked(372915 call . this[249324] c"_channel_internal"))
            unknown cur[249453](249452 call qio_channel_offset_unlocked(372920 call . this[249324] c"_channel_internal"))
            unknown target[249463](249461 call _cast int(64)[13](249457 call . m[249331] c"offset"))
            (249476 call = error[249321](249475 call qio_channel_advance 0(372927 call . this[249324] c"_channel_internal")(249473 call - target[249463] cur[249453])))
          }
          {
            (249482 call qio_channel_revert_unlocked(372934 call . this[249324] c"_channel_internal"))
          }
        }
        (249497 call _ddata_free matches[249358] nm[249350])
        (249504 call(249500 call . this[249324] c"unlock"))
      }
    }
    (249515 return m[249331])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).match[249527](arg _mt[249532]:_MT[227], arg this[249529]:channel[225339](?) :
  channel[225339](?), arg re[249524] :
  regexp[281396]) : _unknown[43] throws "method" "no doc"
  {
    unknown e[249537](372944 call ENOERR[210102]) syserr[210032]
    unknown ret[249552](249551 call(249544 call . this[249529] c"match") re[249524](error = e[249537]))
    if(249582 call _cond_test e[249537])
    {
      Try
      {
        {
          (249578 call(249557 call . this[249529] c"_ch_ioerror") e[249537] "in channel.match")
        }
      }
    }
    (249588 return ret[249552])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).match[249600](arg _mt[249614]:_MT[227], arg this[249611]:channel[225339](?) :
  channel[225339](?), arg re[249597] :
  regexp[281396], ref arg captures[249604]:_any[170](?) ..., ref arg error[249608] :
  syserr[210032]) : _unknown[43] "method"
  {
    unknown m[249618] reMatch[278645]
    {
      const tmp[249810] "const" "temp"
      (249811 'move' tmp[249810](249808 'deref'(249807 '_wide_get_locale'(249623 call . this[249611] c"home"))))
      {
        Try!
        {
          {
            (249631 call(249627 call . this[249611] c"lock"))
          }
        }
        unknown nm[249643](249641 call + 1(249638 call . captures[249604] c"size"))
        unknown matches[249651](249650 call _ddata_allocate qio_regexp_string_piece_t[278070] nm[249643])
        (249660 call = error[249608](249659 call qio_channel_mark 0(372965 call . this[249611] c"_channel_internal")))
        if(249693 call _cond_test(249664 call ! error[249608]))
        {
          (249689 call = error[249608](249688 call qio_regexp_channel_match(249669 call . re[249597] c"_regexp") 0(372973 call . this[249611] c"_channel_internal")(249681 call max(249679 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_START[278047] 1 1 1 matches[249651] nm[249643]))
        }
        if(249712 call _cond_test(249705 call ||(249699 call == error[249608](372980 call EFORMAT[210730]))(249703 call == error[249608](372983 call EEOF[210684]))))
        {
          (249709 call = error[249608](372986 call ENOERR[210102]))
        }
        if(249790 call _cond_test(249718 call ! error[249608]))
        {
          (249728 call = m[249618](249727 call _to_reMatch(249725 call matches[249651] 0)))
          if(249786 call _cond_test(249733 call . m[249618] c"matched"))
          {
            (249742 call(372993 call . this[249611] c"_ch_handle_captures") matches[249651] nm[249643] captures[249604] error[249608])
            (249748 call qio_channel_revert_unlocked(373002 call . this[249611] c"_channel_internal"))
            unknown cur[249754](249753 call qio_channel_offset_unlocked(373007 call . this[249611] c"_channel_internal"))
            unknown target[249764](249762 call _cast int(64)[13](249758 call . m[249618] c"offset"))
            (249777 call = error[249608](249776 call qio_channel_advance 0(373014 call . this[249611] c"_channel_internal")(249774 call - target[249764] cur[249754])))
          }
          {
            (249783 call qio_channel_revert_unlocked(373021 call . this[249611] c"_channel_internal"))
          }
        }
        (249798 call _ddata_free matches[249651] nm[249643])
        (249805 call(249801 call . this[249611] c"unlock"))
      }
    }
    (249816 return m[249618])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).match[249828](arg _mt[249838]:_MT[227], arg this[249835]:channel[225339](?) :
  channel[225339](?), arg re[249825] :
  regexp[281396], ref arg captures[249832]:_any[170](?) ...) : _unknown[43] throws "method" "no doc"
  {
    unknown e[249843](373031 call ENOERR[210102]) syserr[210032]
    unknown ret[249858](249857 call(249848 call . this[249835] c"match") re[249825](249854 'expand_tuple' captures[249832])(error = e[249843]))
    if(249873 call _cond_test e[249843])
    {
      Try
      {
        {
          (249869 call(249863 call . this[249835] c"_ch_ioerror") e[249843] "in channel.match")
        }
      }
    }
    (249879 return ret[249858])
  }
  { scopeless type
    reMatch[278645]
  }
  function channel[225339](?).matches[249891](arg _mt[249909]:_MT[227], arg this[249906]:channel[225339](?) :
  channel[225339](?), arg re[249888] :
  regexp[281396], param arg captures[249894] =
  0, arg maxmatches[249902] :
  int(64)[13] =
  (249901 call max int(64)[13])) : _unknown[43] "iterator fn" "method" "no return value for void"
  {
    unknown m[249912] reMatch[278645]
    unknown go[249917] 1
    unknown i[249921] 0
    unknown error[249926](373044 call ENOERR[210102]) syserr[210032]
    unknown nret[249933] "param"(249931 call + captures[249894] 1)
    unknown ret[249940](249938 call * nret[249933] reMatch[278645])
    Try!
    {
      {
        (249945 call(373050 call . this[249906] c"lock"))
      }
    }
    {
      const tmp[249962] "const" "temp"
      (249963 'move' tmp[249962](249960 'deref'(249959 '_wide_get_locale'(249950 call . this[249906] c"home"))))
      Try!
      {
        {
          (249955 call(373057 call . this[249906] c"_mark"))
        }
      }
    }
    {
      unknown tmp[250214] "temp"
      (250244 'move' tmp[250214](250236 call _cond_test(250238 call && go[249917](250241 call < i[249921] maxmatches[249902]))))
      WhileDo
      {
        {
          {
            const tmp[250192] "const" "temp"
            (250193 'move' tmp[250192](250190 'deref'(250189 '_wide_get_locale'(249975 call . this[249906] c"home"))))
            {
              unknown nm[249982](249980 call + 1 captures[249894])
              unknown matches[249991](249990 call _ddata_allocate qio_regexp_string_piece_t[278070] nm[249982])
              if(250024 call _cond_test(249995 call ! error[249926]))
              {
                (250020 call = error[249926](250019 call qio_regexp_channel_match(250000 call . re[249888] c"_regexp") 0(373069 call . this[249906] c"_channel_internal")(250012 call max(250010 call int(64)[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED[278043] 1 0 1 matches[249991] nm[249982]))
              }
              if(250168 call _cond_test(250029 call ! error[249926]))
              {
                (250039 call = m[249912](250038 call _to_reMatch(250036 call matches[249991] 0)))
                if(250164 call _cond_test(250044 call . m[249912] c"matched"))
                {
                  {
                    unknown i[250076] 0
                    unknown tmp[250077] "maybe param" "temp"
                    (250089 'move' tmp[250077](250087 call chpl_compute_low_param_loop_bound 1 nret[249933]))
                    unknown tmp[250078] "maybe param" "temp"
                    (250096 'move' tmp[250078](250094 call chpl_compute_high_param_loop_bound 1 nret[249933]))
                    unknown tmp[250079] "maybe param" "temp"
                    (250099 'move' tmp[250079] 1)
                    ParamForLoop
                    { i[250076] tmp[250077] tmp[250078] tmp[250079]
                      {
                        (250062 call = m[249912](250061 call _to_reMatch(250059 call matches[249991](250056 call - i[250076] 1))))
                        (250074 call(373084 call . this[249906] c"_extractMatch") m[249912](250072 call ret[249940] i[250076]) error[249926])
                      }
                    }
                    label _unused_continueLabel[250081]
                    label _breakLabel[250080]
                  }
                  (250114 call qio_channel_revert_unlocked(373094 call . this[249906] c"_channel_internal"))
                  (250122 call = error[249926](250121 call qio_channel_mark 0(373100 call . this[249906] c"_channel_internal")))
                  if(250159 call _cond_test(250126 call ! error[249926]))
                  {
                    unknown cur[250132](250131 call qio_channel_offset_unlocked(373106 call . this[249906] c"_channel_internal"))
                    unknown target[250143](250141 call _cast int(64)[13](250137 call . m[249912] c"offset"))
                    (250156 call = error[249926](250155 call qio_channel_advance 0(373113 call . this[249906] c"_channel_internal")(250153 call - target[250143] cur[250132])))
                  }
                }
                {
                }
              }
              (250176 call _ddata_free matches[249991] nm[249982])
              if(250184 call _cond_test error[249926])
              {
                (250181 call = go[249917] 0)
              }
            }
          }
          if(250204 call _cond_test(250199 call ! error[249926]))
          {
            (250202 yield ret[249940])
          }
          (250211 call += i[249921] 1)
        }
        label _continueLabel[250217]
        (250231 'move' tmp[250214](250223 call _cond_test(250225 call && go[249917](250228 call < i[249921] maxmatches[249902]))))
        tmp[250214]
      }
      label _breakLabel[250218]
    }
    (250249 call(373134 call . this[249906] c"_commit"))
    (250253 call(373138 call . this[249906] c"unlock"))
    if(250270 call _cond_test(250263 call ||(250257 call == error[249926](373142 call EFORMAT[210730]))(250261 call == error[249926](373145 call EEOF[210684]))))
    {
      (250267 call = error[249926](373148 call ENOERR[210102]))
    }
    if(250302 call _cond_test error[249926])
    {
      Try!
      {
        {
          (250298 call(250277 call . this[249906] c"_ch_ioerror") error[249926] "in channel.matches")
        }
      }
    }
  }
  (329537 'used modules list'(328326 'use' ChapelStandard[19734])(248098 'use' Regexp[277789]))
}