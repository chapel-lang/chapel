AST dump for SelectionSort after pass createTaskFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_SelectionSort[390372]() : void[4] "insert line file info" "module init"
  {
    (486868 return _void[47])
  }
  function selectionSort[256348](arg Data[256345]:_array[133150](?), arg comparator[256353]:_any[170](?) :
  defaultComparator[251428] =
  defaultComparator[251428]) : _unknown[43] "no return value for void"
  {
    unknown call_tmp[681518] "expr temp" "maybe param" "maybe type" "temp"
    (681521 'move' call_tmp[681518](441347 call _dom _mt[232] Data[256345]))
    unknown call_tmp[681525] "expr temp" "maybe param" "maybe type" "temp"
    (681528 'move' call_tmp[681525](256358 call rank _mt[232] call_tmp[681518]))
    unknown call_tmp[681530] "expr temp" "maybe param" "maybe type" "temp"
    (681533 'move' call_tmp[681530](256362 call != call_tmp[681525] 1))
    unknown call_tmp[681535] "expr temp" "maybe param" "maybe type" "temp"
    (681538 'move' call_tmp[681535](256385 call _cond_test call_tmp[681530]))
    if call_tmp[681535]
    {
      (256382 call compilerError "selectionSort() requires 1-D array")
    }
    unknown call_tmp[681542] "expr temp" "maybe param" "maybe type" "temp"
    (681545 'move' call_tmp[681542](441351 call _dom _mt[232] Data[256345]))
    unknown call_tmp[681549] "maybe param" "maybe type" "temp"
    (681552 'move' call_tmp[681549](256391 call alignedLow _mt[232] call_tmp[681542]))
    const low[256394] "const" "insert auto destroy"
    (496172 'init var' low[256394] call_tmp[681549])
    unknown call_tmp[681556] "expr temp" "maybe param" "maybe type" "temp"
    (681559 'move' call_tmp[681556](441355 call _dom _mt[232] Data[256345]))
    unknown call_tmp[681563] "maybe param" "maybe type" "temp"
    (681566 'move' call_tmp[681563](256398 call alignedHigh _mt[232] call_tmp[681556]))
    const high[256401] "const" "insert auto destroy"
    (496174 'init var' high[256401] call_tmp[681563])
    unknown call_tmp[681570] "expr temp" "maybe param" "maybe type" "temp"
    (681573 'move' call_tmp[681570](441359 call _dom _mt[232] Data[256345]))
    unknown call_tmp[681577] "expr temp" "maybe param" "maybe type" "temp"
    (681580 'move' call_tmp[681577](256406 call stride _mt[232] call_tmp[681570]))
    unknown call_tmp[681582] "maybe param" "maybe type" "temp"
    (681585 'move' call_tmp[681582](256410 call abs call_tmp[681577]))
    const stride[256411] "const" "insert auto destroy"
    (496176 'init var' stride[256411] call_tmp[681582])
    {
      unknown _indexOfInterest[256517] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[256518] "expr temp" "temp"
      unknown call_tmp[681587] "expr temp" "maybe param" "maybe type" "temp"
      (681590 'move' call_tmp[681587](256539 call - high[256401] stride[256411]))
      unknown call_tmp[681592] "expr temp" "maybe param" "maybe type" "temp"
      (681595 'move' call_tmp[681592](256542 call chpl_direct_range_iter low[256394] call_tmp[681587] stride[256411]))
      (256527 'move' _iterator[256518](256525 call _getIterator call_tmp[681592]))
      Defer
      {
        {
          (256558 call _freeIterator _iterator[256518])
        }
      }
      { scopeless type
        (256547 'move' _indexOfInterest[256517](256544 call iteratorIndex _iterator[256518]))
      }
      ForLoop
      {
        unknown i[256551] "index var" "insert auto destroy"
        (256553 'move' i[256551] _indexOfInterest[256517])
        {
          unknown jMin[256426] "insert auto destroy"
          (496178 'init var' jMin[256426] i[256551])
          {
            unknown _indexOfInterest[256464] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[256465] "expr temp" "temp"
            unknown call_tmp[681597] "expr temp" "maybe param" "maybe type" "temp"
            (681600 'move' call_tmp[681597](256483 call chpl_direct_range_iter i[256551] high[256401] stride[256411]))
            (256474 'move' _iterator[256465](256472 call _getIterator call_tmp[681597]))
            Defer
            {
              {
                (256499 call _freeIterator _iterator[256465])
              }
            }
            { scopeless type
              (256488 'move' _indexOfInterest[256464](256485 call iteratorIndex _iterator[256465]))
            }
            ForLoop
            {
              unknown j[256492] "index var" "insert auto destroy"
              (256494 'move' j[256492] _indexOfInterest[256464])
              {
                unknown call_tmp[681602] "expr temp" "maybe param" "maybe type" "temp"
                (681605 'move' call_tmp[681602](256442 call Data[256345] j[256492]))
                unknown call_tmp[681607] "expr temp" "maybe param" "maybe type" "temp"
                (681610 'move' call_tmp[681607](256447 call Data[256345] jMin[256426]))
                unknown call_tmp[681612] "expr temp" "maybe param" "maybe type" "temp"
                (681615 'move' call_tmp[681612](256449 call chpl_compare call_tmp[681602] call_tmp[681607] comparator[256353]))
                unknown call_tmp[681617] "expr temp" "maybe param" "maybe type" "temp"
                (681620 'move' call_tmp[681617](256451 call < call_tmp[681612] 0))
                unknown call_tmp[681622] "expr temp" "maybe param" "maybe type" "temp"
                (681625 'move' call_tmp[681622](256458 call _cond_test call_tmp[681617]))
                if call_tmp[681622]
                {
                  (256455 call = jMin[256426] j[256492])
                }
              }
              label _continueLabel[256469]
              _indexOfInterest[256464]
              _iterator[256465]
            }
            label _breakLabel[256470]
          }
          unknown call_tmp[681627] "expr temp" "maybe param" "maybe type" "temp"
          (681630 'move' call_tmp[681627](256509 call Data[256345] i[256551]))
          unknown call_tmp[681632] "expr temp" "maybe param" "maybe type" "temp"
          (681635 'move' call_tmp[681632](256513 call Data[256345] jMin[256426]))
          (256514 call <=> call_tmp[681627] call_tmp[681632])
        }
        label _continueLabel[256522]
        _indexOfInterest[256517]
        _iterator[256518]
      }
      label _breakLabel[256523]
    }
    (486866 return _void[47])
  }
  (329619 'used modules list'(328344 'use' ChapelStandard[19734]))
}