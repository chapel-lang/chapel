AST dump for InsertionSort after pass buildDefaultFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_InsertionSort[390360]() : void[4] "insert line file info" "module init"
  {
    (486820 return _void[47])
  }
  function insertionSort[253912](arg Data[253909]:_array[133150](?), arg comparator[253917]:_any[170](?) :
  defaultComparator[251428] =
  defaultComparator[251428], arg lo[253926]:int(64)[13] =
  unknown call_tmp[679802] "expr temp" "maybe param" "maybe type" "temp", arg hi[253935]:int(64)[13] =
  unknown call_tmp[679811] "expr temp" "maybe param" "maybe type" "temp") : _unknown[43] "no return value for void"
  {
    unknown call_tmp[679820] "expr temp" "maybe param" "maybe type" "temp"
    (679823 'move' call_tmp[679820](441203 call eltType _mt[232] Data[253909]))
    (253943 call chpl_check_comparator comparator[253917] call_tmp[679820])
    unknown call_tmp[679827] "expr temp" "maybe param" "maybe type" "temp"
    (679830 'move' call_tmp[679827](441195 call _dom _mt[232] Data[253909]))
    unknown call_tmp[679834] "expr temp" "maybe param" "maybe type" "temp"
    (679837 'move' call_tmp[679834](253947 call rank _mt[232] call_tmp[679827]))
    unknown call_tmp[679839] "expr temp" "maybe param" "maybe type" "temp"
    (679842 'move' call_tmp[679839](253951 call != call_tmp[679834] 1))
    unknown call_tmp[679844] "expr temp" "maybe param" "maybe type" "temp"
    (679847 'move' call_tmp[679844](253974 call _cond_test call_tmp[679839]))
    if call_tmp[679844]
    {
      (253971 call compilerError "insertionSort() requires 1-D array")
    }
    const low[253979] "const" "insert auto destroy"
    (496086 'init var' low[253979] lo[253926])
    const high[253983] "const" "insert auto destroy"
    (496088 'init var' high[253983] hi[253935])
    unknown call_tmp[679851] "expr temp" "maybe param" "maybe type" "temp"
    (679854 'move' call_tmp[679851](441199 call _dom _mt[232] Data[253909]))
    unknown call_tmp[679858] "expr temp" "maybe param" "maybe type" "temp"
    (679861 'move' call_tmp[679858](253988 call stride _mt[232] call_tmp[679851]))
    unknown call_tmp[679863] "maybe param" "maybe type" "temp"
    (679866 'move' call_tmp[679863](253992 call abs call_tmp[679858]))
    const stride[253993] "const" "insert auto destroy"
    (496090 'init var' stride[253993] call_tmp[679863])
    {
      unknown _indexOfInterest[254147] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[254148] "expr temp" "temp"
      unknown call_tmp[679868] "expr temp" "maybe param" "maybe type" "temp"
      (679871 'move' call_tmp[679868](254166 call chpl_direct_range_iter low[253979] high[253983] stride[253993]))
      (254157 'move' _iterator[254148](254155 call _getIterator call_tmp[679868]))
      Defer
      {
        {
          (254182 call _freeIterator _iterator[254148])
        }
      }
      { scopeless type
        (254171 'move' _indexOfInterest[254147](254168 call iteratorIndex _iterator[254148]))
      }
      ForLoop
      {
        unknown i[254175] "index var" "insert auto destroy"
        (254177 'move' i[254175] _indexOfInterest[254147])
        {
          unknown call_tmp[679873] "maybe param" "maybe type" "temp"
          (679876 'move' call_tmp[679873](254007 call Data[253909] i[254175]))
          unknown ithVal[254008] "insert auto destroy"
          (496092 'init var' ithVal[254008] call_tmp[679873])
          unknown inserted[254013] "insert auto destroy"
          (496094 'init var' inserted[254013] 0)
          {
            unknown _indexOfInterest[254081] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[254082] "expr temp" "temp"
            unknown call_tmp[679878] "expr temp" "maybe param" "maybe type" "temp"
            (679881 'move' call_tmp[679878](254105 call - i[254175] stride[253993]))
            unknown call_tmp[679883] "expr temp" "maybe param" "maybe type" "temp"
            (679886 'move' call_tmp[679883](254101 call - stride[253993]))
            unknown call_tmp[679888] "expr temp" "maybe param" "maybe type" "temp"
            (679891 'move' call_tmp[679888](254108 call chpl_direct_range_iter low[253979] call_tmp[679878] call_tmp[679883]))
            (254091 'move' _iterator[254082](254089 call _getIterator call_tmp[679888]))
            Defer
            {
              {
                (254124 call _freeIterator _iterator[254082])
              }
            }
            { scopeless type
              (254113 'move' _indexOfInterest[254081](254110 call iteratorIndex _iterator[254082]))
            }
            ForLoop
            {
              unknown j[254117] "index var" "insert auto destroy"
              (254119 'move' j[254117] _indexOfInterest[254081])
              {
                unknown call_tmp[679893] "expr temp" "maybe param" "maybe type" "temp"
                (679896 'move' call_tmp[679893](254035 call Data[253909] j[254117]))
                unknown call_tmp[679898] "expr temp" "maybe param" "maybe type" "temp"
                (679901 'move' call_tmp[679898](254037 call chpl_compare ithVal[254008] call_tmp[679893] comparator[253917]))
                unknown call_tmp[679903] "expr temp" "maybe param" "maybe type" "temp"
                (679906 'move' call_tmp[679903](254039 call < call_tmp[679898] 0))
                unknown call_tmp[679908] "expr temp" "maybe param" "maybe type" "temp"
                (679911 'move' call_tmp[679908](254076 call _cond_test call_tmp[679903]))
                if call_tmp[679908]
                {
                  unknown call_tmp[679913] "expr temp" "maybe param" "maybe type" "temp"
                  (679916 'move' call_tmp[679913](254044 call + j[254117] stride[253993]))
                  unknown call_tmp[679918] "expr temp" "maybe param" "maybe type" "temp"
                  (679921 'move' call_tmp[679918](254047 call Data[253909] call_tmp[679913]))
                  unknown call_tmp[679923] "expr temp" "maybe param" "maybe type" "temp"
                  (679926 'move' call_tmp[679923](254051 call Data[253909] j[254117]))
                  (254052 call = call_tmp[679918] call_tmp[679923])
                }
                {
                  unknown call_tmp[679928] "expr temp" "maybe param" "maybe type" "temp"
                  (679931 'move' call_tmp[679928](254059 call + j[254117] stride[253993]))
                  unknown call_tmp[679933] "expr temp" "maybe param" "maybe type" "temp"
                  (679936 'move' call_tmp[679933](254062 call Data[253909] call_tmp[679928]))
                  (254064 call = call_tmp[679933] ithVal[254008])
                  (254070 call = inserted[254013] 1)
                  break _breakLabel[254087] _breakLabel[254087]
                }
              }
              label _continueLabel[254086]
              _indexOfInterest[254081]
              _iterator[254082]
            }
            label _breakLabel[254087]
          }
          unknown call_tmp[679938] "expr temp" "maybe param" "maybe type" "temp"
          (679941 'move' call_tmp[679938](254132 call ! inserted[254013]))
          unknown call_tmp[679943] "expr temp" "maybe param" "maybe type" "temp"
          (679946 'move' call_tmp[679943](254143 call _cond_test call_tmp[679938]))
          if call_tmp[679943]
          {
            unknown call_tmp[679948] "expr temp" "maybe param" "maybe type" "temp"
            (679951 'move' call_tmp[679948](254137 call Data[253909] low[253979]))
            (254139 call = call_tmp[679948] ithVal[254008])
          }
        }
        label _continueLabel[254152]
        _indexOfInterest[254147]
        _iterator[254148]
      }
      label _breakLabel[254153]
    }
    (486818 return _void[47])
  }
  (329587 'used modules list'(328336 'use' ChapelStandard[19734]))
}