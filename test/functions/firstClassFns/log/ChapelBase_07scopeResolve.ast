AST dump for ChapelBase after pass scopeResolve.
Module use list: ChapelStandard HaltWrappers 

{
  function chpl_config_has_value[314](arg name[311] :
  c_string[19], arg module_name[317] :
  c_string[19]) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  { scopeless type
    bool[10]
  }
  function chpl_config_get_value[330](arg name[327] :
  c_string[19], arg module_name[333] :
  c_string[19]) : _unknown[43] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  { scopeless type
    c_string[19]
  }
  unknown CHPL_CACHE_REMOTE[342] "config" "param" 0 bool[10]
  unknown chpl_stringMinAllocSize[346] "config" "param" 0
  unknown warnMaximalRange[350] "config" "param" 0
  function _throwOpError[359](param arg op[356] :
  string[24]) : _unknown[43] "no return value for void"
  {
    (407 call compilerError "illegal use of '" op[356] "' on operands of type uint(64) and signed integer")
  }
  function compilerError[421](param arg msg[417] ... :
  string[24], param arg errorDepth[424] :
  int(64)[13]) : _unknown[43] "no return value for void"
  {
    (446 'error')
  }
  function compilerError[460](param arg msg[456] ... :
  string[24]) : _unknown[43] "no return value for void"
  {
    (464 'error')
  }
  function compilerWarning[478](param arg msg[474] ... :
  string[24], param arg errorDepth[481] :
  int(64)[13]) : _unknown[43] "no return value for void"
  {
    (503 'warning')
  }
  function compilerWarning[517](param arg msg[513] ... :
  string[24]) : _unknown[43] "no return value for void"
  {
    (521 'warning')
  }
  function compilerAssert[532](param arg test[529] :
  bool[10]) : _unknown[43] "no return value for void"
  {
    if(559 call _cond_test(535 call ! test[529]))
    {
      (557 call compilerError "assert failed")
    }
  }
  function compilerAssert[573](param arg test[570] :
  bool[10], param arg errorDepth[576] :
  int(64)[13]) : _unknown[43] "no return value for void"
  {
    if(593 call _cond_test(580 call ! test[570]))
    {
      (591 call compilerError "assert failed"(589 call + errorDepth[576] 1))
    }
  }
  function compilerAssert[607](param arg test[604] :
  bool[10], param arg msg[612] ... :
  string[24]) : _unknown[43] "no return value for void"
  {
    if(641 call _cond_test(617 call ! test[604]))
    {
      (639 call compilerError "assert failed - "(638 'expand_tuple' msg[612]))
    }
  }
  function compilerAssert[655](param arg test[652] :
  bool[10], param arg msg[660] ... :
  string[24], param arg errorDepth[665] :
  int(64)[13]) : _unknown[43] "no return value for void"
  {
    if(682 call _cond_test(669 call ! test[652]))
    {
      (680 call compilerError "assert failed - "(675 'expand_tuple' msg[660])(678 call + errorDepth[665] 1))
    }
  }
  type iterKind[697] def leader[691]:iterKind[697] def follower[693]:iterKind[697] def standalone[695]:iterKind[697]
  {
  }
  function =[711](ref arg a[708] :
  (707 call bool[10] ?[249]), arg b[714] :
  bool[10]) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (736 '=' a[708] b[714])
  }
  function =[751](ref arg a[748] :
  (747 call int(64)[13] unknown w[744]), arg b[757] :
  (756 call int(64)[13] w[744])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (764 '=' a[748] b[757])
  }
  function =[779](ref arg a[776] :
  (775 call uint(64)[107] unknown w[772]), arg b[785] :
  (784 call uint(64)[107] w[772])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (792 '=' a[776] b[785])
  }
  function =[807](ref arg a[804] :
  (803 call real(64)[16] unknown w[800]), arg b[813] :
  (812 call real(64)[16] w[800])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (820 '=' a[804] b[813])
  }
  function =[835](ref arg a[832] :
  (831 call imag(64)[122] unknown w[828]), arg b[841] :
  (840 call imag(64)[122] w[828])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (848 '=' a[832] b[841])
  }
  function =[863](ref arg a[860] :
  (859 call complex(128)[132] unknown w[856]), arg b[869] :
  (868 call complex(128)[132] w[856])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (876 '=' a[860] b[869])
  }
  function =[887](ref arg a[884] :
  opaque[150], arg b[890] :
  opaque[150]) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (897 '=' a[884] b[890])
  }
  function =[908](ref arg a[905] :
  enumerated[179](?), arg b[911] :
  enumerated[179](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (924 '=' a[905] b[911])
  }
  where {
    (918 call ==(915 'typeof' a[905])(917 'typeof' b[911]))
  }
  function =[934](ref arg a[932]:_any[170](?), arg b[938] :
  (937 'typeof' a[932])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (950 '=' a[932] b[938])
  }
  where {
    (945 call isBorrowedOrUnmanagedClassType(943 'typeof' a[932]))
  }
  function =[960](ref arg a[958]:_any[170](?), arg b[963] :
  _nilType[36]) : _unknown[43] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    if(1031 call _cond_test(979 call &&(975 call isNonNilableClassType(973 'typeof' a[958]))(977 call ! 0)))
    {
      (1028 call compilerError(1025 call +(1005 call + "cannot assign to "(1003 call _cast string[24](1001 'typeof' a[958]))) " from nil"))
    }
    (1040 '=' a[958] nil[38])
  }
  where {
    (970 call isBorrowedOrUnmanagedClassType(968 'typeof' a[958]))
  }
  function =[1051](ref arg a[1048] :
  nothing[7], arg b[1055] :
  unknown t[1053]) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (1082 call compilerError "a nothing variable cannot be assigned")
  }
  where {
    (1060 call != t[1053] nothing[7])
  }
  function =[1095](ref arg a[1092] :
  unknown t[1090], arg b[1098] :
  nothing[7]) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (1125 call compilerError "cannot assign none to a variable of non-nothing type")
  }
  where {
    (1103 call != t[1090] nothing[7])
  }
  function =[1137](ref arg a[1134] :
  nothing[7], arg b[1140] :
  nothing[7]) param : _unknown[43] "assignop" "inline" "no return value for void"
  {
  }
  function ==[1152](arg a[1149] :
  _nilType[36], arg b[1155] :
  _nilType[36]) param : _unknown[43] "inline"
  {
    (1159 return 1)
  }
  function ==[1170](arg a[1167] :
  bool[10], arg b[1173] :
  bool[10]) : _unknown[43] "inline"
  {
    (1198 return(1197 '==' a[1167] b[1173]))
  }
  function ==[1213](arg a[1210] :
  (1209 call int(64)[13] unknown w[1206]), arg b[1219] :
  (1218 call int(64)[13] w[1206])) : _unknown[43] "inline"
  {
    (1227 return(1226 '==' a[1210] b[1219]))
  }
  function ==[1242](arg a[1239] :
  (1238 call uint(64)[107] unknown w[1235]), arg b[1248] :
  (1247 call uint(64)[107] w[1235])) : _unknown[43] "inline"
  {
    (1256 return(1255 '==' a[1239] b[1248]))
  }
  function ==[1271](arg a[1268] :
  (1267 call real(64)[16] unknown w[1264]), arg b[1277] :
  (1276 call real(64)[16] w[1264])) : _unknown[43] "inline"
  {
    (1285 return(1284 '==' a[1268] b[1277]))
  }
  function ==[1300](arg a[1297] :
  (1296 call imag(64)[122] unknown w[1293]), arg b[1306] :
  (1305 call imag(64)[122] w[1293])) : _unknown[43] "inline"
  {
    (1314 return(1313 '==' a[1297] b[1306]))
  }
  function ==[1329](arg a[1326] :
  (1325 call complex(128)[132] unknown w[1322]), arg b[1335] :
  (1334 call complex(128)[132] w[1322])) : _unknown[43] "inline"
  {
    (1364 return(1362 call &&(1348 call ==(1341 call . a[1326] c"re")(1345 call . b[1335] c"re"))(1360 call ==(1353 call . a[1326] c"im")(1357 call . b[1335] c"im"))))
  }
  function ==[1377](arg a[1374] :
  borrowed object?[389644], arg b[1382] :
  borrowed object?[389644]) : _unknown[43] "inline"
  {
    (1407 return(1406 'ptr_eq' a[1374] b[1382]))
  }
  function ==[1418](arg a[1415] :
  enumerated[179](?), arg b[1421] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (1435 return(1434 '==' a[1415] b[1421]))
  }
  where {
    (1428 call ==(1425 'typeof' a[1415])(1427 'typeof' b[1421]))
  }
  function ==[1447](arg a[1444] :
  enumerated[179](?), arg b[1450] :
  enumerated[179](?)) : _unknown[43] "inline" "last resort"
  {
    (1479 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1483 return 0)
  }
  where {
    (1457 call !=(1454 'typeof' a[1444])(1456 'typeof' b[1450]))
  }
  function !=[1494](arg a[1491] :
  _nilType[36], arg b[1497] :
  _nilType[36]) param : _unknown[43] "inline"
  {
    (1501 return 0)
  }
  function !=[1512](arg a[1509] :
  bool[10], arg b[1515] :
  bool[10]) : _unknown[43] "inline"
  {
    (1538 return(1537 '!=' a[1509] b[1515]))
  }
  function !=[1553](arg a[1550] :
  (1549 call int(64)[13] unknown w[1546]), arg b[1559] :
  (1558 call int(64)[13] w[1546])) : _unknown[43] "inline"
  {
    (1567 return(1566 '!=' a[1550] b[1559]))
  }
  function !=[1582](arg a[1579] :
  (1578 call uint(64)[107] unknown w[1575]), arg b[1588] :
  (1587 call uint(64)[107] w[1575])) : _unknown[43] "inline"
  {
    (1596 return(1595 '!=' a[1579] b[1588]))
  }
  function !=[1611](arg a[1608] :
  (1607 call real(64)[16] unknown w[1604]), arg b[1617] :
  (1616 call real(64)[16] w[1604])) : _unknown[43] "inline"
  {
    (1625 return(1624 '!=' a[1608] b[1617]))
  }
  function !=[1640](arg a[1637] :
  (1636 call imag(64)[122] unknown w[1633]), arg b[1646] :
  (1645 call imag(64)[122] w[1633])) : _unknown[43] "inline"
  {
    (1654 return(1653 '!=' a[1637] b[1646]))
  }
  function !=[1669](arg a[1666] :
  (1665 call complex(128)[132] unknown w[1662]), arg b[1675] :
  (1674 call complex(128)[132] w[1662])) : _unknown[43] "inline"
  {
    (1700 return(1698 call ||(1686 call !=(1679 call . a[1666] c"re")(1683 call . b[1675] c"re"))(1696 call !=(1689 call . a[1666] c"im")(1693 call . b[1675] c"im"))))
  }
  function !=[1713](arg a[1710] :
  borrowed object?[389644], arg b[1718] :
  borrowed object?[389644]) : _unknown[43] "inline"
  {
    (1741 return(1740 'ptr_neq' a[1710] b[1718]))
  }
  function !=[1752](arg a[1749] :
  enumerated[179](?), arg b[1755] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (1769 return(1768 '!=' a[1749] b[1755]))
  }
  where {
    (1762 call ==(1759 'typeof' a[1749])(1761 'typeof' b[1755]))
  }
  function !=[1781](arg a[1778] :
  enumerated[179](?), arg b[1784] :
  enumerated[179](?)) : _unknown[43] "inline" "last resort"
  {
    (1796 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1800 return 1)
  }
  where {
    (1791 call !=(1788 'typeof' a[1778])(1790 'typeof' b[1784]))
  }
  function ==[1811](param arg a[1808] :
  bool[10], param arg b[1814] :
  bool[10]) param : _unknown[43] "inline"
  {
    (1822 return(1821 '==' a[1808] b[1814]))
  }
  function ==[1837](param arg a[1834] :
  (1833 call int(64)[13] unknown w[1830]), param arg b[1843] :
  (1842 call int(64)[13] w[1830])) param : _unknown[43] "inline"
  {
    (1851 return(1850 '==' a[1834] b[1843]))
  }
  function ==[1866](param arg a[1863] :
  (1862 call uint(64)[107] unknown w[1859]), param arg b[1872] :
  (1871 call uint(64)[107] w[1859])) param : _unknown[43] "inline"
  {
    (1880 return(1879 '==' a[1863] b[1872]))
  }
  function ==[1891](param arg a[1888] :
  enumerated[179](?), param arg b[1894] :
  enumerated[179](?)) param : _unknown[43] "inline"
  {
    (1908 return(1907 '==' a[1888] b[1894]))
  }
  where {
    (1901 call ==(1898 'typeof' a[1888])(1900 'typeof' b[1894]))
  }
  function ==[1924](param arg a[1921] :
  (1920 call real(64)[16] unknown w[1917]), param arg b[1930] :
  (1929 call real(64)[16] w[1917])) param : _unknown[43] "inline"
  {
    (1938 return(1937 '==' a[1921] b[1930]))
  }
  function ==[1953](param arg a[1950] :
  (1949 call imag(64)[122] unknown w[1946]), param arg b[1959] :
  (1958 call imag(64)[122] w[1946])) param : _unknown[43] "inline"
  {
    (1967 return(1966 '==' a[1950] b[1959]))
  }
  function ==[1982](param arg a[1979] :
  (1978 call complex(128)[132] unknown w[1975]), param arg b[1988] :
  (1987 call complex(128)[132] w[1975])) param : _unknown[43] "inline"
  {
    (1996 return(1995 '==' a[1979] b[1988]))
  }
  function ==[2007](arg a[2004] :
  nothing[7], arg b[2010] :
  nothing[7]) param : _unknown[43] "inline"
  {
    (2014 return 1)
  }
  function !=[2025](param arg a[2022] :
  bool[10], param arg b[2028] :
  bool[10]) param : _unknown[43] "inline"
  {
    (2036 return(2035 '!=' a[2022] b[2028]))
  }
  function !=[2051](param arg a[2048] :
  (2047 call int(64)[13] unknown w[2044]), param arg b[2057] :
  (2056 call int(64)[13] w[2044])) param : _unknown[43] "inline"
  {
    (2065 return(2064 '!=' a[2048] b[2057]))
  }
  function !=[2080](param arg a[2077] :
  (2076 call uint(64)[107] unknown w[2073]), param arg b[2086] :
  (2085 call uint(64)[107] w[2073])) param : _unknown[43] "inline"
  {
    (2094 return(2093 '!=' a[2077] b[2086]))
  }
  function !=[2105](param arg a[2102] :
  enumerated[179](?), param arg b[2108] :
  enumerated[179](?)) param : _unknown[43] "inline"
  {
    (2128 return(2127 '!='(2122 call chpl__enumToOrder a[2102])(2126 call chpl__enumToOrder b[2108])))
  }
  where {
    (2115 call ==(2112 'typeof' a[2102])(2114 'typeof' b[2108]))
  }
  function !=[2144](param arg a[2141] :
  (2140 call real(64)[16] unknown w[2137]), param arg b[2150] :
  (2149 call real(64)[16] w[2137])) param : _unknown[43] "inline"
  {
    (2158 return(2157 '!=' a[2141] b[2150]))
  }
  function !=[2173](param arg a[2170] :
  (2169 call imag(64)[122] unknown w[2166]), param arg b[2179] :
  (2178 call imag(64)[122] w[2166])) param : _unknown[43] "inline"
  {
    (2187 return(2186 '!=' a[2170] b[2179]))
  }
  function !=[2202](param arg a[2199] :
  (2198 call complex(128)[132] unknown w[2195]), param arg b[2208] :
  (2207 call complex(128)[132] w[2195])) param : _unknown[43] "inline"
  {
    (2216 return(2215 '!=' a[2199] b[2208]))
  }
  function !=[2227](arg a[2224] :
  nothing[7], arg b[2230] :
  nothing[7]) param : _unknown[43] "inline"
  {
    (2234 return 0)
  }
  function <=[2249](arg a[2246] :
  (2245 call int(64)[13] unknown w[2242]), arg b[2255] :
  (2254 call int(64)[13] w[2242])) : _unknown[43] "inline"
  {
    (2278 return(2277 '<=' a[2246] b[2255]))
  }
  function <=[2293](arg a[2290] :
  (2289 call uint(64)[107] unknown w[2286]), arg b[2299] :
  (2298 call uint(64)[107] w[2286])) : _unknown[43] "inline"
  {
    (2307 return(2306 '<=' a[2290] b[2299]))
  }
  function <=[2322](arg a[2319] :
  (2318 call real(64)[16] unknown w[2315]), arg b[2328] :
  (2327 call real(64)[16] w[2315])) : _unknown[43] "inline"
  {
    (2336 return(2335 '<=' a[2319] b[2328]))
  }
  function <=[2351](arg a[2348] :
  (2347 call imag(64)[122] unknown w[2344]), arg b[2357] :
  (2356 call imag(64)[122] w[2344])) : _unknown[43] "inline"
  {
    (2380 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (2388 return(2387 '<=' a[2348] b[2357]))
  }
  function <=[2398](arg a[2395] :
  enumerated[179](?), arg b[2401] :
  enumerated[179](?)) : _unknown[43]
  {
    (2421 return(2420 '<='(2415 call chpl__enumToOrder a[2395])(2419 call chpl__enumToOrder b[2401])))
  }
  where {
    (2408 call ==(2405 'typeof' a[2395])(2407 'typeof' b[2401]))
  }
  function <=[2433](arg a[2430] :
  enumerated[179](?), arg b[2436] :
  enumerated[179](?)) : _unknown[43] "inline" "last resort"
  {
    (2448 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2452 return 0)
  }
  where {
    (2443 call !=(2440 'typeof' a[2430])(2442 'typeof' b[2436]))
  }
  function >=[2467](arg a[2464] :
  (2463 call int(64)[13] unknown w[2460]), arg b[2473] :
  (2472 call int(64)[13] w[2460])) : _unknown[43] "inline"
  {
    (2496 return(2495 '>=' a[2464] b[2473]))
  }
  function >=[2511](arg a[2508] :
  (2507 call uint(64)[107] unknown w[2504]), arg b[2517] :
  (2516 call uint(64)[107] w[2504])) : _unknown[43] "inline"
  {
    (2525 return(2524 '>=' a[2508] b[2517]))
  }
  function >=[2540](arg a[2537] :
  (2536 call real(64)[16] unknown w[2533]), arg b[2546] :
  (2545 call real(64)[16] w[2533])) : _unknown[43] "inline"
  {
    (2554 return(2553 '>=' a[2537] b[2546]))
  }
  function >=[2569](arg a[2566] :
  (2565 call imag(64)[122] unknown w[2562]), arg b[2575] :
  (2574 call imag(64)[122] w[2562])) : _unknown[43] "inline"
  {
    (2581 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (2589 return(2588 '>=' a[2566] b[2575]))
  }
  function >=[2599](arg a[2596] :
  enumerated[179](?), arg b[2602] :
  enumerated[179](?)) : _unknown[43]
  {
    (2622 return(2621 '>='(2616 call chpl__enumToOrder a[2596])(2620 call chpl__enumToOrder b[2602])))
  }
  where {
    (2609 call ==(2606 'typeof' a[2596])(2608 'typeof' b[2602]))
  }
  function >=[2634](arg a[2631] :
  enumerated[179](?), arg b[2637] :
  enumerated[179](?)) : _unknown[43] "inline" "last resort"
  {
    (2649 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2653 return 0)
  }
  where {
    (2644 call !=(2641 'typeof' a[2631])(2643 'typeof' b[2637]))
  }
  function <[2668](arg a[2665] :
  (2664 call int(64)[13] unknown w[2661]), arg b[2674] :
  (2673 call int(64)[13] w[2661])) : _unknown[43] "inline"
  {
    (2697 return(2696 '<' a[2665] b[2674]))
  }
  function <[2712](arg a[2709] :
  (2708 call uint(64)[107] unknown w[2705]), arg b[2718] :
  (2717 call uint(64)[107] w[2705])) : _unknown[43] "inline"
  {
    (2726 return(2725 '<' a[2709] b[2718]))
  }
  function <[2741](arg a[2738] :
  (2737 call real(64)[16] unknown w[2734]), arg b[2747] :
  (2746 call real(64)[16] w[2734])) : _unknown[43] "inline"
  {
    (2755 return(2754 '<' a[2738] b[2747]))
  }
  function <[2770](arg a[2767] :
  (2766 call imag(64)[122] unknown w[2763]), arg b[2776] :
  (2775 call imag(64)[122] w[2763])) : _unknown[43] "inline"
  {
    (2782 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (2790 return(2789 '<' a[2767] b[2776]))
  }
  function <[2800](arg a[2797] :
  enumerated[179](?), arg b[2803] :
  enumerated[179](?)) : _unknown[43]
  {
    (2823 return(2822 '<'(2817 call chpl__enumToOrder a[2797])(2821 call chpl__enumToOrder b[2803])))
  }
  where {
    (2810 call ==(2807 'typeof' a[2797])(2809 'typeof' b[2803]))
  }
  function <[2835](arg a[2832] :
  enumerated[179](?), arg b[2838] :
  enumerated[179](?)) : _unknown[43] "inline" "last resort"
  {
    (2850 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2854 return 0)
  }
  where {
    (2845 call !=(2842 'typeof' a[2832])(2844 'typeof' b[2838]))
  }
  function >[2869](arg a[2866] :
  (2865 call int(64)[13] unknown w[2862]), arg b[2875] :
  (2874 call int(64)[13] w[2862])) : _unknown[43] "inline"
  {
    (2898 return(2897 '>' a[2866] b[2875]))
  }
  function >[2913](arg a[2910] :
  (2909 call uint(64)[107] unknown w[2906]), arg b[2919] :
  (2918 call uint(64)[107] w[2906])) : _unknown[43] "inline"
  {
    (2927 return(2926 '>' a[2910] b[2919]))
  }
  function >[2942](arg a[2939] :
  (2938 call real(64)[16] unknown w[2935]), arg b[2948] :
  (2947 call real(64)[16] w[2935])) : _unknown[43] "inline"
  {
    (2956 return(2955 '>' a[2939] b[2948]))
  }
  function >[2971](arg a[2968] :
  (2967 call imag(64)[122] unknown w[2964]), arg b[2977] :
  (2976 call imag(64)[122] w[2964])) : _unknown[43] "inline"
  {
    (2983 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (2991 return(2990 '>' a[2968] b[2977]))
  }
  function >[3001](arg a[2998] :
  enumerated[179](?), arg b[3004] :
  enumerated[179](?)) : _unknown[43]
  {
    (3024 return(3023 '>'(3018 call chpl__enumToOrder a[2998])(3022 call chpl__enumToOrder b[3004])))
  }
  where {
    (3011 call ==(3008 'typeof' a[2998])(3010 'typeof' b[3004]))
  }
  function >[3036](arg a[3033] :
  enumerated[179](?), arg b[3039] :
  enumerated[179](?)) : _unknown[43] "inline" "last resort"
  {
    (3051 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (3055 return 0)
  }
  where {
    (3046 call !=(3043 'typeof' a[3033])(3045 'typeof' b[3039]))
  }
  function <=[3070](param arg a[3067] :
  (3066 call int(64)[13] unknown w[3063]), param arg b[3076] :
  (3075 call int(64)[13] w[3063])) param : _unknown[43] "inline"
  {
    (3084 return(3083 '<=' a[3067] b[3076]))
  }
  function <=[3099](param arg a[3096] :
  (3095 call uint(64)[107] unknown w[3092]), param arg b[3105] :
  (3104 call uint(64)[107] w[3092])) param : _unknown[43] "inline"
  {
    (3113 return(3112 '<=' a[3096] b[3105]))
  }
  function <=[3124](param arg a[3121] :
  enumerated[179](?), param arg b[3127] :
  enumerated[179](?)) param : _unknown[43] "inline"
  {
    (3147 return(3146 '<='(3141 call chpl__enumToOrder a[3121])(3145 call chpl__enumToOrder b[3127])))
  }
  where {
    (3134 call ==(3131 'typeof' a[3121])(3133 'typeof' b[3127]))
  }
  function <=[3163](param arg a[3160] :
  (3159 call real(64)[16] unknown w[3156]), param arg b[3169] :
  (3168 call real(64)[16] w[3156])) param : _unknown[43] "inline"
  {
    (3177 return(3176 '<=' a[3160] b[3169]))
  }
  function <=[3192](param arg a[3189] :
  (3188 call imag(64)[122] unknown w[3185]), param arg b[3198] :
  (3197 call imag(64)[122] w[3185])) param : _unknown[43] "inline"
  {
    (3204 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (3212 return(3211 '<=' a[3189] b[3198]))
  }
  function >=[3226](param arg a[3223] :
  (3222 call int(64)[13] unknown w[3219]), param arg b[3232] :
  (3231 call int(64)[13] w[3219])) param : _unknown[43] "inline"
  {
    (3240 return(3239 '>=' a[3223] b[3232]))
  }
  function >=[3255](param arg a[3252] :
  (3251 call uint(64)[107] unknown w[3248]), param arg b[3261] :
  (3260 call uint(64)[107] w[3248])) param : _unknown[43] "inline"
  {
    (3269 return(3268 '>=' a[3252] b[3261]))
  }
  function >=[3280](param arg a[3277] :
  enumerated[179](?), param arg b[3283] :
  enumerated[179](?)) param : _unknown[43] "inline"
  {
    (3303 return(3302 '>='(3297 call chpl__enumToOrder a[3277])(3301 call chpl__enumToOrder b[3283])))
  }
  where {
    (3290 call ==(3287 'typeof' a[3277])(3289 'typeof' b[3283]))
  }
  function >=[3319](param arg a[3316] :
  (3315 call real(64)[16] unknown w[3312]), param arg b[3325] :
  (3324 call real(64)[16] w[3312])) param : _unknown[43] "inline"
  {
    (3333 return(3332 '>=' a[3316] b[3325]))
  }
  function >=[3348](param arg a[3345] :
  (3344 call imag(64)[122] unknown w[3341]), param arg b[3354] :
  (3353 call imag(64)[122] w[3341])) param : _unknown[43] "inline"
  {
    (3360 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (3368 return(3367 '>=' a[3345] b[3354]))
  }
  function <[3382](param arg a[3379] :
  (3378 call int(64)[13] unknown w[3375]), param arg b[3388] :
  (3387 call int(64)[13] w[3375])) param : _unknown[43] "inline"
  {
    (3396 return(3395 '<' a[3379] b[3388]))
  }
  function <[3411](param arg a[3408] :
  (3407 call uint(64)[107] unknown w[3404]), param arg b[3417] :
  (3416 call uint(64)[107] w[3404])) param : _unknown[43] "inline"
  {
    (3425 return(3424 '<' a[3408] b[3417]))
  }
  function <[3436](param arg a[3433] :
  enumerated[179](?), param arg b[3439] :
  enumerated[179](?)) param : _unknown[43] "inline"
  {
    (3459 return(3458 '<'(3453 call chpl__enumToOrder a[3433])(3457 call chpl__enumToOrder b[3439])))
  }
  where {
    (3446 call ==(3443 'typeof' a[3433])(3445 'typeof' b[3439]))
  }
  function <[3475](param arg a[3472] :
  (3471 call real(64)[16] unknown w[3468]), param arg b[3481] :
  (3480 call real(64)[16] w[3468])) param : _unknown[43] "inline"
  {
    (3489 return(3488 '<' a[3472] b[3481]))
  }
  function <[3504](param arg a[3501] :
  (3500 call imag(64)[122] unknown w[3497]), param arg b[3510] :
  (3509 call imag(64)[122] w[3497])) param : _unknown[43] "inline"
  {
    (3516 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (3524 return(3523 '<' a[3501] b[3510]))
  }
  function >[3538](param arg a[3535] :
  (3534 call int(64)[13] unknown w[3531]), param arg b[3544] :
  (3543 call int(64)[13] w[3531])) param : _unknown[43] "inline"
  {
    (3552 return(3551 '>' a[3535] b[3544]))
  }
  function >[3567](param arg a[3564] :
  (3563 call uint(64)[107] unknown w[3560]), param arg b[3573] :
  (3572 call uint(64)[107] w[3560])) param : _unknown[43] "inline"
  {
    (3581 return(3580 '>' a[3564] b[3573]))
  }
  function >[3592](param arg a[3589] :
  enumerated[179](?), param arg b[3595] :
  enumerated[179](?)) param : _unknown[43] "inline"
  {
    (3615 return(3614 '>'(3609 call chpl__enumToOrder a[3589])(3613 call chpl__enumToOrder b[3595])))
  }
  where {
    (3602 call ==(3599 'typeof' a[3589])(3601 'typeof' b[3595]))
  }
  function >[3631](param arg a[3628] :
  (3627 call real(64)[16] unknown w[3624]), param arg b[3637] :
  (3636 call real(64)[16] w[3624])) param : _unknown[43] "inline"
  {
    (3645 return(3644 '>' a[3628] b[3637]))
  }
  function >[3660](param arg a[3657] :
  (3656 call imag(64)[122] unknown w[3653]), param arg b[3666] :
  (3665 call imag(64)[122] w[3653])) param : _unknown[43] "inline"
  {
    (3672 call compilerWarning "inequality comparisons on 'imag' are deprecated")
    (3680 return(3679 '>' a[3657] b[3666]))
  }
  function +[3694](arg a[3691] :
  (3690 call int(64)[13] unknown w[3687])) : _unknown[43] "inline"
  {
    (3697 return a[3691])
  }
  function +[3712](arg a[3709] :
  (3708 call uint(64)[107] unknown w[3705])) : _unknown[43] "inline"
  {
    (3715 return a[3709])
  }
  function +[3730](arg a[3727] :
  (3726 call real(64)[16] unknown w[3723])) : _unknown[43] "inline"
  {
    (3733 return a[3727])
  }
  function +[3748](arg a[3745] :
  (3744 call imag(64)[122] unknown w[3741])) : _unknown[43] "inline"
  {
    (3751 return a[3745])
  }
  function +[3766](arg a[3763] :
  (3762 call complex(128)[132] unknown w[3759])) : _unknown[43] "inline"
  {
    (3769 return a[3763])
  }
  function -[3784](arg a[3781] :
  (3780 call int(64)[13] unknown w[3777])) : _unknown[43] "inline"
  {
    (3805 return(3804 'u-' a[3781]))
  }
  function -[3821](arg a[3818] :
  (3817 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (3848 call compilerError "illegal use of '-' on operand of type "(3846 call _cast string[24](3844 'typeof' a[3818])))
  }
  function -[3863](arg a[3860] :
  (3859 call real(64)[16] unknown w[3856])) : _unknown[43] "inline"
  {
    (3869 return(3868 'u-' a[3860]))
  }
  function -[3884](arg a[3881] :
  (3880 call imag(64)[122] unknown w[3877])) : _unknown[43] "inline"
  {
    (3890 return(3889 'u-' a[3881]))
  }
  function -[3905](arg a[3902] :
  (3901 call complex(128)[132] unknown w[3898])) : _unknown[43] "inline"
  {
    (3911 return(3910 'u-' a[3902]))
  }
  function +[3926](param arg a[3923] :
  (3922 call int(64)[13] unknown w[3919])) param : _unknown[43] "inline"
  {
    (3929 return a[3923])
  }
  function +[3944](param arg a[3941] :
  (3940 call uint(64)[107] unknown w[3937])) param : _unknown[43] "inline"
  {
    (3947 return a[3941])
  }
  function +[3962](param arg a[3959] :
  (3958 call real(64)[16] unknown w[3955])) param : _unknown[43] "inline"
  {
    (3965 return a[3959])
  }
  function +[3980](param arg a[3977] :
  (3976 call imag(64)[122] unknown w[3973])) param : _unknown[43] "inline"
  {
    (3983 return a[3977])
  }
  function +[3998](param arg a[3995] :
  (3994 call complex(128)[132] unknown w[3991])) param : _unknown[43] "inline"
  {
    (4001 return a[3995])
  }
  function -[4016](param arg a[4013] :
  (4012 call int(64)[13] unknown w[4009])) param : _unknown[43] "inline"
  {
    (4022 return(4021 'u-' a[4013]))
  }
  function -[4037](param arg a[4034] :
  (4033 call uint(64)[107] unknown w[4030])) param : _unknown[43] "inline"
  {
    if(4070 call _cond_test(4047 call <(4044 call _cast(4043 call int(64)[13] w[4030]) a[4034]) 0))
    {
      (4057 call compilerError "illegal use of '-' on operand of type "(4055 call _cast string[24](4053 'typeof' a[4034])))
    }
    {
      (4068 return(4066 call -(4064 call _cast(4063 call int(64)[13] w[4030]) a[4034])))
    }
  }
  function -[4089](param arg a[4086] :
  (4085 call real(64)[16] unknown w[4082])) param : _unknown[43] "inline"
  {
    (4095 return(4094 'u-' a[4086]))
  }
  function -[4110](param arg a[4107] :
  (4106 call imag(64)[122] unknown w[4103])) param : _unknown[43] "inline"
  {
    (4116 return(4115 'u-' a[4107]))
  }
  function -[4131](param arg a[4128] :
  (4127 call complex(128)[132] unknown w[4124])) param : _unknown[43] "inline"
  {
    (4137 return(4136 'u-' a[4128]))
  }
  function +[4152](arg a[4149] :
  (4148 call int(64)[13] unknown w[4145]), arg b[4158] :
  (4157 call int(64)[13] w[4145])) : _unknown[43] "inline"
  {
    (4181 return(4180 '+' a[4149] b[4158]))
  }
  function +[4196](arg a[4193] :
  (4192 call uint(64)[107] unknown w[4189]), arg b[4202] :
  (4201 call uint(64)[107] w[4189])) : _unknown[43] "inline"
  {
    (4210 return(4209 '+' a[4193] b[4202]))
  }
  function +[4225](arg a[4222] :
  (4221 call real(64)[16] unknown w[4218]), arg b[4231] :
  (4230 call real(64)[16] w[4218])) : _unknown[43] "inline"
  {
    (4239 return(4238 '+' a[4222] b[4231]))
  }
  function +[4254](arg a[4251] :
  (4250 call imag(64)[122] unknown w[4247]), arg b[4260] :
  (4259 call imag(64)[122] w[4247])) : _unknown[43] "inline"
  {
    (4268 return(4267 '+' a[4251] b[4260]))
  }
  function +[4283](arg a[4280] :
  (4279 call complex(128)[132] unknown w[4276]), arg b[4289] :
  (4288 call complex(128)[132] w[4276])) : _unknown[43] "inline"
  {
    (4297 return(4296 '+' a[4280] b[4289]))
  }
  function +[4312](arg a[4309] :
  (4308 call real(64)[16] unknown w[4305]), arg b[4318] :
  (4317 call imag(64)[122] w[4305])) : _unknown[43] "inline"
  {
    (4338 return(4336 call _cast(4335 call complex(128)[132](4332 call * w[4305] 2))(4327 call _build_tuple a[4309](4325 call _i2r b[4318]))))
  }
  function +[4353](arg a[4350] :
  (4349 call imag(64)[122] unknown w[4346]), arg b[4359] :
  (4358 call real(64)[16] w[4346])) : _unknown[43] "inline"
  {
    (4379 return(4377 call _cast(4376 call complex(128)[132](4373 call * w[4346] 2))(4368 call _build_tuple b[4359](4366 call _i2r a[4350]))))
  }
  function +[4394](arg a[4391] :
  (4390 call real(64)[16] unknown w[4387]), arg b[4403] :
  (4402 call complex(128)[132](4399 call * w[4387] 2))) : _unknown[43] "inline"
  {
    (4429 return(4427 call _cast(4426 call complex(128)[132](4423 call * w[4387] 2))(4418 call _build_tuple(4411 call + a[4391](4408 call . b[4403] c"re"))(4414 call . b[4403] c"im"))))
  }
  function +[4444](arg a[4441] :
  (4440 call complex(128)[132] unknown w[4437]), arg b[4453] :
  (4452 call real(64)[16](4449 call / w[4437] 2))) : _unknown[43] "inline"
  {
    (4476 return(4474 call _cast(4473 call complex(128)[132] w[4437])(4468 call _build_tuple(4461 call +(4457 call . a[4441] c"re") b[4453])(4464 call . a[4441] c"im"))))
  }
  function +[4491](arg a[4488] :
  (4487 call imag(64)[122] unknown w[4484]), arg b[4500] :
  (4499 call complex(128)[132](4496 call * w[4484] 2))) : _unknown[43] "inline"
  {
    (4529 return(4527 call _cast(4526 call complex(128)[132](4523 call * w[4484] 2))(4518 call _build_tuple(4504 call . b[4500] c"re")(4515 call +(4510 call _i2r a[4488])(4512 call . b[4500] c"im")))))
  }
  function +[4544](arg a[4541] :
  (4540 call complex(128)[132] unknown w[4537]), arg b[4553] :
  (4552 call imag(64)[122](4549 call / w[4537] 2))) : _unknown[43] "inline"
  {
    (4579 return(4577 call _cast(4576 call complex(128)[132] w[4537])(4571 call _build_tuple(4557 call . a[4541] c"re")(4568 call +(4561 call . a[4541] c"im")(4567 call _i2r b[4553])))))
  }
  function -[4594](arg a[4591] :
  (4590 call int(64)[13] unknown w[4587]), arg b[4600] :
  (4599 call int(64)[13] w[4587])) : _unknown[43] "inline"
  {
    (4623 return(4622 '-' a[4591] b[4600]))
  }
  function -[4638](arg a[4635] :
  (4634 call uint(64)[107] unknown w[4631]), arg b[4644] :
  (4643 call uint(64)[107] w[4631])) : _unknown[43] "inline"
  {
    (4652 return(4651 '-' a[4635] b[4644]))
  }
  function -[4667](arg a[4664] :
  (4663 call real(64)[16] unknown w[4660]), arg b[4673] :
  (4672 call real(64)[16] w[4660])) : _unknown[43] "inline"
  {
    (4681 return(4680 '-' a[4664] b[4673]))
  }
  function -[4696](arg a[4693] :
  (4692 call imag(64)[122] unknown w[4689]), arg b[4702] :
  (4701 call imag(64)[122] w[4689])) : _unknown[43] "inline"
  {
    (4710 return(4709 '-' a[4693] b[4702]))
  }
  function -[4725](arg a[4722] :
  (4721 call complex(128)[132] unknown w[4718]), arg b[4731] :
  (4730 call complex(128)[132] w[4718])) : _unknown[43] "inline"
  {
    (4739 return(4738 '-' a[4722] b[4731]))
  }
  function -[4754](arg a[4751] :
  (4750 call real(64)[16] unknown w[4747]), arg b[4760] :
  (4759 call imag(64)[122] w[4747])) : _unknown[43] "inline"
  {
    (4782 return(4780 call _cast(4779 call complex(128)[132](4776 call * w[4747] 2))(4771 call _build_tuple a[4751](4768 call -(4767 call _i2r b[4760])))))
  }
  function -[4797](arg a[4794] :
  (4793 call imag(64)[122] unknown w[4790]), arg b[4803] :
  (4802 call real(64)[16] w[4790])) : _unknown[43] "inline"
  {
    (4825 return(4823 call _cast(4822 call complex(128)[132](4819 call * w[4790] 2))(4814 call _build_tuple(4807 call - b[4803])(4812 call _i2r a[4794]))))
  }
  function -[4840](arg a[4837] :
  (4836 call real(64)[16] unknown w[4833]), arg b[4849] :
  (4848 call complex(128)[132](4845 call * w[4833] 2))) : _unknown[43] "inline"
  {
    (4877 return(4875 call _cast(4874 call complex(128)[132](4871 call * w[4833] 2))(4866 call _build_tuple(4857 call - a[4837](4854 call . b[4849] c"re"))(4863 call -(4860 call . b[4849] c"im")))))
  }
  function -[4892](arg a[4889] :
  (4888 call complex(128)[132] unknown w[4885]), arg b[4901] :
  (4900 call real(64)[16](4897 call / w[4885] 2))) : _unknown[43] "inline"
  {
    (4924 return(4922 call _cast(4921 call complex(128)[132] w[4885])(4916 call _build_tuple(4909 call -(4905 call . a[4889] c"re") b[4901])(4912 call . a[4889] c"im"))))
  }
  function -[4939](arg a[4936] :
  (4935 call imag(64)[122] unknown w[4932]), arg b[4948] :
  (4947 call complex(128)[132](4944 call * w[4932] 2))) : _unknown[43] "inline"
  {
    (4979 return(4977 call _cast(4976 call complex(128)[132](4973 call * w[4932] 2))(4968 call _build_tuple(4955 call -(4952 call . b[4948] c"re"))(4965 call -(4960 call _i2r a[4936])(4962 call . b[4948] c"im")))))
  }
  function -[4994](arg a[4991] :
  (4990 call complex(128)[132] unknown w[4987]), arg b[5003] :
  (5002 call imag(64)[122](4999 call / w[4987] 2))) : _unknown[43] "inline"
  {
    (5029 return(5027 call _cast(5026 call complex(128)[132] w[4987])(5021 call _build_tuple(5007 call . a[4991] c"re")(5018 call -(5011 call . a[4991] c"im")(5017 call _i2r b[5003])))))
  }
  function +[5044](param arg a[5041] :
  (5040 call int(64)[13] unknown w[5037]), param arg b[5050] :
  (5049 call int(64)[13] w[5037])) param : _unknown[43] "inline"
  {
    (5058 return(5057 '+' a[5041] b[5050]))
  }
  function +[5073](param arg a[5070] :
  (5069 call uint(64)[107] unknown w[5066]), param arg b[5079] :
  (5078 call uint(64)[107] w[5066])) param : _unknown[43] "inline"
  {
    (5087 return(5086 '+' a[5070] b[5079]))
  }
  function +[5102](param arg a[5099] :
  (5098 call real(64)[16] unknown w[5095]), param arg b[5108] :
  (5107 call real(64)[16] w[5095])) param : _unknown[43] "inline"
  {
    (5116 return(5115 '+' a[5099] b[5108]))
  }
  function +[5131](param arg a[5128] :
  (5127 call imag(64)[122] unknown w[5124]), param arg b[5137] :
  (5136 call imag(64)[122] w[5124])) param : _unknown[43] "inline"
  {
    (5145 return(5144 '+' a[5128] b[5137]))
  }
  function +[5160](param arg a[5157] :
  (5156 call complex(128)[132] unknown w[5153]), param arg b[5166] :
  (5165 call complex(128)[132] w[5153])) param : _unknown[43] "inline"
  {
    (5174 return(5173 '+' a[5157] b[5166]))
  }
  function -[5189](param arg a[5186] :
  (5185 call int(64)[13] unknown w[5182]), param arg b[5195] :
  (5194 call int(64)[13] w[5182])) param : _unknown[43] "inline"
  {
    (5203 return(5202 '-' a[5186] b[5195]))
  }
  function -[5218](param arg a[5215] :
  (5214 call uint(64)[107] unknown w[5211]), param arg b[5224] :
  (5223 call uint(64)[107] w[5211])) param : _unknown[43] "inline"
  {
    (5232 return(5231 '-' a[5215] b[5224]))
  }
  function -[5247](param arg a[5244] :
  (5243 call real(64)[16] unknown w[5240]), param arg b[5253] :
  (5252 call real(64)[16] w[5240])) param : _unknown[43] "inline"
  {
    (5261 return(5260 '-' a[5244] b[5253]))
  }
  function -[5276](param arg a[5273] :
  (5272 call imag(64)[122] unknown w[5269]), param arg b[5282] :
  (5281 call imag(64)[122] w[5269])) param : _unknown[43] "inline"
  {
    (5290 return(5289 '-' a[5273] b[5282]))
  }
  function -[5305](param arg a[5302] :
  (5301 call complex(128)[132] unknown w[5298]), param arg b[5311] :
  (5310 call complex(128)[132] w[5298])) param : _unknown[43] "inline"
  {
    (5319 return(5318 '-' a[5302] b[5311]))
  }
  function *[5334](arg a[5331] :
  (5330 call int(64)[13] unknown w[5327]), arg b[5340] :
  (5339 call int(64)[13] w[5327])) : _unknown[43] "inline"
  {
    (5363 return(5362 '*' a[5331] b[5340]))
  }
  function *[5378](arg a[5375] :
  (5374 call uint(64)[107] unknown w[5371]), arg b[5384] :
  (5383 call uint(64)[107] w[5371])) : _unknown[43] "inline"
  {
    (5392 return(5391 '*' a[5375] b[5384]))
  }
  function *[5407](arg a[5404] :
  (5403 call real(64)[16] unknown w[5400]), arg b[5413] :
  (5412 call real(64)[16] w[5400])) : _unknown[43] "inline"
  {
    (5421 return(5420 '*' a[5404] b[5413]))
  }
  function *[5436](arg a[5433] :
  (5432 call imag(64)[122] unknown w[5429]), arg b[5442] :
  (5441 call imag(64)[122] w[5429])) : _unknown[43] "inline"
  {
    (5455 return(5454 call _i2r(5452 '*'(5449 call - a[5433]) b[5442])))
  }
  function *[5470](arg a[5467] :
  (5466 call complex(128)[132] unknown w[5463]), arg b[5476] :
  (5475 call complex(128)[132] w[5463])) : _unknown[43] "inline"
  {
    (5484 return(5483 '*' a[5467] b[5476]))
  }
  function *[5499](arg a[5496] :
  (5495 call real(64)[16] unknown w[5492]), arg b[5505] :
  (5504 call imag(64)[122] w[5492])) : _unknown[43] "inline"
  {
    (5518 return(5517 call _r2i(5514 call * a[5496](5513 call _i2r b[5505]))))
  }
  function *[5533](arg a[5530] :
  (5529 call imag(64)[122] unknown w[5526]), arg b[5539] :
  (5538 call real(64)[16] w[5526])) : _unknown[43] "inline"
  {
    (5552 return(5551 call _r2i(5548 call *(5546 call _i2r a[5530]) b[5539])))
  }
  function *[5567](arg a[5564] :
  (5563 call real(64)[16] unknown w[5560]), arg b[5576] :
  (5575 call complex(128)[132](5572 call * w[5560] 2))) : _unknown[43] "inline"
  {
    (5605 return(5603 call _cast(5602 call complex(128)[132](5599 call * w[5560] 2))(5594 call _build_tuple(5584 call * a[5564](5581 call . b[5576] c"re"))(5591 call * a[5564](5588 call . b[5576] c"im")))))
  }
  function *[5620](arg a[5617] :
  (5616 call complex(128)[132] unknown w[5613]), arg b[5629] :
  (5628 call real(64)[16](5625 call / w[5613] 2))) : _unknown[43] "inline"
  {
    (5655 return(5653 call _cast(5652 call complex(128)[132] w[5613])(5647 call _build_tuple(5637 call *(5633 call . a[5617] c"re") b[5629])(5644 call *(5640 call . a[5617] c"im") b[5629]))))
  }
  function *[5670](arg a[5667] :
  (5666 call imag(64)[122] unknown w[5663]), arg b[5679] :
  (5678 call complex(128)[132](5675 call * w[5663] 2))) : _unknown[43] "inline"
  {
    (5716 return(5714 call _cast(5713 call complex(128)[132](5710 call * w[5663] 2))(5705 call _build_tuple(5692 call -(5690 call *(5685 call _i2r a[5667])(5687 call . b[5679] c"im")))(5702 call *(5697 call _i2r a[5667])(5699 call . b[5679] c"re")))))
  }
  function *[5731](arg a[5728] :
  (5727 call complex(128)[132] unknown w[5724]), arg b[5740] :
  (5739 call imag(64)[122](5736 call / w[5724] 2))) : _unknown[43] "inline"
  {
    (5774 return(5772 call _cast(5771 call complex(128)[132] w[5724])(5766 call _build_tuple(5753 call -(5751 call *(5744 call . a[5728] c"im")(5750 call _i2r b[5740])))(5763 call *(5756 call . a[5728] c"re")(5762 call _i2r b[5740])))))
  }
  function /[5789](arg a[5786] :
  (5785 call int(64)[13] unknown w[5782]), arg b[5795] :
  (5794 call int(64)[13] w[5782])) : _unknown[43] "inline"
  {
    if(5830 call _cond_test 1)
    {
      if(5825 call _cond_test(5801 call == b[5795] 0))
      {
        (5823 call halt "Attempt to divide by zero")
      }
    }
    (5856 return(5855 '/' a[5786] b[5795]))
  }
  function /[5870](arg a[5867] :
  (5866 call uint(64)[107] unknown w[5863]), arg b[5876] :
  (5875 call uint(64)[107] w[5863])) : _unknown[43] "inline"
  {
    if(5894 call _cond_test 1)
    {
      if(5889 call _cond_test(5882 call == b[5876] 0))
      {
        (5887 call halt "Attempt to divide by zero")
      }
    }
    (5905 return(5904 '/' a[5867] b[5876]))
  }
  function /[5919](arg a[5916] :
  (5915 call real(64)[16] unknown w[5912]), arg b[5925] :
  (5924 call real(64)[16] w[5912])) : _unknown[43] "inline"
  {
    (5933 return(5932 '/' a[5916] b[5925]))
  }
  function /[5948](arg a[5945] :
  (5944 call imag(64)[122] unknown w[5941]), arg b[5954] :
  (5953 call imag(64)[122] w[5941])) : _unknown[43] "inline"
  {
    (5965 return(5964 call _i2r(5962 '/' a[5945] b[5954])))
  }
  function /[5980](arg a[5977] :
  (5976 call complex(128)[132] unknown w[5973]), arg b[5986] :
  (5985 call complex(128)[132] w[5973])) : _unknown[43] "inline"
  {
    (5994 return(5993 '/' a[5977] b[5986]))
  }
  function /[6009](arg a[6006] :
  (6005 call real(64)[16] unknown w[6002]), arg b[6015] :
  (6014 call imag(64)[122] w[6002])) : _unknown[43] "inline"
  {
    (6030 return(6029 call _r2i(6026 call -(6024 call / a[6006](6023 call _i2r b[6015])))))
  }
  function /[6045](arg a[6042] :
  (6041 call imag(64)[122] unknown w[6038]), arg b[6051] :
  (6050 call real(64)[16] w[6038])) : _unknown[43] "inline"
  {
    (6064 return(6063 call _r2i(6060 call /(6058 call _i2r a[6042]) b[6051])))
  }
  function /[6079](arg a[6076] :
  (6075 call real(64)[16] unknown w[6072]), arg b[6088] :
  (6087 call complex(128)[132](6084 call * w[6072] 2))) : _unknown[43] "inline"
  {
    function _let_fn1[6138]() : _unknown[43] "compiler nested function" "inline"
    {
      unknown d[6095](6094 call abs b[6088])
      (6140 return(6136 call _cast(6135 call complex(128)[132](6132 call * w[6072] 2))(6127 call _build_tuple(6109 call *(6100 call / a[6076] d[6095])(6107 call /(6103 call . b[6088] c"re") d[6095]))(6124 call *(6115 call -(6113 call / a[6076] d[6095]))(6122 call /(6118 call . b[6088] c"im") d[6095])))))
    }
    (6143 return(6142 call _let_fn1))
  }
  function /[6158](arg a[6155] :
  (6154 call complex(128)[132] unknown w[6151]), arg b[6167] :
  (6166 call real(64)[16](6163 call / w[6151] 2))) : _unknown[43] "inline"
  {
    (6193 return(6191 call _cast(6190 call complex(128)[132] w[6151])(6185 call _build_tuple(6175 call /(6171 call . a[6155] c"re") b[6167])(6182 call /(6178 call . a[6155] c"im") b[6167]))))
  }
  function /[6208](arg a[6205] :
  (6204 call imag(64)[122] unknown w[6201]), arg b[6217] :
  (6216 call complex(128)[132](6213 call * w[6201] 2))) : _unknown[43] "inline"
  {
    function _let_fn2[6271]() : _unknown[43] "compiler nested function" "inline"
    {
      unknown d[6224](6223 call abs b[6217])
      (6273 return(6269 call _cast(6268 call complex(128)[132](6265 call * w[6201] 2))(6260 call _build_tuple(6241 call *(6232 call /(6230 call _i2r a[6205]) d[6224])(6239 call /(6235 call . b[6217] c"im") d[6224]))(6257 call *(6248 call /(6246 call _i2r a[6205]) d[6224])(6255 call /(6251 call . b[6217] c"re") d[6224])))))
    }
    (6276 return(6275 call _let_fn2))
  }
  function /[6291](arg a[6288] :
  (6287 call complex(128)[132] unknown w[6284]), arg b[6300] :
  (6299 call imag(64)[122](6296 call / w[6284] 2))) : _unknown[43] "inline"
  {
    (6334 return(6332 call _cast(6331 call complex(128)[132] w[6284])(6326 call _build_tuple(6311 call /(6304 call . a[6288] c"im")(6310 call _i2r b[6300]))(6323 call -(6321 call /(6314 call . a[6288] c"re")(6320 call _i2r b[6300]))))))
  }
  function *[6349](param arg a[6346] :
  (6345 call int(64)[13] unknown w[6342]), param arg b[6355] :
  (6354 call int(64)[13] w[6342])) param : _unknown[43] "inline"
  {
    (6363 return(6362 '*' a[6346] b[6355]))
  }
  function *[6378](param arg a[6375] :
  (6374 call uint(64)[107] unknown w[6371]), param arg b[6384] :
  (6383 call uint(64)[107] w[6371])) param : _unknown[43] "inline"
  {
    (6392 return(6391 '*' a[6375] b[6384]))
  }
  function *[6407](param arg a[6404] :
  (6403 call real(64)[16] unknown w[6400]), param arg b[6413] :
  (6412 call real(64)[16] w[6400])) param : _unknown[43] "inline"
  {
    (6421 return(6420 '*' a[6404] b[6413]))
  }
  function *[6436](param arg a[6433] :
  (6432 call imag(64)[122] unknown w[6429]), param arg b[6442] :
  (6441 call imag(64)[122] w[6429])) param : _unknown[43] "inline"
  {
    (6458 return(6456 call _cast(6455 call real(64)[16] w[6429])(6451 '*'(6448 call - a[6433]) b[6442])))
  }
  function *[6473](param arg a[6470] :
  (6469 call real(64)[16] unknown w[6466]), param arg b[6479] :
  (6478 call imag(64)[122] w[6466])) param : _unknown[43] "inline"
  {
    (6499 return(6497 call _cast(6496 call imag(64)[122] w[6466])(6492 '*' a[6470](6490 call _cast(6489 call real(64)[16] w[6466]) b[6479]))))
  }
  function *[6514](param arg a[6511] :
  (6510 call imag(64)[122] unknown w[6507]), param arg b[6520] :
  (6519 call real(64)[16] w[6507])) param : _unknown[43] "inline"
  {
    (6540 return(6538 call _cast(6537 call imag(64)[122] w[6507])(6533 '*'(6530 call _cast(6529 call real(64)[16] w[6507]) a[6511]) b[6520])))
  }
  function /[6555](param arg a[6552] :
  (6551 call int(64)[13] unknown w[6548]), param arg b[6561] :
  (6560 call int(64)[13] w[6548])) param : _unknown[43] "inline"
  {
    if(6573 call _cond_test(6566 call == b[6561] 0))
    {
      (6571 call compilerError "Attempt to divide by zero")
    }
    (6584 return(6583 '/' a[6552] b[6561]))
  }
  function /[6598](param arg a[6595] :
  (6594 call uint(64)[107] unknown w[6591]), param arg b[6604] :
  (6603 call uint(64)[107] w[6591])) param : _unknown[43] "inline"
  {
    if(6616 call _cond_test(6609 call == b[6604] 0))
    {
      (6614 call compilerError "Attempt to divide by zero")
    }
    (6627 return(6626 '/' a[6595] b[6604]))
  }
  function /[6641](param arg a[6638] :
  (6637 call real(64)[16] unknown w[6634]), param arg b[6647] :
  (6646 call real(64)[16] w[6634])) param : _unknown[43] "inline"
  {
    (6655 return(6654 '/' a[6638] b[6647]))
  }
  function /[6670](param arg a[6667] :
  (6666 call imag(64)[122] unknown w[6663]), param arg b[6676] :
  (6675 call imag(64)[122] w[6663])) param : _unknown[43] "inline"
  {
    (6690 return(6688 call _cast(6687 call real(64)[16] w[6663])(6683 '/' a[6667] b[6676])))
  }
  function /[6705](param arg a[6702] :
  (6701 call real(64)[16] unknown w[6698]), param arg b[6711] :
  (6710 call imag(64)[122] w[6698])) param : _unknown[43] "inline"
  {
    (6733 return(6731 call _cast(6730 call imag(64)[122] w[6698])(6726 '/'(6717 call - a[6702])(6724 call _cast(6723 call real(64)[16] w[6698]) b[6711]))))
  }
  function /[6748](param arg a[6745] :
  (6744 call imag(64)[122] unknown w[6741]), param arg b[6754] :
  (6753 call real(64)[16] w[6741])) param : _unknown[43] "inline"
  {
    (6774 return(6772 call _cast(6771 call imag(64)[122] w[6741])(6767 '/'(6764 call _cast(6763 call real(64)[16] w[6741]) a[6745]) b[6754])))
  }
  function %[6789](arg a[6786] :
  (6785 call int(64)[13] unknown w[6782]), arg b[6795] :
  (6794 call int(64)[13] w[6782])) : _unknown[43] "inline"
  {
    if(6830 call _cond_test 1)
    {
      if(6825 call _cond_test(6801 call == b[6795] 0))
      {
        (6823 call halt "Attempt to compute a modulus by zero")
      }
    }
    (6856 return(6855 '%' a[6786] b[6795]))
  }
  function %[6870](arg a[6867] :
  (6866 call uint(64)[107] unknown w[6863]), arg b[6876] :
  (6875 call uint(64)[107] w[6863])) : _unknown[43] "inline"
  {
    if(6894 call _cond_test 1)
    {
      if(6889 call _cond_test(6882 call == b[6876] 0))
      {
        (6887 call halt "Attempt to compute a modulus by zero")
      }
    }
    (6905 return(6904 '%' a[6867] b[6876]))
  }
  function %[6919](param arg a[6916] :
  (6915 call int(64)[13] unknown w[6912]), param arg b[6925] :
  (6924 call int(64)[13] w[6912])) param : _unknown[43] "inline"
  {
    if(6937 call _cond_test(6930 call == b[6925] 0))
    {
      (6935 call compilerError "Attempt to compute a modulus by zero")
    }
    (6948 return(6947 '%' a[6916] b[6925]))
  }
  function %[6962](param arg a[6959] :
  (6958 call uint(64)[107] unknown w[6955]), param arg b[6968] :
  (6967 call uint(64)[107] w[6955])) param : _unknown[43] "inline"
  {
    if(6980 call _cond_test(6973 call == b[6968] 0))
    {
      (6978 call compilerError "Attempt to compute a modulus by zero")
    }
    (6991 return(6990 '%' a[6959] b[6968]))
  }
  function _intExpHelp[7001](arg a[6998] :
  integral[188](?), arg b[7003]:_any[170](?)) : _unknown[43] "inline"
  {
    if(7118 call _cond_test(7020 call &&(7015 call isIntType(7013 'typeof' b[7003]))(7018 call < b[7003] 0)))
    {
      if(7112 call _cond_test(7024 call == a[6998] 0))
      {
        (7066 call halt "cannot compute " a[6998] " ** " b[7003])
      }
      {
        if(7106 call _cond_test(7070 call == a[6998] 1))
        {
          (7073 return 1)
        }
        {
          if(7100 call _cond_test(7079 call == a[6998](7077 call - 1)))
          {
            (7095 return(7092 IfExpr (7086 call ==(7083 call % b[7003] 2) 0) then
            { scopeless
              1
            } else
            { scopeless
              (7090 call - 1)
            } ))
          }
          {
            (7098 return 0)
          }
        }
      }
    }
    unknown i[7125] b[7003]
    unknown y[7131] 1(7129 'typeof' a[6998])
    unknown z[7135] a[6998]
    {
      unknown tmp[7170] "temp"
      (7194 'move' tmp[7170](7189 call _cond_test(7191 call != i[7125] 0)))
      WhileDo
      {
        {
          if(7154 call _cond_test(7147 call ==(7144 call % i[7125] 2) 1))
          {
            (7151 call *= y[7131] z[7135])
          }
          (7162 call *= z[7135] z[7135])
          (7167 call /= i[7125] 2)
        }
        label _continueLabel[7173]
        (7184 'move' tmp[7170](7179 call _cond_test(7181 call != i[7125] 0)))
        tmp[7170]
      }
      label _breakLabel[7174]
    }
    (7198 return y[7131])
  }
  where {
    (7009 call ==(7006 'typeof' a[6998])(7008 'typeof' b[7003]))
  }
  function **[7213](arg a[7210] :
  (7209 call int(64)[13] unknown w[7206]), arg b[7219] :
  (7218 call int(64)[13] w[7206])) : _unknown[43] "inline"
  {
    (7227 return(7226 call _intExpHelp a[7210] b[7219]))
  }
  function **[7242](arg a[7239] :
  (7238 call uint(64)[107] unknown w[7235]), arg b[7248] :
  (7247 call uint(64)[107] w[7235])) : _unknown[43] "inline"
  {
    (7256 return(7255 call _intExpHelp a[7239] b[7248]))
  }
  function **[7271](arg a[7268] :
  (7267 call real(64)[16] unknown w[7264]), arg b[7277] :
  (7276 call real(64)[16] w[7264])) : _unknown[43] "inline"
  {
    (7300 return(7299 '**' a[7268] b[7277]))
  }
  function **[7315](arg a[7312] :
  (7311 call complex(128)[132] unknown w[7308]), arg b[7321] :
  (7320 call complex(128)[132] w[7308])) : _unknown[43] "inline"
  {
    if(7400 call _cond_test(7332 call ==(7325 'typeof' a[7312])(7331 call complex(128)[132] 128)))
    {
      function cpow[7343](arg x[7340] :
      (7339 call complex(128)[132] 128), arg y[7349] :
      (7348 call complex(128)[132] 128)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (7355 call complex(128)[132] 128)
      }
      (7365 return(7364 call cpow a[7312] b[7321]))
    }
    {
      function cpowf[7376](arg x[7373] :
      (7372 call complex(128)[132] 64), arg y[7382] :
      (7381 call complex(128)[132] 64)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (7388 call complex(128)[132] 64)
      }
      (7398 return(7397 call cpowf a[7312] b[7321]))
    }
  }
  function **[7417](param arg a[7414] :
  (7413 call int(64)[13] unknown w[7410]), param arg b[7423] :
  (7422 call int(64)[13] w[7410])) param : _unknown[43]
  {
    (7431 return(7430 '**' a[7414] b[7423]))
  }
  function **[7446](param arg a[7443] :
  (7442 call uint(64)[107] unknown w[7439]), param arg b[7452] :
  (7451 call uint(64)[107] w[7439])) param : _unknown[43]
  {
    (7460 return(7459 '**' a[7443] b[7452]))
  }
  function _expHelp[7469](arg a[7467]:_any[170](?), param arg b[7472] :
  integral[188](?)) : _unknown[43] "inline"
  {
    if(7685 call _cond_test(7477 call == b[7472] 0))
    {
      (7484 return(7482 call _cast(7481 'typeof' a[7467]) 1))
    }
    {
      if(7679 call _cond_test(7488 call == b[7472] 1))
      {
        (7491 return a[7467])
      }
      {
        if(7673 call _cond_test(7495 call == b[7472] 2))
        {
          (7501 return(7499 call * a[7467] a[7467]))
        }
        {
          if(7667 call _cond_test(7507 call == b[7472] 3))
          {
            (7516 return(7514 call *(7511 call * a[7467] a[7467]) a[7467]))
          }
          {
            if(7661 call _cond_test(7520 call == b[7472] 4))
            {
              function _let_fn3[7533]() : _unknown[43] "compiler nested function" "inline"
              {
                unknown t[7526](7524 call * a[7467] a[7467])
                (7535 return(7531 call * t[7526] t[7526]))
              }
              (7538 return(7537 call _let_fn3))
            }
            {
              if(7655 call _cond_test(7542 call == b[7472] 5))
              {
                function _let_fn4[7558]() : _unknown[43] "compiler nested function" "inline"
                {
                  unknown t[7548](7546 call * a[7467] a[7467])
                  (7560 return(7556 call *(7553 call * t[7548] t[7548]) a[7467]))
                }
                (7563 return(7562 call _let_fn4))
              }
              {
                if(7649 call _cond_test(7567 call == b[7472] 6))
                {
                  function _let_fn5[7583]() : _unknown[43] "compiler nested function" "inline"
                  {
                    unknown t[7573](7571 call * a[7467] a[7467])
                    (7585 return(7581 call *(7578 call * t[7573] t[7573]) t[7573]))
                  }
                  (7588 return(7587 call _let_fn5))
                }
                {
                  if(7643 call _cond_test(7594 call == b[7472] 8))
                  {
                    function _let_fn6[7614]() : _unknown[43] "compiler nested function" "inline"
                    {
                      unknown t[7600](7598 call * a[7467] a[7467])
                      unknown u[7607](7605 call * t[7600] t[7600])
                      (7616 return(7612 call * u[7607] u[7607]))
                    }
                    (7619 return(7618 call _let_fn6))
                  }
                  {
                    (7641 call compilerError "unexpected case in exponentiation optimization")
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _expBaseHelp[7700](param arg a[7697] :
  int(64)[13], arg b[7702]:_any[170](?)) : _unknown[43] "inline"
  {
    if(7719 call _cond_test(7710 call == b[7702] 0))
    {
      (7717 return(7715 call _cast(7714 'typeof' a[7697]) 1))
    }
    if(7745 call _cond_test(7727 call < b[7702] 0))
    {
      if(7739 call _cond_test(7731 call == a[7697] 1))
      {
        (7734 return 1)
      }
      {
        (7737 return 0)
      }
    }
    unknown c[7751] 0
    unknown x[7756] a[7697] int(64)[13]
    {
      unknown tmp[7777] "temp"
      (7801 'move' tmp[7777](7796 call _cond_test(7798 call > x[7756] 1)))
      WhileDo
      {
        {
          (7765 call += c[7751] 1)
          (7774 call = x[7756](7772 call >> x[7756] 1))
        }
        label _continueLabel[7780]
        (7791 'move' tmp[7777](7786 call _cond_test(7788 call > x[7756] 1)))
        tmp[7777]
      }
      label _breakLabel[7781]
    }
    unknown exp[7811](7809 call * c[7751](7807 call - b[7702] 1))
    (7818 return(7816 call << a[7697] exp[7811]))
  }
  where {
    (7707 call _basePowerTwo a[7697])
  }
  function _canOptimizeExp[7829](param arg b[7826] :
  integral[188](?)) param : _unknown[43]
  {
    (7847 return(7845 call &&(7839 call &&(7833 call >= b[7826] 0)(7837 call <= b[7826] 8))(7843 call != b[7826] 7)))
  }
  function _basePowerTwo[7858](param arg a[7855] :
  integral[188](?)) param : _unknown[43]
  {
    (7878 return(7876 call &&(7862 call > a[7855] 0)(7874 call ==(7871 call & a[7855](7869 call +(7866 call ~ a[7855]) 1)) a[7855])))
  }
  function **[7893](arg a[7890] :
  (7889 call int(64)[13] unknown w[7886]), param arg b[7896] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (7908 return(7907 call _expHelp a[7890] b[7896]))
  }
  where {
    (7902 call _canOptimizeExp b[7896])
  }
  function **[7924](arg a[7921] :
  (7920 call uint(64)[107] unknown w[7917]), param arg b[7927] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (7939 return(7938 call _expHelp a[7921] b[7927]))
  }
  where {
    (7933 call _canOptimizeExp b[7927])
  }
  function **[7955](arg a[7952] :
  (7951 call real(64)[16] unknown w[7948]), param arg b[7958] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (7970 return(7969 call _expHelp a[7952] b[7958]))
  }
  where {
    (7964 call _canOptimizeExp b[7958])
  }
  function **[7982](param arg a[7979] :
  integral[188](?), arg b[7985] :
  int(64)[13]) : _unknown[43] "inline"
  {
    (7997 return(7996 call _expBaseHelp a[7979] b[7985]))
  }
  where {
    (7991 call _basePowerTwo a[7979])
  }
  function ![8009](arg a[8006] :
  bool[10]) : _unknown[43] "inline"
  {
    (8030 return(8029 '!' a[8006]))
  }
  function ![8045](arg a[8042] :
  (8041 call int(64)[13] unknown w[8038])) : _unknown[43] "inline"
  {
    (8051 return(8049 call == a[8042] 0))
  }
  function ![8066](arg a[8063] :
  (8062 call uint(64)[107] unknown w[8059])) : _unknown[43] "inline"
  {
    (8072 return(8070 call == a[8063] 0))
  }
  function isTrue[8083](arg a[8080] :
  bool[10]) : _unknown[43] "inline"
  {
    (8086 return a[8080])
  }
  function isTrue[8097](param arg a[8094] :
  bool[10]) param : _unknown[43] "inline"
  {
    (8100 return a[8094])
  }
  function isTrue[8111](arg a[8108] :
  integral[188](?)) : _unknown[43] "no return value for void"
  {
    (8133 call compilerError "short-circuiting logical operators not supported on integers")
  }
  function ![8144](param arg a[8141] :
  bool[10]) param : _unknown[43] "inline"
  {
    (8150 return(8149 '!' a[8141]))
  }
  function ![8165](param arg a[8162] :
  (8161 call int(64)[13] unknown w[8158])) param : _unknown[43] "inline"
  {
    (8171 return(8169 call == a[8162] 0))
  }
  function ![8186](param arg a[8183] :
  (8182 call uint(64)[107] unknown w[8179])) param : _unknown[43] "inline"
  {
    (8192 return(8190 call == a[8183] 0))
  }
  function ~[8207](arg a[8204] :
  (8203 call int(64)[13] unknown w[8200])) : _unknown[43] "inline"
  {
    (8228 return(8227 'u~' a[8204]))
  }
  function ~[8243](arg a[8240] :
  (8239 call uint(64)[107] unknown w[8236])) : _unknown[43] "inline"
  {
    (8249 return(8248 'u~' a[8240]))
  }
  function ~[8260](arg a[8257] :
  bool[10]) : _unknown[43] "inline" "no return value for void"
  {
    (8280 call compilerError "~ is not supported on operands of boolean type")
  }
  function &[8291](arg a[8288] :
  bool[10], arg b[8294] :
  bool[10]) : _unknown[43] "inline"
  {
    (8317 return(8316 '&' a[8288] b[8294]))
  }
  function &[8332](arg a[8329] :
  (8328 call int(64)[13] unknown w[8325]), arg b[8338] :
  (8337 call int(64)[13] w[8325])) : _unknown[43] "inline"
  {
    (8346 return(8345 '&' a[8329] b[8338]))
  }
  function &[8361](arg a[8358] :
  (8357 call uint(64)[107] unknown w[8354]), arg b[8367] :
  (8366 call uint(64)[107] w[8354])) : _unknown[43] "inline"
  {
    (8375 return(8374 '&' a[8358] b[8367]))
  }
  function &[8390](arg a[8387] :
  (8386 call uint(64)[107] unknown w[8383]), arg b[8396] :
  (8395 call int(64)[13] w[8383])) : _unknown[43] "inline"
  {
    (8410 return(8409 '&' a[8387](8407 call _cast(8406 call uint(64)[107] w[8383]) b[8396])))
  }
  function &[8425](arg a[8422] :
  (8421 call int(64)[13] unknown w[8418]), arg b[8431] :
  (8430 call uint(64)[107] w[8418])) : _unknown[43] "inline"
  {
    (8445 return(8444 '&'(8441 call _cast(8440 call uint(64)[107] w[8418]) a[8422]) b[8431]))
  }
  function |[8456](arg a[8453] :
  bool[10], arg b[8459] :
  bool[10]) : _unknown[43] "inline"
  {
    (8482 return(8481 '|' a[8453] b[8459]))
  }
  function |[8497](arg a[8494] :
  (8493 call int(64)[13] unknown w[8490]), arg b[8503] :
  (8502 call int(64)[13] w[8490])) : _unknown[43] "inline"
  {
    (8511 return(8510 '|' a[8494] b[8503]))
  }
  function |[8526](arg a[8523] :
  (8522 call uint(64)[107] unknown w[8519]), arg b[8532] :
  (8531 call uint(64)[107] w[8519])) : _unknown[43] "inline"
  {
    (8540 return(8539 '|' a[8523] b[8532]))
  }
  function |[8555](arg a[8552] :
  (8551 call uint(64)[107] unknown w[8548]), arg b[8561] :
  (8560 call int(64)[13] w[8548])) : _unknown[43] "inline"
  {
    (8575 return(8574 '|' a[8552](8572 call _cast(8571 call uint(64)[107] w[8548]) b[8561])))
  }
  function |[8590](arg a[8587] :
  (8586 call int(64)[13] unknown w[8583]), arg b[8596] :
  (8595 call uint(64)[107] w[8583])) : _unknown[43] "inline"
  {
    (8610 return(8609 '|'(8606 call _cast(8605 call uint(64)[107] w[8583]) a[8587]) b[8596]))
  }
  function ^[8621](arg a[8618] :
  bool[10], arg b[8624] :
  bool[10]) : _unknown[43] "inline"
  {
    (8647 return(8646 '^' a[8618] b[8624]))
  }
  function ^[8662](arg a[8659] :
  (8658 call int(64)[13] unknown w[8655]), arg b[8668] :
  (8667 call int(64)[13] w[8655])) : _unknown[43] "inline"
  {
    (8676 return(8675 '^' a[8659] b[8668]))
  }
  function ^[8691](arg a[8688] :
  (8687 call uint(64)[107] unknown w[8684]), arg b[8697] :
  (8696 call uint(64)[107] w[8684])) : _unknown[43] "inline"
  {
    (8705 return(8704 '^' a[8688] b[8697]))
  }
  function ^[8720](arg a[8717] :
  (8716 call uint(64)[107] unknown w[8713]), arg b[8726] :
  (8725 call int(64)[13] w[8713])) : _unknown[43] "inline"
  {
    (8740 return(8739 '^' a[8717](8737 call _cast(8736 call uint(64)[107] w[8713]) b[8726])))
  }
  function ^[8755](arg a[8752] :
  (8751 call int(64)[13] unknown w[8748]), arg b[8761] :
  (8760 call uint(64)[107] w[8748])) : _unknown[43] "inline"
  {
    (8775 return(8774 '^'(8771 call _cast(8770 call uint(64)[107] w[8748]) a[8752]) b[8761]))
  }
  function ~[8786](param arg a[8783] :
  bool[10]) : _unknown[43] "inline" "no return value for void"
  {
    (8791 call compilerError "~ is not supported on operands of boolean type")
  }
  function ~[8806](param arg a[8803] :
  (8802 call int(64)[13] unknown w[8799])) param : _unknown[43] "inline"
  {
    (8812 return(8811 'u~' a[8803]))
  }
  function ~[8827](param arg a[8824] :
  (8823 call uint(64)[107] unknown w[8820])) param : _unknown[43] "inline"
  {
    (8833 return(8832 'u~' a[8824]))
  }
  function &[8844](param arg a[8841] :
  bool[10], param arg b[8847] :
  bool[10]) param : _unknown[43] "inline"
  {
    (8855 return(8854 '&' a[8841] b[8847]))
  }
  function &[8870](param arg a[8867] :
  (8866 call int(64)[13] unknown w[8863]), param arg b[8876] :
  (8875 call int(64)[13] w[8863])) param : _unknown[43] "inline"
  {
    (8884 return(8883 '&' a[8867] b[8876]))
  }
  function &[8899](param arg a[8896] :
  (8895 call uint(64)[107] unknown w[8892]), param arg b[8905] :
  (8904 call uint(64)[107] w[8892])) param : _unknown[43] "inline"
  {
    (8913 return(8912 '&' a[8896] b[8905]))
  }
  function &[8928](param arg a[8925] :
  (8924 call uint(64)[107] unknown w[8921]), param arg b[8934] :
  (8933 call int(64)[13] w[8921])) param : _unknown[43] "inline"
  {
    (8948 return(8947 '&' a[8925](8945 call _cast(8944 call uint(64)[107] w[8921]) b[8934])))
  }
  function &[8963](param arg a[8960] :
  (8959 call int(64)[13] unknown w[8956]), param arg b[8969] :
  (8968 call uint(64)[107] w[8956])) param : _unknown[43] "inline"
  {
    (8983 return(8982 '&'(8979 call _cast(8978 call uint(64)[107] w[8956]) a[8960]) b[8969]))
  }
  function |[8994](param arg a[8991] :
  bool[10], param arg b[8997] :
  bool[10]) param : _unknown[43] "inline"
  {
    (9005 return(9004 '|' a[8991] b[8997]))
  }
  function |[9020](param arg a[9017] :
  (9016 call int(64)[13] unknown w[9013]), param arg b[9026] :
  (9025 call int(64)[13] w[9013])) param : _unknown[43] "inline"
  {
    (9034 return(9033 '|' a[9017] b[9026]))
  }
  function |[9049](param arg a[9046] :
  (9045 call uint(64)[107] unknown w[9042]), param arg b[9055] :
  (9054 call uint(64)[107] w[9042])) param : _unknown[43] "inline"
  {
    (9063 return(9062 '|' a[9046] b[9055]))
  }
  function |[9078](param arg a[9075] :
  (9074 call uint(64)[107] unknown w[9071]), param arg b[9084] :
  (9083 call int(64)[13] w[9071])) param : _unknown[43] "inline"
  {
    (9098 return(9097 '|' a[9075](9095 call _cast(9094 call uint(64)[107] w[9071]) b[9084])))
  }
  function |[9113](param arg a[9110] :
  (9109 call int(64)[13] unknown w[9106]), param arg b[9119] :
  (9118 call uint(64)[107] w[9106])) param : _unknown[43] "inline"
  {
    (9133 return(9132 '|'(9129 call _cast(9128 call uint(64)[107] w[9106]) a[9110]) b[9119]))
  }
  function ^[9144](param arg a[9141] :
  bool[10], param arg b[9147] :
  bool[10]) param : _unknown[43] "inline"
  {
    (9155 return(9154 '^' a[9141] b[9147]))
  }
  function ^[9170](param arg a[9167] :
  (9166 call int(64)[13] unknown w[9163]), param arg b[9176] :
  (9175 call int(64)[13] w[9163])) param : _unknown[43] "inline"
  {
    (9184 return(9183 '^' a[9167] b[9176]))
  }
  function ^[9199](param arg a[9196] :
  (9195 call uint(64)[107] unknown w[9192]), param arg b[9205] :
  (9204 call uint(64)[107] w[9192])) param : _unknown[43] "inline"
  {
    (9213 return(9212 '^' a[9196] b[9205]))
  }
  function ^[9228](param arg a[9225] :
  (9224 call uint(64)[107] unknown w[9221]), param arg b[9234] :
  (9233 call int(64)[13] w[9221])) param : _unknown[43] "inline"
  {
    (9248 return(9247 '^' a[9225](9245 call _cast(9244 call uint(64)[107] w[9221]) b[9234])))
  }
  function ^[9263](param arg a[9260] :
  (9259 call int(64)[13] unknown w[9256]), param arg b[9269] :
  (9268 call uint(64)[107] w[9256])) param : _unknown[43] "inline"
  {
    (9283 return(9282 '^'(9279 call _cast(9278 call uint(64)[107] w[9256]) a[9260]) b[9269]))
  }
  function <<[9298](arg a[9295] :
  (9294 call int(64)[13] unknown w[9291]), arg b[9301] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (9324 return(9323 '<<' a[9295] b[9301]))
  }
  function <<[9339](arg a[9336] :
  (9335 call uint(64)[107] unknown w[9332]), arg b[9342] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (9350 return(9349 '<<' a[9336] b[9342]))
  }
  function >>[9365](arg a[9362] :
  (9361 call int(64)[13] unknown w[9358]), arg b[9368] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (9391 return(9390 '>>' a[9362] b[9368]))
  }
  function >>[9406](arg a[9403] :
  (9402 call uint(64)[107] unknown w[9399]), arg b[9409] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (9417 return(9416 '>>' a[9403] b[9409]))
  }
  function <<[9432](param arg a[9429] :
  (9428 call int(64)[13] unknown w[9425]), param arg b[9435] :
  integral[188](?)) param : _unknown[43] "inline"
  {
    (9443 return(9442 '<<' a[9429] b[9435]))
  }
  function <<[9458](param arg a[9455] :
  (9454 call uint(64)[107] unknown w[9451]), param arg b[9461] :
  integral[188](?)) param : _unknown[43] "inline"
  {
    (9469 return(9468 '<<' a[9455] b[9461]))
  }
  function >>[9484](param arg a[9481] :
  (9480 call int(64)[13] unknown w[9477]), param arg b[9487] :
  integral[188](?)) param : _unknown[43] "inline"
  {
    (9495 return(9494 '>>' a[9481] b[9487]))
  }
  function >>[9510](param arg a[9507] :
  (9506 call uint(64)[107] unknown w[9503]), param arg b[9513] :
  integral[188](?)) param : _unknown[43] "inline"
  {
    (9521 return(9520 '>>' a[9507] b[9513]))
  }
  function checkNotNil[9534](arg x[9531] :
  _borrowedNilable[206](?)) : _unknown[43] "always propagate line file info" "inline" "private" "no return value for void"
  {
    if(9579 call _cond_test 1)
    {
      if(9574 call _cond_test(9544 call == x[9531] nil[38]))
      {
        (9571 call nilCheckHalt module=[244] HaltWrappers[197622] "argument to ! is nil")
      }
    }
    (329249 'used modules list'(9538 'use' HaltWrappers[197622] 'only' ))
  }
  function postfix![9591](arg t[9588] :
  class[221](?)) type : _unknown[43] "inline"
  {
    (9600 return(9599 call _to_borrowed(9597 call _to_nonnil t[9588])))
  }
  function postfix![9612](arg t[9609] :
  _anyManagementNilable[224](?)) type : _unknown[43] "inline"
  {
    (9621 return(9620 call _to_borrowed(9618 call _to_nonnil t[9609])))
  }
  function postfix![9633](arg x[9630] :
  _unmanagedNonNilable[212](?)) : _unknown[43] "inline"
  {
    (9639 return(9638 call _to_nonnil x[9630]))
  }
  function postfix![9651](arg x[9648] :
  _borrowedNonNilable[203](?)) : _unknown[43] "inline"
  {
    (9657 return(9656 call _to_nonnil x[9648]))
  }
  function postfix![9670](arg x[9667] :
  _unmanagedNilable[215](?)) : _unknown[43] "always propagate line file info" "inline"
  {
    (9678 call checkNotNil(9676 call _to_borrowed x[9667]))
    (9685 return(9684 call _to_nonnil x[9667]))
  }
  function postfix![9697](arg x[9694] :
  _borrowedNilable[206](?)) : _unknown[43] "always propagate line file info" "inline"
  {
    (9702 call checkNotNil x[9694])
    (9709 return(9708 call _to_nonnil x[9694]))
  }
  function postfix![9717](arg x[9715]:_any[170](?)) : _unknown[43] "last resort" "no return value for void"
  {
    (9739 call compilerError "postfix ! can only apply to classes")
  }
  function _statementLevelSymbol[9748](arg a[9746]:_any[170](?)) : _unknown[43] "inline" "no return value for void"
  {
  }
  function _statementLevelSymbol[9759](arg a[9756] :
  _syncvar[85613](?)) : _unknown[43] "inline" "no return value for void"
  {
    (9768 call(9764 call . a[9756] c"readFE"))
  }
  function _statementLevelSymbol[9779](arg a[9776] :
  _singlevar[87725](?)) : _unknown[43] "inline" "no return value for void"
  {
    (9788 call(9784 call . a[9776] c"readFF"))
  }
  function _statementLevelSymbol[9797](param arg a[9795]:_any[170](?)) param : _unknown[43] "inline"
  {
    (9800 return a[9795])
  }
  function _statementLevelSymbol[9809](arg a[9807]:_any[170](?)) type : _unknown[43] "inline"
  {
    (9812 return a[9807])
  }
  function _statementLevelSymbol[9823](arg ir[9820] :
  _iteratorRecord[194](?)) : _unknown[43] "inline" "no return value for void"
  {
    function _ir_copy_recursive[9829](arg ir[9827]:_any[170](?)) : _unknown[43] "iterator fn" "no return value for void"
    {
      {
        unknown _indexOfInterest[9839] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[9840] "expr temp" "temp"
        (9849 'move' _iterator[9840](9847 call _getIterator ir[9827]))
        Defer
        {
          {
            (9865 call _freeIterator _iterator[9840])
          }
        }
        { scopeless type
          (9854 'move' _indexOfInterest[9839](9851 call iteratorIndex _iterator[9840]))
        }
        ForLoop
        {
          unknown e[9858] "index var" "insert auto destroy"
          (9860 'move' e[9858] _indexOfInterest[9839])
          (9837 yield(9836 call chpl__initCopy e[9858]))
          label _continueLabel[9844]
          _indexOfInterest[9839]
          _iterator[9840]
        }
        label _breakLabel[9845]
      }
    }
    unknown irc[9880] "no copy"(9879 call _ir_copy_recursive ir[9820])
    {
      unknown _indexOfInterest[9886] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[9887] "expr temp" "temp"
      (9896 'move' _iterator[9887](9894 call _getIterator irc[9880]))
      Defer
      {
        {
          (9912 call _freeIterator _iterator[9887])
        }
      }
      { scopeless type
        (9901 'move' _indexOfInterest[9886](9898 call iteratorIndex _iterator[9887]))
      }
      ForLoop
      {
        unknown e[9905] "index var" "insert auto destroy"
        (9907 'move' e[9905] _indexOfInterest[9886])
        {
        }
        label _continueLabel[9891]
        _indexOfInterest[9886]
        _iterator[9887]
      }
      label _breakLabel[9892]
    }
  }
  function _cond_test[9929](arg x[9926] :
  borrowed object?[389644]) : _unknown[43] "inline"
  {
    (9935 return(9933 call != x[9926] nil[38]))
  }
  function _cond_test[9946](arg x[9943] :
  bool[10]) : _unknown[43] "inline"
  {
    (9949 return x[9943])
  }
  function _cond_test[9960](arg x[9957] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (9970 return(9968 call != x[9957](9966 call _cast(9965 'typeof' x[9957]) 0)))
  }
  function _cond_test[9981](param arg x[9978] :
  bool[10]) param : _unknown[43] "inline"
  {
    (9984 return x[9978])
  }
  function _cond_test[9995](param arg x[9992] :
  integral[188](?)) param : _unknown[43] "inline"
  {
    (10005 return(10003 call != x[9992](10001 call _cast(10000 'typeof' x[9992]) 0)))
  }
  function _cond_test[10014](arg x[10012]:_any[170](?)) : _unknown[43] "inline" "no return value for void"
  {
    (10057 call compilerError "type '"(10037 call _cast string[24](10035 'typeof' x[10012])) "' used in if or while condition")
  }
  function _cond_test[10068](arg x[10065] :
  _iteratorRecord[194](?)) : _unknown[43] "inline" "no return value for void"
  {
    (10113 call compilerError "iterator or promoted expression "(10093 call _cast string[24](10091 'typeof' x[10065])) " used in if or while condition")
  }
  function _cond_invalid[10125](arg x[10122] :
  object[253]) param : _unknown[43]
  {
    (10128 return 0)
  }
  function _cond_invalid[10139](arg x[10136] :
  bool[10]) param : _unknown[43]
  {
    (10142 return 0)
  }
  function _cond_invalid[10153](arg x[10150] :
  integral[188](?)) param : _unknown[43]
  {
    (10156 return 0)
  }
  function _cond_invalid[10165](arg x[10163]:_any[170](?)) param : _unknown[43]
  {
    (10168 return 1)
  }
  function isNonnegative[10182](arg i[10179] :
  (10178 call int(64)[13] ?[249])) : _unknown[43] "inline"
  {
    (10188 return(10186 call >= i[10179] 0))
  }
  function isNonnegative[10202](arg i[10199] :
  (10198 call uint(64)[107] ?[249])) param : _unknown[43] "inline"
  {
    (10205 return 1)
  }
  function isNonnegative[10214](param arg i[10212]:_any[170](?)) param : _unknown[43] "inline"
  {
    (10220 return(10218 call >= i[10212] 0))
  }
  function chpl_anycomplex[176](?).re[10228](arg _mt[10233]:_MT[227], ref arg this[10230]:chpl_anycomplex[176](?) :
  chpl_anycomplex[176](?)) ref : _unknown[43] "inline" "method" "no parens"
  {
    (10254 return(10253 'complex_get_real' this[10230]))
  }
  function chpl_anycomplex[176](?).re[10262](arg _mt[10267]:_MT[227], arg this[10264]:chpl_anycomplex[176](?) :
  chpl_anycomplex[176](?)) : _unknown[43] "inline" "method" "no parens"
  {
    if(10327 call _cond_test(10275 call ==(10270 'typeof' this[10264])(10274 call complex(128)[132] 128)))
    {
      function creal[10286](arg x[10283] :
      (10282 call complex(128)[132] 128)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10291 call real(64)[16] 64)
      }
      (10300 return(10299 call creal this[10264]))
    }
    {
      function crealf[10311](arg x[10308] :
      (10307 call complex(128)[132] 64)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10316 call real(64)[16] 32)
      }
      (10325 return(10324 call crealf this[10264]))
    }
  }
  function chpl_anycomplex[176](?).im[10337](arg _mt[10342]:_MT[227], ref arg this[10339]:chpl_anycomplex[176](?) :
  chpl_anycomplex[176](?)) ref : _unknown[43] "inline" "method" "no parens"
  {
    (10363 return(10362 'complex_get_imag' this[10339]))
  }
  function chpl_anycomplex[176](?).im[10371](arg _mt[10376]:_MT[227], arg this[10373]:chpl_anycomplex[176](?) :
  chpl_anycomplex[176](?)) : _unknown[43] "inline" "method" "no parens"
  {
    if(10436 call _cond_test(10384 call ==(10379 'typeof' this[10373])(10383 call complex(128)[132] 128)))
    {
      function cimag[10395](arg x[10392] :
      (10391 call complex(128)[132] 128)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10400 call real(64)[16] 64)
      }
      (10409 return(10408 call cimag this[10373]))
    }
    {
      function cimagf[10420](arg x[10417] :
      (10416 call complex(128)[132] 64)) : _unknown[43] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10425 call real(64)[16] 32)
      }
      (10434 return(10433 call cimagf this[10373]))
    }
  }
  function _i2r[10453](arg a[10450] :
  (10449 call imag(64)[122] unknown w[10446])) : _unknown[43] "inline"
  {
    (10478 return(10477 'cast'(10475 call real(64)[16] w[10446]) a[10450]))
  }
  function _r2i[10493](arg a[10490] :
  (10489 call real(64)[16] unknown w[10486])) : _unknown[43] "inline"
  {
    (10503 return(10502 'cast'(10500 call imag(64)[122] w[10486]) a[10490]))
  }
  function min[10518](arg x[10515] :
  (10514 call int(64)[13] unknown w[10511]), arg y[10524] :
  (10523 call int(64)[13] w[10511])) : _unknown[43] "inline"
  {
    (10536 return(10533 IfExpr (10529 call < x[10515] y[10524]) then
    { scopeless
      x[10515]
    } else
    { scopeless
      y[10524]
    } ))
  }
  function max[10551](arg x[10548] :
  (10547 call int(64)[13] unknown w[10544]), arg y[10557] :
  (10556 call int(64)[13] w[10544])) : _unknown[43] "inline"
  {
    (10569 return(10566 IfExpr (10562 call > x[10548] y[10557]) then
    { scopeless
      x[10548]
    } else
    { scopeless
      y[10557]
    } ))
  }
  function min[10584](arg x[10581] :
  (10580 call uint(64)[107] unknown w[10577]), arg y[10590] :
  (10589 call uint(64)[107] w[10577])) : _unknown[43] "inline"
  {
    (10602 return(10599 IfExpr (10595 call < x[10581] y[10590]) then
    { scopeless
      x[10581]
    } else
    { scopeless
      y[10590]
    } ))
  }
  function max[10617](arg x[10614] :
  (10613 call uint(64)[107] unknown w[10610]), arg y[10623] :
  (10622 call uint(64)[107] w[10610])) : _unknown[43] "inline"
  {
    (10635 return(10632 IfExpr (10628 call > x[10614] y[10623]) then
    { scopeless
      x[10614]
    } else
    { scopeless
      y[10623]
    } ))
  }
  function min[10650](arg x[10647] :
  (10646 call real(64)[16] unknown w[10643]), arg y[10656] :
  (10655 call real(64)[16] w[10643])) : _unknown[43] "inline"
  {
    (10674 return(10671 IfExpr (10667 call |(10661 call < x[10647] y[10656])(10666 call isnan x[10647])) then
    { scopeless
      x[10647]
    } else
    { scopeless
      y[10656]
    } ))
  }
  function max[10689](arg x[10686] :
  (10685 call real(64)[16] unknown w[10682]), arg y[10695] :
  (10694 call real(64)[16] w[10682])) : _unknown[43] "inline"
  {
    (10713 return(10710 IfExpr (10706 call |(10700 call > x[10686] y[10695])(10705 call isnan x[10686])) then
    { scopeless
      x[10686]
    } else
    { scopeless
      y[10695]
    } ))
  }
  function min[10728](arg x[10725] :
  (10724 call imag(64)[122] unknown w[10721]), arg y[10734] :
  (10733 call imag(64)[122] w[10721])) : _unknown[43] "inline"
  {
    (10746 return(10743 IfExpr (10739 call < x[10725] y[10734]) then
    { scopeless
      x[10725]
    } else
    { scopeless
      y[10734]
    } ))
  }
  function max[10761](arg x[10758] :
  (10757 call imag(64)[122] unknown w[10754]), arg y[10767] :
  (10766 call imag(64)[122] w[10754])) : _unknown[43] "inline"
  {
    (10779 return(10776 IfExpr (10772 call > x[10758] y[10767]) then
    { scopeless
      x[10758]
    } else
    { scopeless
      y[10767]
    } ))
  }
  function min[10788](arg x[10786]:_any[170](?), arg y[10790]:_any[170](?)) : _unknown[43] "inline"
  {
    (10801 return(10798 IfExpr (10794 call < x[10786] y[10790]) then
    { scopeless
      x[10786]
    } else
    { scopeless
      y[10790]
    } ))
  }
  function max[10810](arg x[10808]:_any[170](?), arg y[10812]:_any[170](?)) : _unknown[43] "inline"
  {
    (10823 return(10820 IfExpr (10816 call > x[10808] y[10812]) then
    { scopeless
      x[10808]
    } else
    { scopeless
      y[10812]
    } ))
  }
  function min[10832](arg x[10830]:_any[170](?), arg y[10834]:_any[170](?), arg z[10838]:_any[170](?) ...) : _unknown[43] "inline"
  {
    (10851 return(10850 call min(10846 call min x[10830] y[10834])(10849 'expand_tuple' z[10838])))
  }
  function max[10860](arg x[10858]:_any[170](?), arg y[10862]:_any[170](?), arg z[10866]:_any[170](?) ...) : _unknown[43] "inline"
  {
    (10879 return(10878 call max(10874 call max x[10858] y[10862])(10877 'expand_tuple' z[10866])))
  }
  function min[10894](param arg x[10891] :
  (10890 call int(64)[13] unknown w[10887]), param arg y[10900] :
  (10899 call int(64)[13] w[10887])) param : _unknown[43] "inline"
  {
    (10912 return(10909 IfExpr (10905 call < x[10891] y[10900]) then
    { scopeless
      x[10891]
    } else
    { scopeless
      y[10900]
    } ))
  }
  function max[10927](param arg x[10924] :
  (10923 call int(64)[13] unknown w[10920]), param arg y[10933] :
  (10932 call int(64)[13] w[10920])) param : _unknown[43] "inline"
  {
    (10945 return(10942 IfExpr (10938 call > x[10924] y[10933]) then
    { scopeless
      x[10924]
    } else
    { scopeless
      y[10933]
    } ))
  }
  function min[10960](param arg x[10957] :
  (10956 call uint(64)[107] unknown w[10953]), param arg y[10966] :
  (10965 call uint(64)[107] w[10953])) param : _unknown[43] "inline"
  {
    (10978 return(10975 IfExpr (10971 call < x[10957] y[10966]) then
    { scopeless
      x[10957]
    } else
    { scopeless
      y[10966]
    } ))
  }
  function max[10993](param arg x[10990] :
  (10989 call uint(64)[107] unknown w[10986]), param arg y[10999] :
  (10998 call uint(64)[107] w[10986])) param : _unknown[43] "inline"
  {
    (11011 return(11008 IfExpr (11004 call > x[10990] y[10999]) then
    { scopeless
      x[10990]
    } else
    { scopeless
      y[10999]
    } ))
  }
  function min[11026](param arg x[11023] :
  (11022 call real(64)[16] unknown w[11019]), param arg y[11032] :
  (11031 call real(64)[16] w[11019])) param : _unknown[43] "inline"
  {
    (11044 return(11041 IfExpr (11037 call < x[11023] y[11032]) then
    { scopeless
      x[11023]
    } else
    { scopeless
      y[11032]
    } ))
  }
  function max[11059](param arg x[11056] :
  (11055 call real(64)[16] unknown w[11052]), param arg y[11065] :
  (11064 call real(64)[16] w[11052])) param : _unknown[43] "inline"
  {
    (11077 return(11074 IfExpr (11070 call > x[11056] y[11065]) then
    { scopeless
      x[11056]
    } else
    { scopeless
      y[11065]
    } ))
  }
  function min[11092](param arg x[11089] :
  (11088 call imag(64)[122] unknown w[11085]), param arg y[11098] :
  (11097 call imag(64)[122] w[11085])) param : _unknown[43] "inline"
  {
    (11110 return(11107 IfExpr (11103 call < x[11089] y[11098]) then
    { scopeless
      x[11089]
    } else
    { scopeless
      y[11098]
    } ))
  }
  function max[11125](param arg x[11122] :
  (11121 call imag(64)[122] unknown w[11118]), param arg y[11131] :
  (11130 call imag(64)[122] w[11118])) param : _unknown[43] "inline"
  {
    (11143 return(11140 IfExpr (11136 call > x[11122] y[11131]) then
    { scopeless
      x[11122]
    } else
    { scopeless
      y[11131]
    } ))
  }
  function min[11152](arg x[11150]:_any[170](?), arg y[11154]:_any[170](?)) : _unknown[43] "inline" "no return value for void"
  {
    (11186 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11164 call ||(11159 call isAtomic x[11150])(11163 call isAtomic y[11154]))
  }
  function max[11196](arg x[11194]:_any[170](?), arg y[11198]:_any[170](?)) : _unknown[43] "inline" "no return value for void"
  {
    (11213 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11208 call ||(11203 call isAtomic x[11194])(11207 call isAtomic y[11198]))
  }
  function exit[11227](arg status[11223] :
  int(64)[13] =
  0) : _unknown[43] "function terminates program" "inline" "no return value for void"
  {
    (11247 'chpl_exit_any' status[11223])
  }
  type ArrayInit[11261] def heuristicInit[11253]:ArrayInit[11261] def noInit[11255]:ArrayInit[11261] def serialInit[11257]:ArrayInit[11261] def parallelInit[11259]:ArrayInit[11261]
  {
  }
  unknown chpl_defaultArrayInitMethod[11272] "config" "param" heuristicInit[11253]
  unknown chpl_arrayInitMethodRuntimeSelectable[11276] "config" "param" 0
  unknown chpl_arrayInitMethod[11280] "private" chpl_defaultArrayInitMethod[11272]
  function chpl_setArrayInitMethod[11289](arg initMethod[11286] :
  ArrayInit[11261]) : _unknown[43] "inline"
  {
    if(11336 call _cond_test(11293 call == chpl_arrayInitMethodRuntimeSelectable[11276] 0))
    {
      (11333 call compilerWarning "must set 'chpl_arrayInitMethodRuntimeSelectable' for " "'chpl_setArrayInitMethod' to have any effect")
    }
    const oldInit[11342] "const" chpl_arrayInitMethod[11280]
    (11347 call = chpl_arrayInitMethod[11280] initMethod[11286])
    (11351 return oldInit[11342])
  }
  function chpl_getArrayInitMethod[11357]() : _unknown[43] "inline"
  {
    if(11371 call _cond_test(11361 call == chpl_arrayInitMethodRuntimeSelectable[11276] 0))
    {
      (11364 return chpl_defaultArrayInitMethod[11272])
    }
    {
      (11368 return chpl_arrayInitMethod[11280])
    }
  }
  function init_elts[11382](arg x[11380]:_any[170](?), arg s[11384]:_any[170](?), arg t[11386]:_any[170](?)) : _unknown[43] "unsafe" "no return value for void"
  {
    unknown initMethod[11392](11391 call chpl_getArrayInitMethod)
    if(11534 call _cond_test(11404 call &&(11399 call isUint s[11384])(11402 call == s[11384] 0)))
    {
      (11413 call = initMethod[11392] noInit[11255])
    }
    {
      if(11530 call _cond_test(11422 call == initMethod[11392] heuristicInit[11253]))
      {
        if(11525 call _cond_test(11428 call !(11427 call isPODType t[11386])))
        {
          (11437 call = initMethod[11392] serialInit[11257])
        }
        {
          const elemsizeInBytes[11464] "const"(11461 IfExpr (11444 call isNumericType t[11386]) then
          { scopeless
            (11448 call numBytes t[11386])
          } else
          { scopeless
            (11460 call(11455 call .(11452 call c_sizeof t[11386]) c"safeCast") int(64)[13])
          } )
          const arrsizeInBytes[11478] "const"(11476 call *(11474 call(11469 call . s[11384] c"safeCast") int(64)[13]) elemsizeInBytes[11464])
          unknown heuristicThresh[11490] "param"(11488 call *(11485 call * 2 1024) 1024)
          const heuristicWantsPar[11497] "const"(11495 call > arrsizeInBytes[11478] heuristicThresh[11490])
          if(11521 call _cond_test heuristicWantsPar[11497])
          {
            (11508 call = initMethod[11392] parallelInit[11259])
          }
          {
            (11517 call = initMethod[11392] serialInit[11257])
          }
        }
      }
    }
    if(11560 call _cond_test(11549 call &&(11544 call == initMethod[11392] parallelInit[11259])(11547 call ! rootLocaleInitialized[91056])))
    {
      (11556 call = initMethod[11392] serialInit[11257])
    }
    {
      unknown tmp[11718] "expr temp" "maybe param" "maybe type" "temp"
      (11720 'move' tmp[11718] initMethod[11392])
      if(11725 call _cond_test(11722 call == tmp[11718] noInit[11255]))
      {
        (11571 return _void[47])
      }
      {
        if(11731 call _cond_test(11728 call == tmp[11718] serialInit[11257]))
        {
          {
            unknown _indexOfInterest[11616] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[11617] "expr temp" "temp"
            (11626 'move' _iterator[11617](11624 call _getIterator(11634 call chpl_direct_range_iter 0(11631 call - s[11384] 1) 1)))
            Defer
            {
              {
                (11650 call _freeIterator _iterator[11617])
              }
            }
            { scopeless type
              (11639 'move' _indexOfInterest[11616](11636 call iteratorIndex _iterator[11617]))
            }
            ForLoop
            {
              unknown i[11643] "index var" "insert auto destroy"
              (11645 'move' i[11643] _indexOfInterest[11616])
              {
                unknown y[11590] "no auto destroy" t[11386]
                (11614 'array_set_first' x[11380] i[11643] y[11590])
              }
              label _continueLabel[11621]
              _indexOfInterest[11616]
              _iterator[11617]
            }
            label _breakLabel[11622]
          }
        }
        {
          if(11738 call _cond_test(11735 call == tmp[11718] parallelInit[11259]))
          {
            Forall {
              induction variables:
                
                unknown i[11686] "index var" "insert auto destroy"
              iterated expressions:
                (11671 call chpl_build_bounded_range 0(11669 call - s[11384] 1))
              shadow variables:
              forall body
              {
                unknown y[11674] "no auto destroy" t[11386]
                (11683 'array_set_first' x[11380] i[11686] y[11674])
              }
            }
          }
          {
            (11712 call halt "ArrayInit.heuristicInit should have been made concrete")
          }
        }
      }
    }
  }
  { scopeless type
    void[4]
  }
  unknown chpl_mem_descInt_t[11750] "extern" "no doc" "type variable"(11749 call int(64)[13] 16)
  function _ddata[11791](?).this[11763](arg _mt[11795]:_MT[227], arg this[11793]:_ddata[11791](?), arg i[11760] :
  integral[188](?)) ref : _unknown[43] "inline" "method" "primary method"
  {
    (11785 return(11784 'array_get' this[11793] i[11760]))
  }
  type _ddata[11791](?) unknown eltType[11754] "type variable"
  function chpl_isDdata[11804](arg t[11801] :
  _ddata[11791](?)) param : _unknown[43]
  {
    (11807 return 1)
  }
  function chpl_isDdata[11816](arg t[11814]:_any[170](?)) param : _unknown[43]
  {
    (11819 return 0)
  }
  function =[11834](ref arg a[11831] :
  (11830 call _ddata[11791](?) unknown t[11827]), arg b[11840] :
  (11839 call _ddata[11791](?) t[11827])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (11847 '=' a[11831] b[11840])
  }
  function _ddata_shift[11856](arg eltType[11854]:_any[170](?), arg data[11862] :
  (11861 call _ddata[11791](?) eltType[11854]), arg shift[11866] :
  integral[188](?)) : _unknown[43] "inline"
  {
    unknown ret[11873](11872 call _ddata[11791](?) eltType[11854])
    (11899 'shift_base_pointer' ret[11873] data[11862] shift[11866])
    (11902 return ret[11873])
  }
  function _ddata_sizeof_element[11912](arg t[11909] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (11937 return(11935 call _cast size_t[209674](11933 'sizeof_ddata_element' t[11909])))
  }
  { scopeless type
    size_t[209674]
  }
  function _ddata_sizeof_element[11949](arg x[11946] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (11957 return(11956 call _ddata_sizeof_element(11954 'typeof' x[11946])))
  }
  { scopeless type
    size_t[209674]
  }
  function _ddata_allocate[11967](arg eltType[11965]:_any[170](?), arg size[11970] :
  integral[188](?), arg subloc[11974] =
  c_sublocid_none[90216], arg initElts[11979] :
  bool[10] =
  1) : _unknown[43] "inline"
  {
    function chpl_mem_array_alloc[11989](arg nmemb[11986] :
    size_t[209674], arg eltSize[11992] :
    size_t[209674], arg subloc[11996] :
    chpl_sublocID_t[90212], ref arg callPostAlloc[12000] :
    bool[10]) : _unknown[43] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      c_void_ptr[141]
    }
    unknown ret[12012](12011 call _ddata[11791](?) eltType[11965])
    unknown callPostAlloc[12016] bool[10]
    (12037 call = ret[12012](12035 call _cast(12034 'typeof' ret[12012])(12032 call chpl_mem_array_alloc(12023 call _cast size_t[209674] size[11970])(12029 call _ddata_sizeof_element ret[12012]) subloc[11974] callPostAlloc[12016])))
    if(12048 call _cond_test initElts[11979])
    {
      (12046 call init_elts ret[12012] size[11970] eltType[11965])
    }
    if(12089 call _cond_test callPostAlloc[12016])
    {
      function chpl_mem_array_postAlloc[12060](arg data[12057] :
      c_void_ptr[141], arg nmemb[12063] :
      size_t[209674], arg eltSize[12067] :
      size_t[209674]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      (12087 call chpl_mem_array_postAlloc(12076 call _cast c_void_ptr[141] ret[12012])(12081 call _cast size_t[209674] size[11970])(12086 call _ddata_sizeof_element ret[12012]))
    }
    (12094 return ret[12012])
  }
  function _ddata_free[12104](arg data[12101] :
  _ddata[11791](?), arg size[12107] :
  integral[188](?)) : _unknown[43] "inline" "no return value for void"
  {
    function chpl_mem_array_free[12116](arg data[12113] :
    c_void_ptr[141], arg nmemb[12119] :
    size_t[209674], arg eltSize[12123] :
    size_t[209674]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (12143 call chpl_mem_array_free(12132 call _cast c_void_ptr[141] data[12101])(12137 call _cast size_t[209674] size[12107])(12142 call _ddata_sizeof_element data[12101]))
  }
  function ==[12153](arg a[12150] :
  _ddata[11791](?), arg b[12156] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (12176 return(12175 'ptr_eq' a[12150] b[12156]))
  }
  where {
    (12169 call ==(12162 call . a[12150] c"eltType")(12166 call . b[12156] c"eltType"))
  }
  function ==[12188](arg a[12185] :
  _ddata[11791](?), arg b[12191] :
  _nilType[36]) : _unknown[43] "inline"
  {
    (12199 return(12198 'ptr_eq' a[12185] nil[38]))
  }
  function ==[12210](arg a[12207] :
  _nilType[36], arg b[12213] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (12221 return(12220 'ptr_eq' nil[38] b[12213]))
  }
  function !=[12232](arg a[12229] :
  _ddata[11791](?), arg b[12235] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (12253 return(12252 'ptr_neq' a[12229] b[12235]))
  }
  where {
    (12246 call ==(12239 call . a[12229] c"eltType")(12243 call . b[12235] c"eltType"))
  }
  function !=[12265](arg a[12262] :
  _ddata[11791](?), arg b[12268] :
  _nilType[36]) : _unknown[43] "inline"
  {
    (12276 return(12275 'ptr_neq' a[12262] nil[38]))
  }
  function !=[12287](arg a[12284] :
  _nilType[36], arg b[12290] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (12298 return(12297 'ptr_neq' nil[38] b[12290]))
  }
  function _cond_test[12309](arg x[12306] :
  _ddata[11791](?)) : _unknown[43] "inline"
  {
    (12315 return(12313 call != x[12306] nil[38]))
  }
  type _ref[12325](?) unknown _val[12321]
  function chpl_rt_reset_task_spawn[12330]() : _unknown[43] "inline" "no return value for void"
  {
    function chpl_task_reset_spawn_order[12334]() : void[4] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (12341 call chpl_task_reset_spawn_order)
  }
  function chpl_resetTaskSpawn[12349](arg numTasks[12347]:_any[170](?)) : _unknown[43] "no return value for void"
  {
    const dptpl[12365] "const"(12362 IfExpr (12353 call == dataParTasksPerLocale[92471] 0) then
    { scopeless
      (12358 call .(332910 call here[92085]) c"maxTaskPar")
    } else
    { scopeless
      dataParTasksPerLocale[92471]
    } )
    if(12377 call _cond_test(12371 call >= numTasks[12347] dptpl[12365]))
    {
      (12375 call chpl_rt_reset_task_spawn)
    }
  }
  unknown useAtomicTaskCnt[12403] "config" "param"(12401 call != CHPL_NETWORK_ATOMICS[42846] "none")
  type _EndCountBase[12416] val super[330953]:object[253] "super class" unknown errors[12408] chpl_TaskErrors[166911] unknown taskList[12412] c_void_ptr[141]
  type anymanaged _EndCountBase[345371](?)
  function _EndCount[12468](?).init[12440](arg _mt[12472]:_MT[227], arg this[12470]:_EndCount[12468](?), arg iType[12438]:_any[170](?), arg taskType[12442]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (12451 call =(12447 call . this[12470] c"iType") iType[12438])
    (12462 call =(12458 call . this[12470] c"taskType") taskType[12442])
  }
  type _EndCount[12468](?) val super[330955]:_EndCountBase[12416] "super class" unknown iType[12422] "type variable" unknown taskType[12425] "type variable" unknown i[12429] iType[12422] unknown taskCnt[12433] taskType[12425]
  type anymanaged _EndCount[332928](?)
  function _endCountAlloc[12481](param arg forceLocalTypes[12478] :
  bool[10]) : _unknown[43] "dont disable remote value forwarding" "inline"
  {
    unknown taskCntType[12496] "type variable"(12493 IfExpr (12487 call &&(12484 call ! forceLocalTypes[12478]) useAtomicTaskCnt[12403]) then
    { scopeless
      (12490 call chpl__atomicType int(64)[13])
    } else
    { scopeless
      int(64)[13]
    } )
    if(12531 call _cond_test forceLocalTypes[12478])
    {
      (12513 return(12512 'new'(12511 'to unmanaged class from unknown'(12510 call anymanaged _EndCount[332928](?)(iType =(12505 call chpl__processorAtomicType int(64)[13]))(taskType = taskCntType[12496])))))
    }
    {
      (12528 return(12527 'new'(12526 'to unmanaged class from unknown'(12525 call anymanaged _EndCount[332928](?)(iType =(12520 call chpl__atomicType int(64)[13]))(taskType = taskCntType[12496])))))
    }
  }
  unknown _remoteEndCountType[12542] "type variable"(12541 'typeof'(12540 call _endCountAlloc 0))
  function _endCountFree[12551](arg e[12548] :
  anymanaged _EndCount[332928](?)) : _unknown[43] "dont disable remote value forwarding" "inline" "no return value for void"
  {
    (12558 call chpl__delete(12556 call _to_unmanaged e[12548]))
  }
  function _upEndCount[12570](arg e[12567] :
  anymanaged _EndCount[332928](?), param arg countRunningTasks[12573] =
  1) : _unknown[43] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn" "no return value for void"
  {
    if(12664 call _cond_test(12584 call isAtomic(12580 call . e[12567] c"taskCnt")))
    {
      (12604 call(12593 call .(12588 call . e[12567] c"i") c"add") 1 release[180093])
      (12620 call(12611 call .(12608 call . e[12567] c"taskCnt") c"add") 1 release[180093])
    }
    {
      (12628 call chpl_rmem_consist_fence release[180093])
      {
        const tmp[12659] "const" "temp"
        (12660 'move' tmp[12659](12657 'deref'(12656 '_wide_get_locale' e[12567])))
        {
          (12645 call(12636 call .(12633 call . e[12567] c"i") c"add") 1 release[180093])
          (12653 call +=(12649 call . e[12567] c"taskCnt") 1)
        }
      }
    }
    if(12681 call _cond_test countRunningTasks[12573])
    {
      (12678 call(12673 call .(332948 call here[92085]) c"runningTaskCntAdd") 1)
    }
  }
  function _upEndCount[12693](arg e[12690] :
  anymanaged _EndCount[332928](?), param arg countRunningTasks[12696] =
  1, arg numTasks[12699]:_any[170](?)) : _unknown[43] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn" "no return value for void"
  {
    (12717 call(12705 call .(12702 call . e[12690] c"i") c"add")(12710 call _cast int(64)[13] numTasks[12699]) release[180093])
    if(12747 call _cond_test countRunningTasks[12696])
    {
      (12733 call(12722 call .(332955 call here[92085]) c"runningTaskCntAdd")(12730 call -(12727 call _cast int(64)[13] numTasks[12699]) 1))
    }
    {
      (12744 call(12739 call .(332958 call here[92085]) c"runningTaskCntSub") 1)
    }
  }
  function chpl_comm_task_end[12755]() : _unknown[43] "extern" "local args" "no fn body" "task complete impl fn" "no return value for void"
  {
  }
  { scopeless type
    void[4]
  }
  function chpl_after_forall_fence[12763]() : _unknown[43] "task complete impl fn" "no return value for void"
  {
    (12767 call chpl_comm_task_end)
  }
  function _downEndCount[12778](arg e[12775] :
  anymanaged _EndCount[332928](?), arg err[12783] :
  unmanaged Error?[389670]) : _unknown[43] "dont disable remote value forwarding" "down end count fn" "task complete impl fn" "no return value for void"
  {
    (12790 call chpl_save_task_error e[12775] err[12783])
    (12795 call chpl_comm_task_end)
    (12812 call(12803 call .(12798 call . e[12775] c"i") c"sub") 1 release[180093])
  }
  function _waitEndCount[12822](arg e[12819] :
  anymanaged _EndCount[332928](?), param arg countRunningTasks[12825] =
  1) : _unknown[43] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws" "no return value for void"
  {
    (12834 call(12829 call .(332970 call here[92085]) c"runningTaskCntSub") 1)
    (12845 call chpl_taskListExecute(12841 call . e[12819] c"taskList"))
    (12864 call(12853 call .(12848 call . e[12819] c"i") c"waitFor") 0 acquire[180095])
    if(12916 call _cond_test countRunningTasks[12825])
    {
      const taskDec[12892] "const"(12889 IfExpr (12873 call isAtomic(12869 call . e[12819] c"taskCnt")) then
      { scopeless
        (12884 call(12880 call .(12875 call . e[12819] c"taskCnt") c"read"))
      } else
      { scopeless
        (12886 call . e[12819] c"taskCnt")
      } )
      (12905 call(12897 call .(332979 call here[92085]) c"runningTaskCntSub")(12902 call - taskDec[12892] 1))
    }
    {
      (12913 call(12908 call .(332982 call here[92085]) c"runningTaskCntAdd") 1)
    }
    if(12947 call _cond_test(12933 call !(12932 call(12928 call .(12923 call . e[12819] c"errors") c"empty"))))
    {
      (12945 'throw'(12944 'new'(12942 call _owned[39039](?)(12941 call anymanaged TaskErrors[332986](?)(12937 call . e[12819] c"errors")))))
    }
  }
  function _waitEndCount[12960](arg e[12957] :
  anymanaged _EndCount[332928](?), param arg countRunningTasks[12963] =
  1, arg numTasks[12966]:_any[170](?)) : _unknown[43] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws" "no return value for void"
  {
    (12974 call chpl_taskListExecute(12970 call . e[12957] c"taskList"))
    (12990 call(12981 call .(12978 call . e[12957] c"i") c"waitFor") 0 acquire[180095])
    if(13017 call _cond_test countRunningTasks[12963])
    {
      (13005 call(12994 call .(332996 call here[92085]) c"runningTaskCntSub")(13002 call -(12999 call _cast int(64)[13] numTasks[12966]) 1))
    }
    {
      (13014 call(13009 call .(332999 call here[92085]) c"runningTaskCntAdd") 1)
    }
    if(13044 call _cond_test(13030 call !(13029 call(13025 call .(13022 call . e[12957] c"errors") c"empty"))))
    {
      (13042 'throw'(13041 'new'(13039 call _owned[39039](?)(13038 call anymanaged TaskErrors[332986](?)(13034 call . e[12957] c"errors")))))
    }
  }
  function _upDynamicEndCount[13057](param arg countRunningTasks[13054] =
  1) : _unknown[43] "task spawn impl fn" "no return value for void"
  {
    unknown e[13079](13078 'get dynamic end count')
    (13087 call _upEndCount e[13079] countRunningTasks[13054])
  }
  function _downDynamicEndCount[13099](arg err[13096] :
  unmanaged Error?[389670]) : _unknown[43] "dont disable remote value forwarding" "down end count fn" "task complete impl fn" "no return value for void"
  {
    unknown e[13104](13103 'get dynamic end count')
    (13112 call _downEndCount e[13104] err[13096])
  }
  function _waitDynamicEndCount[13122](param arg countRunningTasks[13119] =
  1) : _unknown[43] throws "task join impl fn" "unchecked throws" "no return value for void"
  {
    unknown e[13127](13126 'get dynamic end count')
    (13135 call _waitEndCount e[13127] countRunningTasks[13119])
    if(13160 call _cond_test(13146 call !(13145 call(13141 call .(13138 call . e[13127] c"errors") c"empty"))))
    {
      (13158 'throw'(13157 'new'(13155 call _owned[39039](?)(13154 call anymanaged TaskErrors[332986](?)(13150 call . e[13127] c"errors")))))
    }
  }
  function _do_command_line_cast[13171](arg t[13169]:_any[170](?), arg x[13174] :
  c_string[19]) : _unknown[43] throws
  {
    if(13201 call _cond_test(13180 call isSyncType t[13169]))
    {
      (13199 call compilerError "config variables of sync type are not supported")
    }
    if(13231 call _cond_test(13210 call isSingleType t[13169]))
    {
      (13229 call compilerError "config variables of single type are not supported")
    }
    if(13260 call _cond_test(13239 call isAtomicType t[13169]))
    {
      (13258 call compilerError "config variables of atomic type are not supported")
    }
    unknown str[13269](13267 call _cast string[24] x[13174])
    if(13287 call _cond_test(13274 call == t[13169] string[24]))
    {
      (13277 return str[13269])
    }
    {
      (13284 return(13282 call _cast t[13169] str[13269]))
    }
  }
  function _command_line_cast[13299](param arg s[13296] :
  c_string[19], arg t[13301]:_any[170](?), arg x[13304] :
  c_string[19]) : _unknown[43] "command line setting"
  {
    Try!
    {
      {
        (13312 return(13311 call _do_command_line_cast t[13301] x[13304]))
      }
    }
  }
  function chpl_typeSupportsPrimitiveCast[13325](arg t[13323]:_any[170](?)) param : _unknown[43] "inline"
  {
    (13343 return(13341 call ||(13335 call ||(13330 call isBoolType t[13323])(13334 call isIntegralType t[13323]))(13340 call isRealType t[13323])))
  }
  function _cast[13354](arg t[13351] :
  chpl_anybool[173](?), arg x[13357] :
  chpl_anybool[173](?)) : _unknown[43] "inline"
  {
    (13365 return(13364 'cast' t[13351] x[13357]))
  }
  function _cast[13376](arg t[13373] :
  integral[188](?), arg x[13379] :
  chpl_anybool[173](?)) : _unknown[43] "inline"
  {
    (13387 return(13386 'cast' t[13373] x[13379]))
  }
  function _cast[13398](arg t[13395] :
  chpl_anyreal[185](?), arg x[13401] :
  chpl_anybool[173](?)) : _unknown[43] "inline"
  {
    (13409 return(13408 'cast' t[13395] x[13401]))
  }
  function _cast[13420](arg t[13417] :
  chpl_anybool[173](?), arg x[13423] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (13431 return(13430 'cast' t[13417] x[13423]))
  }
  function _cast[13442](arg t[13439] :
  integral[188](?), arg x[13445] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (13453 return(13452 'cast' t[13439] x[13445]))
  }
  function _cast[13464](arg t[13461] :
  chpl_anyreal[185](?), arg x[13467] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (13475 return(13474 'cast' t[13461] x[13467]))
  }
  function _cast[13486](arg t[13483] :
  chpl_anybool[173](?), arg x[13489] :
  chpl_anyreal[185](?)) : _unknown[43] "inline"
  {
    (13497 return(13496 'cast' t[13483] x[13489]))
  }
  function _cast[13508](arg t[13505] :
  integral[188](?), arg x[13511] :
  chpl_anyreal[185](?)) : _unknown[43] "inline"
  {
    (13519 return(13518 'cast' t[13505] x[13511]))
  }
  function _cast[13530](arg t[13527] :
  chpl_anyreal[185](?), arg x[13533] :
  chpl_anyreal[185](?)) : _unknown[43] "inline"
  {
    (13541 return(13540 'cast' t[13527] x[13533]))
  }
  function _cast[13552](arg t[13549] :
  chpl_anybool[173](?), arg x[13555] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (13565 return(13563 call _cast bool[10](13560 call _cast int(64)[13] x[13555])))
  }
  function _cast[13576](arg t[13573] :
  enumerated[179](?), arg x[13579] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (13588 return x[13579])
  }
  where {
    (13585 call ==(13583 'typeof' x[13579]) t[13573])
  }
  function _cast[13600](arg t[13597] :
  chpl_anyreal[185](?), arg x[13603] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (13613 return(13611 call _cast real(64)[16](13608 call _cast int(64)[13] x[13603])))
  }
  function _cast[13625](arg t[13622] :
  _unmanagedNonNilable[212](?), arg x[13628] :
  _nilType[36]) : _unknown[43] "inline" "no return value for void"
  {
    if(13663 call _cond_test(13632 call ! 0))
    {
      (13660 call compilerError(13657 call + "cannot cast nil to "(13655 call _cast string[24] t[13622])))
    }
  }
  function _cast[13677](arg t[13674] :
  _borrowedNonNilable[203](?), arg x[13680] :
  _nilType[36]) : _unknown[43] "inline" "no return value for void"
  {
    if(13698 call _cond_test(13684 call ! 0))
    {
      (13695 call compilerError(13692 call + "cannot cast nil to "(13690 call _cast string[24] t[13674])))
    }
  }
  function _cast[13713](arg t[13710] :
  _unmanagedNilable[215](?), arg x[13718] :
  _borrowedNilable[206](?)) : _unknown[43] "inline"
  {
    (13735 return(13734 'cast' t[13710] x[13718]))
  }
  where {
    (328403 'is_subtype' t[13710](13726 call _to_unmanaged(13724 'typeof' x[13718])))
  }
  function _cast[13749](arg t[13746] :
  _unmanagedNilable[215](?), arg x[13753] :
  _borrowedNonNilable[203](?)) : _unknown[43] "inline"
  {
    (13773 return(13772 'cast' t[13746] x[13753]))
  }
  where {
    (328404 'is_subtype' t[13746](13764 call _to_nonnil(13762 call _to_unmanaged(13760 'typeof' x[13753]))))
  }
  function _cast[13786](arg t[13783] :
  _unmanagedNonNilable[212](?), arg x[13790] :
  _borrowedNonNilable[203](?)) : _unknown[43] "inline"
  {
    (13807 return(13806 'cast' t[13783] x[13790]))
  }
  where {
    (328405 'is_subtype' t[13783](13798 call _to_unmanaged(13796 'typeof' x[13790])))
  }
  function _cast[13820](arg t[13817] :
  _borrowedNonNilable[203](?), arg x[13825] :
  _unmanagedNilable[215](?)) : _unknown[43] throws "inline"
  {
    if(13850 call _cond_test(13839 call == x[13825] nil[38]))
    {
      (13847 'throw'(13846 'new'(13844 call _owned[39039](?)(13843 call anymanaged NilClassError[333101](?)))))
    }
    (13860 return(13859 'cast' t[13817] x[13825]))
  }
  where {
    (328406 'is_subtype' t[13817](13833 call _to_nonnil(13831 'typeof' x[13825])))
  }
  function _cast[13872](arg t[13869] :
  _borrowedNonNilable[203](?), arg x[13877] :
  _borrowedNilable[206](?)) : _unknown[43] throws "inline"
  {
    if(13902 call _cond_test(13891 call == x[13877] nil[38]))
    {
      (13899 'throw'(13898 'new'(13896 call _owned[39039](?)(13895 call anymanaged NilClassError[333101](?)))))
    }
    (13912 return(13911 'cast' t[13869] x[13877]))
  }
  where {
    (328407 'is_subtype' t[13869](13885 call _to_nonnil(13883 'typeof' x[13877])))
  }
  function _cast[13924](arg t[13921] :
  _unmanagedNonNilable[212](?), arg x[13929] :
  _borrowedNilable[206](?)) : _unknown[43] throws "inline"
  {
    if(13957 call _cond_test(13946 call == x[13929] nil[38]))
    {
      (13954 'throw'(13953 'new'(13951 call _owned[39039](?)(13950 call anymanaged NilClassError[333101](?)))))
    }
    (13967 return(13966 'cast' t[13921] x[13929]))
  }
  where {
    (328408 'is_subtype' t[13921](13940 call _to_nonnil(13938 call _to_unmanaged(13936 'typeof' x[13929]))))
  }
  function _cast[13979](arg t[13976] :
  _borrowedNonNilable[203](?), arg x[13984] :
  _borrowedNilable[206](?)) : _unknown[43] throws "inline"
  {
    if(14009 call _cond_test(13998 call == x[13984] nil[38]))
    {
      (14006 'throw'(14005 'new'(14003 call _owned[39039](?)(14002 call anymanaged NilClassError[333101](?)))))
    }
    unknown tmp[14036](14035 'dynamic_cast' t[13976] x[13984])
    if(14052 call _cond_test(14041 call == tmp[14036] nil[38]))
    {
      (14049 'throw'(14048 'new'(14046 call _owned[39039](?)(14045 call anymanaged ClassCastError[333130](?)))))
    }
    (14063 return(14062 call _to_nonnil(14060 call _to_borrowed tmp[14036])))
  }
  where {
    (328409 'is_proper_subtype'(13994 call _to_nonnil(13992 'typeof' x[13984])) t[13976])
  }
  function _cast[14076](arg t[14073] :
  _borrowedNilable[206](?), arg x[14081] :
  _borrowedNilable[206](?)) : _unknown[43] "inline"
  {
    if(14098 call _cond_test(14092 call == x[14081] nil[38]))
    {
      (14095 return nil[38])
    }
    unknown tmp[14108](14107 'dynamic_cast' t[14073] x[14081])
    (14118 return(14117 call _to_nilable(14115 call _to_borrowed tmp[14108])))
  }
  where {
    (328410 'is_proper_subtype'(14088 'typeof' x[14081]) t[14073])
  }
  function _cast[14130](arg t[14127] :
  _unmanagedNonNilable[212](?), arg x[14135] :
  _borrowedNilable[206](?)) : _unknown[43] throws "inline"
  {
    if(14163 call _cond_test(14152 call == x[14135] nil[38]))
    {
      (14160 'throw'(14159 'new'(14157 call _owned[39039](?)(14156 call anymanaged NilClassError[333101](?)))))
    }
    unknown tmp[14173](14172 'dynamic_cast' t[14127] x[14135])
    if(14189 call _cond_test(14178 call == tmp[14173] nil[38]))
    {
      (14186 'throw'(14185 'new'(14183 call _owned[39039](?)(14182 call anymanaged ClassCastError[333130](?)))))
    }
    (14200 return(14199 call _to_nonnil(14197 call _to_unmanaged tmp[14173])))
  }
  where {
    (328411 'is_proper_subtype'(14148 call _to_nonnil(14146 call _to_unmanaged(14144 'typeof' x[14135]))) t[14127])
  }
  function _cast[14213](arg t[14210] :
  _unmanagedNilable[215](?), arg x[14218] :
  _borrowedNilable[206](?)) : _unknown[43] "inline"
  {
    if(14238 call _cond_test(14232 call == x[14218] nil[38]))
    {
      (14235 return nil[38])
    }
    unknown tmp[14248](14247 'dynamic_cast' t[14210] x[14218])
    (14258 return(14257 call _to_nilable(14255 call _to_unmanaged tmp[14248])))
  }
  where {
    (328412 'is_proper_subtype'(14228 call _to_unmanaged(14226 'typeof' x[14218])) t[14210])
  }
  function _cast[14271](arg t[14268] :
  _unmanagedNilable[215](?), arg x[14275] :
  _borrowedNonNilable[203](?)) : _unknown[43] "inline"
  {
    if(14298 call _cond_test(14292 call == x[14275] nil[38]))
    {
      (14295 return nil[38])
    }
    unknown tmp[14308](14307 'dynamic_cast' t[14268] x[14275])
    (14318 return(14317 call _to_nilable(14315 call _to_unmanaged tmp[14308])))
  }
  where {
    (328413 'is_proper_subtype'(14288 'typeof' x[14275])(14285 call _to_nonnil(14283 call _to_borrowed t[14268])))
  }
  function _cast[14329](arg t[14326] :
  chpl_anycomplex[176](?), arg x[14332] :
  bool[10]) : _unknown[43] "inline"
  {
    (14343 return(14341 call _cast t[14326](14338 call _build_tuple x[14332] 0)))
  }
  function _cast[14354](arg t[14351] :
  chpl_anycomplex[176](?), arg x[14357] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (14368 return(14366 call _cast t[14351](14363 call _build_tuple x[14357] 0)))
  }
  function _cast[14379](arg t[14376] :
  chpl_anycomplex[176](?), arg x[14382] :
  chpl_anyreal[185](?)) : _unknown[43] "inline"
  {
    (14393 return(14391 call _cast t[14376](14388 call _build_tuple x[14382] 0)))
  }
  function _cast[14404](arg t[14401] :
  chpl_anycomplex[176](?), arg x[14407] :
  chpl_anyimag[182](?)) : _unknown[43] "inline"
  {
    (14421 return(14419 call _cast t[14401](14416 call _build_tuple 0(14414 call _i2r x[14407]))))
  }
  function _cast[14432](arg t[14429] :
  chpl_anycomplex[176](?), arg x[14435] :
  chpl_anycomplex[176](?)) : _unknown[43] "inline"
  {
    (14452 return(14450 call _cast t[14429](14447 call _build_tuple(14439 call . x[14435] c"re")(14443 call . x[14435] c"im"))))
  }
  function _cast[14463](arg t[14460] :
  chpl_anycomplex[176](?), arg x[14466] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (14480 return(14478 call _cast t[14460](14475 call _build_tuple(14471 call _cast real(64)[16] x[14466]) 0)))
  }
  function _cast[14491](arg t[14488] :
  chpl_anyimag[182](?), arg x[14494] :
  bool[10]) : _unknown[43] "inline"
  {
    (14511 return(14508 IfExpr  x[14494] then
    { scopeless
      (14502 call _cast t[14488] 1.0i)
    } else
    { scopeless
      (14506 call _cast t[14488] 0.0i)
    } ))
  }
  function _cast[14522](arg t[14519] :
  chpl_anyimag[182](?), arg x[14525] :
  integral[188](?)) : _unknown[43] "inline"
  {
    (14533 return(14532 'cast' t[14519] x[14525]))
  }
  function _cast[14544](arg t[14541] :
  chpl_anyimag[182](?), arg x[14547] :
  chpl_anyreal[185](?)) : _unknown[43] "inline"
  {
    (14555 return(14554 'cast' t[14541] x[14547]))
  }
  function _cast[14566](arg t[14563] :
  chpl_anyimag[182](?), arg x[14569] :
  chpl_anyimag[182](?)) : _unknown[43] "inline"
  {
    (14577 return(14576 'cast' t[14563] x[14569]))
  }
  function _cast[14588](arg t[14585] :
  chpl_anyimag[182](?), arg x[14591] :
  chpl_anycomplex[176](?)) : _unknown[43] "inline"
  {
    function _let_fn7[14606]() : _unknown[43] "compiler nested function" "inline"
    {
      unknown xim[14598](14595 call . x[14591] c"im")
      (14608 return(14605 'cast' t[14585] xim[14598]))
    }
    (14611 return(14610 call _let_fn7))
  }
  function _cast[14622](arg t[14619] :
  chpl_anyimag[182](?), arg x[14625] :
  enumerated[179](?)) : _unknown[43] "inline"
  {
    (14635 return(14633 call _cast imag(64)[122](14630 call _cast real(64)[16] x[14625])))
  }
  function _cast[14646](arg t[14643] :
  chpl_anyreal[185](?), arg x[14649] :
  chpl_anycomplex[176](?)) : _unknown[43] "inline"
  {
    unknown y[14653] t[14643]
    (14665 call = y[14653](14663 call _cast t[14643](14659 call . x[14649] c"re")))
    (14669 return y[14653])
  }
  function _cast[14679](arg t[14676] :
  integral[188](?), arg x[14682] :
  chpl_anycomplex[176](?)) : _unknown[43] "inline"
  {
    unknown y[14686] t[14676]
    (14698 call = y[14686](14696 call _cast t[14676](14692 call . x[14682] c"re")))
    (14702 return y[14686])
  }
  function _cast[14712](arg t[14709] :
  chpl_anyreal[185](?), arg x[14715] :
  chpl_anyimag[182](?)) : _unknown[43] "inline"
  {
    (14723 return(14722 'cast' t[14709] x[14715]))
  }
  function _cast[14734](arg t[14731] :
  integral[188](?), arg x[14737] :
  chpl_anyimag[182](?)) : _unknown[43] "inline"
  {
    (14745 return(14744 'cast' t[14731] x[14737]))
  }
  function _cast[14756](arg t[14753] :
  chpl_anybool[173](?), arg x[14759] :
  chpl_anyimag[182](?)) : _unknown[43] "inline"
  {
    (14771 return(14768 IfExpr (14764 call != x[14759] 0.0i) then
    { scopeless
      1
    } else
    { scopeless
      0
    } ))
  }
  function _createFieldDefault[14780](arg t[14778]:_any[170](?), arg init[14782]:_any[170](?)) : _unknown[43] "dont disable remote value forwarding" "inline" "no borrow convert" "no copy return" "suppress lvalue error" "unsafe"
  {
    if(14847 call _cond_test(14798 call &&(14791 call &&(14785 call ! 0)(14790 call isNonNilableClassType t[14778]))(14797 call isNilableClassType(14795 'typeof' init[14782]))))
    {
      (14845 call compilerError "default-initializing a field with a non-nilable type "(14820 call _cast string[24] t[14778]) " from an instance of nilable "(14843 call _cast string[24](14841 'typeof' init[14782])))
    }
    unknown x[14855] "no auto destroy" init[14782] t[14778]
    (14859 return x[14855])
  }
  function _createFieldDefault[14867](arg t[14865]:_any[170](?), param arg init[14869]:_any[170](?)) : _unknown[43] "dont disable remote value forwarding" "inline" "no borrow convert" "no copy return" "unsafe"
  {
    unknown x[14873] "no auto destroy" init[14869] t[14865]
    (14878 return x[14873])
  }
  function _createFieldDefault[14886](arg t[14884]:_any[170](?), arg init[14889] :
  _nilType[36]) : _unknown[43] "dont disable remote value forwarding" "inline" "no borrow convert" "no copy return" "unsafe"
  {
    if(14911 call _cond_test(14899 call &&(14893 call ! 0)(14898 call isNonNilableClassType t[14884])))
    {
      (14909 call compilerError "default-initializing a field with a non-nilable type "(14906 call _cast string[24] t[14884]) " from nil")
    }
    unknown x[14918] "no auto destroy" t[14884]
    (14922 return x[14918])
  }
  function chpl__initCopy[14930](arg t[14928]:_any[170](?)) : _unknown[43] "init copy fn" "inline" "no return value for void"
  {
    (14950 call compilerError "illegal assignment of type to value")
  }
  function chpl__initCopy[14961](arg x[14958] :
  _tuple[58502](?)) : _unknown[43] "compiler generated" "init copy fn" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__initCopy[14970](const arg x[14968]:_any[170](?)) : _unknown[43] "compiler generated" "init copy fn" "inline" "last resort" "suppress lvalue error"
  {
    (14973 return x[14968])
  }
  function chpl__autoCopy[14984](arg x[14981] :
  _tuple[58502](?)) : _unknown[43] "auto copy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__unref[14995](arg x[14992] :
  _tuple[58502](?)) : _unknown[43] "compiler generated" "inline" "last resort" "unref fn" "no return value for void"
  {
  }
  function chpl__autoCopy[15006](arg ir[15003] :
  _iteratorRecord[194](?)) : _unknown[43] "auto copy fn" "compiler generated" "inline"
  {
    (15009 return ir[15003])
  }
  function chpl__autoCopy[15018](const arg x[15016]:_any[170](?)) : _unknown[43] "auto copy fn" "compiler generated" "inline" "last resort" "suppress lvalue error"
  {
    (15024 return(15023 call chpl__initCopy x[15016]))
  }
  function chpl__unalias[15033](arg x[15031]:_any[170](?)) : _unknown[43] "compiler generated" "inline" "last resort" "unalias fn"
  {
    unknown ret[15036] "no copy" x[15031]
    (15041 return ret[15036])
  }
  function chpl__unalias[15051](arg x[15048] :
  _iteratorClass[197](?)) : _unknown[43] "inline" "unalias fn"
  {
    unknown ret[15054] "no copy" x[15048]
    (15059 return ret[15054])
  }
  function chpl__unalias[15069](const  ref arg x[15066] :
  _iteratorRecord[194](?)) : _unknown[43] "inline" "unalias fn"
  {
    unknown ret[15072] "no copy" x[15066]
    (15077 return ret[15072])
  }
  function chpl__autoDestroy[15087](arg x[15084] :
  anymanaged object[331796](?)) : _unknown[43] "auto destroy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__autoDestroy[15096](arg t[15094]:_any[170](?)) : _unknown[43] "auto destroy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__autoDestroy[15108](arg x[15105] :
  unknown t[15103]) : _unknown[43] "auto destroy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
    (15128 'call destructor' x[15105])
  }
  function chpl__autoDestroy[15139](arg ir[15136] :
  _iteratorRecord[194](?)) : _unknown[43] "auto destroy fn" "inline" "no return value for void"
  {
  }
  function chpl__autoDestroy[15150](arg x[15147] :
  _distribution[116702](?)) : _unknown[43] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy" "no return value for void"
  {
    (15155 'call destructor' x[15147])
  }
  function chpl__autoDestroy[15166](arg x[15163] :
  _domain[123390](?)) : _unknown[43] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy" "no return value for void"
  {
    (15171 'call destructor' x[15163])
  }
  function chpl__autoDestroy[15184](arg x[15181] :
  (15178 call chpl__buildArrayRuntimeType nil[38])) : _unknown[43] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy" "no return value for void"
  {
    (15189 'call destructor' x[15181])
  }
  function chpl__delete[15198](arg arg[15196]:_any[170](?)) : _unknown[43] "inline" "no borrow convert" "no return value for void"
  {
    if(15227 call _cond_test(15204 call chpl_isDdata(15202 'typeof' arg[15196])))
    {
      (15225 call compilerError "cannot delete data class")
    }
    if(15260 call _cond_test(15236 call ==(15234 'typeof' arg[15196]) _nilType[36]))
    {
      (15258 call compilerError "should not delete 'nil'")
    }
    if(15291 call _cond_test(328414 'is_subtype' _owned[39039](?)(15267 'typeof' arg[15196])))
    {
      (15289 call compilerError "'delete' is not allowed on an owned class type")
    }
    if(15322 call _cond_test(328415 'is_subtype' _shared[41357](?)(15298 'typeof' arg[15196])))
    {
      (15320 call compilerError "'delete' is not allowed on a shared class type")
    }
    if(15353 call _cond_test(15330 call isRecord arg[15196]))
    {
      (15351 call compilerError "'delete' is not allowed on records")
    }
    if(15395 call _cond_test(15366 call !(328416 'is_coercible' _borrowedNilable[206](?)(15360 'typeof' arg[15196]))))
    {
      (15393 call compilerError "'delete' is not allowed on non-class type "(15391 call _cast string[24](15389 'typeof' arg[15196])))
    }
    if(15430 call _cond_test(15408 call !(328417 'is_coercible' _unmanagedNilable[215](?)(15402 'typeof' arg[15196]))))
    {
      (15428 call compilerError "'delete' can only be applied to unmanaged classes")
    }
    if(15485 call _cond_test(15437 call != arg[15196] nil[38]))
    {
      (15448 call(15444 call .(15440 call postfix! arg[15196]) c"deinit"))
      {
        const tmp[15480] "const" "temp"
        (15481 'move' tmp[15480](15478 'deref'(15477 '_wide_get_locale' arg[15196])))
        (15475 call chpl_here_free(15473 '_wide_get_addr' arg[15196]))
      }
    }
  }
  function chpl__delete[15499](arg arr[15496] :
  (15493 call chpl__buildArrayRuntimeType nil[38])) : _unknown[43] "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown a[15509] "index var" "insert auto destroy"
      iterated expressions:
        arr[15496]
      shadow variables:
      forall body
      {
        (15506 call chpl__delete a[15509])
      }
    }
  }
  function chpl__delete[15519](arg arg[15517]:_any[170](?), arg args[15522]:_any[170](?) ...) : _unknown[43] "inline" "no return value for void"
  {
    (15528 call chpl__delete arg[15517])
    {
      unknown i[15548] 0
      unknown tmp[15549] "maybe param" "temp"
      (15561 'move' tmp[15549](15559 call chpl_compute_low_param_loop_bound 1(15535 call . args[15522] c"size")))
      unknown tmp[15550] "maybe param" "temp"
      (15571 'move' tmp[15550](15569 call chpl_compute_high_param_loop_bound 1(15566 call . args[15522] c"size")))
      unknown tmp[15551] "maybe param" "temp"
      (15574 'move' tmp[15551] 1)
      ParamForLoop
      { i[15548] tmp[15549] tmp[15550] tmp[15551]
        (15546 call chpl__delete(15544 call args[15522] i[15548]))
      }
      label _unused_continueLabel[15553]
      label _breakLabel[15552]
    }
  }
  function =[15593](ref arg a[15590] :
  c_void_ptr[141], arg b[15596] :
  c_void_ptr[141]) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15603 '=' a[15590] b[15596])
  }
  function ==[15614](arg a[15611] :
  c_void_ptr[141], arg b[15617] :
  c_void_ptr[141]) : _unknown[43] "inline"
  {
    (15625 return(15624 'ptr_eq' a[15611] b[15617]))
  }
  function !=[15636](arg a[15633] :
  c_void_ptr[141], arg b[15639] :
  c_void_ptr[141]) : _unknown[43] "inline"
  {
    (15647 return(15646 'ptr_neq' a[15633] b[15639]))
  }
  function func[15654]() type : _unknown[43] "inline"
  {
    (15675 return(15674 'create fn type' void[4]))
  }
  function func[15684](arg rettype[15682]:_any[170](?)) type : _unknown[43] "inline"
  {
    (15690 return(15689 'create fn type' rettype[15682]))
  }
  function func[15702](arg t[15699]:_any[170](?) ..., arg rettype[15704]:_any[170](?)) type : _unknown[43] "inline"
  {
    (15712 return(15711 'create fn type'(15709 'expand_tuple' t[15699]) rettype[15704]))
  }
  function isIterator[15723](arg ic[15720] :
  _iteratorClass[197](?)) param : _unknown[43]
  {
    (15726 return 1)
  }
  function isIterator[15737](arg ir[15734] :
  _iteratorRecord[194](?)) param : _unknown[43]
  {
    (15740 return 1)
  }
  function isIterator[15749](arg not_an_iterator[15747]:_any[170](?)) param : _unknown[43]
  {
    (15752 return 0)
  }
  function +=[15767](ref arg lhs[15764] :
  (15763 call int(64)[13] unknown w[15760]), arg rhs[15773] :
  (15772 call int(64)[13] w[15760])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15795 '+=' lhs[15764] rhs[15773])
  }
  function +=[15810](ref arg lhs[15807] :
  (15806 call uint(64)[107] unknown w[15803]), arg rhs[15816] :
  (15815 call uint(64)[107] w[15803])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15823 '+=' lhs[15807] rhs[15816])
  }
  function +=[15838](ref arg lhs[15835] :
  (15834 call real(64)[16] unknown w[15831]), arg rhs[15844] :
  (15843 call real(64)[16] w[15831])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15851 '+=' lhs[15835] rhs[15844])
  }
  function +=[15866](ref arg lhs[15863] :
  (15862 call imag(64)[122] unknown w[15859]), arg rhs[15872] :
  (15871 call imag(64)[122] w[15859])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15879 '+=' lhs[15863] rhs[15872])
  }
  function +=[15888](ref arg lhs[15886]:_any[170](?), arg rhs[15890]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15897 call = lhs[15886](15895 call + lhs[15886] rhs[15890]))
  }
  function -=[15913](ref arg lhs[15910] :
  (15909 call int(64)[13] unknown w[15906]), arg rhs[15919] :
  (15918 call int(64)[13] w[15906])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15941 '-=' lhs[15910] rhs[15919])
  }
  function -=[15956](ref arg lhs[15953] :
  (15952 call uint(64)[107] unknown w[15949]), arg rhs[15962] :
  (15961 call uint(64)[107] w[15949])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15969 '-=' lhs[15953] rhs[15962])
  }
  function -=[15984](ref arg lhs[15981] :
  (15980 call real(64)[16] unknown w[15977]), arg rhs[15990] :
  (15989 call real(64)[16] w[15977])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (15997 '-=' lhs[15981] rhs[15990])
  }
  function -=[16012](ref arg lhs[16009] :
  (16008 call imag(64)[122] unknown w[16005]), arg rhs[16018] :
  (16017 call imag(64)[122] w[16005])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16025 '-=' lhs[16009] rhs[16018])
  }
  function -=[16034](ref arg lhs[16032]:_any[170](?), arg rhs[16036]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16043 call = lhs[16032](16041 call - lhs[16032] rhs[16036]))
  }
  function *=[16059](ref arg lhs[16056] :
  (16055 call int(64)[13] unknown w[16052]), arg rhs[16065] :
  (16064 call int(64)[13] w[16052])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16087 '*=' lhs[16056] rhs[16065])
  }
  function *=[16102](ref arg lhs[16099] :
  (16098 call uint(64)[107] unknown w[16095]), arg rhs[16108] :
  (16107 call uint(64)[107] w[16095])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16115 '*=' lhs[16099] rhs[16108])
  }
  function *=[16130](ref arg lhs[16127] :
  (16126 call real(64)[16] unknown w[16123]), arg rhs[16136] :
  (16135 call real(64)[16] w[16123])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16143 '*=' lhs[16127] rhs[16136])
  }
  function *=[16152](ref arg lhs[16150]:_any[170](?), arg rhs[16154]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16161 call = lhs[16150](16159 call * lhs[16150] rhs[16154]))
  }
  function /=[16177](ref arg lhs[16174] :
  (16173 call int(64)[13] unknown w[16170]), arg rhs[16183] :
  (16182 call int(64)[13] w[16170])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    if(16201 call _cond_test 1)
    {
      if(16196 call _cond_test(16189 call == rhs[16183] 0))
      {
        (16194 call halt "Attempt to divide by zero")
      }
    }
    (16226 '/=' lhs[16174] rhs[16183])
  }
  function /=[16240](ref arg lhs[16237] :
  (16236 call uint(64)[107] unknown w[16233]), arg rhs[16246] :
  (16245 call uint(64)[107] w[16233])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    if(16264 call _cond_test 1)
    {
      if(16259 call _cond_test(16252 call == rhs[16246] 0))
      {
        (16257 call halt "Attempt to divide by zero")
      }
    }
    (16274 '/=' lhs[16237] rhs[16246])
  }
  function /=[16288](ref arg lhs[16285] :
  (16284 call real(64)[16] unknown w[16281]), arg rhs[16294] :
  (16293 call real(64)[16] w[16281])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16301 '/=' lhs[16285] rhs[16294])
  }
  function /=[16310](ref arg lhs[16308]:_any[170](?), arg rhs[16312]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16319 call = lhs[16308](16317 call / lhs[16308] rhs[16312]))
  }
  function %=[16335](ref arg lhs[16332] :
  (16331 call int(64)[13] unknown w[16328]), arg rhs[16341] :
  (16340 call int(64)[13] w[16328])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    if(16359 call _cond_test 1)
    {
      if(16354 call _cond_test(16347 call == rhs[16341] 0))
      {
        (16352 call halt "Attempt to compute a modulus by zero")
      }
    }
    (16384 '%=' lhs[16332] rhs[16341])
  }
  function %=[16398](ref arg lhs[16395] :
  (16394 call uint(64)[107] unknown w[16391]), arg rhs[16404] :
  (16403 call uint(64)[107] w[16391])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    if(16422 call _cond_test 1)
    {
      if(16417 call _cond_test(16410 call == rhs[16404] 0))
      {
        (16415 call halt "Attempt to compute a modulus by zero")
      }
    }
    (16432 '%=' lhs[16395] rhs[16404])
  }
  function %=[16446](ref arg lhs[16443] :
  (16442 call real(64)[16] unknown w[16439]), arg rhs[16452] :
  (16451 call real(64)[16] w[16439])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16459 '%=' lhs[16443] rhs[16452])
  }
  function %=[16468](ref arg lhs[16466]:_any[170](?), arg rhs[16470]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16477 call = lhs[16466](16475 call % lhs[16466] rhs[16470]))
  }
  function **=[16487](ref arg lhs[16485]:_any[170](?), arg rhs[16489]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16496 call = lhs[16485](16494 call ** lhs[16485] rhs[16489]))
  }
  function &=[16512](ref arg lhs[16509] :
  (16508 call int(64)[13] unknown w[16505]), arg rhs[16518] :
  (16517 call int(64)[13] w[16505])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16540 '&=' lhs[16509] rhs[16518])
  }
  function &=[16555](ref arg lhs[16552] :
  (16551 call uint(64)[107] unknown w[16548]), arg rhs[16561] :
  (16560 call uint(64)[107] w[16548])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16568 '&=' lhs[16552] rhs[16561])
  }
  function &=[16577](ref arg lhs[16575]:_any[170](?), arg rhs[16579]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16586 call = lhs[16575](16584 call & lhs[16575] rhs[16579]))
  }
  function |=[16602](ref arg lhs[16599] :
  (16598 call int(64)[13] unknown w[16595]), arg rhs[16608] :
  (16607 call int(64)[13] w[16595])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16630 '|=' lhs[16599] rhs[16608])
  }
  function |=[16645](ref arg lhs[16642] :
  (16641 call uint(64)[107] unknown w[16638]), arg rhs[16651] :
  (16650 call uint(64)[107] w[16638])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16658 '|=' lhs[16642] rhs[16651])
  }
  function |=[16667](ref arg lhs[16665]:_any[170](?), arg rhs[16669]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16676 call = lhs[16665](16674 call | lhs[16665] rhs[16669]))
  }
  function ^=[16692](ref arg lhs[16689] :
  (16688 call int(64)[13] unknown w[16685]), arg rhs[16698] :
  (16697 call int(64)[13] w[16685])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16720 '^=' lhs[16689] rhs[16698])
  }
  function ^=[16735](ref arg lhs[16732] :
  (16731 call uint(64)[107] unknown w[16728]), arg rhs[16741] :
  (16740 call uint(64)[107] w[16728])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16748 '^=' lhs[16732] rhs[16741])
  }
  function ^=[16757](ref arg lhs[16755]:_any[170](?), arg rhs[16759]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16766 call = lhs[16755](16764 call ^ lhs[16755] rhs[16759]))
  }
  function >>=[16782](ref arg lhs[16779] :
  (16778 call int(64)[13] unknown w[16775]), arg rhs[16788] :
  (16787 call int(64)[13] w[16775])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16810 '>>=' lhs[16779] rhs[16788])
  }
  function >>=[16825](ref arg lhs[16822] :
  (16821 call uint(64)[107] unknown w[16818]), arg rhs[16831] :
  (16830 call uint(64)[107] w[16818])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16838 '>>=' lhs[16822] rhs[16831])
  }
  function >>=[16847](ref arg lhs[16845]:_any[170](?), arg rhs[16849]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16856 call = lhs[16845](16854 call >> lhs[16845] rhs[16849]))
  }
  function <<=[16872](ref arg lhs[16869] :
  (16868 call int(64)[13] unknown w[16865]), arg rhs[16878] :
  (16877 call int(64)[13] w[16865])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16900 '<<=' lhs[16869] rhs[16878])
  }
  function <<=[16915](ref arg lhs[16912] :
  (16911 call uint(64)[107] unknown w[16908]), arg rhs[16921] :
  (16920 call uint(64)[107] w[16908])) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16928 '<<=' lhs[16912] rhs[16921])
  }
  function <<=[16937](ref arg lhs[16935]:_any[170](?), arg rhs[16939]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16946 call = lhs[16935](16944 call << lhs[16935] rhs[16939]))
  }
  function +=[16958](ref arg D[16955] :
  _domain[123390](?), arg idx[16960]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16968 call(16963 call . D[16955] c"add") idx[16960])
  }
  function -=[16979](ref arg D[16976] :
  _domain[123390](?), arg idx[16981]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (16991 call(16986 call . D[16976] c"remove") idx[16981])
  }
  function +=[17002](ref arg D[16999] :
  _domain[123390](?), param arg idx[17004]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (17012 call(17007 call . D[16999] c"add") idx[17004])
  }
  function -=[17023](ref arg D[17020] :
  _domain[123390](?), param arg idx[17025]:_any[170](?)) : _unknown[43] "assignop" "inline" "no return value for void"
  {
    (17033 call(17028 call . D[17020] c"remove") idx[17025])
  }
  function <=>[17042](ref arg lhs[17040]:_any[170](?), ref arg rhs[17044]:_any[170](?)) : _unknown[43] "inline" "no return value for void"
  {
    const tmp[17047] "const" lhs[17040]
    (17053 call = lhs[17040] rhs[17044])
    (17058 call = rhs[17044] tmp[17047])
  }
  function +[17072](arg a[17069] :
  (17068 call uint(64)[107] 64), arg b[17078] :
  (17077 call int(64)[13] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17084 call _throwOpError "+")
  }
  function +[17098](arg a[17095] :
  (17094 call int(64)[13] 64), arg b[17104] :
  (17103 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17110 call _throwOpError "+")
  }
  function +[17124](arg a[17121] :
  (17120 call uint(64)[107] 64), param arg b[17130] :
  (17129 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17138 return(17137 '+' a[17121] b[17130]))
  }
  function +[17152](param arg a[17149] :
  (17148 call uint(64)[107] 64), arg b[17158] :
  (17157 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17166 return(17165 '+' a[17149] b[17158]))
  }
  function +[17180](arg a[17177] :
  (17176 call int(64)[13] 64), param arg b[17186] :
  (17185 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17194 return(17193 '+' a[17177] b[17186]))
  }
  function +[17208](param arg a[17205] :
  (17204 call int(64)[13] 64), arg b[17214] :
  (17213 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17222 return(17221 '+' a[17205] b[17214]))
  }
  function -[17236](arg a[17233] :
  (17232 call uint(64)[107] 64), arg b[17242] :
  (17241 call int(64)[13] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17248 call _throwOpError "-")
  }
  function -[17262](arg a[17259] :
  (17258 call int(64)[13] 64), arg b[17268] :
  (17267 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17274 call _throwOpError "-")
  }
  function -[17288](arg a[17285] :
  (17284 call uint(64)[107] 64), param arg b[17294] :
  (17293 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17302 return(17301 '-' a[17285] b[17294]))
  }
  function -[17316](param arg a[17313] :
  (17312 call uint(64)[107] 64), arg b[17322] :
  (17321 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17330 return(17329 '-' a[17313] b[17322]))
  }
  function -[17344](arg a[17341] :
  (17340 call int(64)[13] 64), param arg b[17350] :
  (17349 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17358 return(17357 '-' a[17341] b[17350]))
  }
  function -[17372](param arg a[17369] :
  (17368 call int(64)[13] 64), arg b[17378] :
  (17377 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17386 return(17385 '-' a[17369] b[17378]))
  }
  function *[17400](arg a[17397] :
  (17396 call uint(64)[107] 64), arg b[17406] :
  (17405 call int(64)[13] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17412 call _throwOpError "*")
  }
  function *[17426](arg a[17423] :
  (17422 call int(64)[13] 64), arg b[17432] :
  (17431 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17438 call _throwOpError "*")
  }
  function *[17452](arg a[17449] :
  (17448 call uint(64)[107] 64), param arg b[17458] :
  (17457 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17466 return(17465 '*' a[17449] b[17458]))
  }
  function *[17480](param arg a[17477] :
  (17476 call uint(64)[107] 64), arg b[17486] :
  (17485 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17494 return(17493 '*' a[17477] b[17486]))
  }
  function *[17508](arg a[17505] :
  (17504 call int(64)[13] 64), param arg b[17514] :
  (17513 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17522 return(17521 '*' a[17505] b[17514]))
  }
  function *[17536](param arg a[17533] :
  (17532 call int(64)[13] 64), arg b[17542] :
  (17541 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17550 return(17549 '*' a[17533] b[17542]))
  }
  function /[17564](arg a[17561] :
  (17560 call uint(64)[107] 64), arg b[17570] :
  (17569 call int(64)[13] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17576 call _throwOpError "/")
  }
  function /[17590](arg a[17587] :
  (17586 call int(64)[13] 64), arg b[17596] :
  (17595 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17602 call _throwOpError "/")
  }
  function /[17616](arg a[17613] :
  (17612 call int(64)[13] 64), param arg b[17622] :
  (17621 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    if(17634 call _cond_test(17627 call == b[17622] 0))
    {
      (17632 call compilerError "Attempt to divide by zero")
    }
    (17645 return(17644 '/' a[17613] b[17622]))
  }
  function /[17658](arg a[17655] :
  (17654 call uint(64)[107] 64), param arg b[17664] :
  (17663 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    if(17676 call _cond_test(17669 call == b[17664] 0))
    {
      (17674 call compilerError "Attempt to divide by zero")
    }
    (17687 return(17686 '/' a[17655] b[17664]))
  }
  function /[17700](param arg a[17697] :
  (17696 call uint(64)[107] 64), arg b[17706] :
  (17705 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    if(17724 call _cond_test 1)
    {
      if(17719 call _cond_test(17712 call == b[17706] 0))
      {
        (17717 call halt "Attempt to divide by zero")
      }
    }
    (17735 return(17734 '/' a[17697] b[17706]))
  }
  function /[17748](param arg a[17745] :
  (17744 call int(64)[13] 64), arg b[17754] :
  (17753 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    if(17772 call _cond_test 1)
    {
      if(17767 call _cond_test(17760 call == b[17754] 0))
      {
        (17765 call halt "Attempt to divide by zero")
      }
    }
    (17783 return(17782 '/' a[17745] b[17754]))
  }
  function **[17796](arg a[17793] :
  (17792 call uint(64)[107] 64), arg b[17802] :
  (17801 call int(64)[13] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17808 call _throwOpError "**")
  }
  function **[17822](arg a[17819] :
  (17818 call int(64)[13] 64), arg b[17828] :
  (17827 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17834 call _throwOpError "**")
  }
  function **[17848](arg a[17845] :
  (17844 call uint(64)[107] 64), param arg b[17854] :
  (17853 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17862 return(17861 '**' a[17845] b[17854]))
  }
  function **[17876](param arg a[17873] :
  (17872 call uint(64)[107] 64), arg b[17882] :
  (17881 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (17890 return(17889 '**' a[17873] b[17882]))
  }
  function **[17904](arg a[17901] :
  (17900 call int(64)[13] 64), param arg b[17910] :
  (17909 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17918 return(17917 '**' a[17901] b[17910]))
  }
  function **[17932](param arg a[17929] :
  (17928 call int(64)[13] 64), arg b[17938] :
  (17937 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (17946 return(17945 '**' a[17929] b[17938]))
  }
  function %[17960](arg a[17957] :
  (17956 call uint(64)[107] 64), arg b[17966] :
  (17965 call int(64)[13] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17972 call _throwOpError "%")
  }
  function %[17986](arg a[17983] :
  (17982 call int(64)[13] 64), arg b[17992] :
  (17991 call uint(64)[107] 64)) : _unknown[43] "inline" "no return value for void"
  {
    (17998 call _throwOpError "%")
  }
  function %[18012](arg a[18009] :
  (18008 call uint(64)[107] 64), param arg b[18018] :
  (18017 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    if(18030 call _cond_test(18023 call == b[18018] 0))
    {
      (18028 call compilerError "Attempt to compute a modulus by zero")
    }
    (18041 return(18040 '%' a[18009] b[18018]))
  }
  function %[18054](param arg a[18051] :
  (18050 call uint(64)[107] 64), arg b[18060] :
  (18059 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    if(18078 call _cond_test 1)
    {
      if(18073 call _cond_test(18066 call == b[18060] 0))
      {
        (18071 call halt "Attempt to compute a modulus by zero")
      }
    }
    (18089 return(18088 '%' a[18051] b[18060]))
  }
  function %[18102](arg a[18099] :
  (18098 call int(64)[13] 64), param arg b[18108] :
  (18107 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    if(18120 call _cond_test(18113 call == b[18108] 0))
    {
      (18118 call compilerError "Attempt to compute a modulus by zero")
    }
    (18131 return(18130 '%' a[18099] b[18108]))
  }
  function %[18144](param arg a[18141] :
  (18140 call int(64)[13] 64), arg b[18150] :
  (18149 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    if(18168 call _cond_test 1)
    {
      if(18163 call _cond_test(18156 call == b[18150] 0))
      {
        (18161 call halt "Attempt to compute a modulus by zero")
      }
    }
    (18179 return(18178 '%' a[18141] b[18150]))
  }
  function ==[18192](arg a[18189] :
  (18188 call uint(64)[107] 64), arg b[18198] :
  (18197 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18219 return(18217 call &&(18205 call !(18203 call < b[18198] 0))(18215 call == a[18189](18213 call _cast(18212 call uint(64)[107] 64) b[18198]))))
  }
  function ==[18233](arg a[18230] :
  (18229 call int(64)[13] 64), arg b[18239] :
  (18238 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18260 return(18258 call &&(18246 call !(18244 call < a[18230] 0))(18256 call ==(18253 call _cast(18252 call uint(64)[107] 64) a[18230]) b[18239])))
  }
  function !=[18274](arg a[18271] :
  (18270 call uint(64)[107] 64), arg b[18280] :
  (18279 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18299 return(18297 call ||(18285 call < b[18280] 0)(18295 call != a[18271](18293 call _cast(18292 call uint(64)[107] 64) b[18280]))))
  }
  function !=[18313](arg a[18310] :
  (18309 call int(64)[13] 64), arg b[18319] :
  (18318 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18338 return(18336 call ||(18324 call < a[18310] 0)(18334 call !=(18331 call _cast(18330 call uint(64)[107] 64) a[18310]) b[18319])))
  }
  function >[18352](arg a[18349] :
  (18348 call uint(64)[107] 64), arg b[18358] :
  (18357 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18377 return(18375 call ||(18363 call < b[18358] 0)(18373 call > a[18349](18371 call _cast(18370 call uint(64)[107] 64) b[18358]))))
  }
  function >[18391](arg a[18388] :
  (18387 call int(64)[13] 64), arg b[18397] :
  (18396 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18418 return(18416 call &&(18404 call !(18402 call < a[18388] 0))(18414 call >(18411 call _cast(18410 call uint(64)[107] 64) a[18388]) b[18397])))
  }
  function >[18432](param arg a[18429] :
  (18428 call uint(64)[107] 64), arg b[18438] :
  (18437 call uint(64)[107] 64)) param : _unknown[43] "inline"
  {
    (18446 return 0)
  }
  where {
    (18443 call == a[18429] 0)
  }
  function >[18461](param arg a[18458] :
  (18457 call uint(64)[107] 64), arg b[18467] :
  (18466 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18475 return(18474 '>' a[18458] b[18467]))
  }
  function >[18489](param arg a[18486] :
  (18485 call int(64)[13] 64), arg b[18495] :
  (18494 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18503 return(18502 '>' a[18486] b[18495]))
  }
  function <[18517](arg a[18514] :
  (18513 call uint(64)[107] 64), arg b[18523] :
  (18522 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18544 return(18542 call &&(18530 call !(18528 call < b[18523] 0))(18540 call < a[18514](18538 call _cast(18537 call uint(64)[107] 64) b[18523]))))
  }
  function <[18558](arg a[18555] :
  (18554 call int(64)[13] 64), arg b[18564] :
  (18563 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18583 return(18581 call ||(18569 call < a[18555] 0)(18579 call <(18576 call _cast(18575 call uint(64)[107] 64) a[18555]) b[18564])))
  }
  function <[18597](arg a[18594] :
  (18593 call uint(64)[107] 64), param arg b[18603] :
  (18602 call uint(64)[107] 64)) param : _unknown[43] "inline"
  {
    (18611 return 0)
  }
  where {
    (18608 call == b[18603] 0)
  }
  function <[18626](arg a[18623] :
  (18622 call uint(64)[107] 64), param arg b[18632] :
  (18631 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18640 return(18639 '<' a[18623] b[18632]))
  }
  function <[18654](arg a[18651] :
  (18650 call int(64)[13] 64), param arg b[18660] :
  (18659 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18668 return(18667 '<' a[18651] b[18660]))
  }
  function >=[18682](arg a[18679] :
  (18678 call uint(64)[107] 64), arg b[18688] :
  (18687 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18707 return(18705 call ||(18693 call < b[18688] 0)(18703 call >= a[18679](18701 call _cast(18700 call uint(64)[107] 64) b[18688]))))
  }
  function >=[18721](arg a[18718] :
  (18717 call int(64)[13] 64), arg b[18727] :
  (18726 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18748 return(18746 call &&(18734 call !(18732 call < a[18718] 0))(18744 call >=(18741 call _cast(18740 call uint(64)[107] 64) a[18718]) b[18727])))
  }
  function >=[18762](arg a[18759] :
  (18758 call uint(64)[107] 64), param arg b[18768] :
  (18767 call uint(64)[107] 64)) param : _unknown[43] "inline"
  {
    (18776 return 1)
  }
  where {
    (18773 call == b[18768] 0)
  }
  function >=[18791](arg a[18788] :
  (18787 call uint(64)[107] 64), param arg b[18797] :
  (18796 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18805 return(18804 '>=' a[18788] b[18797]))
  }
  function >=[18819](arg a[18816] :
  (18815 call int(64)[13] 64), param arg b[18825] :
  (18824 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18833 return(18832 '>=' a[18816] b[18825]))
  }
  function <=[18847](arg a[18844] :
  (18843 call uint(64)[107] 64), arg b[18853] :
  (18852 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18874 return(18872 call &&(18860 call !(18858 call < b[18853] 0))(18870 call <= a[18844](18868 call _cast(18867 call uint(64)[107] 64) b[18853]))))
  }
  function <=[18888](arg a[18885] :
  (18884 call int(64)[13] 64), arg b[18894] :
  (18893 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18913 return(18911 call ||(18899 call < a[18885] 0)(18909 call <=(18906 call _cast(18905 call uint(64)[107] 64) a[18885]) b[18894])))
  }
  function <=[18927](param arg a[18924] :
  (18923 call uint(64)[107] 64), arg b[18933] :
  (18932 call uint(64)[107] 64)) param : _unknown[43] "inline"
  {
    (18941 return 1)
  }
  where {
    (18938 call == a[18924] 0)
  }
  function <=[18956](param arg a[18953] :
  (18952 call uint(64)[107] 64), arg b[18962] :
  (18961 call uint(64)[107] 64)) : _unknown[43] "inline"
  {
    (18970 return(18969 '<=' a[18953] b[18962]))
  }
  function <=[18984](param arg a[18981] :
  (18980 call int(64)[13] 64), arg b[18990] :
  (18989 call int(64)[13] 64)) : _unknown[43] "inline"
  {
    (18998 return(18997 '<=' a[18981] b[18990]))
  }
  function isGenericType[19007](arg t[19005]:_any[170](?)) param : _unknown[43]
  {
    (19028 return(19027 'is generic type' t[19005]))
  }
  function isClassType[19037](arg t[19035]:_any[170](?)) param : _unknown[43]
  {
    (19058 return(19057 'is class type' t[19035]))
  }
  function isNilableClassType[19067](arg t[19065]:_any[170](?)) param : _unknown[43]
  {
    (19088 return(19087 'is nilable class type' t[19065]))
  }
  function isNonNilableClassType[19097](arg t[19095]:_any[170](?)) param : _unknown[43]
  {
    (19118 return(19117 'is non nilable class type' t[19095]))
  }
  function isBorrowedOrUnmanagedClassType[19129](arg t[19126] :
  unmanaged[209](?)) param : _unknown[43]
  {
    (19132 return 1)
  }
  function isBorrowedOrUnmanagedClassType[19143](arg t[19140] :
  borrowed[200](?)) param : _unknown[43]
  {
    (19146 return 1)
  }
  function isBorrowedOrUnmanagedClassType[19155](arg t[19153]:_any[170](?)) param : _unknown[43]
  {
    (19158 return 0)
  }
  function isRecordType[19167](arg t[19165]:_any[170](?)) param : _unknown[43]
  {
    if(19258 call _cond_test(19189 call ==(19187 'is record type' t[19165]) 0))
    {
      (19192 return 0)
    }
    {
      if(19252 call _cond_test(19244 call ||(19238 call ||(19232 call ||(19226 call ||(19220 call ||(19214 call ||(19208 call ||(19202 call ||(19197 call isDmapType t[19165])(19201 call isDomainType t[19165]))(19207 call isArrayType t[19165]))(19213 call isRangeType t[19165]))(19219 call isTupleType t[19165]))(19225 call isSyncType t[19165]))(19231 call isSingleType t[19165]))(19237 call isStringType t[19165]))(19243 call isAtomicType t[19165])))
      {
        (19247 return 0)
      }
      {
        (19250 return 1)
      }
    }
  }
  function isUnionType[19271](arg t[19269]:_any[170](?)) param : _unknown[43]
  {
    (19292 return(19291 'is union type' t[19269]))
  }
  function isAtomicType[19301](arg t[19299]:_any[170](?)) param : _unknown[43]
  {
    (19322 return(19321 'is atomic type' t[19299]))
  }
  function isRefIterType[19331](arg t[19329]:_any[170](?)) param : _unknown[43]
  {
    (19352 return(19351 'is ref iter type' t[19329]))
  }
  const QIO_STYLE_ELEMENT_STRING[19358] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_COMPLEX[19362] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_ARRAY[19366] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_AGGREGATE[19370] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_TUPLE[19374] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_BYTE_ORDER[19378] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19382] "const" "extern" int(64)[13]
  const QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS[19386] "const" "extern" int(64)[13]
  const QIO_ARRAY_FORMAT_SPACE[19390] "const" "extern" int(64)[13]
  const QIO_ARRAY_FORMAT_CHPL[19394] "const" "extern" int(64)[13]
  const QIO_ARRAY_FORMAT_JSON[19398] "const" "extern" int(64)[13]
  const QIO_AGGREGATE_FORMAT_BRACES[19402] "const" "extern" int(64)[13]
  const QIO_AGGREGATE_FORMAT_CHPL[19406] "const" "extern" int(64)[13]
  const QIO_AGGREGATE_FORMAT_JSON[19410] "const" "extern" int(64)[13]
  const QIO_TUPLE_FORMAT_CHPL[19414] "const" "extern" int(64)[13]
  const QIO_TUPLE_FORMAT_SPACE[19418] "const" "extern" int(64)[13]
  const QIO_TUPLE_FORMAT_JSON[19422] "const" "extern" int(64)[13]
  function chpl_ModuleDeinit[19479].writeThis[19444](arg _mt[19483]:_MT[227], arg this[19481]:chpl_ModuleDeinit[19479], arg ch[19442]:_any[170](?)) : _unknown[43] "method" "primary method" "no return value for void"
  {
    (19473 call(19449 call . ch[19442] c"writef") "chpl_ModuleDeinit(%s)"(19471 call _cast string[24](333597 call . this[19481] c"moduleName")))
  }
  type chpl_ModuleDeinit[19479] val super[330957]:object[253] "super class" const moduleName[19427] "const" c_string[19] const deinitFun[19431] "const" c_fn_ptr[144] const prevModule[19437] "const" unmanaged chpl_ModuleDeinit?[389721]
  type unmanaged chpl_ModuleDeinit?[389721]
  type anymanaged chpl_ModuleDeinit?[389717](?)
  type anymanaged chpl_ModuleDeinit[333591](?)
  unknown chpl_moduleDeinitFuns[19492](19490 call _cast unmanaged chpl_ModuleDeinit?[389721] nil[38])
  function _to_unmanaged[19499](arg t[19497]:_any[170](?)) type : _unknown[43]
  {
    unknown rt[19520] "type variable"(19519 'to unmanaged class' t[19497])
    (19525 return rt[19520])
  }
  function _to_unmanaged[19533](arg arg[19531]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[19539](19538 'to unmanaged class' arg[19531])
    (19544 return ret[19539])
  }
  function _to_borrowed[19552](arg t[19550]:_any[170](?)) type : _unknown[43]
  {
    unknown rt[19573] "type variable"(19572 'to borrowed class' t[19550])
    (19578 return rt[19573])
  }
  function _to_borrowed[19586](arg arg[19584]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[19592](19591 'to borrowed class' arg[19584])
    (19597 return ret[19592])
  }
  function _to_nonnil[19605](arg t[19603]:_any[170](?)) type : _unknown[43]
  {
    unknown rt[19626] "type variable"(19625 'to non nilable class' t[19603])
    (19631 return rt[19626])
  }
  function _to_nonnil[19639](arg arg[19637]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[19645](19644 'to non nilable class' arg[19637])
    (19650 return ret[19645])
  }
  function _to_nilable[19658](arg t[19656]:_any[170](?)) type : _unknown[43]
  {
    unknown rt[19679] "type variable"(19678 'to nilable class' t[19656])
    (19684 return rt[19679])
  }
  function _to_nilable[19692](arg arg[19690]:_any[170](?)) : _unknown[43] "inline"
  {
    unknown ret[19698](19697 'to nilable class' arg[19690])
    (19703 return ret[19698])
  }
  function _removed_cast[19711](in arg x[19709]:_any[170](?)) : _unknown[43] "inline" "no borrow convert"
  {
    (19714 return x[19709])
  }
  function chpl_checkCopyInit[19723](arg lhs[19721]:_any[170](?), arg rhs[19725]:_any[170](?)) param : _unknown[43] "no return value for void"
  {
  }
  (328300 'used modules list'(328298 'use' _root[2])(305 'use' ChapelStandard[19734]))
}