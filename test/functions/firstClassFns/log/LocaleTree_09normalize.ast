AST dump for LocaleTree after pass normalize.
Module use list: ChapelLocale 

{
  function chpl__init_LocaleTree[390219]() : void[4] "insert line file info" "module init"
  {
    (492082 'default init var' chpl_localeTree[150995] chpl_localeTreeRecord[150991])
    (151151 call chpl_initLocaleTree)
    (470840 return _void[47])
  }
  type chpl_localeTreeRecord[150991] val left[150980]:borrowed locale?[389810] borrowed locale?[389810] val right[150985]:borrowed locale?[389810](150989 'typeof' left[150980])
  unknown chpl_localeTree[150995] "insert auto destroy" "locale private"
  function chpl_initLocaleTree[151000]() : _unknown[43] "no return value for void"
  {
    {
      unknown _indexOfInterest[151113] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151114] "expr temp" "temp"
      (151123 'move' _iterator[151114](151121 call _getIterator LocaleSpace[111774]))
      Defer
      {
        {
          (151139 call _freeIterator _iterator[151114])
        }
      }
      { scopeless type
        (151128 'move' _indexOfInterest[151113](151125 call iteratorIndex _iterator[151114]))
      }
      ForLoop
      {
        unknown i[151132] "index var" "insert auto destroy"
        (151134 'move' i[151132] _indexOfInterest[151113])
        {
          unknown left[151007] "insert auto destroy"
          (492084 'init var' left[151007] nil[38] borrowed locale?[389810])
          unknown right[151014] "insert auto destroy"
          (492086 'init var' right[151014] nil[38] borrowed locale?[389810])
          unknown call_tmp[619583] "expr temp" "maybe param" "maybe type" "temp"
          (619586 'move' call_tmp[619583](151019 call + i[151132] 1))
          unknown call_tmp[619588] "expr temp" "maybe param" "maybe type" "temp"
          (619591 'move' call_tmp[619588](151022 call * call_tmp[619583] 2))
          unknown call_tmp[619593] "maybe param" "maybe type" "temp"
          (619596 'move' call_tmp[619593](151025 call - call_tmp[619588] 1))
          unknown child[151027] "insert auto destroy"
          (492088 'init var' child[151027] call_tmp[619593])
          unknown call_tmp[619598] "expr temp" "maybe param" "maybe type" "temp"
          (619601 'move' call_tmp[619598](151032 call < child[151027] numLocales[197588]))
          unknown call_tmp[619603] "expr temp" "maybe param" "maybe type" "temp"
          (619606 'move' call_tmp[619603](151075 call _cond_test call_tmp[619598]))
          if call_tmp[619603]
          {
            unknown call_tmp[619608] "expr temp" "maybe param" "maybe type" "temp"
            (619611 'move' call_tmp[619608](151036 call postfix! rootLocale[91052]))
            unknown call_tmp[619615] "expr temp" "maybe param" "maybe type" "temp"
            (619618 'move' call_tmp[619615](151043 call(151038 call (partial) getChild _mt[232] call_tmp[619608]) child[151027]))
            (151044 call = left[151007] call_tmp[619615])
            (151050 call += child[151027] 1)
            unknown call_tmp[619620] "expr temp" "maybe param" "maybe type" "temp"
            (619623 'move' call_tmp[619620](151055 call < child[151027] numLocales[197588]))
            unknown call_tmp[619625] "expr temp" "maybe param" "maybe type" "temp"
            (619628 'move' call_tmp[619625](151070 call _cond_test call_tmp[619620]))
            if call_tmp[619625]
            {
              unknown call_tmp[619630] "expr temp" "maybe param" "maybe type" "temp"
              (619633 'move' call_tmp[619630](151059 call postfix! rootLocale[91052]))
              unknown call_tmp[619637] "expr temp" "maybe param" "maybe type" "temp"
              (619640 'move' call_tmp[619637](151066 call(151061 call (partial) getChild _mt[232] call_tmp[619630]) child[151027]))
              (151067 call = right[151014] call_tmp[619637])
            }
          }
          {
            const tmp[151108] "const" "temp"
            unknown call_tmp[619642] "expr temp" "maybe param" "maybe type" "temp"
            (619645 'move' call_tmp[619642](151080 call postfix! rootLocale[91052]))
            unknown call_tmp[619649] "expr temp" "maybe param" "maybe type" "temp"
            (619652 'move' call_tmp[619649](151087 call(151082 call (partial) getChild _mt[232] call_tmp[619642]) i[151132]))
            unknown call_tmp[619654] "expr temp" "maybe param" "maybe type" "temp"
            (619657 'move' call_tmp[619654](151105 '_wide_get_locale' call_tmp[619649]))
            (151109 'move' tmp[151108](151106 'deref' call_tmp[619654]))
            {
              unknown call_tmp[619661] "expr temp" "maybe param" "maybe type" "temp"
              (619664 'move' call_tmp[619661](151089 call left _mt[232] chpl_localeTree[150995]))
              (151093 call = call_tmp[619661] left[151007])
              unknown call_tmp[619668] "expr temp" "maybe param" "maybe type" "temp"
              (619671 'move' call_tmp[619668](151098 call right _mt[232] chpl_localeTree[150995]))
              (151102 call = call_tmp[619668] right[151014])
            }
          }
        }
        label _continueLabel[151118]
        _indexOfInterest[151113]
        _iterator[151114]
      }
      label _breakLabel[151119]
    }
    (470838 return _void[47])
  }
  (329412 'used modules list'(150976 'use' ChapelLocale[90191]))
}