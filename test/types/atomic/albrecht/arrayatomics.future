bug: compiler unable to compile promoted atomic operation, fetchAdd()

The example used in this test is fetchAdd(). The desired behavior is
demonstrated as the first part of the test. Consequently the .good output
expects the output twice (once for the longhand, once for the shorthand).

The failing version's compiler output has many lines of the following error:

ChapelArray.c:674:28: error: passing 'atomic_int64' (aka 'struct chpl_atomic_int64_s') to parameter of incompatible type '_ref_atomic_int64' (aka 'struct chpl_atomic_int64_s *'); take the address with &
call_tmp8 = chpl__initCopy(tmp_x2_F0_this);

Where the tmp variables vary from line to line in the compiler output.
