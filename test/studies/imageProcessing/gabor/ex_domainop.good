Demonstrating domain iteration
 {1..3, 4..6}   = (1, 4) (1, 5) (1, 6) (2, 4) (2, 5) (2, 6) (3, 4) (3, 5) (3, 6)
 as function argument/array assignment:
  1 + 4 = 5
  1 + 5 = 6
  1 + 6 = 7
  2 + 4 = 6
  2 + 5 = 7
  2 + 6 = 8
  3 + 4 = 7
  3 + 5 = 8
  3 + 6 = 9
  arr2
5 6 7
6 7 8
7 8 9

 adjusting domain iterations
  dom1 by 2          {1..3 by 2, 4..6 by 2}   = (1, 4) (1, 6) (3, 4) (3, 6)
  dom1 # (2, 1)      {1..2, 4..4}   = (1, 4) (2, 4)

 adjusting domain ranges
  base dom2                        {1..10, 20..30}
  dom2 expand(5,3)                 {-4..15, 17..33}
  dom2 expand(5,3)  expand(-2,-1)  {-2..13, 18..32}
  dom2 translate(4,5)              {5..14, 25..35}

 inside/outside domains
  dom2 exterior(2,3)               {11..12, 31..33}
  dom2 exterior(-2,-3)             {-1..0, 17..19}
  dom2 interior(2,3)               {9..10, 28..30}
  dom2 interior(-2,-3)             {1..2, 20..22}
  base unchanged                   {1..10, 20..30}
