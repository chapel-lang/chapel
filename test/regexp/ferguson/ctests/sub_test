#!/bin/sh

# These C tests don't conform to -Wall
unset CHPL_DEVELOPER

CC=gcc
CXX=g++
DEFS=`$CHPL_HOME/util/config/compileline --includes-and-defines`
RSRC="$CHPL_HOME/runtime/src/qio"
RE2_INSTALL_DIR=$($CHPL_HOME/util/config/compileline --libraries | \
                  sed 's#^.*\('"$CHPL_HOME"'/[^ ]*/re2/install/[^/]*\)/.*$#\1#')
RE2INCLS=-I$RE2_INSTALL_DIR/include
RE2LIB="-L$RE2_INSTALL_DIR/lib -Wl,-rpath,$RE2_INSTALL_DIR/lib -lre2"

echo $DEFS | grep atomics/intrinsics
if [ $? -eq 0 ]
then
  echo C tests will run using atomics/intrinsics
else
  echo Skipping C I/O tests without atomics/intrinsics
  exit
fi

RE=`$CHPL_HOME/util/chplenv/chpl_regexp.py`
if [ "$RE" = "re2" ]
then
  echo C tests will run using RE2
else
  echo Skipping C Regexp tests without RE2
  exit
fi

# If we had an easy way to get the names of the C/C++ compilers
# we could support non-gnu
COMP=`$CHPL_HOME/util/chplenv/chpl_compiler.py`
PLAT=`$CHPL_HOME/util/chplenv/chpl_platform.py`
if [ "$COMP" = "gnu" ]
then
  echo C tests will run using gnu compiler
elif [ "$COMP" = "clang" ]
then
  echo C tests will run using clang compiler
  CC=clang
  CXX=clang++
else
  echo Skipping C Regexp tests without gnu compilers
  exit
fi

if [ "$PLAT" = "darwin" ]
then
  # Don't use --static with because it doesn't work on Mac OS X
  OPTS=
else
  OPTS="-static"
fi

DEPS="$OPTS -Wall -DSIMPLE_TEST $DEFS $RSRC/qio.c $RSRC/sys.c $RSRC/sys_xsi_strerror_r.c $RSRC/qbuffer.c $RSRC/deque.c $RSRC/regexp/re2/re2-interface.cc $RE2INCLS $RE2LIB -lpthread"

T1="$CXX $DEPS -g regexp_test.cc -o regexp_test"
T2="$CXX $DEPS -g regexp_channel_test.cc -o regexp_channel_test"

echo $T1
echo $T2

$T1 && $T2

RETVAL=$?

runtest() {
  EXE=$1
  DESC=$2
  echo Running $EXE
  $EXE > /dev/null
  RETVAL=$?
  if [ $RETVAL -eq 0 ]
  then
    echo "[Success matching C regexp test $EXE $DESC]"
    rm $EXE
  else
    echo "[Error matching C regexp test $EXE $DESC]"
  fi
}

if [ $RETVAL -eq 0 ]
then
  echo "[Success compiling C Regexp tests]"

  runtest ./regexp_test "Regexp Test"
  runtest ./regexp_channel_test "Regexp Channels Test"
else
  echo "[Error compiling C Regexp tests]"
fi

