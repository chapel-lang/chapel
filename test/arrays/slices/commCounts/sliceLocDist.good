Tests for slicing Block with Block
==================================

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing A[Dinner] via routine:
Incrementing in routine by access
---------------------------------
(execute_on_nb = 3) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.1 0.1 0.1 1.1 1.1 1.1 1.0 1.0
0.0 0.0 0.1 0.1 0.1 1.1 1.1 1.1 1.0 1.0
0.0 0.0 0.1 0.1 0.1 1.1 1.1 1.1 1.0 1.0
2.0 2.0 2.1 2.1 2.1 3.1 3.1 3.1 3.0 3.0
2.0 2.0 2.1 2.1 2.1 3.1 3.1 3.1 3.0 3.0
2.0 2.0 2.1 2.1 2.1 3.1 3.1 3.1 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing A[Dinner] via routine:
Incrementing in routine by iteration
------------------------------------
(execute_on_nb = 3) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Creating B (a normal slice)
---------------------------
(<no communication>) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via access
-------------------------
(execute_on_nb = 3) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.3 0.3 0.3 1.3 1.3 1.3 1.0 1.0
0.0 0.0 0.3 0.3 0.3 1.3 1.3 1.3 1.0 1.0
0.0 0.0 0.3 0.3 0.3 1.3 1.3 1.3 1.0 1.0
2.0 2.0 2.3 2.3 2.3 3.3 3.3 3.3 3.0 3.0
2.0 2.0 2.3 2.3 2.3 3.3 3.3 3.3 3.0 3.0
2.0 2.0 2.3 2.3 2.3 3.3 3.3 3.3 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via iteration
----------------------------
(execute_on_nb = 3) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.4 0.4 0.4 1.4 1.4 1.4 1.0 1.0
0.0 0.0 0.4 0.4 0.4 1.4 1.4 1.4 1.0 1.0
0.0 0.0 0.4 0.4 0.4 1.4 1.4 1.4 1.0 1.0
2.0 2.0 2.4 2.4 2.4 3.4 3.4 3.4 3.0 3.0
2.0 2.0 2.4 2.4 2.4 3.4 3.4 3.4 3.0 3.0
2.0 2.0 2.4 2.4 2.4 3.4 3.4 3.4 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via routine:
Incrementing in routine by access
---------------------------------
(execute_on_nb = 3) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.5 0.5 0.5 1.5 1.5 1.5 1.0 1.0
0.0 0.0 0.5 0.5 0.5 1.5 1.5 1.5 1.0 1.0
0.0 0.0 0.5 0.5 0.5 1.5 1.5 1.5 1.0 1.0
2.0 2.0 2.5 2.5 2.5 3.5 3.5 3.5 3.0 3.0
2.0 2.0 2.5 2.5 2.5 3.5 3.5 3.5 3.0 3.0
2.0 2.0 2.5 2.5 2.5 3.5 3.5 3.5 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via routine:
Incrementing in routine by iteration
------------------------------------
(execute_on_nb = 3) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.6 0.6 0.6 1.6 1.6 1.6 1.0 1.0
0.0 0.0 0.6 0.6 0.6 1.6 1.6 1.6 1.0 1.0
0.0 0.0 0.6 0.6 0.6 1.6 1.6 1.6 1.0 1.0
2.0 2.0 2.6 2.6 2.6 3.6 3.6 3.6 3.0 3.0
2.0 2.0 2.6 2.6 2.6 3.6 3.6 3.6 3.0 3.0
2.0 2.0 2.6 2.6 2.6 3.6 3.6 3.6 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Tests for slicing Block with Local
==================================

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing A[Dinner] via routine:
Incrementing in routine by access
---------------------------------
(get = 27, put = 27) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.1 0.1 0.1 1.1 1.1 1.1 1.0 1.0
0.0 0.0 0.1 0.1 0.1 1.1 1.1 1.1 1.0 1.0
0.0 0.0 0.1 0.1 0.1 1.1 1.1 1.1 1.0 1.0
2.0 2.0 2.1 2.1 2.1 3.1 3.1 3.1 3.0 3.0
2.0 2.0 2.1 2.1 2.1 3.1 3.1 3.1 3.0 3.0
2.0 2.0 2.1 2.1 2.1 3.1 3.1 3.1 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing A[Dinner] via routine:
Incrementing in routine by iteration
------------------------------------
(get = 27, put = 27) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Creating B (a normal slice)
---------------------------
(<no communication>) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
0.0 0.0 0.2 0.2 0.2 1.2 1.2 1.2 1.0 1.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.2 2.2 2.2 3.2 3.2 3.2 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via access
-------------------------
(get = 27, put = 27) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.3 0.3 0.3 1.3 1.3 1.3 1.0 1.0
0.0 0.0 0.3 0.3 0.3 1.3 1.3 1.3 1.0 1.0
0.0 0.0 0.3 0.3 0.3 1.3 1.3 1.3 1.0 1.0
2.0 2.0 2.3 2.3 2.3 3.3 3.3 3.3 3.0 3.0
2.0 2.0 2.3 2.3 2.3 3.3 3.3 3.3 3.0 3.0
2.0 2.0 2.3 2.3 2.3 3.3 3.3 3.3 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via iteration
----------------------------
(get = 27, put = 27) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.4 0.4 0.4 1.4 1.4 1.4 1.0 1.0
0.0 0.0 0.4 0.4 0.4 1.4 1.4 1.4 1.0 1.0
0.0 0.0 0.4 0.4 0.4 1.4 1.4 1.4 1.0 1.0
2.0 2.0 2.4 2.4 2.4 3.4 3.4 3.4 3.0 3.0
2.0 2.0 2.4 2.4 2.4 3.4 3.4 3.4 3.0 3.0
2.0 2.0 2.4 2.4 2.4 3.4 3.4 3.4 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via routine:
Incrementing in routine by access
---------------------------------
(get = 27, put = 27) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.5 0.5 0.5 1.5 1.5 1.5 1.0 1.0
0.0 0.0 0.5 0.5 0.5 1.5 1.5 1.5 1.0 1.0
0.0 0.0 0.5 0.5 0.5 1.5 1.5 1.5 1.0 1.0
2.0 2.0 2.5 2.5 2.5 3.5 3.5 3.5 3.0 3.0
2.0 2.0 2.5 2.5 2.5 3.5 3.5 3.5 3.0 3.0
2.0 2.0 2.5 2.5 2.5 3.5 3.5 3.5 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Incrementing B via routine:
Incrementing in routine by iteration
------------------------------------
(get = 27, put = 27) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0
0.0 0.0 0.6 0.6 0.6 1.6 1.6 1.6 1.0 1.0
0.0 0.0 0.6 0.6 0.6 1.6 1.6 1.6 1.0 1.0
0.0 0.0 0.6 0.6 0.6 1.6 1.6 1.6 1.0 1.0
2.0 2.0 2.6 2.6 2.6 3.6 3.6 3.6 3.0 3.0
2.0 2.0 2.6 2.6 2.6 3.6 3.6 3.6 3.0 3.0
2.0 2.0 2.6 2.6 2.6 3.6 3.6 3.6 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0
2.0 2.0 2.0 2.0 2.0 3.0 3.0 3.0 3.0 3.0

Tests for slicing Local with Block
==================================

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Incrementing A[Dinner] via routine:
Incrementing in routine by access
---------------------------------
(execute_on_nb = 3) (get = 72, put = 9) (get = 72, put = 9) (get = 72, put = 9)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.1 0.1 0.1 0.1 0.1 0.1 0.0 0.0
0.0 0.0 0.1 0.1 0.1 0.1 0.1 0.1 0.0 0.0
0.0 0.0 0.1 0.1 0.1 0.1 0.1 0.1 0.0 0.0
0.0 0.0 0.1 0.1 0.1 0.1 0.1 0.1 0.0 0.0
0.0 0.0 0.1 0.1 0.1 0.1 0.1 0.1 0.0 0.0
0.0 0.0 0.1 0.1 0.1 0.1 0.1 0.1 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Incrementing A[Dinner] via routine:
Incrementing in routine by iteration
------------------------------------
(execute_on_nb = 3) (get = 54, put = 9) (get = 54, put = 9) (get = 54, put = 9)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Creating B (a normal slice)
---------------------------
(<no communication>) (<no communication>) (<no communication>) (<no communication>)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.2 0.2 0.2 0.2 0.2 0.2 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Incrementing B via access
-------------------------
(execute_on_nb = 3) (get = 72, put = 9) (get = 72, put = 9) (get = 72, put = 9)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.3 0.3 0.3 0.3 0.3 0.3 0.0 0.0
0.0 0.0 0.3 0.3 0.3 0.3 0.3 0.3 0.0 0.0
0.0 0.0 0.3 0.3 0.3 0.3 0.3 0.3 0.0 0.0
0.0 0.0 0.3 0.3 0.3 0.3 0.3 0.3 0.0 0.0
0.0 0.0 0.3 0.3 0.3 0.3 0.3 0.3 0.0 0.0
0.0 0.0 0.3 0.3 0.3 0.3 0.3 0.3 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Incrementing B via iteration
----------------------------
(execute_on_nb = 3) (get = 54, put = 9) (get = 54, put = 9) (get = 54, put = 9)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.4 0.4 0.4 0.4 0.4 0.4 0.0 0.0
0.0 0.0 0.4 0.4 0.4 0.4 0.4 0.4 0.0 0.0
0.0 0.0 0.4 0.4 0.4 0.4 0.4 0.4 0.0 0.0
0.0 0.0 0.4 0.4 0.4 0.4 0.4 0.4 0.0 0.0
0.0 0.0 0.4 0.4 0.4 0.4 0.4 0.4 0.0 0.0
0.0 0.0 0.4 0.4 0.4 0.4 0.4 0.4 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Incrementing B via routine:
Incrementing in routine by access
---------------------------------
(execute_on_nb = 3) (get = 72, put = 9) (get = 72, put = 9) (get = 72, put = 9)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.5 0.5 0.5 0.5 0.5 0.5 0.0 0.0
0.0 0.0 0.5 0.5 0.5 0.5 0.5 0.5 0.0 0.0
0.0 0.0 0.5 0.5 0.5 0.5 0.5 0.5 0.0 0.0
0.0 0.0 0.5 0.5 0.5 0.5 0.5 0.5 0.0 0.0
0.0 0.0 0.5 0.5 0.5 0.5 0.5 0.5 0.0 0.0
0.0 0.0 0.5 0.5 0.5 0.5 0.5 0.5 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

Incrementing B via routine:
Incrementing in routine by iteration
------------------------------------
(execute_on_nb = 3) (get = 54, put = 9) (get = 54, put = 9) (get = 54, put = 9)

A is:
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.0
0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.0
0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.0
0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.0
0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.0
0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

