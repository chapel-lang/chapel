Usage: chpl [flags] [source files]

Module Processing Options:
      --[no-]count-tokens             [Don't] count tokens in main modules
      --main-module <module>          Specify entry point module
  -M, --module-dir <directory>        Add directory to module search path
      --[no-]print-code-size          [Don't] print code size of main modules
      --print-module-files            Print module file locations
      --[no-]print-search-dirs        [Don't] print module search path

Parallelism Control Options:
      --[no-]local                    Target one [many] locale[s]

Optimization Control Options:
      --baseline                      Disable all Chapel optimizations
      --cache-remote                  Enable cache for remote data (must be
                                      enabled specifically)
      --conditional-dynamic-dispatch-limit <limit>
                                      Set limit on # of inline conditionals
                                      used for dynamic dispatch
      --[no-]copy-propagation         Enable [disable] copy propagation
      --[no-]dead-code-elimination    Enable [disable] dead code elimination
      --fast                          Use fast default settings
      --[no-]fast-followers           Enable [disable] fast followers
      --[no-]ieee-float               Generate code that is strict [lax] with
                                      respect to IEEE compliance
      --[no-]loop-invariant-code-motion
                                      Enable [disable] loop invariant code
                                      motion
      --[no-]ignore-local-classes     Disable [enable] local classes
      --[no-]inline                   Enable [disable] function inlining
      --[no-]inline-iterators         Enable [disable] iterator inlining
      --[no-]live-analysis            Enable [disable] live variable analysis
      --[no-]optimize-loop-iterators  Enable [disable] optimization of
                                      iterators composed of a single loop
      --[no-]vectorize                Enable [disable] generation of
                                      vectorization hints
      --[no-]optimize-on-clauses      Enable [disable] optimization of on
                                      clauses
      --optimize-on-clause-limit <limit>
                                      Limit recursion depth of on clause
                                      optimization search
      --[no-]privatization            Enable [disable] privatization of
                                      distributed arrays and domains
      --[no-]remove-copy-calls        Enable [disable] remove copy calls
      --[no-]remote-value-forwarding  Enable [disable] remote value forwarding
      --[no-]scalar-replacement       Enable [disable] scalar replacement
      --scalar-replace-limit <limit>  Limit on the size of tuples being
                                      replaced during scalar replacement
      --[no-]tuple-copy-opt           Enable [disable] tuple (memcpy)
                                      optimization
      --tuple-copy-limit <limit>      Limit on the size of tuples considered
                                      for optimization
      --[no-]use-noinit               Enable [disable] ability to skip default
                                      initialization through the keyword
                                      noinit

Run-time Semantic Check Options:
      --no-checks                     Disable all following run-time checks
      --[no-]bounds-checks            Enable [disable] bounds checking
      --[no-]local-checks             Enable [disable] local block checking
      --[no-]nil-checks               Enable [disable] nil checking
      --[no-]stack-checks             Enable [disable] stack overflow checking
      --[no-]cast-checks              Enable [disable] checks in safeCast
                                      calls

C Code Generation Options:
      --[no-]codegen                  [Don't] Do code generation
      --[no-]cpp-lines                [Don't] Generate #line annotations
      --max-c-ident-len               Maximum length of identifiers in
                                      generated code, 0 for unlimited
      --[no-]munge-user-idents        [Don't] Munge user identifiers to avoid
                                      naming conflicts with external code
      --savec <directory>             Save generated C code in directory

C Code Compilation Options:
      --ccflags <flags>               Back-end C compiler flags
  -g, --[no-]debug                    [Don't] Support debugging of generated C
                                      code
      --dynamic                       Generate a dynamically linked binary
  -I, --hdr-search-path <directory>   C header search path
      --ldflags <flags>               Back-end C linker flags
  -l, --lib-linkage <library>         C library linkage
  -L, --lib-search-path <directory>   C library search path
      --make <make utility>           Make utility for generated code
  -O, --[no-]optimize                 [Don't] Optimize generated C code
      --[no-]specialize               [Don't] Specialize generated C code for
                                      CHPL_TARGET_ARCH
  -o, --output <filename>             Name output executable
      --static                        Generate a statically linked binary

LLVM Code Generation Options:
      --[no-]llvm                     [Don't] use the LLVM code generator
      --[no-]llvm-wide-opt            Enable [disable] LLVM wide pointer
                                      optimizations

Compilation Trace Options:
      --[no-]print-commands           [Don't] print system commands
      --[no-]print-passes             [Don't] print compiler passes
      --print-passes-file <filename>  Print compiler passes to <filename>

Miscellaneous Options:
      --[no-]devel                    Compile as a developer [user]
      --explain-call <call>[:<module>][:<line>]
                                      Explain resolution of call
      --explain-instantiation <function|type>[:<module>][:<line>]
                                      Explain instantiation of type
      --[no-]explain-verbose          Enable [disable] tracing of
                                      disambiguation with 'explain' options
      --instantiate-max <max>         Limit number of instantiations
      --[no-]print-callstack-on-error print the Chapel call stack leading to
                                      each error or warning
  -s, --set <name>[=<value>]          Set config param value
      --[no-]task-tracking            Enable [disable] runtime task tracking
      --[no-]warn-const-loops         Enable [disable] warnings for some
                                      'while' loops with constant conditions
      --[no-]warn-special             Enable [disable] special warnings
      --[no-]warn-domain-literal      Enable [disable] old domain literal
                                      syntax warnings
      --[no-]warn-tuple-iteration     Enable [disable] warnings for tuple
                                      iteration
      --no-warnings                   Disable output of warnings

Compiler Information Options:
      --copyright                     Show copyright
  -h, --help                          Help (show this list)
      --help-env                      Environment variable help
      --help-settings                 Current flag settings
      --license                       Show license
      --version                       Show version
