(lldb) target create "./basicTypes"
Current executable set to EXECUTABLE
(lldb) command source -s 0 'lldb.commands'
Executing commands in FILE.txt
(lldb) breakpoint set -n debuggerBreakHere -N debuggerBreakHere
Breakpoint
(lldb) command source -s 0 'basicTypesCommands.txt'
Executing commands in FILE.txt
(lldb) r
(myField = {x = 0, y = 0.0}) | (myFieldA = 0, myFieldB = 0.0, myFieldC = (0, 0.0), myFieldD = , myFieldE = nil, myFieldF = 0 0 0 0 0 0 0 0 0 0) | Hello, world! | {x = 0, y = 0.0} | {x = 0, y = 0.0}
{1..10, 1..10 by 2} | 1 2 3 4 5 6 7 8 9 10 | 1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
21 22 23 24 25
26 27 28 29 30
31 32 33 34 35
36 37 38 39 40
41 42 43 44 45
46 47 48 49 50
true | 42 | 3.14 | e2 | e2 | (1, two, 3.0, e1)
Process XXXX stopped
* Thread #X, stop reason = breakpoint 1.1
    frame #1: 0xXXXX basicTypes`chpl_user_main at basicTypes.chpl:74
   71  	  writeln(myDom, myArr, myArr2d, sep=" | ");
   72  	  writeln(myBool, myInt, myReal, myEnumVal, myEnumRef, myTuple, sep=" | ");
   73
-> 74  	  use Debugger; breakpoint;
   75  	}
(lldb) p myRec
(basicTypes::MyRecord1) {
  myField = 0xXXXX
}
(lldb) p myRec.myField
(basicTypes::MyClass *) 0xXXXX
(lldb) p myRec2
(basicTypes::MyRecord2) {
  myFieldA = 0
  myFieldB = 0
  myFieldC = (x0 = 0, x1 = 0)
  myFieldD = "" {
    size = 0
  }
  myFieldE = NULL
  myFieldF = [1..10] int(64) {
    dom = 0xXXXX
    data = 0xXXXX
    [1] = 0
    [2] = 0
    [3] = 0
    [4] = 0
    [5] = 0
    [6] = 0
    [7] = 0
    [8] = 0
    [9] = 0
    [10] = 0
  }
}
(lldb) p myRec2.myFieldC
((int(64),real(64)))  (x0 = 0, x1 = 0)
(lldb) p myRec2.myFieldD
(string) "" {
  size = 0
}
(lldb) p myRec2.myFieldE
(basicTypes::MyClass *) NULL
(lldb) p myRec2.myFieldF
(ChapelArray::[domain(1,int(64),one)] int(64)) [1..10] int(64) {
  dom = 0xXXXX
  data = 0xXXXX
  [1] = 0
  [2] = 0
  [3] = 0
  [4] = 0
  [5] = 0
  [6] = 0
  [7] = 0
  [8] = 0
  [9] = 0
  [10] = 0
}
(lldb) p myUnmanagedClass
(basicTypes::MyClass *) 0xXXXX
(lldb) p myClass
(owned MyClass) 0xXXXX {
  super = (cid = XXX)
  x = 0
  y = 0
}
(lldb) p myStr
(string) "Hello, world!" {
  size = 13
}
(lldb) p myDom
(ChapelDomain::domain(2,int(64),positive)) {1..10 by 1, 1..10 by 2} {
  dim = {
    [0] = 1..10 by 1 {
      low = 1
      high = 10
      stride = 1
    }
    [1] = 1..10 by 2 {
      low = 1
      high = 10
      stride = 2
    }
  }
}
(lldb) p myArr2d
(ChapelArray::[domain(2,int(64),positive)] int(64)) [1..10 by 1, 1..10 by 2] int(64) {
  dom = 0xXXXX
  data = 0xXXXX
  [1,1] = 1
  [2,1] = 6
  [3,1] = 11
  [4,1] = 16
  [5,1] = 21
  [6,1] = 26
  [7,1] = 31
  [8,1] = 36
  [9,1] = 41
  [10,1] = 46
  [1,3] = 2
  [2,3] = 7
  [3,3] = 12
  [4,3] = 17
  [5,3] = 22
  [6,3] = 27
  [7,3] = 32
  [8,3] = 37
  [9,3] = 42
  [10,3] = 47
  [1,5] = 3
  [2,5] = 8
  [3,5] = 13
  [4,5] = 18
  [5,5] = 23
  [6,5] = 28
  [7,5] = 33
  [8,5] = 38
  [9,5] = 43
  [10,5] = 48
  [1,7] = 4
  [2,7] = 9
  [3,7] = 14
  [4,7] = 19
  [5,7] = 24
  [6,7] = 29
  [7,7] = 34
  [8,7] = 39
  [9,7] = 44
  [10,7] = 49
  [1,9] = 5
  [2,9] = 10
  [3,9] = 15
  [4,9] = 20
  [5,9] = 25
  [6,9] = 30
  [7,9] = 35
  [8,9] = 40
  [9,9] = 45
  [10,9] = 50
}
(lldb) p myArr
(ChapelArray::[domain(1,int(64),one)] int(64)) [1..10] int(64) {
  dom = 0xXXXX
  data = 0xXXXX
  [1] = 1
  [2] = 2
  [3] = 3
  [4] = 4
  [5] = 5
  [6] = 6
  [7] = 7
  [8] = 8
  [9] = 9
  [10] = 10
}
(lldb) p myBool
(bool) true
(lldb) p myInt
(int(64)) 42
(lldb) p myReal
(real(64)) 3.1400000000000001
(lldb) p myEnumVal
(basicTypes::myEnum) e2
(lldb) p myEnumRef
(_ref(myEnum)) 0xXXXX (&myEnumRef = e2)
(lldb) p myTuple
((int(64),string,real(64),myEnum)) {
  x0 = 1
  x1 = "two" {
    size = 3
  }
  x2 = 3
  x3 = e1
}
(lldb) quit
