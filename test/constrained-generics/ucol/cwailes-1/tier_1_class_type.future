design: how to handle 'implements' on classes
#17262 and see below

How do we write CG functions that work with an assortment
of class kinds (owned, borrowed, nilable, etc.)?

For example, this test writes:

proc minFn(x:?T, y:T):T where implements LessThan(T) {
  if (LT(y, x)) {
    return y;
  } else {
    return x;
  }
}

However, when T is an 'owned' class, this tries to steal ownership
to return a value. Instead, it should borrow.
