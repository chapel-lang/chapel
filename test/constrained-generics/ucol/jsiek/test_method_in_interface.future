design: how to write an IC version of 'min' that can handle owned classes
#17842

This test's version:

    proc minFn(x:?T, y:T):T where implements LessThan(T) {
      if y.less_than(x)
      then return y;
      else return x;
    }

tries to take over the ownership of the argument to return it.
Since the argument is const, it hits a const-checking error.
Perhaps instead it should borrow?

Cf. essentially the same code compiles and runs with shared and borrowed:

  ucol/cwailes-1/tier_1_class_type.chpl
  ucol/cwailes-1/tier_1_interface_method.chpl
