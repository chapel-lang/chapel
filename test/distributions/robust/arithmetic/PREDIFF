#!/usr/bin/env python

# Figure out which of TESTNAME.*.good is applicable; copy it to TESTNAME.good.
#
# Do nothing if:
#  * there is no TESTNAME.default.good
#  * there is TESTNAME.prediff

import sys, os, shutil, string, subprocess;

testname=sys.argv[1]
compopts=sys.argv[4]

if (not os.path.isfile(testname+'.default.good') or
    os.path.isfile(testname+'.prediff')):
    # leave it alone
    sys.exit(0)

chpl_comm = os.getenv('CHPL_COMM')
if chpl_comm=='none' or chpl_comm==None:
    dist = 'default'
else:
    # get the distribution from the -sdistType=... option, if present
    dist = 'block'
    searchstring='distType=DistType.'
    s = string.rfind(compopts, searchstring)

    if s != -1:
        opt = compopts[s+len(searchstring):len(compopts)]
        dist = opt.split()[0]

cache_remote = False

# search for --cache-remote
if "--cache-remote" in compopts:
  cache_remote = True

if cache_remote:
  dist = dist + ".cache-remote"
  
targetfn=testname+'.good'
goodfn=testname+'.'+dist+'.good'
if not os.path.isfile(goodfn):
    print "good file ",goodfn," not found; using .default.good"
    goodfn=testname+'.default.good'

print "cp", goodfn, targetfn
shutil.copy(goodfn, targetfn)

if cache_remote:
  fix_cmd = "loose-comm-counts-cache-remote"
  fix_counts = os.getenv('CHPL_HOME') + "/util/test/" + fix_cmd
  print fix_cmd, sys.argv[1], sys.argv[6], goodfn
  subprocess.call([fix_counts, sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5], goodfn]);

 
