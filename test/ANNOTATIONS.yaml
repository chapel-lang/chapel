# The format for this file is as follows:
#
# all:
#   mm/dd/yy:
#     - example annotation text 1 (#PR)
#
# group:
#   mm/dd/yy:
#     - example annotation text 2 (#PR)
#     - example annotation text 3 (#PR)
#   mm/dd/yy:
#     - text: example annotation text 4 (#PR)
#       config: [config1, config2]
#
#
# where 'group' is the base name of the .graph file that attached set
# of annotations should apply to.  'all' is a special group where any
# annotations are added to to every single graph.
#
# When the long form of an annotation is used (where 'text:' and
# 'config:' are specified), the annotation is only added to the graphs
# if the current configuration is in the configuration list. Note
# that in this form, the 'config:' line does not (cannot) have a
# leading '-' sign.
#
# The date listed should be day the impact of a change is seen, not
# the day of the commit. e.g. if a commit was made on 11/11/11, the
# date listed should be 11/12/11 (assuming testing ran successfully
# that night, otherwise use the first day when testing runs again.)
#

all:
  10/14/13:
    - locale ID changes
  10/17/13:
    - initial sync var change
    - variety of multilocale performance changes
  10/29/13:
    - reversion of sync change to threads
  02/04/14:
    - flipped default value of dataParIgnoreRunningTasks
  02/27/14:
    - copy propagation rework r22796
  03/28/14:
    - Add static flag for performance testing (22992)
  05/08/14:
    - switched to gcc-4.7
  07/19/14:
    - no testing occurred, machine update
  08/26/14:
    - switched default tasking layer to qthreads from fifo
  09/06/14:
    - switch default memory allocator from cstdlib to tcmalloc
  09/12/14:
    - switch default memory allocator back to cstdlib
  11/05/14:
    - fix overlapping memcpy() reported by valgrind
  12/18/14:
    - change mult in array indexing to conditional, then revert
  12/22/14:
    - simplify some locale model interactions with the runtime
  01/16/15:
    - move chpl_getLocaleID into the modules
  02/12/15:
    - text: zombie process on chap04 was causing noise
      config: chap04
  07/19/15:
    - new 1-pass implementation of widening
  08/13/15:
    - text: remove restriction of soft-threads to 16 only
      config: 16 node XC
  08/18/15:
    - fix task counting for coforall+on
  08/26/15:
    - text: re-enable optimization of op= in local blocks
      config: 16 node XC
  09/01/15:
    - parallel array initialization
  09/02/15:
    - malloc vs. calloc
  09/07/15:
    - domains of formal array args no longer mean reindex
  09/08/15:
    - text: localization optimization for endcounts
      config: 16 node XC
  09/09/15:
    - text: ubuntu update to 15.04 (gcc upgraded to 4.9.2)
      config: shootout
  10/19/15:
    - text: can't repro old performance
      config: 16 node XC
  10/29/15:
    - PR 2850 to split up and inline BlockArr.dsiAccess
  11/19/15:
    - text: ubuntu update to 15.10 (gcc upgraded to 5.2)
      config: shootout
  12/05/15:
    - text: improve comm=ugni comm domain handling
      config: 16 node XC
  12/08/15:
    - text: default to qthreads+hwloc for cce (#2972)
      config: Single node XC
  12/09/15:
    - Added record-based strings (#2884)
  12/17/15:
    - Enable the Qthreads tasking shim (#3040)
  01/07/16:
    - Replace filenames with indices into a lookup table (#3049)
  02/14/16:
    - text: Default to jemalloc for gasnet configurations (#3287)
      config: 16 node XC
  02/17/16:
    - text: Remove origin check to improve bulk transfer (#3301)
      config: 16 node XC
  02/19/16:
    - text: Default to jemalloc for comm=ugni (#3321)
      config: 16 node XC
  02/22/16:
    - Default to jemalloc for comm=none (#3333)
  03/04/16:
    - implemented doubling/halving for array-as-vec (#3380)
  03/17/16:
    - text: Switched gen compiler to gcc 5.1.0
      config: 16 node XC, Single node XC
  04/27/16:
    - text: Optimization for returning wide pointers (#3742)
      config: Single node XC, 16 node XC
  05/05/16:
    - text: ubuntu update to 16.04 (gcc upgraded to 5.3)
      config: shootout
  05/12/16:
    - KACE removed from systems.  Should see less noise after this day.
  05/31/16:
    - Enable jemalloc's decay-based purging (#3926)
  06/07/16:
    - Avoid allocating arg bundles for local on statements (#3890)
    - Upgrade target compiler versions (#218, internal)
  06/24/16:
    - text: Improve optimizeOnClauses optimization (#4008)
      config: 16 node XC
  07/19/16:
    - Disable jemalloc's stat gathering by default (#4180)
  07/20/16:
    - Generated code changes in preparation for incremental compilation (#4177)
  08/02/16:
    - Restore static to normal compilation generated code (#4233)
  08/03/16:
    - text: Hardware upgrade
      config: 16 node XC, Single node XC
  08/04/16:
    - Updates to Search module, required array slicing (partially reverted) (#4273)
  08/19/16:
    - Turn denormalization on by default (reverted the next night) (#4360)
  08/28/16:
    - text: Upgraded chap* (except chap03) and chapcs* machines from gcc 4.7 to gcc 6.2
      config: chap04, chapcs
  09/01/16:
    - Turn denormalization on by default (#4434)
  09/04/16:
    - use standard atomics rather than intrinsics for gcc (reverted the next night) (#4443)
  09/09/16:
    - convert more reductions to use reduce intents (#4396)
  09/13/16:
    - remove volatile on real atomics, make atomic_load atomic (#4491)
    - use "distrib" scheduler for numa instead of "sherwood" (#4505)
  09/14/16:
    - enable native qthreads sync vars (#4506)
  09/15/16:
    - use atomic spin-lock instead of sync for reductions (#4532)
  09/16/16:
    - Turn denormalization off by default (#4545)
  09/18/16:
    - Added optimization to remove inner multiply in dsiAccess (#4510)
  09/20/16:
    - Add promoted fast follower support (#4558)
  10/08/16:
    - text: upgrade Intel target compiler from 15.0.3.187 to 17.0.0.098
      config: Single node XC
  10/11/16:
    - text: Fix of races in the ugni comm layer (internal #253 and #258)
      config: 16 node XC
  10/18/16:
    - First step to transition to qualified references (#4745)
  10/27/16:
    - Improve Array Memory Management (#4762)
  11/01/16:
    - text: upgrade Cray target compiler version from 8.4.0 to 8.5.3
      config: Single node XC
    - text: upgrade gnu target compiler from 5.3.0 to 6.2.0
      config: Single node XC, 16 node XC
  11/02/16:
    - text: remove usesOuterVars from virtual method call resolution due to bug in application (#4794)
      config: Single node XC
  11/04/16:
    - text: Improve RVF by inferring const-refs (#4814)
      config: 16 node XC
    - text: downgrade Cray target compiler from 8.5.3 to 8.4.6
      config: Single node XC
  11/08/16:
    - text: RVF arrays in records (#4821)
      config: 16 node XC
  11/26/16:
    - Use hybrid spin/condwait (#4902)
  12/07/16:
    - Stack allocate on and task function argument bundles (#4074)
  12/08/16:
    - Re-enable denormalization (#4547)
  12/13/16:
    - text: inferConst improvements related to _retArg (#4969)
      config: 16 node XC
  12/14/16:
    - Reduce task creation time for "bounded" coforalls (#5018)
    - text: Ugni comm layer improvements for forks and the heap (internal #276)
      config: 16 node XC
  12/22/16:
    - multi-ddata (#5047)
  01/11/17:
    - Move the multi-ddata metadata fields, checking cache effects for 'flat'. (#5145)
  02/19/17:
    - text: Turned hyperthreading on for our testing machine
      config: chapcs
  03/03/17:
    - Array views (#5338)
  03/06/17:
    - Wide-pointer optimization for arrays (#5487)
  03/07/17:
    - make blank intent for arrays "ref-if-modified" (#5134)
  03/13/17:
    - Have qthreads use Chapel's allocator (#5637)
  03/15/17:
    - text: Increase QT_SPINCOUNT when running on a Cray (#5646)
      config: 16 node XC
  03/16/17:
    - text: Stop limiting the number of ugni communication domains under slurm (#5653)
      config: 16 node XC
  03/17/17:
    - Allow fields and vars to be 'void', make range.stride void if not stridable (#5681)
  03/20/17:
    - Make the multi-ddata specific fields in DR arrays 'void' when not using them (#5723)
  05/03/17:
    - Flag some compiler temps as const (#6154)
  06/08/17:
    - text: upgrade gnu target compiler from 6.3.0 to 7.1.0
      config: Single node XC, 16 node XC
  06/10/17:
    - text: bounded-coforall optimization for remote coforalls (#6419)
      config: 16 node XC
  06/14/17:
    - text: upgrade gnu target compiler from 6.3.0 to 7.1.0
      config: chapcs, chap04
  06/16/17:
    - text: revert gnu target compiler from 7.1.0 to 6.3.0
      config: chapcs, chap04
  06/20/17:
    - text: revert gnu target compiler from 7.1.0 to 6.3.0
      config: Single node XC, 16 node XC
  06/21/17:
    - change tmp directory
  07/26/17:
    - Add dsiAssignDomain (#6722)
    - Move EndCount to task local storage (#6765)
  07/31/17:
    - text: Enable GASNet's multi-comm-domain support for gemini/aries (#6893)
      config: 16 node XC
  08/08/17:
    - text: With comm=ugni, register large arrays dynamically (#6947)
      config: 16 node XC
  08/15/17:
    - add error handling to the IO module (#6890)
  09/06/17:
    - text: Improve the accuracy of our running task counter (#7193)
      config: 16 node XC
  09/19/17:
    - Fix LICM bug (#7371)
  10/21/17:
    - Reduce wide pointer overhead for sparse domains/arrays (#7627)
  11/21/17:
    - New bulk transfer interface (#7775)
  12/08/17:
    - text: Machine upgraded to CLE6
      config: 16 node XC
  12/12/17:
    - (no-local) QualifiedType ref improvements (#7990)


AllCompTime:
  11/09/14:
    - disable the task table by default
  01/17/16:
    - add dead string literal elimination (#3120)
  09/09/16:
    - disable function resolution optimization (#4476)
  09/14/16:
    - re-enable function resolution optimization (#4517)
  02/03/17:
    - Fix parse slowdown (#5257)
  02/07/17:
    - Loop over Defs and Uses with SymbolSymExprs (#5285)

arguments:
  09/20/17:
    - Adjust string pass/return test (#7360)

arrayPerformance-1d:
  03/19/15:
    - text: memory related, qthreads memory pool bug fix
      config: chap03
  03/22/17:
    - Inline DefaultRectangular 1D strided iter (#5771)

arrayPerformance-2d:
  10/21/16:
    - Improvements to scalarReplace, refPropagation and copyPropagation (#4761)

array-of-strings-read:
  04/14/16:
    - string changes to bounds checking, isUpper (#3718)

arr-forall:
  03/24/15:
    - with CCE, bug fix to avoid vectorizing when not valid

array_iter:
  06/19/17:
    - Reduce amount of locking in associative array dsiAccess (#6244)

arguments:
  03/10/17:
    - Three way refpair (#5561)

assign.1024:
  01/22/15:
    - optimize range follower so it can be directly inlined (#1160)

bfs:
  09/25/14:
    - addition of octal to, reformatting of format printing.
  10/29/15:
    - Difficult to consistently replicate

binary-trees:
  12/05/14:
    - introduce "library mode"
  01/26/16:
    - Optimize iteration over anonymous low-bounded counted ranges (#3154)
  03/14/16:
    - upgrade jemalloc to 4.1.0 (#3447)
  03/16/16:
    - revert jemalloc to 4.0.4 (#3477)
  05/28/16:
    - upgrade jemalloc to 4.2.0 (#3919)
  06/13/16:
    - polish to binary-trees versions (#4017)
  09/21/16:
    - switch from type method factory to init()-based implementation (#4598)
  09/22/16:
    - simplify init()-based implementation (#4609)
  10/10/16:
    - Brad's fix of off-by-one error in checksum (#4734)
  01/31/17:
    - upgrade jemalloc to 4.4.0 (#5278)
  04/03/17:
    - Updated to n=21 problem size and new rules (#5907)

binarytrees-submitted:
  09/21/16:
    - switch from type method factory to init()-based implementation (#4598)
  09/22/16:
    - simplify init()-based implementation (#4609)
  10/10/16:
    - Brad's fix of off-by-one error in checksum (#4734)
  04/03/17:
    - Updated to n=21 problem size and new rules (#5907)

blackscholes:
  10/21/16:
    - Improvements to scalarReplace, refPropagation and copyPropagation (#4761)

blackscholes_promote:
  10/21/16:
    - Improvements to scalarReplace, refPropagation and copyPropagation (#4761)

build-associative:
  07/14/17:
    - Extend parallel array initialization to POD arrays (#6675)

chameneos-redux:
  07/08/13:
    - altered output order for chameneos data, old data incompatible
  09/15/17:
    - Chameneos initializer updates (#7328)

CoMD:
  07/26/17:
    - Update PR 5296 (#6722)

compSampler-timecomp:
  09/09/16:
    - disable function resolution optimization (#4476)
  09/14/16:
    - re-enable function resolution optimization (#4517)

cg:
  09/20/16:
    - Strided Array Support in Sort/Search Modules (#4569)
  09/22/16:
    - Added overloaded compileErrors for Sort/Search (#4621)

cg-sparse-timecomp:
  09/09/16:
    - disable function resolution optimization (#4476)
  09/14/16:
    - re-enable function resolution optimization (#4517)

c-ray:
  10/11/16:
    - Parallelized C-ray and transposed array (#4743)
  11/09/16:
    - Code cleanups in preparation for SC16 (#4830 and others)

dgemm.128:
  09/06/13:
    - LICM bug fixes

dgemm.64:
  09/06/13:
    - LICM bug fixes

ep:
  11/18/14:
    - added -E to tests which would benefit from it
  11/22/14:
    - revert -E use for nightly on 21st (which failed, unrelatedly)

ep-b:
  11/18/14:
    - added -E to tests which would benefit from it
  11/22/14:
    - revert -E use for nightly on 21st (which failed, unrelatedly)

ep.ml-perf:
  07/26/17:
    - Update PR 5296 (#6722)

ep.ml-time:
  07/26/17:
    - Update PR 5296 (#6722)

fannkuch-redux:
  07/22/14:
    - Error due to cleaning up file incompletely
  09/04/14:
    - LICM no longer hoisting globals (bug fix related to hoisting wide things)
  03/10/15:
    - Allow LICM to hoist some global variable (#1524)
  10/17/15:
    - text: Plain Old Data type improvement (#2752)
      config: chap04
  06/29/16:
    - replacement with more elegant version (#4089)

fasta:
  10/24/16:
    - Convert bradc version from fastaredux to fasta (#4765)
  10/26/16:
    - Switch release fasta from random floats to ints (#4773)
    - Switch bradc fasta to use linear search (#4769)
  10/31/16:
    - Switch release fasta to use linear search (#4796)
  11/18/16:
    - Replace queried domain iterations with range iterations (#4886)
  12/09/16:
    - Change linear search to avoid 'break' (#4994)
  12/10/16:
    - Switch from 'sync' to 'atomic'-based coordination (#5004)
  12/15/16:
    - Parallelize release version, make more use of randType and refactor for CLBG submissions (#5024)
  12/19/16:
    - Switch max number of tasks from 3 to 4 (#5078)
  03/10/17:
    - text: Re-enable binary IO optimization on NUMA (#5572)
      config: chapcs
  08/02/17:
    - Remove handling of references from copyPropagation (#6779)

fastaredux:
  01/14/14:
    - enabled unlocked I/O on fasta and fasta-printf
  10/07/14:
    - Add c_string_copy type
  01/14/16:
    - optimize certain functions that return with ref-intent (#3101)
  03/12/16:
    - implemented good_alloc_size for jemalloc(#3446)

fft-timecomp:
  09/09/16:
    - disable function resolution optimization (#4476)
  09/14/16:
    - re-enable function resolution optimization (#4517)

forall-dom-range:
  01/22/15:
    - optimize range follower so it can be directly inlined (#1160)
  01/24/15:
    - optimize range follower for non-strided ranges (#1164)
  03/10/15:
    - optimize range follower so it can be zippered inlined (#1530)

ft:
  09/05/14:
    - switched uses of locale.numCores to locale.maxTaskPar

ft-a:
  09/05/14:
    - switched uses of locale.numCores to locale.maxTaskPar
hpl:
  12/11/15:
    - Fixed string leak in DimensionalDist2D (#3013)
  03/21/17:
    - Rank change dom dist view (#5694)

hpl_performance:
  12/11/15:
    - Fixed string leak in DimensionalDist2D (#3013)
  11/30/16:
    - text: Improvements to inferConstRefs (#4904)
      config: 16 node XC

init:
  05/03/16:
    - Fix ref-return intent bugs (#3795)

isx:
  02/26/16:
    - ISx ref to array (#3365)
  01/10/17:
    - text: Use comm primitive in ISx study version (#5131)
      config: 16 node XC

isx-bucket-spmd:
  02/26/16:
    - ISx ref to array (#3365)

isx-no-return:
  02/26/16:
    - ISx ref to array (#3365)

isx.ml-time: &isx-ml-base
  02/26/16:
    - ISx ref to array (#3365)
  04/23/16:
    - Switched to PCG random number generator (#3764)
  12/22/16:
    - Increased isx problem size (internal #279)
isx-hand-optimized.ml-time:
  <<: *isx-ml-base
isx-release.ml-time:
  <<: *isx-ml-base

jacobi:
  03/07/14:
    - Added a "trivial assignment" optimization to replace field-by-field assignment with a bulk copy.
  08/19/14:
    - C for loops initial commit
  08/20/14:
    - Tom's use of user-defined default constructors
  08/26/14:
    - Kyle's ref temp peephole optimization
  11/09/14:
    - disable the task table by default
  01/30/15:
    - param protect all calls to chpl__testPar (#1200)
  01/17/16:
    - add dead string literal elimination (#3120)
  04/01/16:
    - casting bug fix (#3615)
  08/12/16:
    - Improve and enable strided bulk transfer optimization as default (#4318)
  08/13/16:
    - Fix bulk transfer stride failure, cast to size_t for 32-bit support (#4329)
  10/07/16:
    - Vass's PARTIAL_COPY related flags to hash_table improvement (#4709)
  11/02/16:
    - work around visible fns issue (#4804)
    - Remove usesOuterVars from virtual method call resolution (#4794)
    - Allow casts between c_void_ptr and object types (#4802)
  11/10/16:
    - Make each Symbol keep a list of SymExprs (#4827)
  01/07/17:
    - add param versions of min/max for ints (#5073)
  01/13/17:
    - refactoring of rectangular IO (#5157)
  08/02/17:
    - Remove handling of references from copyPropagation (#6779)

knucleotide:
  10/17/15:
    - text: Plain Old Data type improvement (#2752)
      config: chap04
  06/16/17:
    - Let parSafe revert to default in blc study version (#6475)
  06/19/17:
    - Remove locking from associative array accesses (#6244)
  11/21/17:
    - Clear associative array elements when created by dsiAdd (#7828)

LCALS-raw-short: &lcals-base
  10/20/16:
    - Clean up to HYDRO_2D kernel (#4757)
    - update to TRAP_INT serial kernel (#4756)
  11/30/16:
    - Stop throwing --dataParMinGranularity=1000 (#4917)
  12/10/16:
    - Throw --no-ieee-float for LCALS (#5001)
  10/24/17:
    - Fix LCALS inner_prod kernel (#7632)
LCALS-raw-medium:
  <<: *lcals-base
LCALS-raw-long:
  <<: *lcals-base
LCALS-parallel-short:
  <<: *lcals-base
LCALS-parallel-medium:
  <<: *lcals-base
LCALS-parallel-long:
  <<: *lcals-base

lulesh:
  03/15/14:
    - improved constness of de-nested functions, improved remove value forwarding
  12/05/14:
    - introduce "library mode"

lulesh-dense:
  03/15/14:
    - improved constness of de-nested functions, improved remove value forwarding

mandelbrot:
  01/03/14:
    - Chapel level improvement by using a nonlocking writer
  03/19/14:
    - Bulk IO optimization
  09/05/14:
    - maxTaskPar change delayed fifo->qthreads performance hit
  11/11/15:
    - Initial commit of C complexes
  06/16/16:
    - Change complex getter functions for .re and .im into "static inline" (#4033)
  07/01/16:
    - Start using C99 functions for operations such as abs() on complex numbers (#4098)
  07/08/16:
    - Added compiler option --no-ieee-float to mandelbrot-complex (#4134)
  01/15/17:
    - Implement a Swift-like version of mandelbrot (#5168)
  01/19/17:
    - Mandelbrot tweaks (#5188)

mandelbrot-extras:
  01/03/14:
    - Chapel level improvement by using a nonlocking writer
  09/05/14:
    - maxTaskPar change delayed fifo->qthreads performance hit
  11/11/15:
    - Initial commit of C complexes
  09/21/17:
    - Restore string perf (#7416)

memleaks:
  11/13/13:
    - Plugged the massive memory leak in fileIO.chpl
  11/26/13:
    - Fixed valgrind regression and some associated memory leaks
  12/03/13:
    - Made some tests leak-free
  12/07/13:
    - Fixed leakage of sync and single array elements
  04/08/14:
    - Enabled GMP in nightly testing, allowing pidigits to run in memory leaks
  07/09/14:
    - Included tests that leak only string data in the Number of Tests with Leaks (r23785).
  05/04/15:
    - Changed tracking of internal memory descriptor types
  05/20/15:
    - Closed sync/single leaks
  06/05/15:
    - Nikhil's k-d tests added to repository
  12/11/15:
    - Fixed string leak in DimensionalDist2D (#3013)
  12/13/15:
    - Fixed string memory leak resulting from redundant autoCopies (#3023)
  01/14/16:
    - optimize certain functions that return with ref-intent (#3101)
  03/10/16:
    - Cleanups to miniMD (#3436)
  08/11/16:
    - Sync as record (#4309)
  08/17/16:
    - Single as record (#4350)
  01/05/17:
    - Maybe "adding support for params without initializers"(#5075)?
  01/07/17:
    - new test verifying the user's guide type aliases section (#5075)
  01/17/17:
    - new test of Sparse domain block clear functionality (#5173)
  03/21/17:
    - Rank change dom dist view (#5694)
  03/23/17:
    - Fix some memory leaks in ArrayViewRankChange (#5789)
  06/19/17:
    - Close some user-level memory leaks in SSCA2 (#6494)
  06/22/17:
    - Close strings leaked by regular expressions (#6509)
  06/27/17:
    - Close leaks in DimensionalDist2D (#6541)
  07/06/17:
    - Close more leaks in DimensionalDist2D (#6590)
  07/14/17:
    - Have reindex domains/distributions preserve locality (#5757)
  07/25/17:
    - fix leaks introduced by reindex views in PR 5757 (#6776)

memleaksfull:
  07/08/14:
    - Conversion of knucleotide-forall and -coforall to read input line-by-line (23733).
  07/10/14:
    - Included tests that leak only string data in the Number of Tests with Leaks (r23785).
  12/11/15:
    - Fixed string leak in DimensionalDist2D (#3013)
  12/13/15:
    - Fixed string memory leak resulting from redundant autoCopies (#3023)
  01/14/16:
    - optimize certain functions that return with ref-intent (#3101)
  08/11/16:
    - Sync as record (#4309)
  08/23/16:
    - Fix gasnet config for recent memory leak updates (#4375)
  02/08/17:
    - Add Futures package module - lambda functions leaking (#5135)
  03/21/17:
    - Rank change dom dist view (#5694)
  03/23/17:
    - Fix some memory leaks in ArrayViewRankChange (#5789)
  06/19/17:
    - Close some user-level memory leaks in SSCA2 (#6494)
  06/22/17:
    - Close strings leaked by regular expressions (#6509)
  06/27/17:
    - Close leaks in DimensionalDist2D (#6541)
  07/04/17:
    - LLNL version of CoMD added, leaks memory (#6553)
  07/06/17:
    - skip LLNL CoMD for memory leaks (#6611)
    - Close more leaks in DimensionalDist2D (#6590)
  07/14/17:
    - Have reindex domains/distributions preserve locality (#5757)
  07/25/17:
    - fix leaks introduced by reindex views in PR 5757 (#6776)
  09/17/17:
    - close test code leaks (#7348 and #7349)
  09/18/17:
    - allow Mason testing to compile again after change (#7350)
  09/19/17:
    - close additional graph 500 leaks (#7357)
  09/20/17:
    - close more test code leaks (#7406, #7399, #7395, #7364, and #7400)
  11/15/17:
    - Delete classes in some tests (#7791)
  12/19/17:
    - Rewrite default argument handling (#7858)

meteor:
  12/18/13:
    - Chapel level improvement by using implicit domains
  08/10/16:
    - Updated meteor's lock to yield less frequently (#4300)

mg-b:
  05/23/17:
    - Fix NPB MG (#6284)
  06/13/17:
    - Optimize updateFluff (#6418)
  06/22/17:
    - Only perform packed updateFluff when there are multiple locales (#6512)

mg.ml-time:
  05/11/17:
    - Move chpl_getPrivatizedClass() into chpl-privatization.h (#6212)
  05/23/17:
    - Fix NPB MG (#6284)
  06/13/17:
    - Optimize updateFluff (#6418)

miniMD:
  12/21/13:
    - clean up of noRefCount related code in modules/internal (22473)
  11/04/14:
    - surprising regression from cast in DefaultRectangular (df8c3172cc9c)
  01/30/15:
    - param protect all calls to chpl__testPar -- resolve DefaultRect cast regression (#1200)
  03/18/15:
    - Avoid shallow record copies in miniMD (#1643)
  03/19/16:
    - Increase parallelism, decrease comm (#3483)
  12/02/16:
    - RVF reference fields with record-wrapped type (#4925)
  03/10/17:
    - Three way refpair (#5561)
  12/05/17:
    - Enforce qualified refs after inlining (#7906)

miniMD.ml-time:
  09/14/17:
    - Introduce ShadowVarSymbol for forall intents (#7307)
  09/22/17:
    - Manually hoist loop-invariant array access in miniMD (#7432)
  09/26/17:
    - Prevent certain data races upon 'in' forall intents (#7467)

nbody:
  03/17/14:
    - removed extra formal temps
  07/24/14:
    - chap04 Subtest random glitch
  01/17/16:
    - add dead string literal elimination (#3120)
  03/14/16:
    - upgrade jemalloc to 4.1.0 (#3447)
  03/16/16:
    - revert jemalloc to 4.0.4 (#3477)
  05/28/16:
    - upgrade jemalloc to 4.2.0 (#3919)

no-op:
  02/24/17:
    - upgrade hwloc to 1.11.6 (#5411)

parOpEquals:
  09/06/13:
    - (no-local) chpl_localeID_t's ignore_subloc field minimized to 1 bit
  09/27/13:
    - (no-local) Reversion of chpl_localeID_t's ignore subloc field being minimized to 1 bit
  02/28/15:
    - (no-local) Move the check for src==dst from comm_get to array op= (#1410)

pidigits:
  05/16/16:
    - switched release version to use ledrug algorithm
  09/24/16:
    - rearranged pidigits; release versions now use bigints (#4655-6)

pidigits-submitted:
  05/16/16:
    - switched release version to use ledrug algorithm
  09/24/16:
    - rearranged pidigits; release versions now use bigints (#4655-6)

prk-stencil:
  02/14/16:
    - Improved performance on PRK-stencil (#3288)
  04/08/16:
    - Looping over range instead of domain for weight matrix (#3500)
  04/09/16:
    - blockDist for useStencilDist output matrix and more (#3705)
  05/06/16:
    - Problem size increased from --order=1000 to --order=32000 (#3813)
  06/13/17:
    - Optimize updateFluff (#6418)

prk-stencil.ml-perf:
  04/08/16:
    - Looping over range instead of domain for weight matrix (#3500)
  04/09/16:
    - blockDist for useStencilDist output matrix and more (#3705)
  05/06/16:
    - Problem size increased from --order=1000 to --order=32000 (#3813)
  08/12/16:
    - Improve and enable strided bulk transfer optimization as default (#4318)
  05/11/17:
    - Move chpl_getPrivatizedClass() into chpl-privatization.h (#6212)
  05/18/17:
    - Use nonblocking transactions for strided transfers (#6262)
  06/06/17:
    - Increase the PRK stencil problem size (#6380)
  06/13/17:
    - Optimize updateFluff (#6418)
  07/26/17:
    - Update PR 5296 (#6722)
  12/02/17:
    - Stop doing a task-yield while forking remote tasks under ugni (#7915)

prk-stencil-time:
  05/11/17:
    - Move chpl_getPrivatizedClass() into chpl-privatization.h (#6212)
  06/13/17:
    - Optimize updateFluff (#6418)

prk-transpose: &transpose-base
  05/04/17:
    - Update benchmark to track latest reference version (#6152)
prk-transpose-time:
  <<: *transpose-base

ptrans: &ptrans-base
  01/11/17:
    - Replace temporary array in BlockCycDist with tuple (#5139)
  01/24/17:
    - Make BlockCyclic more parallel (#5224)
  01/27/17:
    - Fix bug in BlockCyclic indexing, convert arrays to tuples(#5229)
ptrans.ml-perf:
  <<: *ptrans-base
ptrans.ml-time:
  <<: *ptrans-base

ra:
  05/13/16:
    - text: stridable ranges and domains safeCasts, compiler error, etc. (#3778)
      config: Single node XC
  03/21/17:
    - Rank change dom dist view (#5694)

ra.ml-perf:
  09/19/17:
    - machine changes, cannot reproduce old numbers

ra-atomics.ml-perf:
  10/03/17:
    - Increase the number of updates for RA to stabilize performance timings (#7522)

RBC:
  02/22/17:
    - update logic for pruning unused module level variables (#5395)

regexdna: &regexdna-base
  10/07/14:
    - Add c_string_copy type
  11/29/15:
    - started building re2 with optimizations (#2930)
  12/13/15:
    - Fixed string memory leak resulting from redundant autoCopies (#3023)
  03/12/16:
    - implemented good_alloc_size for jemalloc(#3446)
  04/20/17:
    - Update RE2 (#6024)
  06/22/17:
    - Free strings leaked by Regex.subn() / qio_regexp_replace() (#6509)

regexdna-redux:
  <<: *regexdna-base

regexdna-submitted:
  <<: *regexdna-base

regexdnaredux-submitted:
  <<: *regexdna-base

return-array-8: &return-array-base
  03/04/17:
    - remove unnecessary return from array-return tests (#5486)
return-array-20000000:
  <<: *return-array-base
return-array-40000000:
  <<: *return-array-base

revcomp:
  05/12/15:
    - various qio changes motivated by cygwin failures (#1943)
  10/29/15:
    - Difficult to consistently replicate
  08/12/16:
    - text: Discontinued performance testing (data invalid) (#4333)
      config: Single node XC
  03/10/17:
    - text: Re-enable binary IO optimization on NUMA (#5572)
      config: chapcs

sad:
  05/03/16:
    - inconclusive due to noise

spectralnorm:
  01/21/15:
    - qthreads updated to yield every ~100 uncontested sync var locks

spectral-norm-specify-step:
  01/21/15:
    - qthreads updated to yield every ~100 uncontested sync var locks

split-whitespace-perf:
  11/02/16:
    - fix bugs when reading null bytes (#4806)

SSCA2_main:
  06/12/13:
    - Initial support for hierarchical locales (21480)

STREAM_study_fragmented:
  09/06/13:
    - chpl_localeID_t's ignore_subloc field minimized to 1 bit
  09/27/13:
    - Reversion of chpl_localeID_t's ignore subloc field being minimized to 1 bit

STREAM_study_performance:
  09/06/13:
    - chpl_localeID_t's ignore_subloc field minimized to 1 bit
  09/27/13:
    - Reversion of chpl_localeID_t's ignore subloc field being minimized to 1 bit

stream-promoted.ml-perf:
  12/02/16:
    - text: RVF reference fields with record-wrapped type (#4925)
      config: 16 node XC
  03/17/17:
    - text: Improve cullOverReferences and enable late const checking (#5624)
      config: 16 node XC
  03/21/17:
    - text: Improve const inference for chpl__iterLF (#5736)
      config: 16 node XC

STREAM_study:
  10/21/16:
    - Improvements to scalarReplace, refPropagation and copyPropagation (#4761)
  03/16/17:
    - Optimize serial iteration for ArrayViews (#5668)

STREAM_study_promote:
  10/21/16:
    - Improvements to scalarReplace, refPropagation and copyPropagation (#4761)

stencil:
  07/21/14:
    - machine related (no commits on the day before)
  03/24/15:
    - with CCE, bug fix to avoid vectorizing when not valid

stream:
  05/13/16:
    - text: stridable ranges and domains safeCasts, compiler error, etc. (#3778)
      config: Single node XC
  03/18/17:
    - text: Improve inferConstRefs' canRHSBeConstRef helper function (#5710)
      config: 16 node XC

taskSpawn:
  07/24/16:
    - Stopped performing remote value forwarding on task functions (#4240)
  03/21/17:
    - Limit the maximum size of qthreads memory pools to 65MB (#5748)

temporary-copies:
  01/14/17:
    - Likely cache effects
  04/20/17:
    - Update RE2 (#6024)

twopt-paircount:
  06/22/17:
    - Free strings leaked by Regex.subn() / qio_regexp_replace() (#6509)

search:
  04/20/17:
    - Update RE2 (#6024)

testSerialReductions:
  08/16/14:
    - result of Greg's commit to let the tasking layer determine parallelism

thread-ring:
  03/19/15:
    - text: memory related, qthreads memory pool bug fix
      config: chap03
  03/21/17:
    - Limit the maximum size of qthreads memory pools to 65MB (#5748)
  12/05/17:
    - Enforce qualified refs after inlining (#7906)

time_array_vs_ddata:
  05/31/14:
    - specializing binaries to target architectures
  01/26/16:
    - Optimize iteration over anonymous low-bounded counted ranges (#3154)
  03/01/16:
    - Extend early string-as-rec work to cover more sub-types of record (#3386)
  10/05/17:
    - Fix the anonymous range optimization for low-bounded counted ranges (#7422)

time_array_vs_ref:
  09/13/16:
    - stop converting "ref" variables to values in cullOverReferences (#4485)

time_array_vs_ref_forall:
  09/13/16:
    - stop converting "ref" variables to values in cullOverReferences (#4485)

time_array_vs_ref_multidim:
  09/13/16:
    - stop converting "ref" variables to values in cullOverReferences (#4485)

time_array_vs_tuple:
  08/19/14:
    - C for loops initial commit

time_iterate:
  11/13/13:
    - disabled optimizations based on no arithmetic flow (22290)

time-write:
  03/05/15:
    - no strings with externs update

timeVectorArray:
  03/05/16:
    - implemented doubling/halving for array-as-vec (#3380) (no timing from 4th)
  03/09/16:
    - increased array-as-vec problem size (#3422)
  05/28/16:
    - upgrade jemalloc to 4.2.0 (#3919)
  01/31/17:
    - upgrade jemalloc to 4.4.0 (#5278)
  07/26/17:
    - Allow domains to implement specialized assignment (#6722)
  09/13/17:
    - Support arrays as args to array.{push_front,push_back,insert} (#7180)
  09/16/17:
    - Resolve timeVectorArray regressions (#7333)
  09/20/17:
    - Resolve push_back / pop_front regressions w/ inline (#7397)
  12/05/17:
    - Enforce qualified refs after inlining (#7906)

views-forall-iter:
  10/12/17:
    - Switch from these(tag) to foralls for some standalone iters (#7578)
  10/14/17:
    - Pass Iterator Classes by Value (#7596)

dynamic:
  02/28/17:
    - Bring in upstream fixes for qthreads sleep interception bug (#5446)
  03/04/17:
    - Use Time.sleep so that these tests play nice with qthreads (#5483)

distAdaptativeWSv1:
  02/28/17:
    - Bring in upstream fixes for qthreads sleep interception bug (#5446)
  03/04/17:
    - Use Time.sleep so that these tests play nice with qthreads (#5483)

distAdaptativeWSv2:
  02/28/17:
    - Bring in upstream fixes for qthreads sleep interception bug (#5446)
  03/04/17:
    - Use Time.sleep so that these tests play nice with qthreads (#5483)

guided:
  02/28/17:
    - Bring in upstream fixes for qthreads sleep interception bug (#5446)
  03/04/17:
    - Use Time.sleep so that these tests play nice with qthreads (#5483)

distAdaptativeWS:
  02/28/17:
    - Bring in upstream fixes for qthreads sleep interception bug (#5446)
  03/04/17:
    - Use Time.sleep so that these tests play nice with qthreads (#5483)
