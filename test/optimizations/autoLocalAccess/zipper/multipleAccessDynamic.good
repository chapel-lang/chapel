
Start analyzing forall (multipleAccessDynamic.chpl:7)
| Found loop domain (multipleAccessDynamic.chpl:3)
| Will attempt static and dynamic optimizations (multipleAccessDynamic.chpl:7)
|
|  Start analyzing call (multipleAccessDynamic.chpl:9)
|   Can optimize: Access base is the iterator's base (multipleAccessDynamic.chpl:9)
|  This call is a static optimization candidate (multipleAccessDynamic.chpl:9)
|
|  Start analyzing call (multipleAccessDynamic.chpl:9)
|   Cannot optimize: call arguments don't match loop indices cleanly (multipleAccessDynamic.chpl:9)
|  Start analyzing call (multipleAccessDynamic.chpl:9)
|   Can't determine the domain of access base (multipleAccessDynamic.chpl:4)
|  This call is a dynamic optimization candidate (multipleAccessDynamic.chpl:9)
|
|  Start analyzing call (multipleAccessDynamic.chpl:9)
|   Can't determine the domain of access base (multipleAccessDynamic.chpl:4)
|  This call is a dynamic optimization candidate (multipleAccessDynamic.chpl:9)
|
|  Start analyzing call (multipleAccessDynamic.chpl:9)
|   Cannot optimize: call arguments don't match loop indices cleanly (multipleAccessDynamic.chpl:9)
End analyzing forall (multipleAccessDynamic.chpl:7)

Static check successful. Using localAccess [static and dynamic ALA clone]  (multipleAccessDynamic.chpl:9)
Static check successful. Using localAccess with dynamic check (multipleAccessDynamic.chpl:9)
Static check successful. Using localAccess with dynamic check (multipleAccessDynamic.chpl:9)
Static check successful. Using localAccess [static only ALA clone]  (multipleAccessDynamic.chpl:9)
