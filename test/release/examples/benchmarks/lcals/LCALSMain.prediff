#!/usr/bin/env bash
kernelNames="PRESSURE_CALC ENERGY_CALC VOL3D_CALC DEL_DOT_VEC_2D COUPLE FIR INIT3 MULADDSUB IF_QUAD TRAP_INT HYDRO_1D ICCG INNER_PROD BAND_LIN_EQ TRIDIAG_ELIM EOS ADI INT_PREDICT DIFF_PREDICT FIRST_SUM FIRST_DIFF PIC_2D PIC_1D HYDRO_2D GEN_LIN_RECUR DISC_ORD MAT_X_MAT PLANCKIAN IMP_HYDRO_2D FIND_FIRST_MIN"

outFileName="$2"

grepPattern=""

first="true"

# add escaped OR symbols between each kernel name to build a grep pattern
for kernel in ${kernelNames} ; do
  if [[ ${first} != "true" ]] ; then
    grepPattern="${grepPattern}\|"
  fi
  grepPattern="${grepPattern}${kernel}"
  first="false"
done

# The following is a command to extract kernel names and timings
# from the output. Ick.

  # Find and keep lines with a kernel name plus the next line. Matches are
  # separated with lines containing '--'
grep --after-context=1 ${grepPattern} ${outFileName} |
  # Concatenate lines not containing the '--' separator.  Print '\n' instead
  # of the '--' separator.
  awk '/^--$/ {printf("\n");next;} {printf("%s",$0);}' |
  # Get rid of everything between the kernel name and the loop size
  sed -e 's; .*RAW...;;' |
  # Get rid of the checksum lines. They still have a number in parenthesis.
  grep -v '([0-9][0-9]*)' |
  # Get rid of all but one space between the kernel name and the first number
  # and get ride of everything following the first number.
  sed -e 's; *\([0-9][0-9]*.[0-9][0-9]*\) .*; \1;' > ${outFileName}.2

mv ${outFileName}.2 ${outFileName}
