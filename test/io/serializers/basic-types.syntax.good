
===== bool =====
===== writing: =====
true
--------------------
true
====================
--- read: ---
true
-------------
SUCCESS
================

===== int(64) =====
===== writing: =====
5
--------------------
5
====================
--- read: ---
5
-------------
SUCCESS
===================

===== real(64) =====
===== writing: =====
42.0
--------------------
4.200000e+01
====================
--- read: ---
42.0
-------------
SUCCESS
====================

===== real(64) =====
===== writing: =====
2.71828
--------------------
2.718282e+00
====================
--- read: ---
2.71828
-------------
SUCCESS
====================

===== string =====
===== writing: =====
a-b-c-d-e-f-g
--------------------
"a-b-c-d-e-f-g"
====================
--- read: ---
a-b-c-d-e-f-g
-------------
SUCCESS
==================

===== bytes =====
===== writing: =====
12345
--------------------
b"12345"
====================
--- read: ---
12345
-------------
SUCCESS
=================

===== 3*int(64) =====
===== writing: =====
(1, 2, 3)
--------------------
(1, 2, 3)
====================
--- read: ---
(1, 2, 3)
-------------
SUCCESS
=====================

===== (int(64),real(64),bool) =====
===== writing: =====
(1, 42.0, false)
--------------------
(1, 4.200000e+01, false)
====================
--- read: ---
(1, 42.0, false)
-------------
SUCCESS
===================================

===== colors =====
===== writing: =====
red
--------------------
red
====================
--- read: ---
red
-------------
SUCCESS
==================

===== range(int(64),both,one) =====
===== writing: =====
1..10
--------------------
1..10
====================
--- read: ---
1..10
-------------
SUCCESS
===================================

===== range(int(64),both,positive) =====
===== writing: =====
1..10 by 2
--------------------
1..10 by 2
====================
--- read: ---
1..10 by 2
-------------
SUCCESS
========================================

===== range(int(64),both,negOne) =====
===== writing: =====
1..10 by -1
--------------------
1..10 by -1
====================
--- read: ---
1..10 by -1
-------------
SUCCESS
======================================

===== range(int(64),both,positive) =====
===== writing: =====
1..20 by 3 align 2
--------------------
1..20 by 3 align 2
====================
--- read: ---
1..20 by 3 align 2
-------------
SUCCESS
========================================

===== domain(2,int(64),one) =====
===== writing: =====
{1..10, 1..10}
--------------------
{1..10, 1..10}
====================

===== domain(2,int(64),positive) =====
===== writing: =====
{1..10 by 2, 1..10 by 2}
--------------------
{1..10 by 2, 1..10 by 2}
====================

===== SimpleRecord =====
===== writing: =====
(x = 5, y = 42.0)
--------------------
new SimpleRecord(x = 5, y = 4.200000e+01)
====================
--- read: ---
(x = 5, y = 42.0)
-------------
SUCCESS
========================

===== CustomizedRecord =====
===== writing: =====
<7, 3.14>
--------------------
<7, 3.140000e+00>
====================
--- read: ---
<7, 3.14>
-------------
SUCCESS
============================

===== GenericRecord(int(64),3) =====
===== writing: =====
(x = 42, y = (1, 2, 3))
--------------------
new GenericRecord(x = 42, y = (1, 2, 3))
====================
--- read: ---
(x = 42, y = (1, 2, 3))
-------------
SUCCESS
====================================

===== owned Parent =====
===== writing: =====
{x = 5}
--------------------
new borrowed Parent(x = 5)
====================
--- read: ---
{x = 5}
-------------
SUCCESS
========================

===== owned SimpleChild =====
===== writing: =====
{x = 5, y = 42.0}
--------------------
new borrowed SimpleChild(x = 5, y = 4.200000e+01)
====================
--- read: ---
{x = 5, y = 42.0}
-------------
SUCCESS
=============================

===== owned ChildChild =====
===== writing: =====
{x = 1, y = 42.0, z = 5}
--------------------
new borrowed ChildChild(x = 1, y = 4.200000e+01, z = 5)
====================
--- read: ---
{x = 1, y = 42.0, z = 5}
-------------
SUCCESS
============================

===== owned Parent? =====
===== writing: =====
{x = 5}
--------------------
new borrowed Parent(x = 5)
====================
--- read: ---
{x = 5}
-------------
SUCCESS
=========================

===== owned Parent? =====
===== writing: =====
nil
--------------------
nil
====================
--- read: ---
nil
-------------
SUCCESS
=========================

===== shared Parent =====
===== writing: =====
{x = 5}
--------------------
new borrowed Parent(x = 5)
====================
--- read: ---
{x = 5}
-------------
SUCCESS
=========================

===== owned Child101 =====
===== writing: =====
{grandParentField = 0, field = (1, 0, 1)}
--------------------
new borrowed Child101(grandParentField = 0, field = (1, 0, 1))
====================
--- read: ---
{grandParentField = 0, field = (1, 0, 1)}
-------------
SUCCESS
==========================

===== unmanaged SimpleChild =====
===== writing: =====
{x = 5, y = 42.0}
--------------------
new borrowed SimpleChild(x = 5, y = 4.200000e+01)
====================
--- read: ---
{x = 5, y = 42.0}
-------------
SUCCESS
=================================

===== set(int(64),false) =====
===== writing: =====
{5, 7, 8, 1, 4, 6, 2, 10, 9, 3}
--------------------
[5, 7, 8, 1, 4, 6, 2, 10, 9, 3]
====================
--- read: ---
{5, 7, 8, 1, 4, 6, 2, 10, 9, 3}
-------------
SUCCESS
==============================
ALL SUCCESS
