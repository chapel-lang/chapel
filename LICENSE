==========================
Chapel License Information
==========================

The Chapel implementation is composed of two categories of code:

1) code that was specifically developed for, or contributed to, the
   Chapel project.  This code comprises the core of the Chapel
   implementation: the compiler, runtime, and standard/internal
   modules.  Code in this category is made available under the
   Apache v2.0 license, which can be found in 'LICENSE.chapel' in
   this directory or at http://www.apache.org/licenses/LICENSE-2.0.html.

2) code from other open-source projects that we package and
   redistribute for the convenience of end-users.  Packages in this
   category are made available under the terms of their original
   licenses, respectively.

   Packages in this second category are redistributed in the etc/ and
   third-party/ directories.  The following table provides a summary
   of the packages, their uses, and their licenses.

   directory/package  use                                          license
   -----------------  -------------------------------------------  -------
   etc/
     emacs            emacs-based syntax coloring                  GPL
     vim              vim-based syntax coloring                    VIM

   third-party/
     chpldoc-venv    python packages supporting chpldoc
       Sphinx         Python documentation generator               BSD
       sphinxcontrib-chapeldomain
                      The Chapel language domain for Sphinx        Apache v2.0
       sphinx_rtd_theme
                      ReadTheDocs.org theme for Sphinx             MIT
       Jinja2         A template engine written in Python          BSD
       MarkupSafe     XML/HTML/XHTML Markup safe string impl.      BSD
       Pygments       A syntax highlighting package                BSD
       docutils       Python Documentation Utilities               public domain
                                                                   Python
                                                                   BSD
                                                                   GPL 3

     dlmalloc         alternative memory allocator option          public domain
     gasnet           portable communication library               BSD-like
     gmp              optional multi-precision math library        L-GPL
     hwloc            portable NUMA compute node utilities         new BSD
     llvm             CLANG C parsing/optional back-end compiler   U of I/NCSA
     massivethreads   alternative lightweight tasking option       2-clause BSD
     qthread          alternative lightweight tasking option       new BSD
     re2              optional regular expression parsing library  new BSD
     tcmalloc         alternative memory allocator                 new BSD
     txt2man          creation of man pages (developer-only)       GPL
     utf8-decoder     used for runtime UTF-8 string decoding       MIT

   For a more complete introduction to these packages and their
   licensing terms, refer to etc/README, third-party/README, and the
   README and license files in the subdirectories listed above.

   Note that most of these packages are not used by Chapel unless specifically
   requested.  There are some exceptions to this rule, as of the 1.10 release:

      - Outside of quickstart mode, we attempt to build and include re2 and gmp,
        leaving their respective environment variables set if building them
        completed successfully.  This can be disabled by setting the relevant
        environment variable to 'none'.  Details about quickstart mode can be
        found in the top-level README.

      - For all platforms, with the exception of 'cygwin' and 'knc', our default
        tasking layer is 'qthreads', with hwloc included.  On the other
        platforms our default is 'fifo'.  Unless the relevant environment
        variable was set for hwloc, settings CHPL_TASKS to a tasking layer other
        than 'qthreads' will turn off the use of hwloc.  For a description of
        other tasking options, please see README.tasks

   The following table summarizes the conditions under which each package is
   used (see README.chplenv for details on CHPL_* settings):

   directory/package  when used
   -----------------  ----------------------------------------------------
   etc/
     emacs            only used if a user modifies their emacs environment
     vim              only used if a user modifies their vim environment

   third-party/
     chpldoc-venv     only used when running 'chpldoc'
     dlmalloc         only used when CHPL_MEM is 'dlmalloc'
     gasnet           only used when CHPL_COMM is 'gasnet'
     gmp              where possible, used by default or when CHPL_GMP is 'gmp'
     hwloc            used by default on most platforms, or when CHPL_HWLOC is
                      'hwloc'
     llvm             only used when CHPL_LLVM is 'llvm'
     massivethreads   only used when CHPL_TASKS is 'massivethreads'
     qthread          used by default on most platforms, or when CHPL_TASKS is
                      'qthreads'
     re2              where possible, used by default or when CHPL_REGEXP is
                      're2'
     tcmalloc         only used when CHPL_MEM is 'tcmalloc'
     txt2man          only used by developers to create the Chapel man page
     utf8-decoder     bundled into the Chapel runtime to decode UTF-8 strings

   For packages that are only used based on a CHPL_* setting, note
   that this setting may either be explicitly or implicitly set.  To
   verify your settings, run $CHPL_HOME/util/printchplenv.
