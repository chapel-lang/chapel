name: email
on:
    # this workflow is intended to run on merges from a forked repo to main(base-repo). Use pull_request_target
    # this will provide read access to the secrets in main
    push:
    pull_request:
    #pull_request_target:
      #types:
       # - closed
      
jobs: 
  send_email:
   # run this workflow step only when the PR is merged 
    # if:  github.event.pull_request.merged == true 
    runs-on: ubuntu-latest 
    steps:
      - name: print git events
        run:  cat "$GITHUB_EVENT_PATH"                     
      - name: print GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"  
      - name: get commits payload
        env:
          COMMIT_URL: ${{github.event.pull_request._links.commits.href}}
        run: |
              curl --location --request GET 'https://api.github.com/repos/chapel-lang/chapel/pulls/21013/commits' --header 'X-API-Key: ${{ secrets.GITHUB_TOKEN}}' -o commits.json
              echo "AUTHOR=$(jq -r '.[0].commit.author.name' commits.json)" >> $GITHUB_ENV   
              echo "LINK=$(jq -r '.[0].html_url' commits.json)" >> $GITHUB_ENV
              echo "MESSAGE=$((jq  '.[0].commit.message' commits.json)| awk -F'\\\\n' '{print $1}' | sed 's/\"//g')" >> $GITHUB_ENV 
              echo "${{github.event.repository.html_url}}" >> blah.txt
              cat blah.txt
              echo "COMPARE_URL= $( echo '${{github.event.repository.html_url}}/compare/${{github.event.pull_request.base.sha}}...${{ github.event.pull_request.merge_commit_sha}}' )" >> $GITHUB_ENV     
              echo "LOG= $(echo 'Gmake 4.4 now supports exporting exported variables to `$(shell ...)` commands. This caused issues for variables like `GNU_GCC_MAJOR_VERSION` that we were lazily setting and recursively using through subsequent shell invocations. Fix that here by using immediate set to avoid lazy evaluation.\r\n\r\nWithout this, we got screens full of messages like:\r\n\r\n```\r\n/bin/sh: line 0: test: -lt: unary operator expected\r\n/bin/sh: line 0: test: -eq: unary operator expected\r\n```\r\n\r\nand could add the wrong or not enough CFLAGS for gcc because `GNU_GCC_MAJOR_VERSION` and friends weren't set when trying to do version checks like `$(shell test $(GNU_GCC_MAJOR_VERSION) -lt 4)`.\r\n\r\nFrom https://lists.gnu.org/archive/html/info-gnu/2022-10/msg00008.html (gmake 4.4 release notes):\r\n\r\n```\r\n* WARNING: Backward-incompatibility!\r\n  Previously makefile variables marked as export were not exported to commands\r\n  started by the $(shell ...) function.  Now, all exported variables are\r\n  exported to $(shell ...).  If this leads to recursion during expansion, then\r\n  for backward-compatibility the value from the original environment is used.\r\n  To detect this change search for 'shell-export' in the .FEATURES variable.\r\n```\r\n\r\nBug report and suggested fix courtesy of Paul Hargrove from the GASNet team.' | sed  's/\\r\\n\\r\\n/<p>/g' |  sed  's/\\r\\n/<br>/g')" >> $GITHUB_ENV
              echo "FILES_CHANGED=$(echo '${{github.event.pull_request._links.html.href}}/files' )" >> $GITHUB_ENV
              
      - name: checkout
        uses: actions/checkout@v3
        # To get git diff on the files that were changed in the PR checkout with fetch-depth 2.
        with:
          fetch-depth: 0           
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v32
        with:
          separator: ","    
      - name: Parse changed files
        id: parsed-output
        run: |
                
                echo "OUTPUT= $(echo ${{steps.changed-files.outputs.modified_files}} |  sed 's/\,/<br>/g' )" >> $GITHUB_ENV    
                
      - name: Send mail  
        uses: dawidd6/action-send-mail@v3
        with:
           # Required mail server address if not connection_url:
           server_address: ${{ secrets.SMTP_PROVIDER}}
           server_port: 465
           # Optional whether this connection use TLS (default is true if server_port is 465)
           secure: true
           # Optional (recommended): mail server username:
           username:  ${{ secrets.MAIL_USERNAME}} 
           # Optional (recommended) mail server password:
           password: ${{secrets.MAIL_PASSWORD}}
           # Required mail subject:
           subject: "[CHAPEL MERGE] Hide stderr for Mason's `runCommand` "
           # Required recipients' addresses:
           # to: chapel+commits@discoursemail.com
           to: bhavani@hpe.com
           # Required sender full name (address can be skipped):
           from:  ${{env.AUTHOR}}
        
           html_body: |
              <!DOCTYPE html>
              <html>
              <body>
              <p>
              Branch: ${{github.ref}} <br>
              Revision: ${{ github.event.pull_request.merge_commit_sha }}  <br>
              Author: ${{ env.AUTHOR}} <br>
              Link: ${{github.event.pull_request._links.html.href}} <br>             
              Log Message: <br><br>
                           ${{env.LOG}} <br>
                          
              ${{env.OUTPUT}} <br>
             
              </p>
              </body>
              </html>
           # Optional converting Markdown to HTML (set content_type to text/html too):
           convert_markdown: true
           # Optional priority: 'high', 'normal' (default) or 'low'
           priority: low
